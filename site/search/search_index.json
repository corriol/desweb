{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Desenvolupament Web en Entorn Servidor","title":"Inici"},{"location":"#desenvolupament-web-en-entorn-servidor","text":"","title":"Desenvolupament Web en Entorn Servidor"},{"location":"01-intro/","text":"Introducci\u00f3 a la programaci\u00f3 web Objectius Seleccionar les arquitectures i tecnologies de programaci\u00f3 web en entorn servidor, analitzant-ne les capacitats i caracter\u00edstiques pr\u00f2pies. Introduir els principals llenguatges i frameworks per al desenvolupament en l'entorn servidor. Caracteritzar i diferenciar els models d'execuci\u00f3 de codi en el servidor i en el client web. Identificar les principals tecnologies associades. Instal\u00b7lar i configurar l'entorn de treball que emprarem per al desenvolupament web. Visualitzar mitjan\u00e7ant el navegador una p\u00e0gina web html amb codi PHP encastat. Arquitectura d'una aplicaci\u00f3 web A difer\u00e8ncia de les aplicacions d'escriptori, que utilitzen els recursos d'un \u00fanic ordinador les aplicacions web s\u00f3n distribu\u00efdes, intervenen com a m\u00ednin dos equipos diferents: el client i el servidor. La comunicaci\u00f3 \u00e9s du a terme mitjan\u00e7ant un protocol, en el nostre cas el protocol HTTP, base de la WWW. Elements: navegador, servidor, protocol HTTP i HTML El protocol de transfer\u00e8ncia d'hipertext (HTTP) \u00e9s un protocol client-servidor molt senzill que articula els intercanvis d'informaci\u00f3 entre els clients web (navegadors) i els servidors HTTP. HTTP es basa en operacions senzilles de sol\u00b7licitud/resposta. Quan un client estableix una connexi\u00f3 amb un servidor i envia un missatge amb les dades de la sol\u00b7licitud, el servidor respon amb un missatge similar que cont\u00e9 l'estat de l'operaci\u00f3 i el seu resultat de la sol\u00b7licitud. Totes les operacions poden adjuntar un objecte o recurs sobre el qual actuen; cada objecte web (document HTML, arxiu multim\u00e8dia o aplicaci\u00f3 CGI) \u00e9s conegut pel seu localitzador uniforme de recursos (URL, Uniform Resource Locator ). Els recursos poden ser arxius, el resultat de l'execuci\u00f3 d'un programa, una consulta a una base de dades, la traducci\u00f3 autom\u00e0tica d'un document, etc. HTTP \u00e9s un protocol sense estat , \u00e9s a dir, no guarda cap informaci\u00f3 sobre connexions anteriors. El desenvolupament d'aplicacions web freq\u00fcentment necessita mantenir estat. Per aix\u00f2 s'utilitzen les galetes ( cookies ), \u00e9s a dir, la informaci\u00f3 que un servidor pot emmagatzemar en el sistema client. Aix\u00f2 permet que les aplicacions web institueixin la noci\u00f3 de \"sessi\u00f3\", i, alhora, permet rastrejar usuaris, ja que les galetes es poden emmagatzemar en el client durant un temps indeterminat. Amb la intenci\u00f3 de con\u00e8ixer amb m\u00e9s profunditat el protocol HTTP podem avaluar en qu\u00e8 consisteix una transacci\u00f3 HTTP. Cada vegada que un client fa una petici\u00f3 a un servidor, s'executen un seguit d'accions: Un usuari accedeix a una adre\u00e7a d'Internet (URL) seleccionant un enlla\u00e7 d'un document HTML o introduint-la directament a la barra de navegaci\u00f3 d'un navegador web des de la perspectiva del client web. El client web descodifica l'adre\u00e7a d'Internet (URL) separant-ne les diferents parts. \u00c9s aix\u00ed com s'identifiquen el protocol d'acc\u00e9s, el node expressat amb el nom de domini o la seua adre\u00e7a IP, el possible port opcional (el valor per defecte \u00e9s el 80) i l'objecte del servidor requerit. S'obre una connexi\u00f3 TCP/IP amb el servidor cridant el port TCP corresponent. Es fa la petici\u00f3. En conseq\u00fc\u00e8ncia, s'envien l'ordre necess\u00e0ria (GET, POST, HEAD, etc.), l'adre\u00e7a de l'objecte requerit (el contingut de l'adre\u00e7a d'Internet del servidor), la versi\u00f3 del protocol HTTP utilitzada (en la major part de les ocasions \u00e9s HTTP/1.0) i un conjunt variable d'informaci\u00f3 que inclou dades sobre les capacitats del navegador web, dades opcionals per al servidor, etc. El servidor localitza el recurs sol\u00b7licitat i torna la resposta al client. Aquesta resposta consisteix en un codi d'estat i el tipus de dada amb extensions multiprop\u00f2sit de correu d'Internet (MIME, Multipurpose Internet Mail Extension) de la informaci\u00f3 de tornada, seguit de la mateixa informaci\u00f3. El client formata i mostra el recurs rebut. Es tanca la connexi\u00f3 TCP. Aquest proc\u00e9s es repeteix en cada acc\u00e9s que es fa\u00e7a al servidor HTTP. Per exemple, si es recull un document HTML que cont\u00e9 quatre imatges, el proc\u00e9s de transici\u00f3 mostrat amb anterioritat es repeteix cinc vegades, \u00e9s a dir, una pel document HTML i quatre per les imatges. Si el recurs sol\u00b7licitat \u00e9s un programa (CGI, ASP.NET, PHP, etc.) el servidor HTTP redirigir\u00e0 la petici\u00f3 a la llibreria o int\u00e8rpret adequat que executar\u00e0 el programa i tornar\u00e0 el control al servidor web. Format de les URL La sintaxi general de les URL consisteix en una seq\u00fc\u00e8ncia jer\u00e0rquica de 5 components: URI = scheme:[//authority]path[?query][#fragment] on el component authoriry es deivideix en tres subcomponents: authority = [userinfo@]host[:port] El model client/servidor El model client-servidor \u00e9s aquell on tots els clients estan connectats a un servidor on es centralitzen els diferents recursos. Aquests recursos estan a disposici\u00f3 dels clients cada cop que els sol\u00b7liciten. Aix\u00f2 fa que totes les gestions que es realitzen es concentren en el servidor, que disposa dels requeriments dels clients amb prioritat, els arxius que s\u00f3n d'\u00fas p\u00fablic i els restringits, els arxius de nom\u00e9s lectura, els que poden ser modificats, etc. En el model client/servidor, el dispositiu que sol\u00b7licita informaci\u00f3 es denomina client i el dispositiu que respon la sol\u00b7licitud es denomina servidor. Els processos de client i servidor es consideren una part de la capa d'aplicaci\u00f3. El client comen\u00e7a l'intercanvi sol\u00b7licitant les dades al servidor, que respon enviant un o m\u00e9s blocs de dades al client. Els protocols de capa d'aplicaci\u00f3 descriuen el format de les sol\u00b7licituds i respostes entre clients i servidor. A m\u00e9s de la transfer\u00e8ncia real de dades, aquest intercanvi pot requerir informaci\u00f3 addicional, com l'autentificaci\u00f3 de l'usuari i la identificaci\u00f3 d'un arxiu de dades per transferir. Encara que les dades generalment es descriuen com un flux del servidor al client, algunes dades sempre flueixen del client al servidor. El flux de dades pot ser el mateix en les dues direccions o fins i tot ser major en la direcci\u00f3 que va del client al servidor. Per exemple, un client pot transferir un arxiu al servidor amb finalitats d'emmagatzemament. La transfer\u00e8ncia de dades d'un client a un servidor es coneix com a pujada i la de les dades d'un servidor a un client, baixada. P\u00e0gines web est\u00e0tiques i din\u00e0miques P\u00e0gines web est\u00e0tiques Les p\u00e0gines web est\u00e0tiques s\u00f3n aquelles on el seu contingut no varia per la qual cosa mostraran la mateixa informaci\u00f3 cada vegada que es carreguen. S\u00f3n les p\u00e0gines creades en el llenguatge HTML. Nom\u00e9s canvien si el programador web les modifica. P\u00e0gines web din\u00e0miques Les p\u00e0gines web din\u00e0miques s\u00f3n p\u00e0gines el contingut de les quals varia a partir d'informaci\u00f3 continguda en una BBDD. El contingut mostrat pot canviar segons l'usuari connectat, el navegador que s'utiltze o accions anteriors dels usuaris, etc. Aquest tipus de p\u00e0gines s'han de realitzar mitjan\u00e7at un llenguatge de programaci\u00f3. Execuci\u00f3 de codi en el client i en el servidor En el seg\u00fcent gr\u00e0fic es mostra un escenari on podem trobar codi que s'executa en el servidor (PHP) i en el client (javascript). # 2. Tecnologies per a programaci\u00f3 web del costat del servidor Model de desenvolupament en 3 capes. Des d'un punt de vista de desenvolupament una aproximaci\u00f3 m\u00e9s detallada al model client-servidor \u00e9s el que es coneix com a model en 3 capes . \u00c9s un model on es mostra m\u00e9s en detall com es distribueix el programari que participa en qualsevol desenvolupament web. Segueix estant present l'arquitectura client-servidor (tot es basa en ella) per\u00f2 apareixen m\u00e9s detalls com el programari utilitzat en cada un dels dos actors i com interactuen les diferents tecnologies o aplicacions. Per comprendre millor que \u00e9s el model de desenvolupament de 3 capes podem tirar un ull al seg\u00fcent esquema on es mostra cadascuna d'aquestes capes i que s'encarrega cadascuna d'elles: Capa de presentaci\u00f3: \u00c9s la capa on l'aplicaci\u00f3 es mostra a l'usuari. B\u00e0sicament \u00e9s la GUI ( Graphical User Interface, interf\u00edcie gr\u00e0fica d'usuari ). En el cas d'una aplicaci\u00f3 web seria el codi HTML que es carrega directament al navegador web. En qualsevol cas, s'executa directament en l'equip del client. Capa de negoci: \u00c9s la capa interm\u00e8dia on es porta a terme tota la l\u00f2gica de l'aplicaci\u00f3. Sempre s'executar\u00e0 en el costat servidor. Aquesta capa, despr\u00e9s de realitzar tots els c\u00e0lculs i / o operacions sobre les dades, genera el codi HTML que ser\u00e0 presentat a l'usuari en la capa seg\u00fcent. Capa de dades: \u00c9s la capa que emmagatzema les dades. B\u00e0sicament, en condicions normals, fa refer\u00e8ncia al propi SGBD que \u00e9s l'encarregat d'emmagatzemar les dades. Depenent de l'arquitectura de l'aplicaci\u00f3, aquesta capa i la de negoci es poden trobar f\u00edsicament en el mateix equip, encara que tamb\u00e9 \u00e9s possible que s'hagin de separar per q\u00fcestions de rendiment. La capa de dades serveix totes la informaci\u00f3 necess\u00e0ria a la capa de negoci per dur a terme les seves operacions. Si ens imaginem una botiga online, la capa de dades emmagatzema tota la informaci\u00f3 en una base de dades (usuaris, comandes, articles, ofertes,...), La capa de negoci ha d'accedir a aquesta informaci\u00f3 i, despr\u00e9s processar una comanda, per exemple, ha de presentar el resultat final a l'usuari en el navegador, que \u00e9s la capa de presentaci\u00f3. I si ens centrem en un cas concret amb programari i tecnologies ja definits, un model de 3 capes podria ser el seg\u00fcent: Navegador web: En aquest cas, Mozilla Firefox, Internet Explorer o Google Chrome podrien ser qualsevol de les aplicacions que ocuparien aquesta capa Apache + PHP / IIS + ASP: Un servidor web acompanyat del seu corresponent llenguatge de programaci\u00f3 web permeten desenvolupar la part que ocupa la capa de negoci. Tamb\u00e9 podr\u00edem col\u00b7locar la combinaci\u00f3 Apache Tomcat + Servlets MySQL / PostgreSQL: Finalment a la capa de dades podem posar qualsevol SGBD, com poden ser MySQL o PostgreSQL. L'avantatge principal d'aquest model \u00e9s que el desenvolupament es pot dur a terme en diversos nivells i, en cas que sobrevinga algun canvi, nom\u00e9s afectar\u00e0 el nivell requerit sense haver de revisar entre el codi font d'altres m\u00f2duls, at\u00e8s que s'haur\u00e0 redu\u00eft el acoblament inform\u00e0tic fins a una interf\u00edcie de pas de missatges. ::: Front-end, Back-end, Full stack Tamb\u00e9 tenint en compte en quin costat se situen les tecnologies i per a qu\u00e8 s'utilitzen aquestes, actualment es parla molt de 3 perfils diferenciats en l'\u00e0mbit del desenvolupament web: Front-end: \u00c9s la part del desenvolupament que s'encarrega del disseny i maquetaci\u00f3 de l'aplicaci\u00f3 web utilitzant tecnologies com HTML, CSS i Javascript (i els seus frameworks). En aquest cas s'ha de preocupar tamb\u00e9 de la correcta presentaci\u00f3 en qualsevol tipus de dispositiu i fins i tot del posicionament en cercadors Back-end: \u00c9s la part del desenvolupament que s'encarrega del costat servidor utilitzant tecnologies com PHP, JSP i Python. Tamb\u00e9 s'encarrega de l'administraci\u00f3 del servidor d'aplicacions i la base de dades. Full stack: En un perfil que engloba els dos anteriors. En aquest cas el desenvolupador potser no \u00e9s un expert de cap tecnologia concreta per\u00f2 t\u00e9 amplis coneixements de tot el conjunt i \u00e9s capa\u00e7 de col\u00b7laborar en qualsevol de les parts. Servidors web i servidors d'aplicacions Aix\u00ed com les aplicacions d'escriptori s'executen directament sobre el sistema operatiu, les aplicacions web necessiten d'una eina addicional que permeti desplegar-les per a la seva posada en marxa. Parlem de servidors web i servidors d'aplicacions , respectivament. Qu\u00e8 \u00e9s un servidor web? Un servidor web \u00e9s una aplicaci\u00f3 que rep una petici\u00f3 HTTP (normalment a trav\u00e9s d'un navegador web) i retorna la p\u00e0gina web sol\u00b7licitada (escrita en llenguatge HTML i podent contenir codi Javascript encastat) perqu\u00e8 aquesta sigua interpretada i visualitzada pel navegador de qui va realitzar la sol\u00b7licitud (l'usuari). Qu\u00e8 \u00e9s un servidor d'aplicacions? Un servidor d'aplicacions \u00e9s un servidor que permet l'execuci\u00f3 d'aplicacions web. Exemples Apache Apache \u00e9s un dels servidors web m\u00e9s coneguts. \u00c9s programari lliure i multiplataforma, encara que aproximadament el 90% dels servidors Apache s'executen actualment en entorns Linux ja que \u00e9s el servidor preferit per a aquesta plataforma. \u00c9s molt modular el que permet incorporar caracter\u00edstiques un cop instal\u00b7lat i posat en marxa. Aix\u00f2 li fa tamb\u00e9 molt flexible i pot donar servei a webs escrites en els llenguatges de programaci\u00f3 web m\u00e9s estesos (com PHP, Python, ASP,...) A trav\u00e9s del m\u00f2dul corresponent. Apache Tomcat Apache Tomcat \u00e9s un servidor d'aplicacions que funciona com a contenidor de Servlets de Java. Actualment \u00e9s capa\u00e7 d'implementar diverses especificacions de Java EE com Servlets i JSP (Java Server Pages) i m\u00e9s proporciona un servidor web pur perqu\u00e8 es fa\u00e7a servir en combinaci\u00f3 amb l'entorn Java. WSGI ( Web Server Gateway Interface ) WSGI \u00e9s una interf\u00edcie que defineix com es comunica un servidor web amb aplicacions web o frameworks escrits en Python. Llenguatges PHP PHP (PHP Hypertext Preprocessor) \u00e9s un llenguatge de programaci\u00f3 de costat servidor dissenyat principalment per al desenvolupament web. PHP s'utilitza com a llenguatge de script embegut en p\u00e0gines HTML i funciona, normalment, com un m\u00f2dul del servidor web (per exemple, a Apache). El servidor web combina els resultats d'executar els scripts PHP amb l'HTML al qual va encastat i genera la p\u00e0gina web resultant per al navegador. Actualment PHP funciona pr\u00e0cticament amb qualsevol servidor web i en qualsevol Sistema Operatiu existents, i gaireb\u00e9 amb qualsevol SGBD en cas que necessitem utilitzar una base de dades. Tot i aix\u00f2, el m\u00e9s habitual \u00e9s veure-ho formant el que es coneix com una arquitectura LAMP (Linux, Apache, MySQL i PHP), \u00e9s a dir, funcionant sobre un sistema operatiu Linux, executant-com un m\u00f2dul del servidor web Apache i utilitzant a MySQL com SGBD per emmagatzemar la informaci\u00f3 en cas que es requereixi una base de dades. El llenguatge PHP va ser dissenyat per Rasmus Lerdorf i ara es mant\u00e9 per una comunitat de desenvolupadors, a m\u00e9s \u00e9s de codi obert. A continuaci\u00f3, un fragment d'una p\u00e0gina web din\u00e0mica escrita amb PHP on es pot apreciar com s'incrusta el codi juntament amb l'HTML de la p\u00e0gina: JSP / Servlets JavaServer Pages (tamb\u00e9 conegut com JSP) \u00e9s una tecnologia creada per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques del costat servidor. Igual que PHP, el seu codi s'escriu encastat juntament amb l'HTML de la p\u00e0gina web i \u00e9s el servidor d'aplicacions, en aquest cas, qui ha de processar-per generar la p\u00e0gina web resultant, en HTML. D'altra banda, Java Servlets \u00e9s una tecnologia que tamb\u00e9 es pot utilitzar per crear contingut web din\u00e0mic per\u00f2 que a m\u00e9s est\u00e9n la seva funcionalitat a la possibilitat de connectar aquestes webs din\u00e0miques amb un altre contingut accessible a trav\u00e9s d'Internet. De vegades s'utilitza juntament amb JSP per crear aplicacions web m\u00e9s complexes. Totes dues s\u00f3n tecnologies desenvolupades per Sun Microsystems i propietat ara d'Oracle, despr\u00e9s d'adquirir aquesta \u00faltima a la primera fa ja alguns anys. Python El llenguatge Python va ser dissenyat per Guido van Rossum i ara es mant\u00e9 gr\u00e0cies a una comunitat de desenvolupadors, i \u00e9s codi obert. Exemple de codi escrit amb Python. En aquest cas utilitzant el framework Django per al desenvolupament d'aplicacions web: < h1 > Mis pel\u00edculas < /h1> <a href=\"#\">+</ a > { % if lista_peliculas %} <ul> {% for pelicula in lista_peliculas %} < li >< a href = \"{% url 'pelicula' pelicula.id %}\" > {{ pelicula . titulo }} < /a></ li > { % endfor %} </ul> {% else %} < p > No hay pel\u00edculas disponibles < /p> {% endif %} Separada del controlador: from django.shortcuts import render . . . def index ( request ): lista_peliculas = Pelicula . objects . all () context = { 'lista_peliculas' : lista_peliculas } return render ( request , 'mispeliculas/index.html' , context ) ASP.NET ASP.NET \u00e9s una tecnologia, creada per Microsoft, per al desenvolupament de lloc web din\u00e0mics, aplicacions i serveis web. \u00c9s la tecnologia successora del que abans es coneixia com ASP, l'antiga tecnologia de Microsoft per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques. Com que funciona sobre la plataforma .NET de Microsoft, permet que es pugui desenvolupar en qualsevol dels llenguatges de programaci\u00f3 d'aquesta plataforma, Visual Basic .NET o C#. El m\u00e9s habitual \u00e9s veure-ho funcionar juntament amb el lloc web de Microsoft, IIS (Internet Information Server). A continuaci\u00f3, un exemple de p\u00e0gina web din\u00e0mica amb ASP.NET (desenvolupada en llenguatge C #) programant l'acci\u00f3 que passa en pr\u00e9mer un bot\u00f3 (apareix el text d'un formulari a la part final del web): protected void Button1_Click(object sender, EventArgs e) { string buf = TextBox1.Text; changed_text.InnerHtml = buf.ToUpper(); } < %@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\" Inherits=\"firstexample._Default\" %> <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> < html xmlns = \"http://www.w3.org/1999/xhtml\" > < head runat = \"server\" > < title > Untitled Page </ title > </ head > < body > < form id = \"form1\" runat = \"server\" > < div > < asp:TextBox ID = \"TextBox1\" runat = \"server\" style = \"width:224px\" > </ asp:TextBox > < asp:Button ID = \"Button1\" runat = \"server\" Text = \"Enter...\" style = \"width:85px\" onclick = \"Button1_Click\" /> < hr /> < h3 > Results: </ h3 > < span runat = \"server\" id = \"changed_text\" /> </ div > </ form > </ body > </ html > Preparant l'entorn de desenvolupament Per a poder provar els nostres llocs web necessitarem instal\u00b7lar una s\u00e8rie d'eines com s\u00f3n: el servidor web Apache, el m\u00f2dul PHP per a aquest servidor, el SGBD MySql, un front-end per al SGBD (PHPMyAdmin), etc. Per simplificar les coses optarem per instal\u00b7lar-ho mitjan\u00e7ant XAMPP, un paquet de programari lliure que cont\u00e9 el servidor HTTP Apache, la base de dades de MySQL i eines necess\u00e0ries per utilitzar el PHP i el llenguatge de programaci\u00f3 Perl. Pr\u00e0ctica 1: Instal\u00b7laci\u00f3 de XAMPP Descarreguem el paquet XAMPP per a la nostra m\u00e0quina (https://www.apachefriends.org/). Li donem permisos d'execuci\u00f3 a l'arxiu descarregat: sudo chmod +x xampp-linux-x64-7.3.9-0-installer.run Executem l'assistent d'instal\u00b7laci\u00f3 sudo ./xampp-linux-x64-7.3.9-0-installer.run En l'assistent d'instal\u00b7laci\u00f3, deixarem les opcions per defecte (excepte la qual ens parla de bitnami que la desmarcarem). Una vegada finalitzada la instal\u00b7laci\u00f3, el nostre XAMPP es trobar\u00e0 en el directori /opt/lampp Ara ja podem arrancar els serveis amb el seg\u00fcent comando: sudo /opt/lampp/lampp start Quan els arranquem, si obrim el navegador i ens anem a la url http://localhost, ens hauria d'apar\u00e8ixer la p\u00e0gina de benvinguda de XAMPP. Per a parar els serveis podem fer a\u00e7\u00f2: sudo /opt/lampp/xampp stop En qualsevol cas, \u00e9s molt m\u00e9s c\u00f2mode treballar amb el panell de control de XAMPP que podrem executar amb la seg\u00fcent ordre: sudo /opt/lampp/manager-linux-x64.run Veurem que s'inicia l'aplicaci\u00f3 que ens permet controlar els serveis de XAMPP. Eines de desevolupament Per a programar en llenguatges encastats com PHP, ASP o Phython \u00e9s suficient amb un editor de text pla. No obstant sempre \u00e9s recomanable treballar en un entorn integrat de desenvolupament o IDE (acr\u00f2nim en angl\u00e8s de Integrated development environment ). Un IDE \u00e9s una eina inform\u00e0tica per al desenvolupament de programari de manera c\u00f2moda i r\u00e0pida. Aix\u00ed doncs \u00e9s un entorn de desenvolupament que agrupa diferents funcions en un sol programa, habitualment: editor de codi, compilador, depurador i un programa de disseny d'interf\u00edcie gr\u00e0fica. El principal avantatge \u00e9s que facilita la tasca del programador mentre que l'inconvenient m\u00e9s important \u00e9s que pot provocar mals h\u00e0bits a l'hora de programar o provocar errors que a priori comen\u00e7ant de zero no es produirien. Alguns dels IDE m\u00e9s emprats per al desenvolupament web s\u00f3n: Eclipse Netbeans Atom Sublime PHPStorm Brackets Durant les activitats anteriors has preparat el teu propi entorn de desenvolupament sobre una m\u00e0quina virtual (o una real) tal com s'ha explicat en les anotacions. Despr\u00e9s, has de crear un projecte php utilitzant PHPStorm i visualitzar la p\u00e0gina principal a trav\u00e9s del teu servidor XAMPP. Al llarg del curs, crearem els nostres projectes utilitzant l'IDE PHPStorm. Aquesta eina \u00e9s de pagament, per\u00f2 podem utilitzar-la de forma gratu\u00efta per a projectes OpenSource i amb finalitats educatives. En aqueixos casos caldr\u00e0 sol\u00b7licitar la llic\u00e8ncia corresponent al fabricant del programari. Una vegada obtinguda la llic\u00e8ncia educativa pel professor, ser\u00e0 renovable anualment i podran utilitzar-la tots els alumnes del curs. \u00c9s una eina molt completa que ens permetr\u00e0 la integraci\u00f3 amb moltes de les funcionalitats que emprarem. Instal\u00b7lar PHPStorm Per a instal\u00b7lar l'IDE PHPStorm seguirem els seg\u00fcents passos: Executarem sudo snap install phpstorm --classic Ens demanar\u00e0 si volem importar dades d'una instal\u00b7laci\u00f3 anterior, al que contestarem, \u00f2bviament, que no. Ens demanar\u00e0 que acceptem la pol\u00edtica de privadesa. En executar l'aplicaci\u00f3 per primera vegada ens demanar\u00e0 les dades de llic\u00e8ncia. Cada alumne s'haur\u00e0 de registrar utilitzant l'enlla\u00e7 que us passar\u00e0 el professor en classe. en pr\u00e9mer l'enlla\u00e7 ens redirigir\u00e0 a la p\u00e0gina web de jetbrains perqu\u00e8 ens registrem. Una vegada registrats, podrem accedir a l'aplicaci\u00f3 amb el nostre compte o amb el codi d'activaci\u00f3 que ens proporcionen. Finalment, indicarem la configuraci\u00f3 inicial. Integrant l'executable de PHP PHPStorm disposa d'ajuda intel\u00b7ligent (IntelliJ IDEA). Perqu\u00e8 aquesta ajuda es corresponga amb la versi\u00f3 de php que tenim en el nostre XAMPP haurem de registrar l'executable de PHP de XAMPP en el nostre PHPStorm. Per a a\u00e7\u00f2 seguirem els seg\u00fcents passos: En la pantalla d'inici anem a Configure \u2013 Settings . En la llista de categories de l'esquerra anem a Language & Frameworks - PHP . Necessitem indicar quin \u00e9s el nostre int\u00e8rpret. ja que la llista est\u00e0 buida anem a configurar un de la seg\u00fcent forma: Fem clic en el bot\u00f3 ... de la llista d'int\u00e8rprets Premem el bot\u00f3 + de la cantonada superior esquerra per a afegir-ne un. Li posem el nom PHP de XAMPP. Indiquem instal\u00b7lat on nostre est\u00e0 XAMPP: /opt/lampp/bin/php Immediatament ens indicar\u00e0 la versi\u00f3 de l'int\u00e8rpret que tenim instal\u00b7lat Premem OK i seleccionem el nou interprete en la llista d'int\u00e8rprets. Finalment, seleccionem en l'opci\u00f3 PHP language level aquell que es corresponga amb l'int\u00e8rpret que acabem de configurar. Ara el nostre PHPStorm far\u00e0 \u00fas del PHP de XAMPP i utilitzar\u00e0 la versi\u00f3 de PHP que tenim instal\u00b7lada quan ens oferisca les ajudes. Primer projecte amb PHPStorm Per a comen\u00e7ar a treballar amb PHPStorm anem a crear el nostre primer projecte PHP buit. Tingueu en compte que el projecte heu de crear-ho en el directori /opt/lampp/htdocs i que necessitem tenir permisos d'escriptura en aquest directori. Compte! Pot ser que ho h\u00e0gem instal\u00b7lat com root , mentre que quan executem PHPStorm ho fem amb l'usuari dwes , per tant, l'usuari dwes necessita poder escriure en aquest directori. Per a assegurar-nos que tenim permisos, anirem amb una finestra de terminal al directori /opt/lampp i executarem la seg\u00fcent ordre: ls \u2013la htdocs Aquesta ordre ens dir\u00e0 qui \u00e9s el propietari de la carpeta i quins permisos t\u00e9. En el cas que el propietari siga root executarem la seguent ordre: sudo chown -hR dwes htdocs/ A\u00e7\u00f2 canviar\u00e0 el propietari a l'usuari dwes , amb el que tindrem perm\u00eds d'escriptura en aquest directori des de PHPStorm. Treballarem tenint els projectes en la mateixa carpeta. Pr\u00e0ctica 2. Instal\u00b7laci\u00f3 de PHPStorm Seguint les instruccions anteriors instal\u00b7la i configura PHP Storm. Creaci\u00f3 de projectes i comprovaci\u00f3 de la instal\u00b7laci\u00f3 de PHP Seguirem els passos que s'indiquen a continuaci\u00f3: Arrancar XAMPP Iniciar el m\u00f2dul Apache Executar PHPStorm Crear un projecte buit amb Create New > Project PHP Empty Project Posar al projecte el nom practica1 i situar-lo en el directori /opt/lampp/htdocs . Amb a\u00e7\u00f2 es crea un directori de nom practica1 dintre de /opt/lampp/htdocs . En la finestra de l'esquerra (explorador de projectes) apareix el projecte creat. Dins d'ell crearem un nou fitxer PHP prement bot\u00f3 dret sobre el nom i seleccionant New > PHP File . Li posem de nom index.php . En el fitxer creat introdu\u00efm les seg\u00fcents l\u00ednies de codi: <! doctype html > < html lang = \"es\" > < head > < meta charset = \"utf-8\" > < title > Desenvolupament web en entorn servidor </ title > < meta name = \"description\" content = \"PHP, PHPStorm\" > < meta name = \"author\" content = \"Homer Simpson\" > </ head > < body > <? php phpinfo (); ?> </body> </html> Canviem l'autor del document al nostre nom. Obrim el navegador i teclegem en la barra d'adreces la url: http://localhost/practica1 Apareixer\u00e0 una p\u00e0gina similar a la de la seg\u00fcent imatge: Pr\u00e0ctica 3: Prova d'Apache i PHP L'objectiu d'aquesta pr\u00e0ctica \u00e9s aprendre el maneig b\u00e0sic de l'entorn de desenvolupament PHPStorm creant una primera p\u00e0gina PHP que alhora servir\u00e0 per a comprovar la correcta instal\u00b7laci\u00f3 de XAMPP. Seguint les instruccions anterior crea projecte i prova'l. Eines per a la depuraci\u00f3 de codi En els entorns de desevolupament \u00e9s necessari disposar de ferramentes que ens permenten depurar les nostres aplicacions. Ja siga per arreglar errors com per millorar l'execuci\u00f3 del codi. Els entorns de desevolupament d'aplicacions d'escriptori solen disposar dels seus propis sistemes de depuraci\u00f3, en el cas dels llenguatges d'entorn servidor alguns ecosistemes com el de .Net de Microsoft l'inclouen. Per a PHP hi ha diverses ferramentes com XDebug o DBG. Instal\u00b7laci\u00f3 d'XDEBUG 3.0 XDebug 3.0 Recentment s'ha publicat XDebug 3.0, versi\u00f3 que cobreix aquest document. Si busqueu informaci\u00f3, tingau en compte en quina versi\u00f3 treballeu. A continuaci\u00f3, explicarem com instal\u00b7lar el m\u00f2dul XDebug 3 en un entorn basat en XAMPP. Abans de res comprovarem que no el tenim instal\u00b7lat, per a aix\u00f2 seguirem els seg\u00fcents passos: Obrim la p\u00e0gina de benvinguda de XAMPP escrivint al navegador la URL http://localhost . A la part superior de la p\u00e0gina tenim una s\u00e8rie d'enlla\u00e7os, entre els que es troba un que diu phpinfo . Feu clic en aquest enlla\u00e7. Se'ns mostrar\u00e0 la p\u00e0gina de configuraci\u00f3 del nostre m\u00f2dul php. Anem a seleccionar tots els continguts d'aquesta p\u00e0gina i els anem a copiar. Obrirem al navegador la seg\u00fcent URL: http://xdebug.org/wizard.php . En aquesta p\u00e0gina podrem comprovar quins m\u00f2duls tenim instal\u00b7lats en nostre m\u00f2dul PHP. Per a aix\u00f2, enganxarem els continguts que hem copiat pr\u00e8viament a la caixa de text que apareix i premerem Analyse mi phpinfo() output . Ens apareixeran un resultats semblants a aquests: Com es pot observar, l'extensi\u00f3 XDebug no est\u00e0 instal\u00b7lada. Una altra informaci\u00f3 important que ens d\u00f3na \u00e9s que el nostre fitxer de configuraci\u00f3 del PHP el podem trobar en /opt/lampp/etc/php.ini i les extensions les tenim en /opt/lampp/lib/php/extensions/no-debug-non-zts-20180731 \u00c9s important que recordem aquestes dades. Per instal\u00b7lar l'extensi\u00f3 XDebug seguirem les instruccions que ens indica la p\u00e0gina anterior per\u00f2 compte perqu\u00e8 cal fer algunes modificacions: Important Els car\u00e0cters # representen valors que depenen de cada instal\u00b7laci\u00f3, aix\u00ed que cal tindre-ho en compte en executar-ho. Descarregueu la darrera versi\u00f3 d'Xdebug Instal\u00b7leu els requisits previs per a la compilaci\u00f3 d'extensions PHP.\\ Instal\u00b7leu-lo amb el sistema Ubuntu amb: apt-get install php-dev autoconf automake Desempaqueteu el fitxer descarregat amb tar -xvzf xdebug-#.#.#.tgz Executar: cd xdebug-#.#.# Executar: /opt/lampp/bin/phpize (hem canviat la ruta perqu\u00e8 execute el phpize de XAMPP). Com a part de la seva eixida hauria de mostrar: Configuring for: ... Zend Module Api No: ######## Zend Extension Api No: ######### Si no \u00e9s aix\u00ed, est\u00e0s utilitzant phpize incorrecta. Seguiu aquesta entrada de FAQ i passeu al pas seg\u00fcent. Executar: ./configure --with-php-config=/opt/lampp/bin/php-config (hem afegit la ruta del php-config de XAMPP). Compilem les fonts: make Executar: sudo cp modules/xdebug.so /opt/lampp/lib/php/extensions/no-debug-non-zts-######## Edita /opt/lampp/etc/php.ini i afegeix les seg\u00fcents l\u00ednies al final [xdebug] zend_extension=xdebug Reinicieu el servidor web Repeteix els passos del 1 al 5 inicials per comprovar que XDebug s\u00ed est\u00e0 instal\u00b7lat. Despr\u00e9s caldr\u00e0 configurar PHPStorm per a connectar-lo a XDebug Integraci\u00f3 amb PHPStorm i instal\u00b7lar una extensi\u00f3 de Firefox Xdebug Helper o Chrome. Pr\u00e0ctica 4. Instal\u00b7laci\u00f2 d'XDebug Seguint les instruccions anteriors instal\u00b7la i configura XDEBUG i connecta'l a PHP Storm.","title":"1.- Introducci\u00f3 a la programaci\u00f3 Web"},{"location":"01-intro/#introduccio-a-la-programacio-web","text":"Objectius Seleccionar les arquitectures i tecnologies de programaci\u00f3 web en entorn servidor, analitzant-ne les capacitats i caracter\u00edstiques pr\u00f2pies. Introduir els principals llenguatges i frameworks per al desenvolupament en l'entorn servidor. Caracteritzar i diferenciar els models d'execuci\u00f3 de codi en el servidor i en el client web. Identificar les principals tecnologies associades. Instal\u00b7lar i configurar l'entorn de treball que emprarem per al desenvolupament web. Visualitzar mitjan\u00e7ant el navegador una p\u00e0gina web html amb codi PHP encastat.","title":"Introducci\u00f3 a la programaci\u00f3 web"},{"location":"01-intro/#arquitectura-duna-aplicacio-web","text":"A difer\u00e8ncia de les aplicacions d'escriptori, que utilitzen els recursos d'un \u00fanic ordinador les aplicacions web s\u00f3n distribu\u00efdes, intervenen com a m\u00ednin dos equipos diferents: el client i el servidor. La comunicaci\u00f3 \u00e9s du a terme mitjan\u00e7ant un protocol, en el nostre cas el protocol HTTP, base de la WWW.","title":"Arquitectura d'una aplicaci\u00f3 web"},{"location":"01-intro/#elements-navegador-servidor-protocol-http-i-html","text":"El protocol de transfer\u00e8ncia d'hipertext (HTTP) \u00e9s un protocol client-servidor molt senzill que articula els intercanvis d'informaci\u00f3 entre els clients web (navegadors) i els servidors HTTP. HTTP es basa en operacions senzilles de sol\u00b7licitud/resposta. Quan un client estableix una connexi\u00f3 amb un servidor i envia un missatge amb les dades de la sol\u00b7licitud, el servidor respon amb un missatge similar que cont\u00e9 l'estat de l'operaci\u00f3 i el seu resultat de la sol\u00b7licitud. Totes les operacions poden adjuntar un objecte o recurs sobre el qual actuen; cada objecte web (document HTML, arxiu multim\u00e8dia o aplicaci\u00f3 CGI) \u00e9s conegut pel seu localitzador uniforme de recursos (URL, Uniform Resource Locator ). Els recursos poden ser arxius, el resultat de l'execuci\u00f3 d'un programa, una consulta a una base de dades, la traducci\u00f3 autom\u00e0tica d'un document, etc. HTTP \u00e9s un protocol sense estat , \u00e9s a dir, no guarda cap informaci\u00f3 sobre connexions anteriors. El desenvolupament d'aplicacions web freq\u00fcentment necessita mantenir estat. Per aix\u00f2 s'utilitzen les galetes ( cookies ), \u00e9s a dir, la informaci\u00f3 que un servidor pot emmagatzemar en el sistema client. Aix\u00f2 permet que les aplicacions web institueixin la noci\u00f3 de \"sessi\u00f3\", i, alhora, permet rastrejar usuaris, ja que les galetes es poden emmagatzemar en el client durant un temps indeterminat. Amb la intenci\u00f3 de con\u00e8ixer amb m\u00e9s profunditat el protocol HTTP podem avaluar en qu\u00e8 consisteix una transacci\u00f3 HTTP. Cada vegada que un client fa una petici\u00f3 a un servidor, s'executen un seguit d'accions: Un usuari accedeix a una adre\u00e7a d'Internet (URL) seleccionant un enlla\u00e7 d'un document HTML o introduint-la directament a la barra de navegaci\u00f3 d'un navegador web des de la perspectiva del client web. El client web descodifica l'adre\u00e7a d'Internet (URL) separant-ne les diferents parts. \u00c9s aix\u00ed com s'identifiquen el protocol d'acc\u00e9s, el node expressat amb el nom de domini o la seua adre\u00e7a IP, el possible port opcional (el valor per defecte \u00e9s el 80) i l'objecte del servidor requerit. S'obre una connexi\u00f3 TCP/IP amb el servidor cridant el port TCP corresponent. Es fa la petici\u00f3. En conseq\u00fc\u00e8ncia, s'envien l'ordre necess\u00e0ria (GET, POST, HEAD, etc.), l'adre\u00e7a de l'objecte requerit (el contingut de l'adre\u00e7a d'Internet del servidor), la versi\u00f3 del protocol HTTP utilitzada (en la major part de les ocasions \u00e9s HTTP/1.0) i un conjunt variable d'informaci\u00f3 que inclou dades sobre les capacitats del navegador web, dades opcionals per al servidor, etc. El servidor localitza el recurs sol\u00b7licitat i torna la resposta al client. Aquesta resposta consisteix en un codi d'estat i el tipus de dada amb extensions multiprop\u00f2sit de correu d'Internet (MIME, Multipurpose Internet Mail Extension) de la informaci\u00f3 de tornada, seguit de la mateixa informaci\u00f3. El client formata i mostra el recurs rebut. Es tanca la connexi\u00f3 TCP. Aquest proc\u00e9s es repeteix en cada acc\u00e9s que es fa\u00e7a al servidor HTTP. Per exemple, si es recull un document HTML que cont\u00e9 quatre imatges, el proc\u00e9s de transici\u00f3 mostrat amb anterioritat es repeteix cinc vegades, \u00e9s a dir, una pel document HTML i quatre per les imatges. Si el recurs sol\u00b7licitat \u00e9s un programa (CGI, ASP.NET, PHP, etc.) el servidor HTTP redirigir\u00e0 la petici\u00f3 a la llibreria o int\u00e8rpret adequat que executar\u00e0 el programa i tornar\u00e0 el control al servidor web.","title":"Elements: navegador, servidor, protocol HTTP i HTML"},{"location":"01-intro/#el-model-clientservidor","text":"El model client-servidor \u00e9s aquell on tots els clients estan connectats a un servidor on es centralitzen els diferents recursos. Aquests recursos estan a disposici\u00f3 dels clients cada cop que els sol\u00b7liciten. Aix\u00f2 fa que totes les gestions que es realitzen es concentren en el servidor, que disposa dels requeriments dels clients amb prioritat, els arxius que s\u00f3n d'\u00fas p\u00fablic i els restringits, els arxius de nom\u00e9s lectura, els que poden ser modificats, etc. En el model client/servidor, el dispositiu que sol\u00b7licita informaci\u00f3 es denomina client i el dispositiu que respon la sol\u00b7licitud es denomina servidor. Els processos de client i servidor es consideren una part de la capa d'aplicaci\u00f3. El client comen\u00e7a l'intercanvi sol\u00b7licitant les dades al servidor, que respon enviant un o m\u00e9s blocs de dades al client. Els protocols de capa d'aplicaci\u00f3 descriuen el format de les sol\u00b7licituds i respostes entre clients i servidor. A m\u00e9s de la transfer\u00e8ncia real de dades, aquest intercanvi pot requerir informaci\u00f3 addicional, com l'autentificaci\u00f3 de l'usuari i la identificaci\u00f3 d'un arxiu de dades per transferir. Encara que les dades generalment es descriuen com un flux del servidor al client, algunes dades sempre flueixen del client al servidor. El flux de dades pot ser el mateix en les dues direccions o fins i tot ser major en la direcci\u00f3 que va del client al servidor. Per exemple, un client pot transferir un arxiu al servidor amb finalitats d'emmagatzemament. La transfer\u00e8ncia de dades d'un client a un servidor es coneix com a pujada i la de les dades d'un servidor a un client, baixada.","title":"El model client/servidor"},{"location":"01-intro/#pagines-web-estatiques-i-dinamiques","text":"","title":"P\u00e0gines web est\u00e0tiques i din\u00e0miques"},{"location":"01-intro/#pagines-web-estatiques","text":"Les p\u00e0gines web est\u00e0tiques s\u00f3n aquelles on el seu contingut no varia per la qual cosa mostraran la mateixa informaci\u00f3 cada vegada que es carreguen. S\u00f3n les p\u00e0gines creades en el llenguatge HTML. Nom\u00e9s canvien si el programador web les modifica.","title":"P\u00e0gines web est\u00e0tiques"},{"location":"01-intro/#pagines-web-dinamiques","text":"Les p\u00e0gines web din\u00e0miques s\u00f3n p\u00e0gines el contingut de les quals varia a partir d'informaci\u00f3 continguda en una BBDD. El contingut mostrat pot canviar segons l'usuari connectat, el navegador que s'utiltze o accions anteriors dels usuaris, etc. Aquest tipus de p\u00e0gines s'han de realitzar mitjan\u00e7at un llenguatge de programaci\u00f3.","title":"P\u00e0gines web din\u00e0miques"},{"location":"01-intro/#execucio-de-codi-en-el-client-i-en-el-servidor","text":"En el seg\u00fcent gr\u00e0fic es mostra un escenari on podem trobar codi que s'executa en el servidor (PHP) i en el client (javascript). # 2. Tecnologies per a programaci\u00f3 web del costat del servidor","title":"Execuci\u00f3 de codi en el client i en el servidor"},{"location":"01-intro/#model-de-desenvolupament-en-3-capes","text":"Des d'un punt de vista de desenvolupament una aproximaci\u00f3 m\u00e9s detallada al model client-servidor \u00e9s el que es coneix com a model en 3 capes . \u00c9s un model on es mostra m\u00e9s en detall com es distribueix el programari que participa en qualsevol desenvolupament web. Segueix estant present l'arquitectura client-servidor (tot es basa en ella) per\u00f2 apareixen m\u00e9s detalls com el programari utilitzat en cada un dels dos actors i com interactuen les diferents tecnologies o aplicacions. Per comprendre millor que \u00e9s el model de desenvolupament de 3 capes podem tirar un ull al seg\u00fcent esquema on es mostra cadascuna d'aquestes capes i que s'encarrega cadascuna d'elles: Capa de presentaci\u00f3: \u00c9s la capa on l'aplicaci\u00f3 es mostra a l'usuari. B\u00e0sicament \u00e9s la GUI ( Graphical User Interface, interf\u00edcie gr\u00e0fica d'usuari ). En el cas d'una aplicaci\u00f3 web seria el codi HTML que es carrega directament al navegador web. En qualsevol cas, s'executa directament en l'equip del client. Capa de negoci: \u00c9s la capa interm\u00e8dia on es porta a terme tota la l\u00f2gica de l'aplicaci\u00f3. Sempre s'executar\u00e0 en el costat servidor. Aquesta capa, despr\u00e9s de realitzar tots els c\u00e0lculs i / o operacions sobre les dades, genera el codi HTML que ser\u00e0 presentat a l'usuari en la capa seg\u00fcent. Capa de dades: \u00c9s la capa que emmagatzema les dades. B\u00e0sicament, en condicions normals, fa refer\u00e8ncia al propi SGBD que \u00e9s l'encarregat d'emmagatzemar les dades. Depenent de l'arquitectura de l'aplicaci\u00f3, aquesta capa i la de negoci es poden trobar f\u00edsicament en el mateix equip, encara que tamb\u00e9 \u00e9s possible que s'hagin de separar per q\u00fcestions de rendiment. La capa de dades serveix totes la informaci\u00f3 necess\u00e0ria a la capa de negoci per dur a terme les seves operacions. Si ens imaginem una botiga online, la capa de dades emmagatzema tota la informaci\u00f3 en una base de dades (usuaris, comandes, articles, ofertes,...), La capa de negoci ha d'accedir a aquesta informaci\u00f3 i, despr\u00e9s processar una comanda, per exemple, ha de presentar el resultat final a l'usuari en el navegador, que \u00e9s la capa de presentaci\u00f3. I si ens centrem en un cas concret amb programari i tecnologies ja definits, un model de 3 capes podria ser el seg\u00fcent: Navegador web: En aquest cas, Mozilla Firefox, Internet Explorer o Google Chrome podrien ser qualsevol de les aplicacions que ocuparien aquesta capa Apache + PHP / IIS + ASP: Un servidor web acompanyat del seu corresponent llenguatge de programaci\u00f3 web permeten desenvolupar la part que ocupa la capa de negoci. Tamb\u00e9 podr\u00edem col\u00b7locar la combinaci\u00f3 Apache Tomcat + Servlets MySQL / PostgreSQL: Finalment a la capa de dades podem posar qualsevol SGBD, com poden ser MySQL o PostgreSQL. L'avantatge principal d'aquest model \u00e9s que el desenvolupament es pot dur a terme en diversos nivells i, en cas que sobrevinga algun canvi, nom\u00e9s afectar\u00e0 el nivell requerit sense haver de revisar entre el codi font d'altres m\u00f2duls, at\u00e8s que s'haur\u00e0 redu\u00eft el acoblament inform\u00e0tic fins a una interf\u00edcie de pas de missatges. :::","title":"Model de desenvolupament en 3 capes."},{"location":"01-intro/#front-end-back-end-full-stack","text":"Tamb\u00e9 tenint en compte en quin costat se situen les tecnologies i per a qu\u00e8 s'utilitzen aquestes, actualment es parla molt de 3 perfils diferenciats en l'\u00e0mbit del desenvolupament web: Front-end: \u00c9s la part del desenvolupament que s'encarrega del disseny i maquetaci\u00f3 de l'aplicaci\u00f3 web utilitzant tecnologies com HTML, CSS i Javascript (i els seus frameworks). En aquest cas s'ha de preocupar tamb\u00e9 de la correcta presentaci\u00f3 en qualsevol tipus de dispositiu i fins i tot del posicionament en cercadors Back-end: \u00c9s la part del desenvolupament que s'encarrega del costat servidor utilitzant tecnologies com PHP, JSP i Python. Tamb\u00e9 s'encarrega de l'administraci\u00f3 del servidor d'aplicacions i la base de dades. Full stack: En un perfil que engloba els dos anteriors. En aquest cas el desenvolupador potser no \u00e9s un expert de cap tecnologia concreta per\u00f2 t\u00e9 amplis coneixements de tot el conjunt i \u00e9s capa\u00e7 de col\u00b7laborar en qualsevol de les parts.","title":"Front-end, Back-end, Full stack"},{"location":"01-intro/#servidors-web-i-servidors-daplicacions","text":"Aix\u00ed com les aplicacions d'escriptori s'executen directament sobre el sistema operatiu, les aplicacions web necessiten d'una eina addicional que permeti desplegar-les per a la seva posada en marxa. Parlem de servidors web i servidors d'aplicacions , respectivament.","title":"Servidors web i servidors d'aplicacions"},{"location":"01-intro/#que-es-un-servidor-web","text":"Un servidor web \u00e9s una aplicaci\u00f3 que rep una petici\u00f3 HTTP (normalment a trav\u00e9s d'un navegador web) i retorna la p\u00e0gina web sol\u00b7licitada (escrita en llenguatge HTML i podent contenir codi Javascript encastat) perqu\u00e8 aquesta sigua interpretada i visualitzada pel navegador de qui va realitzar la sol\u00b7licitud (l'usuari).","title":"Qu\u00e8 \u00e9s un servidor web?"},{"location":"01-intro/#que-es-un-servidor-daplicacions","text":"Un servidor d'aplicacions \u00e9s un servidor que permet l'execuci\u00f3 d'aplicacions web.","title":"Qu\u00e8 \u00e9s un servidor d'aplicacions?"},{"location":"01-intro/#exemples","text":"","title":"Exemples"},{"location":"01-intro/#llenguatges","text":"","title":"Llenguatges"},{"location":"01-intro/#php","text":"PHP (PHP Hypertext Preprocessor) \u00e9s un llenguatge de programaci\u00f3 de costat servidor dissenyat principalment per al desenvolupament web. PHP s'utilitza com a llenguatge de script embegut en p\u00e0gines HTML i funciona, normalment, com un m\u00f2dul del servidor web (per exemple, a Apache). El servidor web combina els resultats d'executar els scripts PHP amb l'HTML al qual va encastat i genera la p\u00e0gina web resultant per al navegador. Actualment PHP funciona pr\u00e0cticament amb qualsevol servidor web i en qualsevol Sistema Operatiu existents, i gaireb\u00e9 amb qualsevol SGBD en cas que necessitem utilitzar una base de dades. Tot i aix\u00f2, el m\u00e9s habitual \u00e9s veure-ho formant el que es coneix com una arquitectura LAMP (Linux, Apache, MySQL i PHP), \u00e9s a dir, funcionant sobre un sistema operatiu Linux, executant-com un m\u00f2dul del servidor web Apache i utilitzant a MySQL com SGBD per emmagatzemar la informaci\u00f3 en cas que es requereixi una base de dades. El llenguatge PHP va ser dissenyat per Rasmus Lerdorf i ara es mant\u00e9 per una comunitat de desenvolupadors, a m\u00e9s \u00e9s de codi obert. A continuaci\u00f3, un fragment d'una p\u00e0gina web din\u00e0mica escrita amb PHP on es pot apreciar com s'incrusta el codi juntament amb l'HTML de la p\u00e0gina:","title":"PHP"},{"location":"01-intro/#jsp-servlets","text":"JavaServer Pages (tamb\u00e9 conegut com JSP) \u00e9s una tecnologia creada per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques del costat servidor. Igual que PHP, el seu codi s'escriu encastat juntament amb l'HTML de la p\u00e0gina web i \u00e9s el servidor d'aplicacions, en aquest cas, qui ha de processar-per generar la p\u00e0gina web resultant, en HTML. D'altra banda, Java Servlets \u00e9s una tecnologia que tamb\u00e9 es pot utilitzar per crear contingut web din\u00e0mic per\u00f2 que a m\u00e9s est\u00e9n la seva funcionalitat a la possibilitat de connectar aquestes webs din\u00e0miques amb un altre contingut accessible a trav\u00e9s d'Internet. De vegades s'utilitza juntament amb JSP per crear aplicacions web m\u00e9s complexes. Totes dues s\u00f3n tecnologies desenvolupades per Sun Microsystems i propietat ara d'Oracle, despr\u00e9s d'adquirir aquesta \u00faltima a la primera fa ja alguns anys.","title":"JSP / Servlets"},{"location":"01-intro/#python","text":"El llenguatge Python va ser dissenyat per Guido van Rossum i ara es mant\u00e9 gr\u00e0cies a una comunitat de desenvolupadors, i \u00e9s codi obert. Exemple de codi escrit amb Python. En aquest cas utilitzant el framework Django per al desenvolupament d'aplicacions web: < h1 > Mis pel\u00edculas < /h1> <a href=\"#\">+</ a > { % if lista_peliculas %} <ul> {% for pelicula in lista_peliculas %} < li >< a href = \"{% url 'pelicula' pelicula.id %}\" > {{ pelicula . titulo }} < /a></ li > { % endfor %} </ul> {% else %} < p > No hay pel\u00edculas disponibles < /p> {% endif %} Separada del controlador: from django.shortcuts import render . . . def index ( request ): lista_peliculas = Pelicula . objects . all () context = { 'lista_peliculas' : lista_peliculas } return render ( request , 'mispeliculas/index.html' , context )","title":"Python"},{"location":"01-intro/#aspnet","text":"ASP.NET \u00e9s una tecnologia, creada per Microsoft, per al desenvolupament de lloc web din\u00e0mics, aplicacions i serveis web. \u00c9s la tecnologia successora del que abans es coneixia com ASP, l'antiga tecnologia de Microsoft per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques. Com que funciona sobre la plataforma .NET de Microsoft, permet que es pugui desenvolupar en qualsevol dels llenguatges de programaci\u00f3 d'aquesta plataforma, Visual Basic .NET o C#. El m\u00e9s habitual \u00e9s veure-ho funcionar juntament amb el lloc web de Microsoft, IIS (Internet Information Server). A continuaci\u00f3, un exemple de p\u00e0gina web din\u00e0mica amb ASP.NET (desenvolupada en llenguatge C #) programant l'acci\u00f3 que passa en pr\u00e9mer un bot\u00f3 (apareix el text d'un formulari a la part final del web): protected void Button1_Click(object sender, EventArgs e) { string buf = TextBox1.Text; changed_text.InnerHtml = buf.ToUpper(); } < %@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\" Inherits=\"firstexample._Default\" %> <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> < html xmlns = \"http://www.w3.org/1999/xhtml\" > < head runat = \"server\" > < title > Untitled Page </ title > </ head > < body > < form id = \"form1\" runat = \"server\" > < div > < asp:TextBox ID = \"TextBox1\" runat = \"server\" style = \"width:224px\" > </ asp:TextBox > < asp:Button ID = \"Button1\" runat = \"server\" Text = \"Enter...\" style = \"width:85px\" onclick = \"Button1_Click\" /> < hr /> < h3 > Results: </ h3 > < span runat = \"server\" id = \"changed_text\" /> </ div > </ form > </ body > </ html >","title":"ASP.NET"},{"location":"01-intro/#preparant-lentorn-de-desenvolupament","text":"Per a poder provar els nostres llocs web necessitarem instal\u00b7lar una s\u00e8rie d'eines com s\u00f3n: el servidor web Apache, el m\u00f2dul PHP per a aquest servidor, el SGBD MySql, un front-end per al SGBD (PHPMyAdmin), etc. Per simplificar les coses optarem per instal\u00b7lar-ho mitjan\u00e7ant XAMPP, un paquet de programari lliure que cont\u00e9 el servidor HTTP Apache, la base de dades de MySQL i eines necess\u00e0ries per utilitzar el PHP i el llenguatge de programaci\u00f3 Perl. Pr\u00e0ctica 1: Instal\u00b7laci\u00f3 de XAMPP Descarreguem el paquet XAMPP per a la nostra m\u00e0quina (https://www.apachefriends.org/). Li donem permisos d'execuci\u00f3 a l'arxiu descarregat: sudo chmod +x xampp-linux-x64-7.3.9-0-installer.run Executem l'assistent d'instal\u00b7laci\u00f3 sudo ./xampp-linux-x64-7.3.9-0-installer.run En l'assistent d'instal\u00b7laci\u00f3, deixarem les opcions per defecte (excepte la qual ens parla de bitnami que la desmarcarem). Una vegada finalitzada la instal\u00b7laci\u00f3, el nostre XAMPP es trobar\u00e0 en el directori /opt/lampp Ara ja podem arrancar els serveis amb el seg\u00fcent comando: sudo /opt/lampp/lampp start Quan els arranquem, si obrim el navegador i ens anem a la url http://localhost, ens hauria d'apar\u00e8ixer la p\u00e0gina de benvinguda de XAMPP. Per a parar els serveis podem fer a\u00e7\u00f2: sudo /opt/lampp/xampp stop En qualsevol cas, \u00e9s molt m\u00e9s c\u00f2mode treballar amb el panell de control de XAMPP que podrem executar amb la seg\u00fcent ordre: sudo /opt/lampp/manager-linux-x64.run Veurem que s'inicia l'aplicaci\u00f3 que ens permet controlar els serveis de XAMPP.","title":"Preparant l'entorn de desenvolupament"},{"location":"01-intro/#eines-de-desevolupament","text":"Per a programar en llenguatges encastats com PHP, ASP o Phython \u00e9s suficient amb un editor de text pla. No obstant sempre \u00e9s recomanable treballar en un entorn integrat de desenvolupament o IDE (acr\u00f2nim en angl\u00e8s de Integrated development environment ). Un IDE \u00e9s una eina inform\u00e0tica per al desenvolupament de programari de manera c\u00f2moda i r\u00e0pida. Aix\u00ed doncs \u00e9s un entorn de desenvolupament que agrupa diferents funcions en un sol programa, habitualment: editor de codi, compilador, depurador i un programa de disseny d'interf\u00edcie gr\u00e0fica. El principal avantatge \u00e9s que facilita la tasca del programador mentre que l'inconvenient m\u00e9s important \u00e9s que pot provocar mals h\u00e0bits a l'hora de programar o provocar errors que a priori comen\u00e7ant de zero no es produirien. Alguns dels IDE m\u00e9s emprats per al desenvolupament web s\u00f3n: Eclipse Netbeans Atom Sublime PHPStorm Brackets Durant les activitats anteriors has preparat el teu propi entorn de desenvolupament sobre una m\u00e0quina virtual (o una real) tal com s'ha explicat en les anotacions. Despr\u00e9s, has de crear un projecte php utilitzant PHPStorm i visualitzar la p\u00e0gina principal a trav\u00e9s del teu servidor XAMPP. Al llarg del curs, crearem els nostres projectes utilitzant l'IDE PHPStorm. Aquesta eina \u00e9s de pagament, per\u00f2 podem utilitzar-la de forma gratu\u00efta per a projectes OpenSource i amb finalitats educatives. En aqueixos casos caldr\u00e0 sol\u00b7licitar la llic\u00e8ncia corresponent al fabricant del programari. Una vegada obtinguda la llic\u00e8ncia educativa pel professor, ser\u00e0 renovable anualment i podran utilitzar-la tots els alumnes del curs. \u00c9s una eina molt completa que ens permetr\u00e0 la integraci\u00f3 amb moltes de les funcionalitats que emprarem.","title":"Eines de desevolupament"},{"location":"01-intro/#installar-phpstorm","text":"Per a instal\u00b7lar l'IDE PHPStorm seguirem els seg\u00fcents passos: Executarem sudo snap install phpstorm --classic Ens demanar\u00e0 si volem importar dades d'una instal\u00b7laci\u00f3 anterior, al que contestarem, \u00f2bviament, que no. Ens demanar\u00e0 que acceptem la pol\u00edtica de privadesa. En executar l'aplicaci\u00f3 per primera vegada ens demanar\u00e0 les dades de llic\u00e8ncia. Cada alumne s'haur\u00e0 de registrar utilitzant l'enlla\u00e7 que us passar\u00e0 el professor en classe. en pr\u00e9mer l'enlla\u00e7 ens redirigir\u00e0 a la p\u00e0gina web de jetbrains perqu\u00e8 ens registrem. Una vegada registrats, podrem accedir a l'aplicaci\u00f3 amb el nostre compte o amb el codi d'activaci\u00f3 que ens proporcionen. Finalment, indicarem la configuraci\u00f3 inicial.","title":"Instal\u00b7lar PHPStorm"},{"location":"01-intro/#creacio-de-projectes-i-comprovacio-de-la-installacio-de-php","text":"Seguirem els passos que s'indiquen a continuaci\u00f3: Arrancar XAMPP Iniciar el m\u00f2dul Apache Executar PHPStorm Crear un projecte buit amb Create New > Project PHP Empty Project Posar al projecte el nom practica1 i situar-lo en el directori /opt/lampp/htdocs . Amb a\u00e7\u00f2 es crea un directori de nom practica1 dintre de /opt/lampp/htdocs . En la finestra de l'esquerra (explorador de projectes) apareix el projecte creat. Dins d'ell crearem un nou fitxer PHP prement bot\u00f3 dret sobre el nom i seleccionant New > PHP File . Li posem de nom index.php . En el fitxer creat introdu\u00efm les seg\u00fcents l\u00ednies de codi: <! doctype html > < html lang = \"es\" > < head > < meta charset = \"utf-8\" > < title > Desenvolupament web en entorn servidor </ title > < meta name = \"description\" content = \"PHP, PHPStorm\" > < meta name = \"author\" content = \"Homer Simpson\" > </ head > < body > <? php phpinfo (); ?> </body> </html> Canviem l'autor del document al nostre nom. Obrim el navegador i teclegem en la barra d'adreces la url: http://localhost/practica1 Apareixer\u00e0 una p\u00e0gina similar a la de la seg\u00fcent imatge: Pr\u00e0ctica 3: Prova d'Apache i PHP L'objectiu d'aquesta pr\u00e0ctica \u00e9s aprendre el maneig b\u00e0sic de l'entorn de desenvolupament PHPStorm creant una primera p\u00e0gina PHP que alhora servir\u00e0 per a comprovar la correcta instal\u00b7laci\u00f3 de XAMPP. Seguint les instruccions anterior crea projecte i prova'l.","title":"Creaci\u00f3 de projectes i comprovaci\u00f3 de la instal\u00b7laci\u00f3 de PHP"},{"location":"01-intro/#eines-per-a-la-depuracio-de-codi","text":"En els entorns de desevolupament \u00e9s necessari disposar de ferramentes que ens permenten depurar les nostres aplicacions. Ja siga per arreglar errors com per millorar l'execuci\u00f3 del codi. Els entorns de desevolupament d'aplicacions d'escriptori solen disposar dels seus propis sistemes de depuraci\u00f3, en el cas dels llenguatges d'entorn servidor alguns ecosistemes com el de .Net de Microsoft l'inclouen. Per a PHP hi ha diverses ferramentes com XDebug o DBG.","title":"Eines per a la depuraci\u00f3 de codi"},{"location":"01-intro/#installacio-dxdebug-30","text":"XDebug 3.0 Recentment s'ha publicat XDebug 3.0, versi\u00f3 que cobreix aquest document. Si busqueu informaci\u00f3, tingau en compte en quina versi\u00f3 treballeu. A continuaci\u00f3, explicarem com instal\u00b7lar el m\u00f2dul XDebug 3 en un entorn basat en XAMPP. Abans de res comprovarem que no el tenim instal\u00b7lat, per a aix\u00f2 seguirem els seg\u00fcents passos: Obrim la p\u00e0gina de benvinguda de XAMPP escrivint al navegador la URL http://localhost . A la part superior de la p\u00e0gina tenim una s\u00e8rie d'enlla\u00e7os, entre els que es troba un que diu phpinfo . Feu clic en aquest enlla\u00e7. Se'ns mostrar\u00e0 la p\u00e0gina de configuraci\u00f3 del nostre m\u00f2dul php. Anem a seleccionar tots els continguts d'aquesta p\u00e0gina i els anem a copiar. Obrirem al navegador la seg\u00fcent URL: http://xdebug.org/wizard.php . En aquesta p\u00e0gina podrem comprovar quins m\u00f2duls tenim instal\u00b7lats en nostre m\u00f2dul PHP. Per a aix\u00f2, enganxarem els continguts que hem copiat pr\u00e8viament a la caixa de text que apareix i premerem Analyse mi phpinfo() output . Ens apareixeran un resultats semblants a aquests: Com es pot observar, l'extensi\u00f3 XDebug no est\u00e0 instal\u00b7lada. Una altra informaci\u00f3 important que ens d\u00f3na \u00e9s que el nostre fitxer de configuraci\u00f3 del PHP el podem trobar en /opt/lampp/etc/php.ini i les extensions les tenim en /opt/lampp/lib/php/extensions/no-debug-non-zts-20180731 \u00c9s important que recordem aquestes dades. Per instal\u00b7lar l'extensi\u00f3 XDebug seguirem les instruccions que ens indica la p\u00e0gina anterior per\u00f2 compte perqu\u00e8 cal fer algunes modificacions: Important Els car\u00e0cters # representen valors que depenen de cada instal\u00b7laci\u00f3, aix\u00ed que cal tindre-ho en compte en executar-ho. Descarregueu la darrera versi\u00f3 d'Xdebug Instal\u00b7leu els requisits previs per a la compilaci\u00f3 d'extensions PHP.\\ Instal\u00b7leu-lo amb el sistema Ubuntu amb: apt-get install php-dev autoconf automake Desempaqueteu el fitxer descarregat amb tar -xvzf xdebug-#.#.#.tgz Executar: cd xdebug-#.#.# Executar: /opt/lampp/bin/phpize (hem canviat la ruta perqu\u00e8 execute el phpize de XAMPP). Com a part de la seva eixida hauria de mostrar: Configuring for: ... Zend Module Api No: ######## Zend Extension Api No: ######### Si no \u00e9s aix\u00ed, est\u00e0s utilitzant phpize incorrecta. Seguiu aquesta entrada de FAQ i passeu al pas seg\u00fcent. Executar: ./configure --with-php-config=/opt/lampp/bin/php-config (hem afegit la ruta del php-config de XAMPP). Compilem les fonts: make Executar: sudo cp modules/xdebug.so /opt/lampp/lib/php/extensions/no-debug-non-zts-######## Edita /opt/lampp/etc/php.ini i afegeix les seg\u00fcents l\u00ednies al final [xdebug] zend_extension=xdebug Reinicieu el servidor web Repeteix els passos del 1 al 5 inicials per comprovar que XDebug s\u00ed est\u00e0 instal\u00b7lat. Despr\u00e9s caldr\u00e0 configurar PHPStorm per a connectar-lo a XDebug Integraci\u00f3 amb PHPStorm i instal\u00b7lar una extensi\u00f3 de Firefox Xdebug Helper o Chrome. Pr\u00e0ctica 4. Instal\u00b7laci\u00f2 d'XDebug Seguint les instruccions anteriors instal\u00b7la i configura XDEBUG i connecta'l a PHP Storm.","title":"Instal\u00b7laci\u00f3 d'XDEBUG 3.0"},{"location":"02-phpbasics/","text":"El llenguatge PHP Objectius Con\u00e8ixer la sintaxi b\u00e0sica de PHP i les noves caracter\u00edstiques de PHP 7. Entendre com s'integren PHP i HTML. Descriure els tipus de dades existents en PHP. Fer servir les estructures de control b\u00e0siques. Aprendre a utilitzar els arrays associatius. Con\u00e8ixer els mecanismes de pas de par\u00e0metres a un script. Processar i validar formularis Incloure fixters Introducci\u00f3 Acr\u00f2nim de Personal Home Page Llenguatge de prop\u00f2sit general, encara que el seu fort \u00e9s el desenvolupament web. Sintaxi similar a C / Java El codi s'executa en el servidor (en Apache mitjan\u00e7ant mod_php ) El client rep el resultat generat despr\u00e9s d'interpretar el codi al servidor. El codi s'emmagatzema en arxiu amb extensi\u00f3 .php. L'\u00faltima versi\u00f3 \u00e9s la 8.0, de novembre de 2020 (i en breu tindrem la versi\u00f3 8.1). La versi\u00f3 7.0 va sortir al desembre de 2015. A m\u00e9s de nombroses noves funcionalitats que anirem veient durant el curs, t\u00e9 m\u00e9s de dues vegades millor rendiment que PHP5. PHP 7.4 Nosaltres farem \u00fas de la versi\u00f3 7.4 de PHP La seva documentaci\u00f3 \u00e9s extensa i est\u00e0 tradu\u00efda: https://www.php.net/manual/es/. Funcionament i estructura b\u00e0sica El nostre primer codi PHP El codi PHP sempre va entre els simbolos <?php i ?> . Les instruccions PHP acaben sempre amb ; . Per a generar codi HTML des de PHP podem utilitzar el m\u00e8tode echo passant-li el text del codi que volem generar. El codi pot anar entre les etiquetes d'HTML. < html > < head ></ head > < body > < h1 > <?php echo \"Hola m\u00f3n\" ?> </ h1 > < body > Tamb\u00e9 podem utilitzar l'etiqueta <?= fa el echo al mateix temps. < html > < head ></ head > < body > < h1 > <? = \"Hola m\u00f3n\" ?> </ h1 > < body > Comentaris De bloc entre /* i */ . De linea, comen\u00e7ant per // o per # . Codi incrustat El documents que contenen codi PHP s'han d'anomenar amb l'extensi\u00f3 .php Variables i tipus de dades Una de les caracter\u00edstiques de php \u00e9s que \u00e9s un llenguatge no fortament tipat . De fet no cal declarar la variable ni indicar el tipus de dades si la declare. Encara que si volem codi de qualitat ho hauriem de fer. Declaraci\u00f3 Els noms de les variables sempre comencen per $ Despr\u00e9s del $ els noms de les variables han d'anar seguits per una lletra o el car\u00e0cter _ i poden contenir tamb\u00e9 n\u00fameros. No \u00e9s necessari declarar una variable ni especificar-li un tipus (sencer, cadena,...) concret. Per crear una variable que continga el text a generar i mostrar-la: < html > < head ></ head > < body > < h1 > <?php $salutacio = \"Hola m\u00f3n\" ; echo $salutacio ; ?> </ h1 > < body > Tipus de les variables El tipus de la variable es decideix en funci\u00f3 del context en qu\u00e8 s'utilitze. En assignar-li el valor 7, la variable \u00e9s de tipus \u201csencer\u201d $la_meua_variable = 7 ; // ara \u00e9s un n\u00famero $la_meua_variable = \"set\" ; // ara \u00e9s cadena Si li canviem el contingut passa a ser de tipus \u201ccadena\u201d Variable no inicialitzades Si s'intenta utilitzar una variable abans d'assignar-li un valor, es genera un error de tipus E_NOTICE per\u00f2 no s'interromp l'execuci\u00f3 de l'script. L'eixida mostrar\u00e0 un av\u00eds cada volta que s'intente. Tipus de dades en PHP boole\u00e0 ( boolean ). Els seus possibles valors s\u00f3n true i false. A m\u00e9s, qualsevol nombre enter es considera com true, excepte el 0 que \u00e9s false. sencer ( integer ). Qualsevol nombre sense decimals. Es poden representar en format decimal, octal (comen\u00e7ant per un 0), o hexadecimal (comen\u00e7ant per 0x). real ( float ). Qualsevol nombre amb decimals. Es poden representar tamb\u00e9 en notaci\u00f3 cient\u00edfica. cadena ( string ). Conjunts de car\u00e0cters delimitats per cometes simples o dobles. vector ( array ). Conjunt de variables del mateix tipus ordenades. Objecte ( object ). Utilitzat per les inst\u00e0ncies de classes. null . \u00c9s un tipus de dades especial, que s'usa per a indicar que la variable no t\u00e9 valor. ( http://php.net/manual/es/language.types.null.php ) \u00c0mbit de les variables L'\u00e0mbit d'una variable \u00e9s la part del codi en que \u00e9s visible. Una variable declarada en un fitxer de PHP est\u00e0 disponible en eixe fitxer i en els que l'incloguen. Les funcions definixen un \u00e0mbit local, separat de la resta del codi. Es poden definir variables globlals amb la paraula reservada global , encara que no s\u00f3n aconsellables. Variables predefinides S\u00f3n variables internes predefinides de PHP que poden usar-se des de qualsevol \u00e0mbit. Tomem forma d'arrays associatius que contenen un conjunt de valors. $_SERVER . Cont\u00e9 informaci\u00f3 sobre l'entorn del servidor web i d'execuci\u00f3. $_GET, $_POST i $_COOKIE contenen les variables que s'han passat al script actual utilitzant, respectivament, els m\u00e8todes GET (par\u00e0metres en la URL), HTTP POST i Cookies HTTP $_REQUEST junta en un solament el contingut dels tres *arrays anteriors, $_GET, $_POST i $_COOKIE. $_ENV cont\u00e9 les variables que es puguen haver passat a PHP des de l'entorn en qu\u00e8 s'executa. $_FILES cont\u00e9 els fitxers que es puguen haver pujat al servidor utilitzant el m\u00e8tode POST. $_SESSION cont\u00e9 les variables de sessi\u00f3 disponibles per al gui\u00f3 actual. http://es.php.net/manual/es/language.variables.superglobals.php Constants Per a definir constants s'utilitza define() , que reb el nom de la constant i el valor que li volem donar define ( \"LIMITE\" , 1000 ); \u00c9s habitual utilitzar identificadors en majuscules per a les constants. Operadors Arim\u00e8tics Exemple Nom Resultat +$a Identidat Conversi\u00f3 de $a a int o float segons el cas. -$a Negaci\u00f3 Oposat de $a . $a + $b Suma Suma de $a i $b . $a - $b Resta Difer\u00e8ncia de $a i $b . $a * $b Multiplicaci\u00f3 Producte de $a i $b . $a / $b Divisi\u00f3 Quocient de $a i $b . $a % $b M\u00f3dul / Residu Residu de $a dividit per $b . $a ** $b Pot\u00e8ncia Resultat de $a elevat a $b . PHP >= 5.6. En el caso de cadenas , si queremos concatenarlas, se utiliza el operador . : $x = 33 ; $y = 11 ; $z = $x + $y ; echo \"La suma de 33 y 11 es \" . 44. \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . ( 33 + 11 ) . \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . $z . \"<br />\" ; Realment en lloc de concatenar cadenas con variables, podem imprimir-les directament ja que s'expandeixen autom\u00e0ticament: echo \"La suma de $x y $y es $z <br />\" ; En ocasions, necesitem envoltar el nom de la variable entre claus per poder un m\u00e9s text al resultat: $color = \"rojo\" ; echo \"El plural de $color el ${ color } s\" ; ?> M\u00e9s endavant estudiarem algunes funcions per al tractament de cadenes. Comparaci\u00f3 Exemple Nom Resultat $a == $b Igual true si $a \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a === $b Id\u00e8ntic, Comparaci\u00f3 estricta true si $a \u00e9s igual a $b , i s\u00f3n del mateix tipus de dada. $a != $b , $a <> $b Diferent true si $a no \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a !== $b No id\u00e8ntic true si $a no \u00e9s igual a $b , o si no s\u00f3n del mateix tipus. $a < $b Menor que true si $a \u00e9s estrictament menor que $b . $a > $b Major que true si $a \u00e9s estrictament major que $b . $a <= $b Menor o igual que true si $a \u00e9s menor o igual que $b . $a >= $b Major o igual que true si $a \u00e9s major o igual que $b . $a <=> $b Nau espacial Torna -1 , 0 o 1 quan $a \u00e9s respectivamente menor, igual, o major que $b . PHP >= 7. $a ?? $b ?? $c Fusi\u00f3n de null El primer operano d'esquerra a dreta que existisca i no siga null . null si no hi ha valors definits i no s\u00f3n null . PHP >= 7. L\u00f2gics Exemple Nom Resultat $a and $b , $a && $b And (i) true si tant $a com $b s\u00f3n true . $a or $b , $a || $b Or (o inclusiu) true si qualsevol de $a o $b \u00e9s true . $a xor $b Xor (o exclusiu) true si $a o $b \u00e9s true , pero no ambd\u00f3s. !$a Not (no) true si $a no \u00e9s true . Assignaci\u00f3 Exemple Nom Resultat $a = $b Assignaci\u00f3 Assigna a $a el valor de $b $a += $b Assignaci\u00f3 de la suma Le suma a $a el valor de $b . Equivalent a $a = $a + $b $a -= $b Assignaci\u00f3 de la resta Le resta a $a el valor de $b . Equivalent a $a = $a - $b $a *= $b Assignaci\u00f3 del producte Assigna a $a el producto de $a por $b . Equivalent a $a = $a * $b $a /= $b Assignaci\u00f3 de la divisi\u00f3 Assigna a $a el quocient de $a entre $b . Equivalent a $a = $a / $b $a %= $b Assignaci\u00f3 del residu Assigna a $a el residu de dividir $a entre $b . Equivalent a $a = $a % $b $a .= $b Concatenaci\u00f3 Concatena a $a la cadena $b . Equivalent a $a = $a . $b $a++ Increment Incrementa $a en una unitat. Equivalent a $a = $a + 1 $a-- Decrement Decrementa $a en una unitat. Equivalent a $a = $a - 1 Prioridad de los operadores Recorda la prioritat. Primer els par\u00e8ntesis, despr\u00e9s la negaci\u00f3 ( ! ), productes/divisions, sumes/restes, comparacions, l\u00f2gics i finalment es realitza l'assignaci\u00f3. M\u00e9s informaci\u00f3 a https://www.php.net/manual/es/language.operators.precedence.php Autoevaluaci\u00f3n Si $a=5 i $b=4 , esbrina el valor de $c si $c = $a*2 > $b+5 && !($b<>4) Operador ternari Funciona com un condicional condici\u00f3 ? valor si true : valor si false i que es pot simplificar ** condici\u00f3 https://www.php.net/manual/es/language.operators.php Farem alguns exercicis : Exercisi 2.0 Conceptes b\u00e0sics Estructures de control de flux Les instruccions de control de flux en PHP funcionen exactament igual que en altres llenguatges de programaci\u00f3. Les m\u00e9s habituals s\u00f3n: Condicionals: if, if else, switch Bucles: while, do while, for seguint les estructures: if ( condici\u00f3 ) { // instruccions } else { // instruccions } switch ( $variable ) { case valor : //instruccio1 break ; case valor : //instruccio1 break ; default : //instruccio1 } while ( condici\u00f3 ) { //instruccions } do { //instruccions } while ( condici\u00f3 ); for ( $i = 1 ; $i < 10 ; $i ++ ){ //instruccions } http://php.net/manual/es/language.control-structures.php Expansi\u00f3 de variables Podem introduir una variable dins d'un text sempre que usem les cometes dobles per a delimitar el text. A\u00e7\u00f2 far\u00e0 que el contingut de la variable s'expandisca i es concatene amb el text existent en la cadena. echo \"<p>M\u00f2dul: $module </p>\" A voltes, \u00e9s necessari envoltar-la entre claus echo \"<p>M\u00f2dul: { $module } DAW</p>\" Si no pos\u00e0rem les claus l'int\u00e8rpret cercaria una variable que es cride $moduleDAW Maneig de cadenes de text Podem utilitzar tant cometes simples com a cometes dobles. Per a concatenar cadenes utilitzarem l'operador punt (.) $fullName = $name.' '.$surname; Funcions de cadena Maneig de dates Funci\u00f3 time() En PHP les dates s'emmagatzemen com a n\u00fameros enters. La funci\u00f3 time() retorna el nombre de segons transcorreguts des de l'1 de gener de 1970 (instant conegut com a \u00e8poca Unix). A aquesta forma d'expressar data i hora se li denomina timestamp . Funci\u00f3 date() date ( string $format [, int $timestamp = time ()]) : string La funci\u00f3 date retorna una cadena formatada segons els codi de format. Si no li passem la variable timestamp ens retorna la cadena formatada per a la data i l'hora actual. Els codis de format m\u00e9s habituals per a la funci\u00f3 date s\u00f3n: CODI DESCRIPCI\u00d3 a am o pm A AM o PM d Dia del mes amb zeros D Abreviatura del dia de la setmana (en angl\u00e8s) F Nom del mes (en angl\u00e8s) h Hora en format 1-12 H Hora en format 0-23 i Minuts j Dia del mes sense zeros l Dia de la setmana m N\u00famero de mes (1-12) M Abreviatura del mes (en angl\u00e8s) s Segons y Any amb 2 d\u00edgits Y Any amb 4 d\u00edgits z Dia de l'any (1-365) La informaci\u00f3 completa la pots trobar en el manual oficial de PHP: date Suposant que hui \u00e9s 15 de setembre de 2019 i les 19 hores 20 minuts i 23 segons et mostrem alguns exemples: date ( \"d-m-Y\" ); // 15-09-2019 date ( \"H:i:s\" ); // 19:20:23 date ( \"Y\" ); // 2019 date ( \"YmdHis\" ); // 20190915192023 date ( \"d/m/y H:i a\" ); // 15/09/19 19:20 pm date ( \"d-m-Y H:i\" , time ()); // Moment actual Funci\u00f3 mktime(hora, min, seg, mes, dia, any) La funci\u00f3 mktime permet obtenir la marca de temps Unix ( timestamp ) d'una data. Per exemple: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); echo date ( 'd-m-Y' , $data ); // mostrar\u00e0 01-01-2020 M\u00e9s informaci\u00f3 en https://www.php.net/manual/es/function.mktime.php Un altra forma de crear dates \u00e9s mitjan\u00e7ant la funci\u00f3 strtotime() on podem indicar les dates mitjan\u00e7ant una cadena de text. Per exemple: // posarem la data en el format any-mes-dia per a evitar confusions. $date = strtotime ( \"2020-01-01\" ); Operar amb dates Com hem dit al principi les dates s'emmagatzem com a enters on cada unitat representa un segon. Aix\u00ed podem sumar i restar dates ( timestamp ) per a afegir, llevar o calcular difer\u00e8ncies entre ells. Per exemple, per poder determinar els dies que falten per a l'1 de gener de 2020 far\u00edem: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); // timestamp que representa l'1 de gener de 2020 $diferencia = $data - time (); // restem a l'1 de gener de 2020 el temps actual, // el resultat estar\u00e0 en segons. $diferenciaEnDies = ((( $diferencia / 60 ) / 60 ) / 24 ); /* dividim els segons entre 60 i obtenim els minuts, els dividim entre 60 i obtenim les hores, els dividim entre 24 i obtenim els dies */ Validar dates En la funci\u00f3 checkdate podem validar una data. checkdate ( int $month , int $day , int $year ) : bool La funci\u00f3 torna true si la data es v\u00e0lida, si no, torna false . Classe DateTime PHP disposa tamb\u00e9 de la classe DateTime per a representar les dates, la veurem m\u00e9s avant. Activitat 3: Treballar amb dates Crea un fitxer anomenat dates.php i realitza les seg\u00fcents tasques: Mostra la data i hora actuals amb el format: dd/mm/yyyy hh:mm:ss Mostra el nom de la zona hor\u00e0ria que s'utilitza per defecte. Mostra la data de que ser\u00e0 d\u2019ac\u00ed 45 dies. Mostra el nombre de dies que han passat des de l'1 de gener. Mostra la data i hora actuals de Nova York. Mostra el dia de la setmana que era l'1 de gener d'enguany. En acabar penja el document a Aules. Activitat 4 200dadesPersonals.php : Escriu un programa que emmagatzeme en variables teu nom, primer cognom, segon cognom, email, any de naixement i tel\u00e8fon. Despr\u00e9s mostra'ls per pantalla dins d'una taula. Nom Bruce Cognoms Wayne Email batman@dccomics.com Any de naixement 1939 Tel\u00e8fon 555666777 206anyos.php : Despr\u00e9s de llegir l'edat d'una persona, mostrar l'edat que tindr\u00e0 d'aqu\u00ed a 10 anys i fa 10 anys. A m\u00e9s, mostra quin any ser\u00e0 en cada un dels casos. Finalment, mostra l'any de jubilaci\u00f3 suposant que treballar\u00e0s fins als 65 anys. Tip: $anyoActual = date(\"Y\") ; Maneig d'arrays Un array \u00e9s un tipus de dades que ens permet emmagatzemar diversos valors. Per tal d'accedir a un valor utilitzarem una clau . Les claus poden ser nombres o textos ( arrays associatius ). Si no indiquem cap clau, a cada element se li associar\u00e0 una clau num\u00e8rica correlativa. Array indexat Crear array Podem crear un array buit de dues formes: $noms = array (); $noms = []; Si volem assignar valors al array en el moment de crear-ho: $noms = array ( 'Sandra' , 'Pedro' , 'Andrea' ); $noms = [ 'Sandra' , 'Pedro' , 'Andrea' ]; Mostrar el contingut d'un array Si intentem mostrar el contingut d'un array amb echo no obtindrem les dades que hi ha dins del array. En lloc d'a\u00e7\u00f2 podem utilitzar la funci\u00f3 print_r: print_r ( $noms ); Per\u00f2 si necessitem donar-li format als continguts del array, haurem de rec\u00f3rrer-ho amb un bucle i anar mostrant element a element. Afegint elements al array Podem afegir elements al array utilitzant claud\u00e0tors buits. La clau d'aquests elements ser\u00e0 el seg\u00fcent \u00edndex num\u00e8ric disponible. $noms [] = 'Raul' ; $noms [] = 'Marta' ; Accedir als elements del array Accedirem als elements del array indicant la clau de l'element entre claud\u00e0tors: echo $noms [ 2 ]; Tamb\u00e9 podem modificar el seu valor: $noms [ 0 ] = 'Sara' ; Rec\u00f3rrer arrays Arrays associatius Si el array cont\u00e9 dades diverses i/o ens interessa accedir a ells amb claus m\u00e9s espec\u00edfiques que un simple \u00edndex num\u00e8ric podem utilitzar arrays associatius: $alumne = array ( 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ); $alumne = [ 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ]; $alumne [ 'nom' ] = 'Ver\u00f3nica' ; echo $alumne [ 'nom' ]; Rec\u00f3rrer arrays associatius Rec\u00f3rrer claus i valors Arrays multidimensionals Imagina que volem tenir un array els elements del qual s\u00f3n noms d'esports. Volem dividir-los en esports d'hivern i esports d'estiu. Podem crear un array esports que continga dos elements que al seu torn tamb\u00e9 seran arrays. $esports = [ 'hivern' => [ 'esqu\u00ed de fons' , 'hoquei sobre gel' ], 'estiu' => [ 'nataci\u00f3' , 'voley platja' ] ]; Per a accedir al primer esport d'hivern: echo $esports [ 'hivern' ][ 0 ]; Funcions d'arrays Podem obtenir la mida de l'array mitjan\u00e7ant la funci\u00f3 count(array) . Per rec\u00f3rrer l'array farem \u00fas d'un bucle for : $tam = count($fruites); // mida de l'array for ($i=0; $i < count ($ fruites ); $ i ++) { echo \" Element $ i: $ fruites [$ i ] < br /> \"; } Les operacions m\u00e9s importants que podem realitzar amb arrays s\u00f3n: print_r($ array) : mostra el contingut de tot el $array $elem = array_pop($array) : elimina l'\u00faltim $element array_push ($ array, $ elem) : afegeix un $element al final. $bool = in_array($elem, $array) : esbrina si $elem est\u00e0 en el $array PHP $fruits = [ \"orange\" , \"pear\" , \"apple\" ]; array_push ( $fruites , \"pinapple\" ); print_r ( $fruits ); $lastFruit = array_pop ( $fruits ); if ( in_array ( \"pineapple\" , $fruits )) { echo \"<p> Pineapple left </ p>\" ; } else { echo \"<p> No pineapple left </ p>\" ; } print_r ( $fruites ); ?> Consola Array ( [0] => orange [1] => pear [2] => apple [3] => pinapple ) <p>No pineapple left</ p> Array ( [0] => orange [1] => pear [2] => apple ) $claus = array_keys($array) : torna les claus de l' $ array associatiu. $tam = count ($array) : retorna la mida de $ array . sort($array) : ordena els elements de l' $ array . isset($array[element]) : indica si existeix / t\u00e9 valor element dins del array. unset($array[element]) : elimina l'element de l'array (deixa un buit). PHP $capitals = array ( \"Italy\" => \"Rome\" , \"France\" => \"Paris\" , \"Portugal\" => \"Lisbon\" ); $countries = array_keys ( $capitals ); print_r ( $countries ); sort ( $countries ); print_r ( $countries ); unset ( $capitals [ \"France\" ]); print_r ( $capitals ); Consola Array ( [0] => Italy [1] => France [2] => Portugal ) Array ( [0] => France [1] => Italy [2] => Portugal ) Array ( [Italy] => Rome [Portugal] => Lisbon ) Existeixen molt\u00edssimes m\u00e9s funcions per treballar amb arrays. Tota la informaci\u00f3 en el documentaci\u00f3 oficial . Articles per aprofundir en les operacions amb arrays Un article molt complet (en angl\u00e8s) de Com treballar amb arrays en PHP de la manera correcta . Un altre article recomanable (en angl\u00e8s) \u00e9s Com ordenar arrays en PHP . Altres recursos: https://www.studytonight.com/php/indexed-array https://aprende-web.net/php/php6_1.php Funcions Funcions predefinides Algunes de les funcions predefinides en PHP s\u00f3n les seg\u00fcents, per\u00f2 hi ha molt\u00edssimes m\u00e9s vinculades als diferents m\u00f2duls que podem instal\u00b7lar. is_null($var) determina si una variable \u00e9s nula o no. isset($var) determina si una variable estan definida i no \u00e9s NULL. unset($var) destrueix les variables especificades. empty($var) torna true si no existeix o \u00e9s FALSE is_int($var) , is_float() , is_bool() , is_array() var_dump($var) , mostra informaci\u00f3 de la variable. Funcions definides per l'usuari Per a crear les teues pr\u00f2pies funcions, haur\u00e0s d'usar la paraula function : function suma ( $a , $b ) { return $a + $b ; } Per tal d'invocar la funci\u00f3: $resultat = suma ( 5 , 7 ); Si una funci\u00f3 no t\u00e9 una sent\u00e8ncia return , retorna null en finalitzar. Command-query separation S\u00ed b\u00e9 \u00e9s un principi de la programaci\u00f3 orientada a objectes \u00e9s \u00fatil usar-lo tamb\u00e9 quan definim funcions. El principi afirma que cada m\u00e8tode ha de ser un comandament que realitza una acci\u00f3 o una consulta que retorna dades al que la crida, pero no ambdues coses. Valors per defecte en els par\u00e0metres Podem indicar valors per defecte per als par\u00e0metres. Si quan cridem a la funci\u00f3 no indiquem el valor d'un par\u00e0metre es prendr\u00e0 el valor per defecte indicat. function preuAmbIva ( $preu , $iva = 0.21 ){ return $preu * ( 1 + $iva ); } $preu = 10 ; $pIva = preuAmbIva ( $preu ); Pot haver-hi m\u00e9s d'un par\u00e0metre amb valor per defecte, per\u00f2 sempre han d'estar al final. Pas de par\u00e0metres per refer\u00e8ncia Per defecte els par\u00e0metres es passen per valor. Per a passar un par\u00e0metre per refer\u00e8ncia afegirem el s\u00edmbol & davant del seu nom. function preuAmbIva ( & $preu , $iva = 0.18 ){ $preu *= ( 1 + $iva ); } Declaracions de tipus (Type Hinting) Les funcions obliguen a que els par\u00e0metres siguen de cert tipus. Si el valor donat \u00e9s d'un tipus incorrecte, es generar\u00e0 un error. Per aix\u00f2 s'ha d'anteposar-se el nom del tipus al nom del par\u00e0metre. Es pot fer que una declaraci\u00f3 accepte valors NULL si el valor predeterminat del par\u00e0metre s'estableix a NULL. Tipus v\u00e0lids Type Description Version Class/interface name The value must be an instanceof the given class or interface. self The value must be an instanceof the same class as the one in which the type declaration is used. Can only be used in classes. parent The value must be an instanceof the parent of the class in which the type declaration is used. Can only be used in classes. array The value must be an array. callable The value must be a valid callable. Cannot be used as a class property type declaration. bool The value must be a boolean value. float The value must be a floating point number. int The value must be an integer. string The value must be a string. iterable The value must be either an array or an instanceof Traversable. PHP 7.1.0 object The value must be an object. PHP 7.2.0 mixed The value can be any value. PHP 8.0.0 Exemple function suma ( int a , int b ) : int { return $a + $b ; } $resultado = suma ( 3 , 5 ); Funcions com a par\u00e0metres En PHP \u00e9s possible passar funcions com a par\u00e0metres a altres funcions. Nom\u00e9s cal passar el nom de la funci\u00f3 entre cometes. Exemple: function calculator ( $operation , $numA , $numB ){ return $operation ( $numA , $numB ); } function sumar ( $a , $b ) { return $a + $b ; } function restar ( $a , $b ) { return $a - $b ; } $a = 4 ; $b = 6 ; echo calculator ( 'sumar' , $a , $b ); echo calculator ( 'restar' , $a , $b ); Funcions an\u00f2nimes ( closures ) Estan implementades usant la classe Closure Permeten la creaci\u00f3 de funcions que no tenen un nom espec\u00edfic Podem assignar la funci\u00f3 a una variable o passar-la com a par\u00e0metre a una altra funci\u00f3. Exemple Sense par\u00e0metres: $anonima = function () { echo \"Hola\" ; }; $anonima (); Amb par\u00e0metres: $anonima = function ( $nom ) { echo \"Hola { $nom } \" ; }; $anonima ( 'Vicent' ); Usar variables de l'\u00e0mbit superior Una funci\u00f3 an\u00f2nima pot usar variables de l'\u00e0mbit superior mitjan\u00e7ant la paraula reservada use : function saluda ( callable $fnSaluda ) { $fnSaluda ( 'Vicent' ); } $salutacio = 'Hola' ; $anonima = function ( $nom ) use ( $salutacio ) { echo \" { $salutacio } { $nom } \" ; }; saluda ( $anonima ); Llibreries Podem fer llibreries de funcions guardant-les en un fitxer que despr\u00e8s importem des d'on les utilitzem. Ho podem fer amb include, o utilitzant composer per a fer-ho. Noves caracter\u00edsques PHP 7 Spaceship operator (<==>) Compara dues expressions $a i $b i torna -1 si $a \u00e9s menor que $b, 0 si s\u00f3n iguals i 1 si $b \u00e9s major que $a. Exemple: // Integers echo 1 <=> 1 ; // 0 echo 1 <=> 2 ; // -1 echo 2 <=> 1 ; // 1 Operador de fusi\u00f3 de null ?? Torna el primer operand si existeix i no \u00e9s NULL o el segon operand. Exemple: // Fetches the value of $_GET['user'] and returns 'nobody' // if it does not exist. $username = $_GET [ 'user' ] ?? 'nobody' ; // This is equivalent to: $username = isset ( $_GET [ 'user' ]) ? $_GET [ 'user' ] : 'nobody' ; M\u00e9s recursos: Noves caracter\u00edstiques PHP 7.0 Noves caracter\u00edstiques PHP 7.1 Noves caracter\u00edstiques PHP 7.2 Noves caracter\u00edstiques PHP 7.3 Noves caracter\u00edstiques PHP 7.4 Noves caracter\u00edstiques PHP 8.0 Processament de formularis Qu\u00e8 \u00e9s una petici\u00f3 HTTP? Una petici\u00f3 HTTP \u00e9s una sol\u00b7licitud d'un recurs a un servidor. La petici\u00f3 es realitza a trav\u00e9s d'una URL. Amb la petici\u00f3 s'envien tamb\u00e9 par\u00e0metres. Hi ha diferents m\u00e8todes (METHOD) per a realitzar una petici\u00f3 (GET, POST, PUT, DELETE, PATCH, etc.). Els m\u00e9s habituals s\u00f3n GET i POST. La resta s\u00f3n m\u00e9s utilitzats en les RESTful API. M\u00e8todes GET i POST M\u00e8tode GET S'utilitza per a sol\u00b7licitar dades d'un recurs. Mostren els par\u00e0metres que s'envien en la url. Es poden utilitzar directament en enlla\u00e7os. El resultat es pot emmagatzemar en cache. Romanen en l'historial del navegador. La grand\u00e0ria dels par\u00e0metres est\u00e0 limitat a 255 car\u00e0cters. Exemple de petici\u00f3 GET Inspecci\u00f3 de la petici\u00f3 Inspecci\u00f3 de la petici\u00f3 Accedir a les dades de la petici\u00f3 GET Per a accedir a les dades usem la variable superglobal $_GET . $_GET \u00e9s un array associatiu les claus del qual coincidiran amb els noms que li hem donat als par\u00e0metres. Per a accedir als par\u00e0metres de la petici\u00f3 anterior: echo $_GET [ 'nom' ] . ' ' . $_GET [ 'cognom' ]; // Homer Simpson M\u00e8tode POST El m\u00e8tode POST t\u00e9 les seg\u00fcents caracter\u00edstiques: S'utilitza per a enviar dades a un recurs. Els par\u00e0metres van en el cos de la petici\u00f3, no s\u00f3n visibles per a l'usuari. La petici\u00f3 no es guarda en cache. No es pot utilitzar en un enlla\u00e7. No roman en l'historial. No tenim la limitaci\u00f3 de grand\u00e0ria dels par\u00e0metres. Es solen utilitzar en els formularis. Evitar el CSRF En tota p\u00e0gina que reba par\u00e0metres GET has de comprovar el HTTP referer del navegador, i que aquest siga de dins de la teua web. En php el referer que envia el navegador s'emmagatzema en $_SERVER['HTTP_REFERER'] . Seria tal com: if ( parse_url ( $_SERVER [ 'HTTP_REFERER' ], PHP_URL_HOST ) != $_SERVER [ 'HTTP_HOST' ]) die ( 'Anti-CSRF' ); Important Amb aquest codi estem obligant al fet que el navegador envie un referer si o s\u00ed. Per tant nom\u00e9s ha d'utilitzar-se en p\u00e0gines a les quals el navegador accedisca des d'una altra p\u00e0gina de la nostra web. \u00d2bviament no podem col\u00b7locar-ho en la primera p\u00e0gina a la qual s'accedeix a la nostra web ( index.php o similar), ja que si l'usuari a escrit l'adre\u00e7a a m\u00e0 en la barra del navegador no s'enviar\u00e0 referer cap i saltar\u00e0 el sistema. Definici\u00f3 de formularis Com hem dit abans el m\u00e8tode POST s'empra en els formularis. El formulari seg\u00fcent enviar\u00e0 les dades a la p\u00e0gina index.php (atribut action de l'element form ). Utilitza el m\u00e8tode post indicat en l'atribut method : < form action = \"index.php\" method = \"post\" > < label for = \"nom\" > Nom </ label > < input type = \"text\" name = \"nom\" value = \"\" > < br /> < label for = \"cognom\" > Cognom </ label > < input type = \"text\" name = \"cognom\" value = \"\" > < br /> < input type = \"submit\" value = \"Enviar\" > </ form > Inspecci\u00f3 de la petici\u00f3: Headers Inspecci\u00f3 de la petici\u00f3: Param\u00e8tres Accedir a les dades de la petici\u00f3 POST Usem la variable superglobal $_POST . Funciona igual que $_GET , per\u00f2 amb els noms (atribut name ) que li hem donat als camps del formulari. En depuraci\u00f3 podem mostar totes les dades rebudes: var_dump ( $_POST ); print_r ( $_POST ) Per a mostrar les dades individualment: echo $_POST [ 'nom' ]; echo $_POST [ 'cognom' ]; Accedir a par\u00e0metres no existents Errors del tipus Notice: Undefined index: nom in /home/ubuntu/index.php on line 6 ens indiquen que la clau nom no existeix en l'array $_POST . La variable supergloblal $_POST est\u00e0 buida si no s'ha enviat el formulari. Per a evitar aquest tipus d'errors \u00e9s important verificar que s'haja enviat el formulari pr\u00e8viament: if ( $_SERVER [ 'REQUEST_METHOD' ] === 'POST' ) { } Validaci\u00f3 de formularis Hem de comprovar que les dades que envia el formulari s\u00f3n correctes. Les validacions a realitzar s\u00f3n les seg\u00fcents: Els camps requerits no han de quedar buits. Ni contenir espais en blanc a l'inici i al final. Els camps email i data han de tenir el format esperat. Tots els camps s'han de filtrar amb htmlspecialchars per a evitar atacs de Cross-site Scripting (XSS). Valors buits Els camps requerits no deurien quedar-se buits. Per a verificar que un valor no queda buit podem utilitzar la funci\u00f3 empty() de PHP. Espais en blanc Hem d'eliminar els espais en blanc del principi i final dels camps. S'utilitza la funci\u00f3 trim Escapar l'entrada Sempre hem de filtrar l'entrada amb htmlspecialchars abans de mostrar el camp amb echo o similar. Ac\u00f2 convertir\u00e0 qualsevol car\u00e0cter especial d'html en la entitat, aix\u00ed no interferir\u00e0 en el el programa. Comprovar l'email Per a verificar si un email \u00e9s correcte podem utilitzar la funci\u00f3 filter_var filter_var ( $email , FILTER_VALIDATE_EMAIL ) o la funci\u00f3 filter_input quan obtenin les dades directament d'una variable extern. // suposem que rebem les dades d'un formulari que t\u00e9 un quadre de text de nom 'email' $email = filter_input ( INPUT_POST , 'email' , FILTER_VALIDATE_EMAIL ) filter_input filter_input ( int $type , string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options ]]) : mixed La funci\u00f3 filter_input agafa una variable externa ( $_GET , $_POST , etc) concreta pel seu nom i aplica el filtre indicat. Els filtres poden sanejar o validar les variables externes. Per exemple, si volem agafar el valor del par\u00e0metre nom del querystring (http://localhost/index.php?nom= Homer ) usarem el tipus INPUT_GET. El fltre FILTER_SANITIZE_STRING elimina etiquetes, i opcionalment elimina o codifica caracters especials. $nom = filter_input ( INPUT_GET , 'nom' , FILTER_SANITIZE_STRING ) . // $nom = Homer M\u00e9s informaci\u00f3 en: filter_var filter_input Comprovar la data Per a comprovar la data hem de crear una funci\u00f3 a aquest efecte. Podem utilitzar el m\u00e8tode est\u00e0tic createFromFormat de la classe DateTime M\u00e9s informaci\u00f3: http://php.net/manual/es/datetime.createfromformat.php Exemple $data1 = \"2001-05-02\" ; // Data \u00e9s de tipus string // DateTime::createFromFormat converteix una cadena de text a on objecte DateTime // ens tornar\u00e0 una inst\u00e0ncia de DateTime o FALSE en cas d'error. $dt1 = DateTime :: createFromFormat ( 'Y-m-d' , $data1 ); if ( $dt1 === false ) { echo \"La data d'inici \u00e9s incorrecta\" ; } https://www.php.net/manual/es/function.strtotime.php Tamb\u00e9 \u00e9s habitual trobar els controls de data separats en 3 elements input. Un per a l\u2019any, l\u2019altre per a mes i l\u2019altre per al dia. Bones pr\u00e0ctiques en l\u2019obtenci\u00f3 de dades des de l\u2019exterior Cal seguir les seg\u00fcents bones pr\u00e0ctiques: No confieu mai (mai) en l\u2019entrada des de l\u2019exterior del vostre PHP. Sanegeu i valideu l\u2019entrada de dades sempre. Les funcions filter_var() i filter_input() poden sanejar el text i validar els formats de text (per exemple, adreces de correu electr\u00f2nic, enters). Recordeu que l\u2019entrada de dades no es limita a formularis enviats per l\u2019usuari. Els fitxers carregats i descarregats, els valors de sessi\u00f3, les dades de galetes i les dades de serveis web de tercers tamb\u00e9 s\u00f3n d\u2019entrada estrangera. A mode de resum pod\u00edem resumir la gesti\u00f3 de formularis en el seg\u00fcent diagrama de flux. Formularis en HTML5 En els seg\u00fcents recursos trobar\u00e0s informaci\u00f3 addicional sobre els controls de formularis en HTML5: * Formularios en HTML en MDN web docs. * Formularios en HTML5 en MDN web docs. * HTML Forms en W3CSchools. Pujada de fitxers Per a pujar fitxers PHP implementa un mecanisme senzill a trav\u00e9s de la variable superglobal $_FILES . En Pujada d'arxius disposeu de tota la informaci\u00f3 necess\u00e0ria per a gestionar la pujada d'arxius. Formulari Per poder utilitzar el tipus file en l'element input cal que el formulari incloga l'atribut enctype amb el valor multipart/form-data . El valor de l'atribut name de l'element input ser\u00e0 l'\u00edndex de l'array associatiu $_FILES que ens permetr\u00e0 obtenir tota la informaci\u00f3 del proc\u00e9s de pujada del fitxer. En el seg\u00fcent exemple: < form action = \"upload.php\" enctype = \"multipart/form-data\" method = \"POST\" > < input type = \"hidden\" name = \"MAX_FILE_SIZE\" value = \"10240\" > < input type = \"file\" name = \"image\" /> < input type = \"submit\" value = \"Upload\" /> </ form > Emprarem $_FILES['image'] per obtenir les dades de l'arxiu penjat. Variable superglobal $_FILES Cada element en $_FILES \u00e9s un array que aporta informaci\u00f3 sobre el fitxer pujat. Les claus m\u00e9s importants s\u00f3n: * name . El nom original del fitxer pujat. No \u00e9s massa \u00fatil perqu\u00e8 el sistema original pot tindre convencions diferents i pot generar col\u00b7lisions si l'utilitzem per a emmagatzemar-lo en la seua ubicaci\u00f3 definitiva. * type . El tipus MIME del fitxer dedu\u00eft pel navegador. * size . La grand\u00e0ria en bytes del fitxer. Si el fitxer \u00e9s massa gran el valor enviat ser\u00e0 0. * tmp_name . El nom temporal del fitxer en el servidor on s'ha emmagatzemat el fitxer pujat. Moure el fitxer Com que el fitxer pujat es guarda en una carpeta temporal hem d'emprar la funci\u00f3 move_uploaded_file per a guardar-lo en la ubicaci\u00f3 definitiva. La funci\u00f3 is_uploaded_file ens permet a assegurar-nos que el fitxer ha estat pujat usant HTTP POST i no es tracta d'un fitxer malici\u00f3s. move_uploaded_file ja fa eixa comprovaci\u00f3 en executar-se. Gesti\u00f3 d'errors PHP torna un codi d'error en $_FILES . El codi es pot trabar en la clau error . Per exemple: $_FILES['image']['error'] . Els missates d'error m\u00e9s importants s\u00f3n: UPLOAD_ERR_OK : La pujada ha sigut correcta. UPLOAD_ERR_INI_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en la directiva upload_max_filesize . UPLOAD_ERR_FORM_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en el formulari en max_file_size . UPLOAD_ERR_NO_FILE : No s'ha enviat cap fitxer. En Explicaci\u00f3 dels missatges d'error teniu m\u00e9s informaci\u00f3. Sent\u00e8ncies per a incloure Fitxers Les sent\u00e8ncies include() i include_once() i require() i require_once() inclouen i avaluen l'arxiu especificat. include_once() i require_once() verifica que l'arxiu no haja sigut incl\u00f2s abans i \u00e9s preferible a include. Cal ser cur\u00f2s amb el path de l'arxiu a incloure. La difer\u00e8ncia entre require i include \u00e9s el tractament de l'error quan el fitxer no existeix. fruits.php <? php $color = 'green' ; $fruta = 'apple' ; include ( 'fruit.view.php' ) fruits.view.php < html > < head > < title > Fruites </ title > </ head > < body > < h3 > <? = \"Una $fruta $color \" ?> </ h3 > </ body > </ html > Activitats Cadenes 221Cadenes.php : Copia el contingut de la p\u00e0gina index.php , activa la directiva de tipus estricta ( declare( strict_types = 1 ); ) i mostra el seg\u00fcent: Elimina els espais del principi i el final del nom si els hi haguera ( trim ). Elimina la lletra a del principi i el final del nom si els hi haguera ( trim ). Mostra la variable nom en maj\u00fascules, min\u00fascules i amb la primera lletra en maj\u00fascula i les altres en min\u00fascules ( strtoupper , strtolower , ucfirst ). Mostra el codi ascii de la primera lletra del nom ( ord ). Mostra la longitud del nom ( strlen ). Mostra el nombre de vegades que apareix la lletra a (maj\u00fascula o min\u00fascula, substr_count ). Mostra la posici\u00f3 de la primera a existent en el nom, siga maj\u00fascula o min\u00fascula ( strpos ). Si no hi ha cap mostrar\u00e0 -1. El mateix, per\u00f2 amb l''\u00faltima a. Mostra el nom substituint la lletr o pel n\u00famero zero, siga maj\u00fascula o min\u00fascula ( str_replace ). Indica si el nom comen\u00e7a per al o no. 222Cadenes.php : En el mateix document cadenes.php i a partir d'una variable que continga una url: $url = 'http://username:password@hostname:9090/path?arg=value#anchor' ; Utilitza la funci\u00f3 parse_url per a extraure de la url les seg\u00fcents parts: 1. El protocol utilitzat (en l'exemple \"http\"). 2. El nom d'usuari (en l'exemple \"username\"). 3. El path de la url (en l'exemple \"/path\"). 4. El querystring de la url (en l'exemple \"arg=value\"). Arrays indexats 231Arrays.php : Crea una p\u00e0gina, copia el contingut de la p\u00e0gina index.php i resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array amb els noms de diversos alumnes de la classe incloent el teu. Mostra el nombre d'elements que t\u00e9 l'array ( count ). Crea una cadena de text que continga els noms dels alumnes existents en l'array separats per un espai i mostra-la ( implode ). Mostra l'array en un ordre aleatori diferent al que ho vas crear ( shuffle ). Mostra l'array ordenat alfab\u00e8ticament ( sort ). Mostra els alumnes el nom dels quals continga almenys una \u201ca\u201d ( array_filter ). Mostra l'array en l'ordre invers al que es va crear ( rsort ). Mostra la posici\u00f3 que t\u00e9 el teu nom en l'array ( array_search ). 232Ciutats.php : Segons l'INE les 7 ciutats m\u00e9s grans d\u2019Espanya (per habitants) el 2018 van ser les seg\u00fcents: Madrid, MAD, 3.223.334 Sevilla, AN , 688.711 Murcia, MU, 447.182 M\u00e1laga, AN, 571.026 Zaragoza, AR, 666.880 Val\u00e8ncia, CV, 791.413 Barcelona, CAT, 1.620.343 Copia index.php i crea un nou document cituats.php . Defineix un array que continga aquesta informaci\u00f3 sobre ciutats i habitants. Imprimeix una taula d'ubicacions i habitants que incloga la poblaci\u00f3 total de les 7 ciutats. Opcional: Modifica la soluci\u00f3 de l\u2019anterior exercici perqu\u00e8 mostre les ciutats ordenades per habitants. Despr\u00e9s mostra-les per ordre alfab\u00e8tic. Arrays multidimensionals 233Alumnes.php : Resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array d'alumnes on cada element siga un altre array que continga nom i edat de l'alumne. Crea una taula HTML en la qual es mostren totes les dades dels alumnes. Utilitza la funci\u00f3 array_column per a obtenir un array indexat que continga \u00fanicament els noms dels alumnes i mostra\u2019ls per pantalla. Crea un array amb 10 n\u00fameros i utilitza la funci\u00f3 array_sum per a obtenir la suma dels 10 nombres. Sense usar bucles for calcula la mitjana d'edat de l'alumnat. 234CiutatsOpcional.php : Modifica la soluci\u00f3 del exercici ciutats.php perqu\u00e8 la taula continga tamb\u00e9 la columna del total d\u2019habitants de la comunitat aut\u00f2noma de les ciutats de la llista i el percentatge sobre els habitants de la comunitat aut\u00f2noma que representa. Per exemple: Ciutat Habitants Habitats CA % sobre CA Val\u00e8ncia 791.413 5.003.769 15.81% Pista: Caldr\u00e0 modificar l'array $ciutats i convertir-lo en multidimensional. Les dades de comunitats aut\u00f2nomes hauran d'estar en un altre array. Dades: Municipis de Espa\u00f1a Funcions 241funcions.php : Escriu una funci\u00f3 per retornar una etiqueta HTML <img /> . La funci\u00f3 hauria d\u2019acceptar com a argument obligatori l\u2019URL de la imatge i arguments opcionals per a un text alternatiu, al\u00e7ada i amplada. 242funcions.php : Copieu la funci\u00f3 de l\u2019exercici anterior i modifiqueu-la de manera que nom\u00e9s es passe el nom de fitxer a la funci\u00f3 en lloc de l\u2019URL completa. Dins de la funci\u00f3, farem \u00fas d\u2019una variable global per fer l\u2019URL completa. Per exemple, si passem photo.png a la funci\u00f3, i la variable global cont\u00e9 /images , llavors l\u2019atribut src de l'etiqueta retornada ser\u00e0 /images/photo.png . Una funci\u00f3 com aquesta \u00e9s una forma senzilla de mantenir correctes les vostres etiquetes d\u2019imatges, fins i tot si les imatges es mouen a un nou cam\u00ed o servidor. Nom\u00e9s cal canviar la variable global, per exemple, de /images a http://images.example.com/. 243funciocolors.php : Els colors web com #ffffff i #cc3399 es realitzen concatenant els valors hexadecimals de color per a vermell, verd i blau. Escriu una funci\u00f3 que accepte 3 arguments: roig, verd i blau, i que retorne un string que cont\u00e9 el color adequat per utilitzar-lo en una p\u00e0gina web. Per exemple, si els arguments s\u00f3n 255, 0, i 255, llavors la cadena retornada hauria de ser #FF00FF. Pot resultar \u00fatil utilitzeu la funci\u00f3 dechex() integrada, que es troba documentada a http://www.php.net/ Assegureu-vos que els par\u00e0metres reben valors enters i que s\u00f3n colors v\u00e0lids. Implementa 3 exemples d\u2019\u00fas. 244funcionsSQL.php : Crea una funci\u00f3 anomenada insert que ens genere una sent\u00e8ncia INSERT INTO en SQL. Per a a\u00e7\u00f2 la funci\u00f3 rebr\u00e0 dos par\u00e0metres: 1. El nom de la taula 2. Un array associatiu que contindr\u00e0 els noms i valors dels camps de la taula. La sent\u00e8ncia resultant tindr\u00e0 la seg\u00fcent forma: \u201cINSERT INTO nom_taula (nom dels camps separats per comes) VALUES (noms dels camps separats per comes amb el car\u00e0cter \u201c:\u201d davant) De moment, no farem res amb els valors dels camps. Ajuda: utilitza les funcions sprintf , implode i array_keys 245funcionsSQL2.php : A partir de l'exercici anterior crea una altra funci\u00f3 que reba els mateixos par\u00e0metres m\u00e9s un par\u00e0metre boole\u00e0 per a indicar si volem generar la query amb els noms dels camps o no. El par\u00e0metre tindr\u00e0 el valor true per defecte. Si el seu valor \u00e9s true generar\u00e0 la consulta igual que en l'exercici anterior, per\u00f2 si \u00e9s false la generar\u00e0 aix\u00ed: INSERT INTO nom_taula VALUES ( valors dels camps separats per comes amb el car\u00e0cter \u2018 : \u2019 davant ) 246funcionsSQLReferencia.php : Repeteix l'exercici anterior amb els seg\u00fcents canvis: La cadena resultant es passar\u00e0 per refer\u00e8ncia. Passarem la cadena de la seg\u00fcent forma: INSERT INTO taula ( camps ) VALUES ( valors ) Dins de la funci\u00f3 substituirem el seg\u00fcent: El text taula pel nom de la taula. El text camps pels noms dels camps separats per comes El text valors pels noms dels camps separats per comes i el car\u00e0cter \u2018:\u2019 davant. Formularis 261ExempleGet.php : Crea una p\u00e0gina que reba com a par\u00e0metre un nom i mostre el text \u2018Benvingut [nom]!!!\u2019 sent [nom] el nom has passat com a par\u00e0metre. 262Formulari.php : Crea un formulari que tinga els seg\u00fcents camps: firstname lastname phone email Tots els camps s\u00f3n obligatoris excepte zipcode . En l'atribut action del formulari posarem el seg\u00fcent: < form action = \"262Formulari.php\" ... /> A\u00e7\u00f2 far\u00e0 que siga la pr\u00f2pia p\u00e0gina del formulari la que processe les dades del mateix. En pr\u00e9mer Enviar han d'apar\u00e8ixer sota el formulari les dades que s'han introdu\u00eft en el mateix en format de taula. 263FormulariReparat.php : Soluciona el problema dels par\u00e0metres no enviats de l'exercici anterior. 264FormulariValidat.php : Modifica l'exercici anterior realitzant les seg\u00fcents validacions: Tots els camps s\u00f3n obligatoris. firstname , no pot superar els 25 caracters. lastname , no pot superar els 50 caracters. phone , ha de contenir 9 digits (expressi\u00f3 regular: ^\\d{9}$ ). email , ha de ser una adre\u00e7a electr\u00f2nica correcta. S'avaluaran tots els camps i si hi ha error/s caldr\u00e0 mostrar-lo/s. Si no hi ha errors es mostraran les dades introdu\u00efdes per l'usuari. Pujada de fitxers 271FormularImatge.php : Modifica l'activitat 264FormulariValidat.php afegint un camp de tipus FILE per a pujar una imatge al servidor. Es guardar\u00e0 en la carpeta uploads i es mostrar\u00e0 amb la resta de dades. Inclusi\u00f3 de fitxers 281Formulari.php : Basant-te en l'activitat 271FormulariImatge.php modifica les validacions perqu\u00e8 es facen mitjan\u00e7ant funcions. Les funcions es guardaran en el fitxer helpers.php i s'hauran d'incloure en fitxer 281Formulari.php . Cr\u00e8dits Aitor Medrano. (setembre de 2021) Desarrollo Web en Entorno Servidor disponible en: https://aitor-medrano.github.io/dwes2122/index.html","title":"2.- El llenguatge PHP"},{"location":"02-phpbasics/#el-llenguatge-php","text":"Objectius Con\u00e8ixer la sintaxi b\u00e0sica de PHP i les noves caracter\u00edstiques de PHP 7. Entendre com s'integren PHP i HTML. Descriure els tipus de dades existents en PHP. Fer servir les estructures de control b\u00e0siques. Aprendre a utilitzar els arrays associatius. Con\u00e8ixer els mecanismes de pas de par\u00e0metres a un script. Processar i validar formularis Incloure fixters","title":"El llenguatge PHP"},{"location":"02-phpbasics/#introduccio","text":"Acr\u00f2nim de Personal Home Page Llenguatge de prop\u00f2sit general, encara que el seu fort \u00e9s el desenvolupament web. Sintaxi similar a C / Java El codi s'executa en el servidor (en Apache mitjan\u00e7ant mod_php ) El client rep el resultat generat despr\u00e9s d'interpretar el codi al servidor. El codi s'emmagatzema en arxiu amb extensi\u00f3 .php. L'\u00faltima versi\u00f3 \u00e9s la 8.0, de novembre de 2020 (i en breu tindrem la versi\u00f3 8.1). La versi\u00f3 7.0 va sortir al desembre de 2015. A m\u00e9s de nombroses noves funcionalitats que anirem veient durant el curs, t\u00e9 m\u00e9s de dues vegades millor rendiment que PHP5. PHP 7.4 Nosaltres farem \u00fas de la versi\u00f3 7.4 de PHP La seva documentaci\u00f3 \u00e9s extensa i est\u00e0 tradu\u00efda: https://www.php.net/manual/es/.","title":"Introducci\u00f3"},{"location":"02-phpbasics/#funcionament-i-estructura-basica","text":"","title":"Funcionament i estructura b\u00e0sica"},{"location":"02-phpbasics/#el-nostre-primer-codi-php","text":"El codi PHP sempre va entre els simbolos <?php i ?> . Les instruccions PHP acaben sempre amb ; . Per a generar codi HTML des de PHP podem utilitzar el m\u00e8tode echo passant-li el text del codi que volem generar. El codi pot anar entre les etiquetes d'HTML. < html > < head ></ head > < body > < h1 > <?php echo \"Hola m\u00f3n\" ?> </ h1 > < body > Tamb\u00e9 podem utilitzar l'etiqueta <?= fa el echo al mateix temps. < html > < head ></ head > < body > < h1 > <? = \"Hola m\u00f3n\" ?> </ h1 > < body >","title":"El nostre primer codi PHP"},{"location":"02-phpbasics/#comentaris","text":"De bloc entre /* i */ . De linea, comen\u00e7ant per // o per # .","title":"Comentaris"},{"location":"02-phpbasics/#codi-incrustat","text":"El documents que contenen codi PHP s'han d'anomenar amb l'extensi\u00f3 .php","title":"Codi incrustat"},{"location":"02-phpbasics/#variables-i-tipus-de-dades","text":"Una de les caracter\u00edstiques de php \u00e9s que \u00e9s un llenguatge no fortament tipat . De fet no cal declarar la variable ni indicar el tipus de dades si la declare. Encara que si volem codi de qualitat ho hauriem de fer.","title":"Variables i tipus de dades"},{"location":"02-phpbasics/#constants","text":"Per a definir constants s'utilitza define() , que reb el nom de la constant i el valor que li volem donar define ( \"LIMITE\" , 1000 ); \u00c9s habitual utilitzar identificadors en majuscules per a les constants.","title":"Constants"},{"location":"02-phpbasics/#operadors","text":"","title":"Operadors"},{"location":"02-phpbasics/#arimetics","text":"Exemple Nom Resultat +$a Identidat Conversi\u00f3 de $a a int o float segons el cas. -$a Negaci\u00f3 Oposat de $a . $a + $b Suma Suma de $a i $b . $a - $b Resta Difer\u00e8ncia de $a i $b . $a * $b Multiplicaci\u00f3 Producte de $a i $b . $a / $b Divisi\u00f3 Quocient de $a i $b . $a % $b M\u00f3dul / Residu Residu de $a dividit per $b . $a ** $b Pot\u00e8ncia Resultat de $a elevat a $b . PHP >= 5.6. En el caso de cadenas , si queremos concatenarlas, se utiliza el operador . : $x = 33 ; $y = 11 ; $z = $x + $y ; echo \"La suma de 33 y 11 es \" . 44. \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . ( 33 + 11 ) . \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . $z . \"<br />\" ; Realment en lloc de concatenar cadenas con variables, podem imprimir-les directament ja que s'expandeixen autom\u00e0ticament: echo \"La suma de $x y $y es $z <br />\" ; En ocasions, necesitem envoltar el nom de la variable entre claus per poder un m\u00e9s text al resultat: $color = \"rojo\" ; echo \"El plural de $color el ${ color } s\" ; ?> M\u00e9s endavant estudiarem algunes funcions per al tractament de cadenes.","title":"Arim\u00e8tics"},{"location":"02-phpbasics/#comparacio","text":"Exemple Nom Resultat $a == $b Igual true si $a \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a === $b Id\u00e8ntic, Comparaci\u00f3 estricta true si $a \u00e9s igual a $b , i s\u00f3n del mateix tipus de dada. $a != $b , $a <> $b Diferent true si $a no \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a !== $b No id\u00e8ntic true si $a no \u00e9s igual a $b , o si no s\u00f3n del mateix tipus. $a < $b Menor que true si $a \u00e9s estrictament menor que $b . $a > $b Major que true si $a \u00e9s estrictament major que $b . $a <= $b Menor o igual que true si $a \u00e9s menor o igual que $b . $a >= $b Major o igual que true si $a \u00e9s major o igual que $b . $a <=> $b Nau espacial Torna -1 , 0 o 1 quan $a \u00e9s respectivamente menor, igual, o major que $b . PHP >= 7. $a ?? $b ?? $c Fusi\u00f3n de null El primer operano d'esquerra a dreta que existisca i no siga null . null si no hi ha valors definits i no s\u00f3n null . PHP >= 7.","title":"Comparaci\u00f3"},{"location":"02-phpbasics/#logics","text":"Exemple Nom Resultat $a and $b , $a && $b And (i) true si tant $a com $b s\u00f3n true . $a or $b , $a || $b Or (o inclusiu) true si qualsevol de $a o $b \u00e9s true . $a xor $b Xor (o exclusiu) true si $a o $b \u00e9s true , pero no ambd\u00f3s. !$a Not (no) true si $a no \u00e9s true .","title":"L\u00f2gics"},{"location":"02-phpbasics/#assignacio","text":"Exemple Nom Resultat $a = $b Assignaci\u00f3 Assigna a $a el valor de $b $a += $b Assignaci\u00f3 de la suma Le suma a $a el valor de $b . Equivalent a $a = $a + $b $a -= $b Assignaci\u00f3 de la resta Le resta a $a el valor de $b . Equivalent a $a = $a - $b $a *= $b Assignaci\u00f3 del producte Assigna a $a el producto de $a por $b . Equivalent a $a = $a * $b $a /= $b Assignaci\u00f3 de la divisi\u00f3 Assigna a $a el quocient de $a entre $b . Equivalent a $a = $a / $b $a %= $b Assignaci\u00f3 del residu Assigna a $a el residu de dividir $a entre $b . Equivalent a $a = $a % $b $a .= $b Concatenaci\u00f3 Concatena a $a la cadena $b . Equivalent a $a = $a . $b $a++ Increment Incrementa $a en una unitat. Equivalent a $a = $a + 1 $a-- Decrement Decrementa $a en una unitat. Equivalent a $a = $a - 1 Prioridad de los operadores Recorda la prioritat. Primer els par\u00e8ntesis, despr\u00e9s la negaci\u00f3 ( ! ), productes/divisions, sumes/restes, comparacions, l\u00f2gics i finalment es realitza l'assignaci\u00f3. M\u00e9s informaci\u00f3 a https://www.php.net/manual/es/language.operators.precedence.php Autoevaluaci\u00f3n Si $a=5 i $b=4 , esbrina el valor de $c si $c = $a*2 > $b+5 && !($b<>4)","title":"Assignaci\u00f3"},{"location":"02-phpbasics/#estructures-de-control-de-flux","text":"Les instruccions de control de flux en PHP funcionen exactament igual que en altres llenguatges de programaci\u00f3. Les m\u00e9s habituals s\u00f3n: Condicionals: if, if else, switch Bucles: while, do while, for seguint les estructures: if ( condici\u00f3 ) { // instruccions } else { // instruccions } switch ( $variable ) { case valor : //instruccio1 break ; case valor : //instruccio1 break ; default : //instruccio1 } while ( condici\u00f3 ) { //instruccions } do { //instruccions } while ( condici\u00f3 ); for ( $i = 1 ; $i < 10 ; $i ++ ){ //instruccions } http://php.net/manual/es/language.control-structures.php","title":"Estructures de control de flux"},{"location":"02-phpbasics/#maneig-de-cadenes-de-text","text":"Podem utilitzar tant cometes simples com a cometes dobles. Per a concatenar cadenes utilitzarem l'operador punt (.) $fullName = $name.' '.$surname; Funcions de cadena","title":"Maneig de cadenes de text"},{"location":"02-phpbasics/#maneig-de-dates","text":"","title":"Maneig de dates"},{"location":"02-phpbasics/#funcio-time","text":"En PHP les dates s'emmagatzemen com a n\u00fameros enters. La funci\u00f3 time() retorna el nombre de segons transcorreguts des de l'1 de gener de 1970 (instant conegut com a \u00e8poca Unix). A aquesta forma d'expressar data i hora se li denomina timestamp .","title":"Funci\u00f3 time()"},{"location":"02-phpbasics/#funcio-date","text":"date ( string $format [, int $timestamp = time ()]) : string La funci\u00f3 date retorna una cadena formatada segons els codi de format. Si no li passem la variable timestamp ens retorna la cadena formatada per a la data i l'hora actual. Els codis de format m\u00e9s habituals per a la funci\u00f3 date s\u00f3n: CODI DESCRIPCI\u00d3 a am o pm A AM o PM d Dia del mes amb zeros D Abreviatura del dia de la setmana (en angl\u00e8s) F Nom del mes (en angl\u00e8s) h Hora en format 1-12 H Hora en format 0-23 i Minuts j Dia del mes sense zeros l Dia de la setmana m N\u00famero de mes (1-12) M Abreviatura del mes (en angl\u00e8s) s Segons y Any amb 2 d\u00edgits Y Any amb 4 d\u00edgits z Dia de l'any (1-365) La informaci\u00f3 completa la pots trobar en el manual oficial de PHP: date Suposant que hui \u00e9s 15 de setembre de 2019 i les 19 hores 20 minuts i 23 segons et mostrem alguns exemples: date ( \"d-m-Y\" ); // 15-09-2019 date ( \"H:i:s\" ); // 19:20:23 date ( \"Y\" ); // 2019 date ( \"YmdHis\" ); // 20190915192023 date ( \"d/m/y H:i a\" ); // 15/09/19 19:20 pm date ( \"d-m-Y H:i\" , time ()); // Moment actual","title":"Funci\u00f3 date()"},{"location":"02-phpbasics/#funcio-mktimehora-min-seg-mes-dia-any","text":"La funci\u00f3 mktime permet obtenir la marca de temps Unix ( timestamp ) d'una data. Per exemple: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); echo date ( 'd-m-Y' , $data ); // mostrar\u00e0 01-01-2020 M\u00e9s informaci\u00f3 en https://www.php.net/manual/es/function.mktime.php Un altra forma de crear dates \u00e9s mitjan\u00e7ant la funci\u00f3 strtotime() on podem indicar les dates mitjan\u00e7ant una cadena de text. Per exemple: // posarem la data en el format any-mes-dia per a evitar confusions. $date = strtotime ( \"2020-01-01\" );","title":"Funci\u00f3 mktime(hora, min, seg, mes, dia, any)"},{"location":"02-phpbasics/#operar-amb-dates","text":"Com hem dit al principi les dates s'emmagatzem com a enters on cada unitat representa un segon. Aix\u00ed podem sumar i restar dates ( timestamp ) per a afegir, llevar o calcular difer\u00e8ncies entre ells. Per exemple, per poder determinar els dies que falten per a l'1 de gener de 2020 far\u00edem: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); // timestamp que representa l'1 de gener de 2020 $diferencia = $data - time (); // restem a l'1 de gener de 2020 el temps actual, // el resultat estar\u00e0 en segons. $diferenciaEnDies = ((( $diferencia / 60 ) / 60 ) / 24 ); /* dividim els segons entre 60 i obtenim els minuts, els dividim entre 60 i obtenim les hores, els dividim entre 24 i obtenim els dies */","title":"Operar amb dates"},{"location":"02-phpbasics/#validar-dates","text":"En la funci\u00f3 checkdate podem validar una data. checkdate ( int $month , int $day , int $year ) : bool La funci\u00f3 torna true si la data es v\u00e0lida, si no, torna false .","title":"Validar dates"},{"location":"02-phpbasics/#classe-datetime","text":"PHP disposa tamb\u00e9 de la classe DateTime per a representar les dates, la veurem m\u00e9s avant. Activitat 3: Treballar amb dates Crea un fitxer anomenat dates.php i realitza les seg\u00fcents tasques: Mostra la data i hora actuals amb el format: dd/mm/yyyy hh:mm:ss Mostra el nom de la zona hor\u00e0ria que s'utilitza per defecte. Mostra la data de que ser\u00e0 d\u2019ac\u00ed 45 dies. Mostra el nombre de dies que han passat des de l'1 de gener. Mostra la data i hora actuals de Nova York. Mostra el dia de la setmana que era l'1 de gener d'enguany. En acabar penja el document a Aules. Activitat 4 200dadesPersonals.php : Escriu un programa que emmagatzeme en variables teu nom, primer cognom, segon cognom, email, any de naixement i tel\u00e8fon. Despr\u00e9s mostra'ls per pantalla dins d'una taula. Nom Bruce Cognoms Wayne Email batman@dccomics.com Any de naixement 1939 Tel\u00e8fon 555666777 206anyos.php : Despr\u00e9s de llegir l'edat d'una persona, mostrar l'edat que tindr\u00e0 d'aqu\u00ed a 10 anys i fa 10 anys. A m\u00e9s, mostra quin any ser\u00e0 en cada un dels casos. Finalment, mostra l'any de jubilaci\u00f3 suposant que treballar\u00e0s fins als 65 anys. Tip: $anyoActual = date(\"Y\") ;","title":"Classe DateTime"},{"location":"02-phpbasics/#maneig-darrays","text":"Un array \u00e9s un tipus de dades que ens permet emmagatzemar diversos valors. Per tal d'accedir a un valor utilitzarem una clau . Les claus poden ser nombres o textos ( arrays associatius ). Si no indiquem cap clau, a cada element se li associar\u00e0 una clau num\u00e8rica correlativa.","title":"Maneig d'arrays"},{"location":"02-phpbasics/#array-indexat","text":"","title":"Array indexat"},{"location":"02-phpbasics/#arrays-associatius","text":"Si el array cont\u00e9 dades diverses i/o ens interessa accedir a ells amb claus m\u00e9s espec\u00edfiques que un simple \u00edndex num\u00e8ric podem utilitzar arrays associatius: $alumne = array ( 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ); $alumne = [ 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ]; $alumne [ 'nom' ] = 'Ver\u00f3nica' ; echo $alumne [ 'nom' ];","title":"Arrays associatius"},{"location":"02-phpbasics/#arrays-multidimensionals","text":"Imagina que volem tenir un array els elements del qual s\u00f3n noms d'esports. Volem dividir-los en esports d'hivern i esports d'estiu. Podem crear un array esports que continga dos elements que al seu torn tamb\u00e9 seran arrays. $esports = [ 'hivern' => [ 'esqu\u00ed de fons' , 'hoquei sobre gel' ], 'estiu' => [ 'nataci\u00f3' , 'voley platja' ] ]; Per a accedir al primer esport d'hivern: echo $esports [ 'hivern' ][ 0 ];","title":"Arrays multidimensionals"},{"location":"02-phpbasics/#funcions-darrays","text":"Podem obtenir la mida de l'array mitjan\u00e7ant la funci\u00f3 count(array) . Per rec\u00f3rrer l'array farem \u00fas d'un bucle for : $tam = count($fruites); // mida de l'array for ($i=0; $i < count ($ fruites ); $ i ++) { echo \" Element $ i: $ fruites [$ i ] < br /> \"; } Les operacions m\u00e9s importants que podem realitzar amb arrays s\u00f3n: print_r($ array) : mostra el contingut de tot el $array $elem = array_pop($array) : elimina l'\u00faltim $element array_push ($ array, $ elem) : afegeix un $element al final. $bool = in_array($elem, $array) : esbrina si $elem est\u00e0 en el $array PHP $fruits = [ \"orange\" , \"pear\" , \"apple\" ]; array_push ( $fruites , \"pinapple\" ); print_r ( $fruits ); $lastFruit = array_pop ( $fruits ); if ( in_array ( \"pineapple\" , $fruits )) { echo \"<p> Pineapple left </ p>\" ; } else { echo \"<p> No pineapple left </ p>\" ; } print_r ( $fruites ); ?> Consola Array ( [0] => orange [1] => pear [2] => apple [3] => pinapple ) <p>No pineapple left</ p> Array ( [0] => orange [1] => pear [2] => apple ) $claus = array_keys($array) : torna les claus de l' $ array associatiu. $tam = count ($array) : retorna la mida de $ array . sort($array) : ordena els elements de l' $ array . isset($array[element]) : indica si existeix / t\u00e9 valor element dins del array. unset($array[element]) : elimina l'element de l'array (deixa un buit). PHP $capitals = array ( \"Italy\" => \"Rome\" , \"France\" => \"Paris\" , \"Portugal\" => \"Lisbon\" ); $countries = array_keys ( $capitals ); print_r ( $countries ); sort ( $countries ); print_r ( $countries ); unset ( $capitals [ \"France\" ]); print_r ( $capitals ); Consola Array ( [0] => Italy [1] => France [2] => Portugal ) Array ( [0] => France [1] => Italy [2] => Portugal ) Array ( [Italy] => Rome [Portugal] => Lisbon ) Existeixen molt\u00edssimes m\u00e9s funcions per treballar amb arrays. Tota la informaci\u00f3 en el documentaci\u00f3 oficial . Articles per aprofundir en les operacions amb arrays Un article molt complet (en angl\u00e8s) de Com treballar amb arrays en PHP de la manera correcta . Un altre article recomanable (en angl\u00e8s) \u00e9s Com ordenar arrays en PHP . Altres recursos: https://www.studytonight.com/php/indexed-array https://aprende-web.net/php/php6_1.php","title":"Funcions d'arrays"},{"location":"02-phpbasics/#funcions","text":"","title":"Funcions"},{"location":"02-phpbasics/#funcions-predefinides","text":"Algunes de les funcions predefinides en PHP s\u00f3n les seg\u00fcents, per\u00f2 hi ha molt\u00edssimes m\u00e9s vinculades als diferents m\u00f2duls que podem instal\u00b7lar. is_null($var) determina si una variable \u00e9s nula o no. isset($var) determina si una variable estan definida i no \u00e9s NULL. unset($var) destrueix les variables especificades. empty($var) torna true si no existeix o \u00e9s FALSE is_int($var) , is_float() , is_bool() , is_array() var_dump($var) , mostra informaci\u00f3 de la variable.","title":"Funcions predefinides"},{"location":"02-phpbasics/#funcions-definides-per-lusuari","text":"Per a crear les teues pr\u00f2pies funcions, haur\u00e0s d'usar la paraula function : function suma ( $a , $b ) { return $a + $b ; } Per tal d'invocar la funci\u00f3: $resultat = suma ( 5 , 7 ); Si una funci\u00f3 no t\u00e9 una sent\u00e8ncia return , retorna null en finalitzar. Command-query separation S\u00ed b\u00e9 \u00e9s un principi de la programaci\u00f3 orientada a objectes \u00e9s \u00fatil usar-lo tamb\u00e9 quan definim funcions. El principi afirma que cada m\u00e8tode ha de ser un comandament que realitza una acci\u00f3 o una consulta que retorna dades al que la crida, pero no ambdues coses.","title":"Funcions definides per l'usuari"},{"location":"02-phpbasics/#valors-per-defecte-en-els-parametres","text":"Podem indicar valors per defecte per als par\u00e0metres. Si quan cridem a la funci\u00f3 no indiquem el valor d'un par\u00e0metre es prendr\u00e0 el valor per defecte indicat. function preuAmbIva ( $preu , $iva = 0.21 ){ return $preu * ( 1 + $iva ); } $preu = 10 ; $pIva = preuAmbIva ( $preu ); Pot haver-hi m\u00e9s d'un par\u00e0metre amb valor per defecte, per\u00f2 sempre han d'estar al final.","title":"Valors per defecte en els par\u00e0metres"},{"location":"02-phpbasics/#pas-de-parametres-per-referencia","text":"Per defecte els par\u00e0metres es passen per valor. Per a passar un par\u00e0metre per refer\u00e8ncia afegirem el s\u00edmbol & davant del seu nom. function preuAmbIva ( & $preu , $iva = 0.18 ){ $preu *= ( 1 + $iva ); }","title":"Pas de par\u00e0metres per refer\u00e8ncia"},{"location":"02-phpbasics/#noves-caracterisques-php-7","text":"","title":"Noves caracter\u00edsques PHP 7"},{"location":"02-phpbasics/#spaceship-operator","text":"Compara dues expressions $a i $b i torna -1 si $a \u00e9s menor que $b, 0 si s\u00f3n iguals i 1 si $b \u00e9s major que $a. Exemple: // Integers echo 1 <=> 1 ; // 0 echo 1 <=> 2 ; // -1 echo 2 <=> 1 ; // 1","title":"Spaceship operator  (&lt;==&gt;)"},{"location":"02-phpbasics/#operador-de-fusio-de-null","text":"Torna el primer operand si existeix i no \u00e9s NULL o el segon operand. Exemple: // Fetches the value of $_GET['user'] and returns 'nobody' // if it does not exist. $username = $_GET [ 'user' ] ?? 'nobody' ; // This is equivalent to: $username = isset ( $_GET [ 'user' ]) ? $_GET [ 'user' ] : 'nobody' ;","title":"Operador de fusi\u00f3 de null ??"},{"location":"02-phpbasics/#mes-recursos","text":"Noves caracter\u00edstiques PHP 7.0 Noves caracter\u00edstiques PHP 7.1 Noves caracter\u00edstiques PHP 7.2 Noves caracter\u00edstiques PHP 7.3 Noves caracter\u00edstiques PHP 7.4 Noves caracter\u00edstiques PHP 8.0","title":"M\u00e9s recursos:"},{"location":"02-phpbasics/#processament-de-formularis","text":"","title":"Processament de formularis"},{"location":"02-phpbasics/#que-es-una-peticio-http","text":"Una petici\u00f3 HTTP \u00e9s una sol\u00b7licitud d'un recurs a un servidor. La petici\u00f3 es realitza a trav\u00e9s d'una URL. Amb la petici\u00f3 s'envien tamb\u00e9 par\u00e0metres. Hi ha diferents m\u00e8todes (METHOD) per a realitzar una petici\u00f3 (GET, POST, PUT, DELETE, PATCH, etc.). Els m\u00e9s habituals s\u00f3n GET i POST. La resta s\u00f3n m\u00e9s utilitzats en les RESTful API.","title":"Qu\u00e8 \u00e9s una petici\u00f3 HTTP?"},{"location":"02-phpbasics/#metodes-get-i-post","text":"","title":"M\u00e8todes GET i POST"},{"location":"02-phpbasics/#definicio-de-formularis","text":"Com hem dit abans el m\u00e8tode POST s'empra en els formularis. El formulari seg\u00fcent enviar\u00e0 les dades a la p\u00e0gina index.php (atribut action de l'element form ). Utilitza el m\u00e8tode post indicat en l'atribut method : < form action = \"index.php\" method = \"post\" > < label for = \"nom\" > Nom </ label > < input type = \"text\" name = \"nom\" value = \"\" > < br /> < label for = \"cognom\" > Cognom </ label > < input type = \"text\" name = \"cognom\" value = \"\" > < br /> < input type = \"submit\" value = \"Enviar\" > </ form > Inspecci\u00f3 de la petici\u00f3: Headers Inspecci\u00f3 de la petici\u00f3: Param\u00e8tres","title":"Definici\u00f3 de formularis"},{"location":"02-phpbasics/#accedir-a-les-dades-de-la-peticio-post","text":"Usem la variable superglobal $_POST . Funciona igual que $_GET , per\u00f2 amb els noms (atribut name ) que li hem donat als camps del formulari. En depuraci\u00f3 podem mostar totes les dades rebudes: var_dump ( $_POST ); print_r ( $_POST ) Per a mostrar les dades individualment: echo $_POST [ 'nom' ]; echo $_POST [ 'cognom' ];","title":"Accedir a les dades de la petici\u00f3 POST"},{"location":"02-phpbasics/#validacio-de-formularis","text":"Hem de comprovar que les dades que envia el formulari s\u00f3n correctes. Les validacions a realitzar s\u00f3n les seg\u00fcents: Els camps requerits no han de quedar buits. Ni contenir espais en blanc a l'inici i al final. Els camps email i data han de tenir el format esperat. Tots els camps s'han de filtrar amb htmlspecialchars per a evitar atacs de Cross-site Scripting (XSS).","title":"Validaci\u00f3 de formularis"},{"location":"02-phpbasics/#comprovar-la-data","text":"Per a comprovar la data hem de crear una funci\u00f3 a aquest efecte. Podem utilitzar el m\u00e8tode est\u00e0tic createFromFormat de la classe DateTime M\u00e9s informaci\u00f3: http://php.net/manual/es/datetime.createfromformat.php","title":"Comprovar la data"},{"location":"02-phpbasics/#bones-practiques-en-lobtencio-de-dades-des-de-lexterior","text":"Cal seguir les seg\u00fcents bones pr\u00e0ctiques: No confieu mai (mai) en l\u2019entrada des de l\u2019exterior del vostre PHP. Sanegeu i valideu l\u2019entrada de dades sempre. Les funcions filter_var() i filter_input() poden sanejar el text i validar els formats de text (per exemple, adreces de correu electr\u00f2nic, enters). Recordeu que l\u2019entrada de dades no es limita a formularis enviats per l\u2019usuari. Els fitxers carregats i descarregats, els valors de sessi\u00f3, les dades de galetes i les dades de serveis web de tercers tamb\u00e9 s\u00f3n d\u2019entrada estrangera. A mode de resum pod\u00edem resumir la gesti\u00f3 de formularis en el seg\u00fcent diagrama de flux.","title":"Bones pr\u00e0ctiques en l\u2019obtenci\u00f3 de dades des de l\u2019exterior"},{"location":"02-phpbasics/#formularis-en-html5","text":"En els seg\u00fcents recursos trobar\u00e0s informaci\u00f3 addicional sobre els controls de formularis en HTML5: * Formularios en HTML en MDN web docs. * Formularios en HTML5 en MDN web docs. * HTML Forms en W3CSchools.","title":"Formularis en HTML5"},{"location":"02-phpbasics/#pujada-de-fitxers","text":"Per a pujar fitxers PHP implementa un mecanisme senzill a trav\u00e9s de la variable superglobal $_FILES . En Pujada d'arxius disposeu de tota la informaci\u00f3 necess\u00e0ria per a gestionar la pujada d'arxius.","title":"Pujada de fitxers"},{"location":"02-phpbasics/#formulari","text":"Per poder utilitzar el tipus file en l'element input cal que el formulari incloga l'atribut enctype amb el valor multipart/form-data . El valor de l'atribut name de l'element input ser\u00e0 l'\u00edndex de l'array associatiu $_FILES que ens permetr\u00e0 obtenir tota la informaci\u00f3 del proc\u00e9s de pujada del fitxer. En el seg\u00fcent exemple: < form action = \"upload.php\" enctype = \"multipart/form-data\" method = \"POST\" > < input type = \"hidden\" name = \"MAX_FILE_SIZE\" value = \"10240\" > < input type = \"file\" name = \"image\" /> < input type = \"submit\" value = \"Upload\" /> </ form > Emprarem $_FILES['image'] per obtenir les dades de l'arxiu penjat.","title":"Formulari"},{"location":"02-phpbasics/#variable-superglobal-_files","text":"Cada element en $_FILES \u00e9s un array que aporta informaci\u00f3 sobre el fitxer pujat. Les claus m\u00e9s importants s\u00f3n: * name . El nom original del fitxer pujat. No \u00e9s massa \u00fatil perqu\u00e8 el sistema original pot tindre convencions diferents i pot generar col\u00b7lisions si l'utilitzem per a emmagatzemar-lo en la seua ubicaci\u00f3 definitiva. * type . El tipus MIME del fitxer dedu\u00eft pel navegador. * size . La grand\u00e0ria en bytes del fitxer. Si el fitxer \u00e9s massa gran el valor enviat ser\u00e0 0. * tmp_name . El nom temporal del fitxer en el servidor on s'ha emmagatzemat el fitxer pujat.","title":"Variable superglobal $_FILES"},{"location":"02-phpbasics/#moure-el-fitxer","text":"Com que el fitxer pujat es guarda en una carpeta temporal hem d'emprar la funci\u00f3 move_uploaded_file per a guardar-lo en la ubicaci\u00f3 definitiva. La funci\u00f3 is_uploaded_file ens permet a assegurar-nos que el fitxer ha estat pujat usant HTTP POST i no es tracta d'un fitxer malici\u00f3s. move_uploaded_file ja fa eixa comprovaci\u00f3 en executar-se.","title":"Moure el fitxer"},{"location":"02-phpbasics/#gestio-derrors","text":"PHP torna un codi d'error en $_FILES . El codi es pot trabar en la clau error . Per exemple: $_FILES['image']['error'] . Els missates d'error m\u00e9s importants s\u00f3n: UPLOAD_ERR_OK : La pujada ha sigut correcta. UPLOAD_ERR_INI_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en la directiva upload_max_filesize . UPLOAD_ERR_FORM_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en el formulari en max_file_size . UPLOAD_ERR_NO_FILE : No s'ha enviat cap fitxer. En Explicaci\u00f3 dels missatges d'error teniu m\u00e9s informaci\u00f3.","title":"Gesti\u00f3 d'errors"},{"location":"02-phpbasics/#sentencies-per-a-incloure-fitxers","text":"Les sent\u00e8ncies include() i include_once() i require() i require_once() inclouen i avaluen l'arxiu especificat. include_once() i require_once() verifica que l'arxiu no haja sigut incl\u00f2s abans i \u00e9s preferible a include. Cal ser cur\u00f2s amb el path de l'arxiu a incloure. La difer\u00e8ncia entre require i include \u00e9s el tractament de l'error quan el fitxer no existeix. fruits.php <? php $color = 'green' ; $fruta = 'apple' ; include ( 'fruit.view.php' ) fruits.view.php < html > < head > < title > Fruites </ title > </ head > < body > < h3 > <? = \"Una $fruta $color \" ?> </ h3 > </ body > </ html >","title":"Sent\u00e8ncies per a incloure Fitxers"},{"location":"02-phpbasics/#activitats","text":"","title":"Activitats"},{"location":"02-phpbasics/#cadenes","text":"221Cadenes.php : Copia el contingut de la p\u00e0gina index.php , activa la directiva de tipus estricta ( declare( strict_types = 1 ); ) i mostra el seg\u00fcent: Elimina els espais del principi i el final del nom si els hi haguera ( trim ). Elimina la lletra a del principi i el final del nom si els hi haguera ( trim ). Mostra la variable nom en maj\u00fascules, min\u00fascules i amb la primera lletra en maj\u00fascula i les altres en min\u00fascules ( strtoupper , strtolower , ucfirst ). Mostra el codi ascii de la primera lletra del nom ( ord ). Mostra la longitud del nom ( strlen ). Mostra el nombre de vegades que apareix la lletra a (maj\u00fascula o min\u00fascula, substr_count ). Mostra la posici\u00f3 de la primera a existent en el nom, siga maj\u00fascula o min\u00fascula ( strpos ). Si no hi ha cap mostrar\u00e0 -1. El mateix, per\u00f2 amb l''\u00faltima a. Mostra el nom substituint la lletr o pel n\u00famero zero, siga maj\u00fascula o min\u00fascula ( str_replace ). Indica si el nom comen\u00e7a per al o no. 222Cadenes.php : En el mateix document cadenes.php i a partir d'una variable que continga una url: $url = 'http://username:password@hostname:9090/path?arg=value#anchor' ; Utilitza la funci\u00f3 parse_url per a extraure de la url les seg\u00fcents parts: 1. El protocol utilitzat (en l'exemple \"http\"). 2. El nom d'usuari (en l'exemple \"username\"). 3. El path de la url (en l'exemple \"/path\"). 4. El querystring de la url (en l'exemple \"arg=value\").","title":"Cadenes"},{"location":"02-phpbasics/#arrays-indexats","text":"231Arrays.php : Crea una p\u00e0gina, copia el contingut de la p\u00e0gina index.php i resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array amb els noms de diversos alumnes de la classe incloent el teu. Mostra el nombre d'elements que t\u00e9 l'array ( count ). Crea una cadena de text que continga els noms dels alumnes existents en l'array separats per un espai i mostra-la ( implode ). Mostra l'array en un ordre aleatori diferent al que ho vas crear ( shuffle ). Mostra l'array ordenat alfab\u00e8ticament ( sort ). Mostra els alumnes el nom dels quals continga almenys una \u201ca\u201d ( array_filter ). Mostra l'array en l'ordre invers al que es va crear ( rsort ). Mostra la posici\u00f3 que t\u00e9 el teu nom en l'array ( array_search ). 232Ciutats.php : Segons l'INE les 7 ciutats m\u00e9s grans d\u2019Espanya (per habitants) el 2018 van ser les seg\u00fcents: Madrid, MAD, 3.223.334 Sevilla, AN , 688.711 Murcia, MU, 447.182 M\u00e1laga, AN, 571.026 Zaragoza, AR, 666.880 Val\u00e8ncia, CV, 791.413 Barcelona, CAT, 1.620.343 Copia index.php i crea un nou document cituats.php . Defineix un array que continga aquesta informaci\u00f3 sobre ciutats i habitants. Imprimeix una taula d'ubicacions i habitants que incloga la poblaci\u00f3 total de les 7 ciutats. Opcional: Modifica la soluci\u00f3 de l\u2019anterior exercici perqu\u00e8 mostre les ciutats ordenades per habitants. Despr\u00e9s mostra-les per ordre alfab\u00e8tic.","title":"Arrays indexats"},{"location":"02-phpbasics/#arrays-multidimensionals_1","text":"233Alumnes.php : Resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array d'alumnes on cada element siga un altre array que continga nom i edat de l'alumne. Crea una taula HTML en la qual es mostren totes les dades dels alumnes. Utilitza la funci\u00f3 array_column per a obtenir un array indexat que continga \u00fanicament els noms dels alumnes i mostra\u2019ls per pantalla. Crea un array amb 10 n\u00fameros i utilitza la funci\u00f3 array_sum per a obtenir la suma dels 10 nombres. Sense usar bucles for calcula la mitjana d'edat de l'alumnat. 234CiutatsOpcional.php : Modifica la soluci\u00f3 del exercici ciutats.php perqu\u00e8 la taula continga tamb\u00e9 la columna del total d\u2019habitants de la comunitat aut\u00f2noma de les ciutats de la llista i el percentatge sobre els habitants de la comunitat aut\u00f2noma que representa. Per exemple: Ciutat Habitants Habitats CA % sobre CA Val\u00e8ncia 791.413 5.003.769 15.81% Pista: Caldr\u00e0 modificar l'array $ciutats i convertir-lo en multidimensional. Les dades de comunitats aut\u00f2nomes hauran d'estar en un altre array. Dades: Municipis de Espa\u00f1a","title":"Arrays multidimensionals"},{"location":"02-phpbasics/#funcions_1","text":"241funcions.php : Escriu una funci\u00f3 per retornar una etiqueta HTML <img /> . La funci\u00f3 hauria d\u2019acceptar com a argument obligatori l\u2019URL de la imatge i arguments opcionals per a un text alternatiu, al\u00e7ada i amplada. 242funcions.php : Copieu la funci\u00f3 de l\u2019exercici anterior i modifiqueu-la de manera que nom\u00e9s es passe el nom de fitxer a la funci\u00f3 en lloc de l\u2019URL completa. Dins de la funci\u00f3, farem \u00fas d\u2019una variable global per fer l\u2019URL completa. Per exemple, si passem photo.png a la funci\u00f3, i la variable global cont\u00e9 /images , llavors l\u2019atribut src de l'etiqueta retornada ser\u00e0 /images/photo.png . Una funci\u00f3 com aquesta \u00e9s una forma senzilla de mantenir correctes les vostres etiquetes d\u2019imatges, fins i tot si les imatges es mouen a un nou cam\u00ed o servidor. Nom\u00e9s cal canviar la variable global, per exemple, de /images a http://images.example.com/. 243funciocolors.php : Els colors web com #ffffff i #cc3399 es realitzen concatenant els valors hexadecimals de color per a vermell, verd i blau. Escriu una funci\u00f3 que accepte 3 arguments: roig, verd i blau, i que retorne un string que cont\u00e9 el color adequat per utilitzar-lo en una p\u00e0gina web. Per exemple, si els arguments s\u00f3n 255, 0, i 255, llavors la cadena retornada hauria de ser #FF00FF. Pot resultar \u00fatil utilitzeu la funci\u00f3 dechex() integrada, que es troba documentada a http://www.php.net/ Assegureu-vos que els par\u00e0metres reben valors enters i que s\u00f3n colors v\u00e0lids. Implementa 3 exemples d\u2019\u00fas. 244funcionsSQL.php : Crea una funci\u00f3 anomenada insert que ens genere una sent\u00e8ncia INSERT INTO en SQL. Per a a\u00e7\u00f2 la funci\u00f3 rebr\u00e0 dos par\u00e0metres: 1. El nom de la taula 2. Un array associatiu que contindr\u00e0 els noms i valors dels camps de la taula. La sent\u00e8ncia resultant tindr\u00e0 la seg\u00fcent forma: \u201cINSERT INTO nom_taula (nom dels camps separats per comes) VALUES (noms dels camps separats per comes amb el car\u00e0cter \u201c:\u201d davant) De moment, no farem res amb els valors dels camps. Ajuda: utilitza les funcions sprintf , implode i array_keys 245funcionsSQL2.php : A partir de l'exercici anterior crea una altra funci\u00f3 que reba els mateixos par\u00e0metres m\u00e9s un par\u00e0metre boole\u00e0 per a indicar si volem generar la query amb els noms dels camps o no. El par\u00e0metre tindr\u00e0 el valor true per defecte. Si el seu valor \u00e9s true generar\u00e0 la consulta igual que en l'exercici anterior, per\u00f2 si \u00e9s false la generar\u00e0 aix\u00ed: INSERT INTO nom_taula VALUES ( valors dels camps separats per comes amb el car\u00e0cter \u2018 : \u2019 davant ) 246funcionsSQLReferencia.php : Repeteix l'exercici anterior amb els seg\u00fcents canvis: La cadena resultant es passar\u00e0 per refer\u00e8ncia. Passarem la cadena de la seg\u00fcent forma: INSERT INTO taula ( camps ) VALUES ( valors ) Dins de la funci\u00f3 substituirem el seg\u00fcent: El text taula pel nom de la taula. El text camps pels noms dels camps separats per comes El text valors pels noms dels camps separats per comes i el car\u00e0cter \u2018:\u2019 davant.","title":"Funcions"},{"location":"02-phpbasics/#formularis","text":"261ExempleGet.php : Crea una p\u00e0gina que reba com a par\u00e0metre un nom i mostre el text \u2018Benvingut [nom]!!!\u2019 sent [nom] el nom has passat com a par\u00e0metre. 262Formulari.php : Crea un formulari que tinga els seg\u00fcents camps: firstname lastname phone email Tots els camps s\u00f3n obligatoris excepte zipcode . En l'atribut action del formulari posarem el seg\u00fcent: < form action = \"262Formulari.php\" ... /> A\u00e7\u00f2 far\u00e0 que siga la pr\u00f2pia p\u00e0gina del formulari la que processe les dades del mateix. En pr\u00e9mer Enviar han d'apar\u00e8ixer sota el formulari les dades que s'han introdu\u00eft en el mateix en format de taula. 263FormulariReparat.php : Soluciona el problema dels par\u00e0metres no enviats de l'exercici anterior. 264FormulariValidat.php : Modifica l'exercici anterior realitzant les seg\u00fcents validacions: Tots els camps s\u00f3n obligatoris. firstname , no pot superar els 25 caracters. lastname , no pot superar els 50 caracters. phone , ha de contenir 9 digits (expressi\u00f3 regular: ^\\d{9}$ ). email , ha de ser una adre\u00e7a electr\u00f2nica correcta. S'avaluaran tots els camps i si hi ha error/s caldr\u00e0 mostrar-lo/s. Si no hi ha errors es mostraran les dades introdu\u00efdes per l'usuari.","title":"Formularis"},{"location":"02-phpbasics/#pujada-de-fitxers_1","text":"271FormularImatge.php : Modifica l'activitat 264FormulariValidat.php afegint un camp de tipus FILE per a pujar una imatge al servidor. Es guardar\u00e0 en la carpeta uploads i es mostrar\u00e0 amb la resta de dades.","title":"Pujada de fitxers"},{"location":"02-phpbasics/#inclusio-de-fitxers","text":"281Formulari.php : Basant-te en l'activitat 271FormulariImatge.php modifica les validacions perqu\u00e8 es facen mitjan\u00e7ant funcions. Les funcions es guardaran en el fitxer helpers.php i s'hauran d'incloure en fitxer 281Formulari.php .","title":"Inclusi\u00f3 de fitxers"},{"location":"02-phpbasics/#credits","text":"Aitor Medrano. (setembre de 2021) Desarrollo Web en Entorno Servidor disponible en: https://aitor-medrano.github.io/dwes2122/index.html","title":"Cr\u00e8dits"},{"location":"03-phpoo/","text":"Programaci\u00f3 Orientada a Objectes en PHP Introducci\u00f3 La programaci\u00f3 orientada a objectes (OOP, per les seues sigles en angl\u00e8s) \u00e9s un paradigma de programaci\u00f3. Paradigma: Teoria [\u2026] el nucli central de la qual [\u2026] suministra la base i el model per resoldre problemes i avan\u00e7ar en el coneixement. Per la qual cosa podem definir la programaci\u00f3 orientada a objecte com un m\u00e8tode -provat i estudiat- el qual es basa en les interaccions d'objectes per resoldre les necessitats d'un sistema inform\u00e0tic. Un objecte \u00e9s una estructura que cont\u00e9 dades i el codi que els maneja. L'estructura dels objectes es defineix en les classes. En elles s'escriu el codi que defineix el comportament dels objectes i s'indiquen els membres que formaran part dels objectes d'aquesta classe. Entre els membres de una classe pot haver-hi: M\u00e8todes . S\u00f3n els membres de la classe que contenen el codi de la mateixa. Un m\u00e8tode \u00e9s com una funci\u00f3. Pot rebre par\u00e0metres i retornar valors. Atributs o propietats . Emmagatzemen informaci\u00f3 sobre el estat de l'objecte al que pertanyen (i per tant, el seu valor pot ser diferent per a cadascun dels objectes de la mateixa classe). A la creaci\u00f3 de un objecte basat en una classe se li anomena instanciar una classe i a l'objecte obtingut tamb\u00e9 se li coneix com a inst\u00e0ncia d'aqueixa classe. Els pilars fonamentals de la POO s\u00f3n: Her\u00e8ncia . \u00c9s el proc\u00e9s de crear una classe a partir de una altra, heretant el seu comportament i caracter\u00edstiques i podent redefinir-los. Abstracci\u00f3 . Fa refer\u00e8ncia al fet que cada classe oculta en el seu interior les peculiaritats de la seua implementaci\u00f3, i presenta a l'exterior una s\u00e8rie de m\u00e8todes (interf\u00edcie) el comportament dels quals est\u00e0 ben definit. Vist des de l'exterior, cada objecte \u00e9s un ens abstracte que realitza un treball. Polimorfisme . Un mateix m\u00e8tode pot tenir comportaments diferents en funci\u00f3 de l'objecte amb que s'utilitze. Encapsulaci\u00f3 . En la POO s'ajunten en un mateix lloc les dades i el codi que els manipula. Els avantatges m\u00e9s importants que aporta la programaci\u00f3 orientada a objectes s\u00f3n: Modularitat . La POO permet dividir els programes en parts o m\u00f2duls m\u00e9s xicotets, que s\u00f3n independents uns d'uns altres per\u00f2 poden comunicar-se entre ells. Extensibilitat . Si es desitgen afegir noves caracter\u00edstiques a una aplicaci\u00f3, la POO facilita aquesta tasca de dues formes: afegint nous m\u00e8todes al codi, o creant nous objectes que estenguen el comportament dels ja existents. Manteniment . Els programes desenvolupats utilitzant POO s\u00f3n m\u00e9s senzills de mantenir, a causa de la modularitat abans comentada. Tamb\u00e9 ajuda seguir certes convencions en escriure'ls , per exemple, escriure cada classe en un fitxer propi. No ha d'haver-hi dues classes en un mateix fitxer, ni un altre codi a part de el propi de la classe. Caracter\u00edstiques b\u00e0siques de l'\u00fas d'objectes en PHP Introducci\u00f3 Segurament tot, o la majoria del que acabes de veure, ja ho coneixies, i \u00e9s fins i tot probable que s\u00e0pigues utilitzar algun llenguatge de programaci\u00f3 orientat a objectes, aix\u00ed que anem a veure directament les peculiaritats pr\u00f2pies de PHP en el que fa refer\u00e8ncia a la POO. En PHP podemos utilitzar els dos paradigmes de la programaci\u00f3: estructurada i orientada a objectes. // utilitzant programaci\u00f3 estructurada $dwes = mysqli_connect ( 'localhost' , 'dwes' , 'abc123.' , 'dwes' ); // utilizant POO $dwes = new mysqli (); $dwes -> connect ( 'localhost' , 'dwes' , 'abc123.' , 'dwes' ); No obstant a\u00e7\u00f2, el llenguatge PHP original no es va dissenyar amb caracter\u00edstiques d'orientaci\u00f3 a objectes. Nom\u00e9s a partir de la versi\u00f3 3, es van comen\u00e7ar a introduir alguns trets de POO en el llenguatge. A\u00e7\u00f2 es va potenciar en la versi\u00f3 4, encara que encara de forma molt rudiment\u00e0ria. Per exemple, en PHP4: Els objectes es passen sempre per valor, no per refer\u00e8ncia. No es pot definir el nivell d'acc\u00e9s per als membres de la classe. Tots s\u00f3n p\u00fablics. No existeixen les interf\u00edcies. No existeixen m\u00e8todes destructors. En PHP5 es va reescriure i potenciar el suport d'orientaci\u00f3 a objectes del llenguatge, ampliant les seues caracter\u00edstiques i millorant el seu rendiment i el seu funcionament general. Les caracter\u00edstiques de POO que suporta PHP5 inclouen: M\u00e8todes est\u00e0tics. M\u00e8todes constructors i destructors. Her\u00e8ncia. Interf\u00edcies. Classes abstractes. Entre les caracter\u00edstiques que no inclou PHP5, i que pots con\u00e8ixer d'altres llenguatges de programaci\u00f3, estan: Her\u00e8ncia m\u00faltiple. Sobrec\u00e0rrega de m\u00e8todes (tenir diversos m\u00e8todes amb el mateix nom, per\u00f2 amb funcionalitats diferents. Els m\u00e8todes sobrecarregats han de tenir diferents par\u00e0metres. Quan es diu al m\u00e8tode, s'utilitza una o una altra versi\u00f3 en funci\u00f3 dels par\u00e0metres amb que es realitze la trucada (podent distingir per el seu nombre i per el seu tipus, segons el llenguatge de programaci\u00f3 utilitzat)) (inclosos els m\u00e8todes constructors). Sobrec\u00e0rrega d'operadors (similar a la sobrec\u00e0rrega de m\u00e8todes. Es poden definir diverses funcionalitats a un mateix operador, i s'utilitzar\u00e0 una o una altra en funci\u00f3 del tipus dels operands que s'usen en cada instant). PHP 7 incorpora millores en el rendiment i el tipat d'arguments, valors de retorn i atributs (des de la versi\u00f3 7.4) Definici\u00f3 de classes La declaraci\u00f3 de una classe en PHP es fa utilitzant la paraula class . A continuaci\u00f3 i entre claus, han de figurar els membres de la classe. Conv\u00e9 fer-ho de forma ordenada, primer les propietats o atributs, i despr\u00e9s els m\u00e8todes, cadascun amb el seu codi respectiu. class Product { private string $code ; public string $name ; public float $price ; public function show () { print \"<p>\" . $this -> code . \"</p>\" ; } } Com coment\u00e0vem abans, \u00e9s preferible que cada classe figure en el seu propi fitxer ( Product.php ). A m\u00e9s, molts programadors prefereixen utilitzar per a les classes noms que comencen per lletra maj\u00fascula, per a, d'aquesta forma, distingir-los dels objectes i altres variables. Una vegada definida la classe, podem usar la paraula new per a instanciar objectes de la seg\u00fcent forma: $product = new Product (); Perqu\u00e8 la l\u00ednia anterior s'execute sense error, pr\u00e8viament hem d'haver declarat la classe. Per a a\u00e7\u00f2, en aqueix mateix fitxer haur\u00e0s de incloure la classe posant alguna cosa com: require ( 'Product.php' ); Els atributs de una classe s\u00f3n similars a les variables de PHP. \u00c9s possible indicar un valor en la declaraci\u00f3 de la classe. En aquest cas, tots els objectes que s'instancien a partir de aqueixa classe, partiran amb aqueix valor per defecte en l'atribut. Per a accedir des d'un objecte als seus atributs o als m\u00e8todes de la classe, has d'utilitzar l'operador fletxa (fixa't que nom\u00e9s es posa el s\u00edmbol $ davant del nom de l'objecte): $product -> name = 'Samsung Galaxy S' ; $product -> show (); Quan es declara una propietat o un m\u00e8tode, s'ha d'indicar el seu nivell d'acc\u00e9s (o visibilitat). Els principals nivells s\u00f3n: public . Els atributs declarats com public poden utilitzar-se directament per els objectes de la classe. \u00c9s el cas de l'atribut $name anterior. private . Els atributs declarats com private nom\u00e9s poden ser accedits i modificats per els m\u00e8todes definits en la classe, no directament per els objectes de la mateixa. \u00c9s el cas de l'atribut $code . protected . Una propietat o m\u00e8tode protected sols pot ser accedida per la classe on es defineix o per un subclasse. No \u00e9s accessible des de fora. Un dels motius per a crear atributs privats \u00e9s que el seu valor forma part de la informaci\u00f3 interna de l'objecte i no ha de formar part de la seua interf\u00edcie. Un altre motiu \u00e9s mantenir cert control sobre els seus possibles valors. Per exemple, si no vols que es puga canviar lliurement el valor del codi d'un producte. O necessites con\u00e8ixer quin ser\u00e0 el nou valor abans d'assignar-lo. En aquests casos, se solen definir aqueixos atributs com a privats i a m\u00e9s es creen dins de la classe m\u00e8todes per a permetre'ns obtenir i/o modificar els valors d'aqueixos atributs. Per exemple: private $code ; public function setCode ( $newCode ) { if ( ! existsCode ( $newCode )) { $this -> code = $newCode ; return true ; } return false ; } public function getCode () { return $this -> code ; } Encara que no \u00e9s obligatori, el nom del m\u00e8tode que ens permet obtenir el valor de un atribut sol comen\u00e7ar per get , i el que ens permet modificar-lo per set . En PHP5 es van introduir els anomenats m\u00e8todes m\u00e0gics, entre ells __set i __get . Si es declaren aquests dos m\u00e8todes en una classe, PHP els invoca autom\u00e0ticament quan des de un objecte s'intenta usar un atribut no existent o no accessible. Per exemple, el codi seg\u00fcent simula que la classe Product t\u00e9 qualsevol atribut que vulguem usar. class Product { private $atributos = array (); public function __get ( $atributo ) { return $this -> atributos [ $atributo ]; } public function __set ( $atributo , $valor ) { $this -> atributos [ $atributo ] = $valor ; } } Constructor i destructor Com ja has vist, per a instanciar objectes de una classe s'utilitza la paraula new : $product = new Product (); En PHP7 pots definir en les classes m\u00e8todes constructors, que s'executen quan es crea l'objecte. El constructor d'una classe ha d'anomenar-se __construct . Es poden utilitzar, per exemple, per assignar valors a atributs. class Product { private static $numProducts = 0 ; private $code ; public function __construct () { self :: $numPoducts ++ ; } \u2026 } El constructor d'una classe pot cridar a altres m\u00e8todes o tenir par\u00e0metres, en aquest cas hauran de passar-se quan es crea l'objecte. No obstant a\u00e7\u00f2, nom\u00e9s pot haver-hi un m\u00e8tode constructor en cada classe. class Product { private static $numProducts = 0 ; private $code ; public function __construct ( $code ) { $this -> $code = $code ; self :: $numProducts ++ ; } ... } $p = new Product ( 'GALAXYS' ); Per exemple, si com en aquest exemple, definim un constructor en el qual calga passar el codi, sempre que instancies un nou objecte d'aqueixa classe haur\u00e0s de indicar el seu codi. Tamb\u00e9 \u00e9s possible definir un m\u00e8tode destructor, que ha d'anomenar-se __destruct() que s'executar\u00e0 quan s'elimine l'objecte. class Product { private static $numProducts = 0 ; private $code ; public function __construct ( $code ) { $this -> $code = $code ; self :: $numProducts ++ ; } public function __destruct () { self :: $numProducts -- ; } ... } $p = new Product ( 'GALAXYS' ); La pseuodovariable $this Quan des d'un objecte s'invoca un m\u00e8tode de la classe, a aquest se li passa sempre una refer\u00e8ncia a l'objecte que ha fet la crida. Aquesta refer\u00e8ncia s'emmagatzema en la pseudovariable $this. S'utilitza, per exemple, en el codi anterior per a tenir acc\u00e9s als atributs privats de l'objecte (que nom\u00e9s s\u00f3n accessibles des dels m\u00e8todes de la classe). echo \" < p > \" . $this->code . \" </ p > \"; En la documentaci\u00f3 de PHP tens m\u00e9s informaci\u00f3 sobre els m\u00e8todes m\u00e0gics: http://es.php.net/manual/es/language.oop5.magic.php Constants de classe A m\u00e9s de m\u00e8todes i propietats, en una classe tamb\u00e9 es poden definir constants, utilitzant la paraula const . \u00c9s important que no confongues els atributs amb les constants. S\u00f3n conceptes diferents: les constants no poden canviar el seu valor (\u00f2bviament, de ac\u00ed el seu nom), no usen el car\u00e0cter $ , s'escriuen en maj\u00fascules (per convenci\u00f3) i el seu valor est\u00e0 associat a la classe, \u00e9s a dir, no existeix una c\u00f2pia del mateix en cada objecte. Per tant, per a accedir a les constants d'una classe, s'ha d'utilitzar el nom de la classe i l'operador :: , anomenat operador de resoluci\u00f3 d'\u00e0mbit (que s'utilitza per a accedir a els elements de una classe). class DB { const USUARIO = 'dwes' ; ... } echo DB :: USUARIO ; \u00c9s important ressaltar que no \u00e9s necessari que existisca cap objecte de una classe per a poder accedir al valor de les constants que definisca. PHP Standard Recommendations PHP-FIG El PHP Framework Interop Group \u00e9s un grup de treball on est\u00e0 involucrada gent que treballa en diferents frameworks amb l'objectiu de posar en com\u00fa les t\u00e8cniques que usen en els diferents projectes per poder integrar-les i compartir-les i poder treballar millor junts. Les recomanacions PSR-1 i PSR-12 s\u00f3n recomanacions sobre l'estil de programaci\u00f3 amb l'objectiu d'aplicar estandards comuns i aix\u00ed facilitar la lectura del codi realitzar per altres. Algunes recomancions que cal seguir: Class names MUST be declared in StudlyCaps . For instance: Product . Class constants MUST be declared in all upper case with underscore separators. For example: const IMAGE_PATH. About property names the only recommendation is to be consistent. So, we SHOULD use $camelCase . The same recommendations applies for variables. Method names MUST be declared in camelCase() . M\u00e9s informaci\u00f3 en Est\u00e1ndares M\u00e8todes o atributs est\u00e0tics Tampoc s'han de confondre les constants amb els membres est\u00e0tics d'una classe. En PHP7, una classe pot tenir atributs o m\u00e8todes est\u00e0tics, tamb\u00e9 anomenats a vegades atributs o m\u00e8todes de classe. Es defineixen utilitzant la paraula clau static . class Product { private static $numProducts = 0 ; public static function newProduct () { self :: $numProducts ++ ; } \u2026 } Els atributs i m\u00e8todes est\u00e0tics no poden ser cridats des d'un objecte de la classe utilitzant l'operador -> . Si el m\u00e8tode o atribut \u00e9s p\u00fablic, haur\u00e0 d'accedir-se utilitzant el nom de la classe i l'operador de resoluci\u00f3 d'\u00e0mbit. Product :: newProduct (); Si \u00e9s privat, com l'atribut $numProducts en l'exemple anterior, nom\u00e9s es podr\u00e0 accedir a ell des dels m\u00e8todes de la pr\u00f2pia classe, utilitzant la paraula self . De la mateixa forma que $this referencia a l'objecte actual, self fa refer\u00e8ncia a la classe actual. self :: $numProductes ++ ; Els atributs est\u00e0tics d'una classe s'utilitzen per a guardar informaci\u00f3 general sobre la mateixa, com pot ser el nombre d'objectes que s'han instanciat. Nom\u00e9s existeix un valor de l'atribut, que s'emmagatzema a nivell de classe. Els m\u00e8todes est\u00e0tics solen realitzar alguna tasca espec\u00edfica o retornar un objecte concret. Per exemple, les classes matem\u00e0tiques solen tenir m\u00e8todes est\u00e0tics per a realitzar logaritmes o arrels quadrades. No t\u00e9 sentit crear un objecte si l'\u00fanica cosa que volem \u00e9s realitzar una operaci\u00f3 matem\u00e0tica. Els m\u00e8todes est\u00e0tics es criden des de la classe. No \u00e9s possible cridar-los des d'un objecte i per tant, no podem usar $this dins d'un m\u00e8tode est\u00e0tic. Utilitzaci\u00f3 d'objectes Ja saps com instanciar un objecte utilitzant new , i com accedir a els seus m\u00e8todes i atributs p\u00fablics amb l'operador fletxa: $product = new Product (); $product -> name = 'Samsung Galaxy S' ; $product -> show (); Una vegada creat un objecte, pots utilitzar l'operador instanceof per a comprovar si \u00e9s o no una inst\u00e0ncia de una classe determinada. if ( $product instanceof Product ) { \u2026 } Des de PHP7, pots indicar en les funcions i m\u00e8todes de quina classe han de ser els objectes que es passen com a par\u00e0metres. Per a a\u00e7\u00f2, has d'especificar el tipus abans del par\u00e0metre. public function sellProduct ( Product $product ) { \u2026 } Si quan es realitza la crida, el par\u00e0metre no \u00e9s del tipus adequat, es produeix un error que podries capturar. Una caracter\u00edstica de la POO que has de tenir molt en compte \u00e9s qu\u00e8 succeeix amb els objectes quan els passes a una funci\u00f3, o simplement quan executes un codi com el seg\u00fcent: $p = new Product (); $p -> name = 'Samsung Galaxy S' ; $a = $p ; El codi anterior simplement crearia un nou identificador del mateix objecte. A\u00e7\u00f2 \u00e9s, quan s'utilitze qualsevol dels identificadors per a canviar el valor de algun atribut, aquest canvi es veuria tamb\u00e9 reflectit en accedir utilitzant l'altre identificador. Recorda que, encara que hi haja dos o m\u00e9s identificadors del mateix objecte, en realitat tots es refereixen a l'\u00fanica c\u00f2pia que s'emmagatzema del mateix. Per tant, a partir de PHP5 no pots copiar un objecte utilitzant l'operador = . Si necessites copiar un objecte, has d'utilitzar clone . En utilitzar clone sobre un objecte existent, es crea una c\u00f2pia del mateix. A m\u00e9s, existeix una forma senzilla de personalitzar la c\u00f2pia per a cada classe particular. Per exemple, pot succeir que vulgues copiar tots els atributs menys algun. En el nostre exemple, almenys el codi de cada producte ha de ser diferent i, per tant, potser no tinga sentit copiar-lo en crear un nou objecte. Si aquest f\u00f3ra el cas, pots crear un m\u00e8tode de nom __clone en la classe. Aquest m\u00e8tode es cridar\u00e0 autom\u00e0ticament despr\u00e9s de copiar tots els atributs en el nou objecte. Comparaci\u00f3 d'Objectes En utilitzar l'operador de comparaci\u00f3 (==), es comparen d'una manera senzilla les variables de cada objecte, \u00e9s a dir: dues inst\u00e0ncies d'un objecte s\u00f3n iguals si tenen els mateixos atributs i valors (els valors es comparen amb ==), i s\u00f3n inst\u00e0ncies de la mateixa classe. Quan s'utilitza l'operador identitat (===), les variables d'un objecte s\u00f3n id\u00e8ntiques si i nom\u00e9s s\u00ed fan refer\u00e8ncia a la mateixa inst\u00e0ncia de la mateixa classe. Clonaci\u00f3 d'Objectes Per crear una c\u00f2pia d'un objecte s'utilitza la paraula clau clone (que invoca, si fos possible, al m\u00e8tode __clone() de l'objecte). No es pot cridar el m\u00e8tode __clone() d'un objecte directament. $copia_objecte = clone $objecte ; Quan es clona un objecte, PHP7 dur\u00e0 a terme una c\u00f2pia superficial de les propietats de l'objecte. Les propietats que siguen refer\u00e8ncies a altres variables (per exemple, objectes), mantindran les refer\u00e8ncies. Compte: si els atributs s\u00f3n objectes no es clonaran. Iteraci\u00f3 d'objectes PHP 7 ofereix una forma de definir objectes, de manera que \u00e9s possible rec\u00f3rrer una llista d'elements amb, per exemple, una sent\u00e8ncia foreach . Per defecte, s'utilitzaran totes les propietats visibles per a la iteraci\u00f3. Her\u00e8ncia Introducci\u00f3 L'her\u00e8ncia \u00e9s un mecanisme de la POO que ens permet definir noves classes sobre la base d'una altra ja existent. Les noves classes que hereten tamb\u00e9 es coneixen amb el nom de subclasses. La classe de la qual hereten es diu classe base o superclasse. Per exemple, en la nostra tenda web anem a tenir productes de diferents tipus. En principi hem creat per a manejar-los una classe anomenada Product , amb alguns atributs i un m\u00e8tode que genera una eixida personalitzada en format HTML del codi. class Product { public string $code ; public string $name ; public function show () { echo \"<p>\" . $this -> code . \"</p>\" ; } } Aquesta classe \u00e9s molt \u00fatil si l'\u00fanica informaci\u00f3 que tenim dels diferents productes \u00e9s la que es mostra a dalt. Per\u00f2, si vols personalitzar la informaci\u00f3 que vas a tractar de cada tipus de producte (i emmagatzemar, per exemple per als televisors, les polzades que tenen o la seua tecnologia de fabricaci\u00f3), pots crear noves classes que hereten de Product . Per exemple, TV , Computer , Phone . class TV extends Product { public $size ; public $technology ; } La paraula reservada extends Com pots veure, per a definir una classe que herete d'una altra, simplement has de utilitzar la paraula extends indicant la superclasse. Els nous objectes que s'instancien a partir de la subclasse s\u00f3n tamb\u00e9 objectes de la classe base; es pot comprovar utilitzant l'operador instanceof . $tv = new TV (); if ( $tv instanceof Product ) { // Aquest codi s'executa doncs la condici\u00f3 \u00e9s certa \u2026 } La nova classe hereta tots els atributs i m\u00e8todes p\u00fablics de la classe base, per\u00f2 no els privats. Si vols crear en la classe base un m\u00e8tode no visible a l'exterior (com els privats) que s'herete a les subclasses, has d'utilitzar la paraula protected en lloc de private . A m\u00e9s, pots redefinir el comportament dels m\u00e8todes existents en la classe base, simplement creant en la subclasse un nou m\u00e8tode amb el mateix nom. class TV extends Producte { public $size ; public $technology ; public function show () { print \"<p>\" . $this -> size . \" polzades</p>\" ; } } La paraula reservada final Existeix una forma d'evitar que les classes heretades puguen redefinir el comportament dels m\u00e8todes existents en la superclasse: utilitzar la paraula final . Si en el nostre exemple hagu\u00e9rem fet: class Product { public $code ; public $name ; public $price ; public final function show () { print \"<p>\" . $this -> code . \"</p>\" ; } } En aquest cas el m\u00e8tode show no podria redefinir-se en la classe TV . Tamb\u00e9 es pot declarar una classe utilitzant final . En aquest cas no podran crear-se classes heretades utilitzant-les com a base. final class Product { ... } La paraula reservada abstract Oposadament al modificador final , existeix tamb\u00e9 abstract . S'utilitza de la mateixa forma, tant amb m\u00e8todes com amb classes completes, per\u00f2 en lloc de prohibir l'her\u00e8ncia, obliga a que s'herete. \u00c9s a dir, una classe amb el modificador abstract no pot tenir objectes que la instancien, per\u00f2 s\u00ed podr\u00e0 utilitzar-se de classe base i les seues subclasses s\u00ed podran utilitzar-se per a instanciar objectes. abstract class Product { ... } Un m\u00e8tode en el qual s'indique abstract , ha de ser redefinit obligat\u00f2riament per les subclasses, i no podr\u00e0 contenir codi. class Product { \u2026 abstract public function show (); } Anem a fer una petita modificaci\u00f3 en la nostra classe Product . Per a facilitar la creaci\u00f3 de nous objectes, crearem un constructor al que se li passar\u00e0 un array amb els valors dels atributs del nou producte. class Product { public $code ; public $name ; public $shortName ; public $price ; public function show () { echo \"<p>\" . $this -> code . \"</p>\" ; } public function __construct ( $row ) { $this -> code = $row [ 'code' ]; $this -> name = $row [ 'name' ]; $this -> shortName = $row [ 'short_name' ]; $this -> price = $row [ 'price' ]; } } Qu\u00e8 passa ara amb la classe TV , qu\u00e8 hereta de Product? Quan crees un nou objecte d'aqueixa classe, es cridar\u00e0 al constructor de Product? Pots crear un nou constructor espec\u00edfic perqu\u00e8 redefinisca el comportament de la classe base? Comen\u00e7ant per aquesta \u00faltima pregunta, \u00f2bviament pots definir un nou constructor per a les classes heretades que redefinisquen el comportament del que existeix en la classe base, tal com faries amb qualsevol altre m\u00e8tode. I depenent de si programes o no el constructor en la classe heretada, es cridar\u00e0 o no autom\u00e0ticament al constructor de la classe base. En PHP5+, si la classe heretada no t\u00e9 constructor propi, es cridar\u00e0 autom\u00e0ticament al constructor de la classe base (si existeix). No obstant a\u00e7\u00f2, si la classe heretada defineix el seu propi constructor, haur\u00e0s de ser tu el que realitze la crida al constructor de la classe base si ho consideres necessari, utilitzant per a a\u00e7\u00f2 la paraula parent i l'operador de resoluci\u00f3 d'\u00e0mbit. class TV extends Product { public $size ; public $technology ; public function show () { print \"<p>\" . $this -> size . \" polzades</p>\" ; } public function __construct ( $row ) { parent :: __construct ( $row ); $this -> size = $row [ 'size' ]; $this -> technology = $row [ 'technology' ]; } } Ja has vist amb amb anterioritat com s'utilitzava la paraula clau self per a tenir acc\u00e9s a la classe actual. La paraula parent \u00e9s semblant. En utilitzar parent fas refer\u00e8ncia a la classe base de la actual, tal com apareix rere extends . Interf\u00edcies Introducci\u00f3 Un interf\u00edcie ( interface ) \u00e9s com una classe buida que solament cont\u00e9 declaracions de m\u00e8todes. Es defineixen utilitzant la paraula interface . Per exemple, abans vam veure que pod\u00edem crear noves classes heretades de Product , com TV o Ordinador . Tamb\u00e9 vam veure que en les subclasses podies redefinir el comportament del m\u00e8tode perqu\u00e8 generara una eixida en HTML diferent per a cada tipus de producte. Si vols assegurar-te que tots els tipus de productes tinguen un m\u00e8tode show , pots crear un interface com el seg\u00fcent. interface IShow { public function show (); } I quan crees les subclasses haur\u00e0s d'indicar amb la paraula implements que han de implementar els m\u00e8todes declarats en aquest interface. class TV extends Product implements IShow { \u2026 public function show () { echo \"<p>\" . $this -> size . \" polzades</p>\" ; } \u2026 } Tots els m\u00e8todes que es declaren en un interface han de ser p\u00fablics. A m\u00e9s de m\u00e8todes, els interf\u00edcies podran contenir constants per\u00f2 no atributs. Un interface \u00e9s com un contracte que la classe ha de complir. En implementar tots els m\u00e8todes declarats en la interf\u00edcie s'assegura la interoperabilitat entre classes. Si saps que una classe implementa un interf\u00edcie determinada saps quins noms tenen els seus m\u00e8todes, quins par\u00e0metres els has de passar i, probablement, podr\u00e0s esbrinar f\u00e0cilment amb quins objectiu han sigut escrits. Per exemple, en la llibreria de PHP est\u00e0 definit la interf\u00edcie countable . Countable { abstract public int count ( void ) } Si crees una classe per a la cistella de la compra en la tenda web, podries implementar aquesta interf\u00edcie per a contar els productes que figuren en la mateixa. Abans vas aprendre que en PHP5 una classe nom\u00e9s pot heretar d'una altra. En PHP5 no existeix l'her\u00e8ncia m\u00faltiple. No obstant a\u00e7\u00f2, s\u00ed \u00e9s possible crear classes que implementen diverses interf\u00edcies, simplement separant la llista d'interf\u00edcies per comes despr\u00e9s de la paraula implements . class TV extends Product implements IShow , Countable { \u2026 } L'\u00fanica restricci\u00f3 \u00e9s que els noms dels m\u00e8todes que s'hagen d'implementar en els diferents interf\u00edcies no coincidisquen. \u00c9s a dir, en el nostre exemple, la interf\u00edcie IShow no podria contenir el m\u00e8tode count , doncs aquest ja est\u00e0 declarat en Countable . En PHP7 tamb\u00e9 es poden crear nous interf\u00edcies heretant d'uns altres ja existents. Es fa de la mateixa forma que amb les classes, utilitzant la paraula extends . Classes abstractes vs interf\u00edcies Un dels dubtes m\u00e9s comuns en POO, \u00e9s quina soluci\u00f3 adoptar en algunes situacions: interf\u00edcies o classes abstractes. Ambdues permeten definir regles per a les classes que els implementen o hereten respectivament. I cap permet instanciar objectes. Les difer\u00e8ncies principals entre ambdues opcions s\u00f3n: En les classes abstractes, els m\u00e8todes poden contenir codi. Si van a existir diverses subclasses amb un comportament com\u00fa, es podria programar en els m\u00e8todes de la classe abstracta. Si s'opta per un interface, caldria repetir el codi en totes les classes que ho implemente. Les classes abstractes poden contenir atributs, i les interf\u00edcies no. No es pot crear una classe que herete de dues classes abstractes, per\u00f2 s\u00ed es pot crear una classe que implemente diverses interf\u00edcies. Per exemple, en la botiga online va a haver-hi dos tipus d'usuaris: clients i empleats. Si necessites crear en la teua aplicaci\u00f3 objectes de tipus Usuari (per exemple, per a manejar de forma conjunta als clients i als empleats), hauries de crear una classe no abstracta amb aqueix nom, de la qual heretarien Client i Empleat. Podeu llegir tamb\u00e9 l'article Clases abastractas e interfaces en PHP class Usuari { ... } class Client extends Usuari { ... } class Empleat extends Usuari { ... } Per\u00f2 si no f\u00f3ra aix\u00ed, hauries de decidir si crees o no Usuari , i si ho faries com una classe abstracta o com una interf\u00edcie. Si per exemple, volgueres definir en un \u00fanic lloc els atributs comuns a Client i a Empleat, hauries de crear una classe abstracta Usuari de la qual hereten. abstract class Usuari { public $dni ; protected $nom ; ... } Per\u00f2 a\u00e7\u00f2 no podries fer-ho si ja tens planificada alguna relaci\u00f3 d'her\u00e8ncia per a una d'aquestes dues classes. Per a finalitzar amb les interf\u00edcies, a la llista de funcions de PHP relacionades amb la POO pots afegir les seg\u00fcents. Funci\u00f3 Exemple Significat get_declared_interf\u00edcies print_r (get_declared_interf\u00edcies()); Retorna un array amb els noms dels interf\u00edcies declarats. interface_exists if (interface_exists('iShow') { \u2026 } Retorna true si existeix l'interface que s'indica, o false en cas contrari. {:.alert .alert-activity} ## Trets (Traits) Des de la seva versi\u00f3 5.4.0, PHP implementa una metodologia de reutilitzaci\u00f3 de codi anomenada `Traits`. Els trets (\u00abtraits\u00bb en angl\u00e8s) s\u00f3n un mecanisme de reutilitzaci\u00f3 de codi en llenguatges d'her\u00e8ncia simple, com PHP. L'objectiu d'un tret \u00e9s el de reduir les limitacions pr\u00f2pies de l'her\u00e8ncia simple permetent que els desenvolupadors reutilitzen a voluntat conjunts de m\u00e8todes sobre diverses classes independents i pertanyents a classes jer\u00e0rquiques diferents. Un Trait \u00e9s similar a una classe, per\u00f2 amb l'\u00fanic objectiu d'agrupar funcionalitats molt espec\u00edfiques i d'una manera coherent. No es pot instanciar directament un `Trait`. \u00c9s per tant un afegit a l'her\u00e8ncia tradicional, i habilita la composici\u00f3 horitzontal de comportaments; \u00e9s a dir, permet combinar membres de classes sense haver d'usar her\u00e8ncia. trait Saludar { function decirHola (){ return \"hola\" ; } } trait Despedir { function decirAdios (){ return \"adi\u00f3s\" ; } } class Comunicacion { use Saludar , Despedir ; } $comunicacion = new Comunicacion ; echo $comunicacion -> decirHola () . \", que tal. \" . $comunicacion -> decirAdios (); En l'exemple anterior la classe `Comunicacion` necessita reutilitzar els m\u00e8todes `Saludar::decirHola()` i `Despedir::decirAdios()` com que en PHP no hi ha her\u00e8ncia m\u00faltiple mitjan\u00e7ant els `trait` es pot aconseguir reutilitzar-les. ## Gesti\u00f3 d'errors i excepcions ### Introducci\u00f3 De ben segur que a mesura que has anat resolent exercicis o simplement provant codi, t'has trobat amb errors de programaci\u00f3. Alguns s\u00f3n reconeguts per l'entorn de desenvolupament i pots corregir-los abans d'executar. Altres apareixen al navegador en forma de missatge d'error a l'executar l'*script*. A difer\u00e8ncia d'altres llenguatges de programaci\u00f3 que tenen una gesti\u00f3 d'excepcions m\u00e9s completa PHP mant\u00e9 una gesti\u00f3 d'excepcions lleugera ja que distingeix entre errors i excepcions. Aix\u00ed mentre no es produisca una excepci\u00f3 o un error fatal l'execuci\u00f3 del programa continua. No obstant, en PHP 7 canvia la majoria dels errors notificats per PHP. En lloc de notificar errors a trav\u00e9s de l'mecanisme de notificaci\u00f3 d'errors tradicional de PHP 5, la majoria dels errors ara s\u00f3n notificats llan\u00e7ant excepcions `Error`. A l'igual que les excepcions normals, les excepcions `Error` es propagaran fins a arribar al primer bloc `catch` coincident. Si no hi ha blocs coincidents, ser\u00e0 invocat qualsevol gestor d'excepcions predeterminat instal\u00b7lat amb `set_exception_handler ()`, i si no hi hagu\u00e9s cap gestor d'excepcions predeterminat, l'excepci\u00f3 ser\u00e0 convertida en un error fatal i ser\u00e0 manejada com un error tradicional. A causa de que la jerarquia d'`Error` no hereta de `Exception`, el codi que empre blocs catch (Exception $ e) {...} per gestionar excepcions no capturades en PHP 5 trobareu que aquests `Errors` no s\u00f3n capturats per aquests blocs. Es requereix, per tant, un bloc `catch (Error $i)` {...} o un gestor `set_exception_handler()`. ## Errors PHP defineix una classificaci\u00f3 dels errors que es poden produir en l'execuci\u00f3 d'un programa i ofereix m\u00e8todes per ajustar el tractament dels mateixos. Per fer refer\u00e8ncia a cada un dels nivells d'error, PHP defineix una s\u00e8rie de constants. Cada nivell s'identifica per una constant. Per exemple, la constant `E_NOTICE` fa refer\u00e8ncia a avisos que poden indicar un error en executar el programa, i la constant `E_ERROR` engloba errors fatals que provoquen que s'interrompa for\u00e7osament l'execuci\u00f3. La llista completa de constants la pots consultar al manual de PHP, on tamb\u00e9 es descriu el tipus d'errors que representa : [http://es.php.net/manual/es/errorfunc.constants.php](http://es.php.net/manual/es/errorfunc.constants.php) ### Canviar el comportament de PHP La configuraci\u00f3 inicial de com va a tractar-se cada error segons el seu nivell es realitza en `php.ini` el fitxer de configuraci\u00f3 de PHP. Entre els principals par\u00e0metres que pots ajustar estan: - `error_reporting`. Indica quins tipus d'errors es notificaran. El seu valor es forma utilitzant els operadors a nivell de bit per combinar les constants anteriors. El seu valor per defecte \u00e9s `E_ALL & ~ E_NOTICE` que indica que es notifiquin tots els errors (`E_ALL`) excepte els avisos a temps d'execuci\u00f3 (`E_NOTICE`). - `display_errors`. En el seu valor per defecte (`On`), fa que els missatges s'envien a la sortida est\u00e0ndard (i per tant es mostrin al navegador). S'ha de desactivar (`Off`) en els servidors que s'usen per a producci\u00f3. Hi ha altres par\u00e0metres que podem utilitzar en `php.ini` per ajustar el comportament de PHP quan es produeix un error. Des codi, pots fer servir la funci\u00f3 `error_reporting` amb les constants anteriors per establir el nivell de notificaci\u00f3 en un moment determinat. Per exemple, si en algun lloc del teu codi figura una divisi\u00f3 en la qual hi haja la possibilitat que el divisor siga zero, quan aix\u00f2 passe obtindr\u00e0s un missatge d'error al navegador. Per evitar-ho, pots desactivar la notificaci\u00f3 de errors de nivell `E_WARNING` abans de la divisi\u00f3 i restaurar al seu valor normal a continuaci\u00f3: error_reporting ( E_ALL & ~ E_NOTICE & ~ E_WARNING ); $resultat = $dividend / $divisor ; error_reporting ( E_ALL & ~ E_NOTICE ); ### Notificaci\u00f3 d'error en entorns de producci\u00f3 {:.no_toc .nocount } ; PHP comes packaged with two INI files. One that is recommended to be used ; in production environments and one that is recommended to be used in ; development environments. ; php.ini-production contains settings which hold security, performance and ; best practices at its core. But please be aware, these settings may break ; compatibility with older or less security conscience applications. We ; recommending using the production ini in production and testing environments. ; display_errors ; Default Value: On ; Development Value: On ; Production Value: Off ; display_startup_errors ; Default Value: Off ; Development Value: On ; Production Value: Off ; error_reporting ; Default Value: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED ; Development Value: E_ALL ; Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT ; html_errors ; Default Value: On ; Development Value: On ; Production value: On ; log_errors ; Default Value: Off ; Development Value: On ; Production Value: On Gesti\u00f3 global dels errors En utilitzar la funci\u00f3 error_reporting nom\u00e9s controles quin tipus d'errors va a notificar PHP. A vegades pot ser suficient, per\u00f2 per obtenir m\u00e9s control sobre el proc\u00e9s existeix tamb\u00e9 la possibilitat de gestionar de forma personalitzada els errors. \u00c9s a dir, pots programar una funci\u00f3 perqu\u00e8 siga la que executa PHP cada vegada que es produeix un error. El nom d'aquesta funci\u00f3 s'indica utilitzant set_error_handler i ha de tenir com a m\u00ednim dos par\u00e0metres obligatoris (el nivell de l'error i el missatge descriptiu) i fins tres opcionals amb informaci\u00f3 addicional sobre el error (el nom del fitxer en qu\u00e8 es produeix, el nombre de l\u00ednia, i un bolcat de l'estat de les variables en aquest moment). set_error_handler ( \"miGestorDeErrores\" ); $resultat = $dividend / $divisor ; restore_error_handler (); function miGestorDeErrores ( $nivell , $missatge ) { switch ( $nivell ) { case E_WARNING : echo \"Error de tipus WARNING: $missatge . <br />\" ; break ; default : echo \"Error de tipus no especificat: $ missatge. <br />\" ; } } La funci\u00f3 restore_error_handler restaura el gestor d'errors original de PHP (m\u00e9s concretament, el que s'estava fent servir abans de la crida a set_error_handler ). ErrorException Gr\u00e0cies a la combinaci\u00f3 de la classe ErrorException i el m\u00e8tode set_error_handler podem convertir f\u00e0cilment els errors en excepcions de tipus ErrorException : <? php function exception_error_handler ( $severidad , $mensaje , $fichero , $l\u00ednea ) { if ( ! ( error_reporting () & $severidad )) { // Este c\u00f3digo de error no est\u00e1 incluido en error_reporting return ; } throw new ErrorException ( $mensaje , 0 , $severidad , $fichero , $l\u00ednea ); } set_error_handler ( \"exception_error_handler\" ); /* Desencadenar la excepci\u00f3n */ strpos (); ?> Excepcions A partir de la versi\u00f3 5 es va introduir en PHP un model d'excepcions similar a l'existent en altres llenguatges de programaci\u00f3: El codi susceptible de produir algun error s'introdueix en un bloc try . Quan es produeix algun error, es llan\u00e7a una excepci\u00f3 utilitzant la instrucci\u00f3 throw . Despr\u00e9s del bloc try ha d'haver com a m\u00ednim un bloc catch encarregat de processar el error. Si un cop acabat el bloc try no s'ha llan\u00e7at cap excepci\u00f3, es continua amb la execuci\u00f3 en la l\u00ednia seg\u00fcent al bloc o blocs catch . Per exemple, per llan\u00e7ar una excepci\u00f3 quan es produeix una divisi\u00f3 per zero podries fer: try { if ( $divisor == 0 ) throw new Exception ( \"Divisi\u00f3 per zero.\" ); $resultat = $dividend / $divisor ; } catch ( Exception $e ) { echo \"S'ha produ\u00eft el seg\u00fcent error:\" . $ e -> getMessage (); } PHP ofereix una classe base Exception per utilitzar com a gestor d'excepcions. Per llan\u00e7ar una excepci\u00f3 no cal indicar cap par\u00e0metre, encara que de forma opcional es pot passar un missatge d'error (com en l'exemple anterior) i tamb\u00e9 un codi d'error. Entre els m\u00e8todes que podeu utilitzar amb els objectes de la classe Exception estan: getMessage . Retorna el missatge, en cas que s'hagi posat algun. getCode . Retorna el codi d'error si existeix. Les funcions internes de PHP i moltes extensions com MySQLi usen el sistema d'errors vist anteriorment. Nom\u00e9s les extensions m\u00e9s modernes orientades a objectes, com \u00e9s el cas de PDO, utilitzen aquest model d'excepcions. En aquest cas, el m\u00e9s com\u00fa \u00e9s que l'extensi\u00f3 definisca els seues propis controladors d'errors heretant de la classe Exception . Classe ErrorException Com hem dit abans, utilitzant la classe ErrorException \u00e9s possible traduir els errors a excepcions. http://es.php.net/manual/es/class.errorexception.php Concretament, la classe PDO permet definir la f\u00f3rmula que far\u00e0 servir quan es produeixi un error, utilitzant l'atribut PDO::ATTR_ERRMODE . Les possibilitats s\u00f3n: PDO::ERRMODE\\_SILENT . No es fa res quan ocorre un error. \u00c9s el comportament per defecte. PDO::ERRMODE\\_WARNING . Genera un error de tipus E_WARNING quan es produeix un error. PDO::ERRMODE\\_EXCEPTION . Quan es produeix un error llan\u00e7a una excepci\u00f3 utilitzant el gestor propi PDOException. \u00c9s a dir, que si vols utilitzar excepcions amb l'extensi\u00f3 PDO, has de configurar la connexi\u00f3 fent: $dwes -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); Per exemple, el seg\u00fcent codi: $dwes = new PDO ( \"mysql: host = localhost; dbname = dwes\" , \"dwes\" , \"abc123.\" ); $dwes -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); try { $sql = \"SELECT * FROM stox\" ; $result = $dwes -> query ( $sql ); ... } catch ( PDOException $p ) { echo \"Error\" . $p -> getMessage () . \"<br />\" ; } Captura l'excepci\u00f3 que llan\u00e7a PDO a causa de que la taula no existeix. El bloc catch mostra el seg\u00fcent missatge: Error SQLSTATE [ 42 S02 ] : Base table or view not found : 1146 Table 'dwes.stox' does not exist El bloc finally En PHP 5.5 i posterior, es pot utilitzar un bloc finally despr\u00e9s o en lloc dels blocs catch . El codi de dins el bloc finally sempre s'executar\u00e0 despr\u00e9s dels blocs try i catch , independentment que s'haja llan\u00e7at una excepci\u00f3 o no, i abans que l'execuci\u00f3 normal continue. Com que el contingut del bloc finally sempre s'executa \u00e9s ideal per a alliberar recursos en cas d'error, com una connexi\u00f3 a base de dades o a la connexi\u00f3 a un servei proporcionats per tercers. M\u00faltiples catch \u00c9s possible afegir m\u00e9s d'un cath de la seg\u00fcent manera: try { ... } catch ( FooException e ) { ... } catch ( BarException e ) { ... } catch ( Exception e ) { ... } A partir de PHP 7.1 tamb\u00e9 \u00e9s possible fer-ho aix\u00ed: try { ... } catch ( FooException | BarException | Exception e ) { ... } Ampliant les excepcions \u00c9s possible crear excepcions personalitzades heretant de la classe Exception . class NegativeIdException extends Exception { public function __construct ( $message = null ) { $this -> message = $message ?: 'ID Negatiu.' ; parent :: __construct ( $message ); } } Despr\u00e9s l'utilitzarem aix\u00ed: try { $post = new Post ( - 1 , \"Hola m\u00f3n\" , \"Aquest \u00e9s el primer post del blog\" , new DateTime (), \"Vicent\" ); } catch ( NegativeIdException $e ) { echo \"No es pot posar un ID negatiu \\n \" ; } catch ( Exception $e ) { echo \"Excepci\u00f3 desconeguda\" . $e -> getMessage (); } Interf\u00edcie Throwable Throwable \u00e9s la interf\u00edcie base per a qualsevol objecte que puga ser llan\u00e7at mitjan\u00e7ant una sent\u00e8ncia throw en PHP 7, incloent Error i Exception . Les classes de PHP no poden implementar la interf\u00edcie Throwable directament, de manera que han d'estendre en el seu lloc Exception . Aquesta nova interf\u00edcie t\u00e9 per objectiu unificar les dos tipologies d'exceptions. Tant Exception com Error implementen la interf\u00edcie Throwable . Gesti\u00f3 d'errors i excepcions Modifica les classes Input creades anteriorment perqu\u00e8 en cas que el atribut $name no tinga valor llance una excepci\u00f3 amb el missatge \"L'atribut name no pot estar buit\". Captura l'excepci\u00f3. Crea una excepci\u00f3 personalitzada ValuesNotFoundException en cas que el par\u00e0metre $values del control InputRadio estiga buit. Captura l'excepci\u00f3. Crea una excepci\u00f3 personalitzada MovieNotFound que es llance en cas que l'identificador $id sol\u00b7licitat no trobe cap pel\u00b7licula en single-page.php Captura l'excepci\u00f3. Exercicis pr\u00e0ctics Activitat: Pel\u00b7l\u00edcules Objectius Els objectius de l'activitat s\u00f3n els seg\u00fcents: * Aprendre a crear classes * Instanciar objectes * Accedir a les seues propietats. Enunciat Crea la classe Movie en la carpeta src del projecte ( cal usar tipat esctricte ). Els atributs seran: id (enter) title (string) tagline (string) releaseDate (DateTime) starsRating (float) poster (string) Crea els setters i els getters . La constant de classe POSTER_PATH contindr\u00e0 la ruta al directori dels posters. Modifica el projecte de forma que $movies siga un array d\u2019objectes Movie . Modifica'l tamb\u00e9 perqu\u00e8 les p\u00e0gines index.php i movies.php funcionen correctament Activitat: Pel\u00b7licules II Objectius Els objectius de l'activitat s\u00f3n els seg\u00fcents: * Repassar el concepte de par\u00e0metres per refer\u00e8ncia. * Clonar objectes. Enunciat Crea una pel\u00b7l\u00edcula copiant-la (=) de la darrera pel\u00b7l\u00edcula de l'array. Comprova en movies.php que s'ha insertat i que tenen les mateixes dades. Ara canvia el t\u00edtol de la c\u00f2pia afegint-li \"(C\u00f2pia)\" al t\u00edtol que ten\u00eda. Per exemple si el t\u00edtol era \"Ava\" ara ser\u00e0 \"Ava (c\u00f2pia)\". Comprova en movies.php que s'ha insertat i que \u00e9s diferent a l'original. Tenen les mateixes dades? Per qu\u00e8? Repassa els apunts i soluciona-ho. Activitat: Pel\u00b7l\u00edcules III Objectius Els objectius de l'activitat s\u00f3n els seg\u00fcents: * Seguir construint el projecte. * Treballar amb objectes. Enunciat El t\u00edtol de la pel\u00b7licula ser\u00e0 un enlla\u00e7 a single-page.php?id=[atribut id de la pel\u00b7l\u00edcula] . La p\u00e0gina single-page.php mostrar\u00e0 les dades de la pel\u00b7licula que tinga l' id que s'ha passat pel querystring. Post usar array_filter per trobar l'objecte que t\u00e9 l'id indicat. Activitat 4.2: Her\u00e8ncia Objectius Els objectius de l'activitat s\u00f3n els seg\u00fcents: * Treballar l'her\u00e8ncia. * Treballar amb classes abstractes Enunciat Anem a crear una s\u00e8rie de classes per mostrar camps de formulari. Pots incloure'ls al projecte en src/utils o crear-les a banda en la carpeta activitat4 en l'arrel del projecte. Crea la classe abstracta Input que tindr\u00e0 les propietats: * title , ser\u00e0 el text que apareix com a etiqueta de camp. * name , ser\u00e0 el atribut name del camp. * value , ser\u00e0 el valor a mostrar si hi ha. * type , ser\u00e0 el tipus de camp, el valor per defecte ser\u00e0 'text' i es modificar\u00e0 internament en les subclasses ( $this->type=?? ). El constructor ser\u00e0 public function __construct ( string $title , string $name , string $value ); Tindr\u00e0 un m\u00e8tode generateHTML() que no tindr\u00e0 par\u00e0metres i tornar\u00e0 un string amb l'HTML que representa el camp. Per exemple: < label > Nom </ label > < input type = \"text\" value = \"\" name = \"nom\" /> A continuaci\u00f3 crea les classes InputText , InputEmail ( type=email ), InputTel ( type=tel ), que hereten de la classe abstracta i usa-les per a crear un formulari en els camps * Nom * Cogonms * Correu electr\u00f2nic * Tel\u00e8fon fixe * Tel\u00e8fon m\u00f2bil. * Enviar (pots implementar la classe InputSubmit o escriure'l directament en HTML. La p\u00e0gina de resposta mostrar\u00e0 els valors enviats pel formulari. Activitat 4.3: Her\u00e8ncia (i 2) {:.no_toc .nocount} Objectius {:.no_toc .nocount} Els objectius de l'activitat s\u00f3n els seg\u00fcents: * Treballar l'her\u00e8ncia. * Treballar amb classes abstractes * Treballar el polimorfisme Enunciat {:.no_toc .nocount} Anem a crear una s\u00e8rie de classes per mostrar camps de formulari. Pots incloure'ls al projecte en src/utils o crear-les a banda en la carpeta activitat4 en l'arrel del projecte. Crea les classes InputRange i InputRadio que heretaran de la classe abstracta per\u00f2 que tindran el constructor i els atributs diferents. Afig als camps ja existents els camps: Edat (de tipus range, 40 ser\u00e0 el valor per defecte) Sexe (de tipus radio amb el sexe) Crea la classe Form que representar\u00e0 un formulari HTML. El constructor ser\u00e0 public function __construct ( string $action , string $method = 'POST' ); Tindr\u00e0 una propietat p\u00fablica $elements que ser\u00e0 un array d'objectes Input . Un m\u00e8tode Form::add(Input $input) que afegir\u00e0 elements a l'array. Tindr\u00e0 tamb\u00e9 altres dos m\u00e8todes Form::generateStartHTML() que generar\u00e0 l'etiqueta <form...> i Form::generaEndHTML() que generar\u00e0 l'etiqueta de tancament </form> Crea un objecte Form i afig mitjan\u00e7ant el m\u00e8tode add els elements ja existents i mostra el formulari. La p\u00e0gina de resposta mostrar\u00e0 els valors enviats pel formulari. Activitat 4.4: Interf\u00edcie IControl Objectius Els objectius de l'activitat s\u00f3n els seg\u00fcents: * Crear interf\u00edcies. * Treballar amb classes abstractes * Treballar el polimorfisme Enunciat {:.no_toc .nocount} Crea una nova classe Textarea semblant a la classe Input que generar\u00e0 un camp textarea de formulari. Podrem afegir objectes Textarea mitjan\u00e7ant el m\u00e8tode Form::add() ?; Crea la interf\u00edcie IControl : interface IControl { public function render () : string ; } Totes les classes creades implementaran eixa interf\u00edcie. Modifica Form::add() perqu\u00e8 admeta par\u00e0metres de tipus IControl . Implementa en la classe Form la interf\u00edcie Countable . Despr\u00e9s mitjan\u00e7ant la funci\u00f3 count() mostra el n\u00famero total d'elements del formulari. Bibliografia {: .no_toc } Jos\u00e9 Luis Comesa\u00f1a. Apuntes de formaci\u00f3n a distancia del m\u00f3dulo \u00abDesarrollo web en entorno servidor\u00bb del CFGS DAW, elaborados y licenciados por el Ministerio de Educaci\u00f3n, Cultura y Deporte. [en l\u00ednia]. 2012 [data de consulta: 13 de setembre de 2019]. Disponible en \\< https://github.com/statickidz/TemarioDAW/tree/master/DWES > Antonio L\u00f3pez. Learning PHP 7. Packt Publishing (29 de marzo de 2016) .","title":"3.- PHP Orientat a Objectes"},{"location":"03-phpoo/#programacio-orientada-a-objectes-en-php","text":"","title":"Programaci\u00f3 Orientada a Objectes en PHP"},{"location":"03-phpoo/#introduccio","text":"La programaci\u00f3 orientada a objectes (OOP, per les seues sigles en angl\u00e8s) \u00e9s un paradigma de programaci\u00f3. Paradigma: Teoria [\u2026] el nucli central de la qual [\u2026] suministra la base i el model per resoldre problemes i avan\u00e7ar en el coneixement. Per la qual cosa podem definir la programaci\u00f3 orientada a objecte com un m\u00e8tode -provat i estudiat- el qual es basa en les interaccions d'objectes per resoldre les necessitats d'un sistema inform\u00e0tic. Un objecte \u00e9s una estructura que cont\u00e9 dades i el codi que els maneja. L'estructura dels objectes es defineix en les classes. En elles s'escriu el codi que defineix el comportament dels objectes i s'indiquen els membres que formaran part dels objectes d'aquesta classe. Entre els membres de una classe pot haver-hi: M\u00e8todes . S\u00f3n els membres de la classe que contenen el codi de la mateixa. Un m\u00e8tode \u00e9s com una funci\u00f3. Pot rebre par\u00e0metres i retornar valors. Atributs o propietats . Emmagatzemen informaci\u00f3 sobre el estat de l'objecte al que pertanyen (i per tant, el seu valor pot ser diferent per a cadascun dels objectes de la mateixa classe). A la creaci\u00f3 de un objecte basat en una classe se li anomena instanciar una classe i a l'objecte obtingut tamb\u00e9 se li coneix com a inst\u00e0ncia d'aqueixa classe. Els pilars fonamentals de la POO s\u00f3n: Her\u00e8ncia . \u00c9s el proc\u00e9s de crear una classe a partir de una altra, heretant el seu comportament i caracter\u00edstiques i podent redefinir-los. Abstracci\u00f3 . Fa refer\u00e8ncia al fet que cada classe oculta en el seu interior les peculiaritats de la seua implementaci\u00f3, i presenta a l'exterior una s\u00e8rie de m\u00e8todes (interf\u00edcie) el comportament dels quals est\u00e0 ben definit. Vist des de l'exterior, cada objecte \u00e9s un ens abstracte que realitza un treball. Polimorfisme . Un mateix m\u00e8tode pot tenir comportaments diferents en funci\u00f3 de l'objecte amb que s'utilitze. Encapsulaci\u00f3 . En la POO s'ajunten en un mateix lloc les dades i el codi que els manipula. Els avantatges m\u00e9s importants que aporta la programaci\u00f3 orientada a objectes s\u00f3n: Modularitat . La POO permet dividir els programes en parts o m\u00f2duls m\u00e9s xicotets, que s\u00f3n independents uns d'uns altres per\u00f2 poden comunicar-se entre ells. Extensibilitat . Si es desitgen afegir noves caracter\u00edstiques a una aplicaci\u00f3, la POO facilita aquesta tasca de dues formes: afegint nous m\u00e8todes al codi, o creant nous objectes que estenguen el comportament dels ja existents. Manteniment . Els programes desenvolupats utilitzant POO s\u00f3n m\u00e9s senzills de mantenir, a causa de la modularitat abans comentada. Tamb\u00e9 ajuda seguir certes convencions en escriure'ls , per exemple, escriure cada classe en un fitxer propi. No ha d'haver-hi dues classes en un mateix fitxer, ni un altre codi a part de el propi de la classe.","title":"Introducci\u00f3"},{"location":"03-phpoo/#caracteristiques-basiques-de-lus-dobjectes-en-php","text":"","title":"Caracter\u00edstiques b\u00e0siques de l'\u00fas d'objectes en PHP"},{"location":"03-phpoo/#introduccio_1","text":"Segurament tot, o la majoria del que acabes de veure, ja ho coneixies, i \u00e9s fins i tot probable que s\u00e0pigues utilitzar algun llenguatge de programaci\u00f3 orientat a objectes, aix\u00ed que anem a veure directament les peculiaritats pr\u00f2pies de PHP en el que fa refer\u00e8ncia a la POO. En PHP podemos utilitzar els dos paradigmes de la programaci\u00f3: estructurada i orientada a objectes. // utilitzant programaci\u00f3 estructurada $dwes = mysqli_connect ( 'localhost' , 'dwes' , 'abc123.' , 'dwes' ); // utilizant POO $dwes = new mysqli (); $dwes -> connect ( 'localhost' , 'dwes' , 'abc123.' , 'dwes' ); No obstant a\u00e7\u00f2, el llenguatge PHP original no es va dissenyar amb caracter\u00edstiques d'orientaci\u00f3 a objectes. Nom\u00e9s a partir de la versi\u00f3 3, es van comen\u00e7ar a introduir alguns trets de POO en el llenguatge. A\u00e7\u00f2 es va potenciar en la versi\u00f3 4, encara que encara de forma molt rudiment\u00e0ria. Per exemple, en PHP4: Els objectes es passen sempre per valor, no per refer\u00e8ncia. No es pot definir el nivell d'acc\u00e9s per als membres de la classe. Tots s\u00f3n p\u00fablics. No existeixen les interf\u00edcies. No existeixen m\u00e8todes destructors. En PHP5 es va reescriure i potenciar el suport d'orientaci\u00f3 a objectes del llenguatge, ampliant les seues caracter\u00edstiques i millorant el seu rendiment i el seu funcionament general. Les caracter\u00edstiques de POO que suporta PHP5 inclouen: M\u00e8todes est\u00e0tics. M\u00e8todes constructors i destructors. Her\u00e8ncia. Interf\u00edcies. Classes abstractes. Entre les caracter\u00edstiques que no inclou PHP5, i que pots con\u00e8ixer d'altres llenguatges de programaci\u00f3, estan: Her\u00e8ncia m\u00faltiple. Sobrec\u00e0rrega de m\u00e8todes (tenir diversos m\u00e8todes amb el mateix nom, per\u00f2 amb funcionalitats diferents. Els m\u00e8todes sobrecarregats han de tenir diferents par\u00e0metres. Quan es diu al m\u00e8tode, s'utilitza una o una altra versi\u00f3 en funci\u00f3 dels par\u00e0metres amb que es realitze la trucada (podent distingir per el seu nombre i per el seu tipus, segons el llenguatge de programaci\u00f3 utilitzat)) (inclosos els m\u00e8todes constructors). Sobrec\u00e0rrega d'operadors (similar a la sobrec\u00e0rrega de m\u00e8todes. Es poden definir diverses funcionalitats a un mateix operador, i s'utilitzar\u00e0 una o una altra en funci\u00f3 del tipus dels operands que s'usen en cada instant). PHP 7 incorpora millores en el rendiment i el tipat d'arguments, valors de retorn i atributs (des de la versi\u00f3 7.4)","title":"Introducci\u00f3"},{"location":"03-phpoo/#definicio-de-classes","text":"La declaraci\u00f3 de una classe en PHP es fa utilitzant la paraula class . A continuaci\u00f3 i entre claus, han de figurar els membres de la classe. Conv\u00e9 fer-ho de forma ordenada, primer les propietats o atributs, i despr\u00e9s els m\u00e8todes, cadascun amb el seu codi respectiu. class Product { private string $code ; public string $name ; public float $price ; public function show () { print \"<p>\" . $this -> code . \"</p>\" ; } } Com coment\u00e0vem abans, \u00e9s preferible que cada classe figure en el seu propi fitxer ( Product.php ). A m\u00e9s, molts programadors prefereixen utilitzar per a les classes noms que comencen per lletra maj\u00fascula, per a, d'aquesta forma, distingir-los dels objectes i altres variables. Una vegada definida la classe, podem usar la paraula new per a instanciar objectes de la seg\u00fcent forma: $product = new Product (); Perqu\u00e8 la l\u00ednia anterior s'execute sense error, pr\u00e8viament hem d'haver declarat la classe. Per a a\u00e7\u00f2, en aqueix mateix fitxer haur\u00e0s de incloure la classe posant alguna cosa com: require ( 'Product.php' ); Els atributs de una classe s\u00f3n similars a les variables de PHP. \u00c9s possible indicar un valor en la declaraci\u00f3 de la classe. En aquest cas, tots els objectes que s'instancien a partir de aqueixa classe, partiran amb aqueix valor per defecte en l'atribut. Per a accedir des d'un objecte als seus atributs o als m\u00e8todes de la classe, has d'utilitzar l'operador fletxa (fixa't que nom\u00e9s es posa el s\u00edmbol $ davant del nom de l'objecte): $product -> name = 'Samsung Galaxy S' ; $product -> show (); Quan es declara una propietat o un m\u00e8tode, s'ha d'indicar el seu nivell d'acc\u00e9s (o visibilitat). Els principals nivells s\u00f3n: public . Els atributs declarats com public poden utilitzar-se directament per els objectes de la classe. \u00c9s el cas de l'atribut $name anterior. private . Els atributs declarats com private nom\u00e9s poden ser accedits i modificats per els m\u00e8todes definits en la classe, no directament per els objectes de la mateixa. \u00c9s el cas de l'atribut $code . protected . Una propietat o m\u00e8tode protected sols pot ser accedida per la classe on es defineix o per un subclasse. No \u00e9s accessible des de fora. Un dels motius per a crear atributs privats \u00e9s que el seu valor forma part de la informaci\u00f3 interna de l'objecte i no ha de formar part de la seua interf\u00edcie. Un altre motiu \u00e9s mantenir cert control sobre els seus possibles valors. Per exemple, si no vols que es puga canviar lliurement el valor del codi d'un producte. O necessites con\u00e8ixer quin ser\u00e0 el nou valor abans d'assignar-lo. En aquests casos, se solen definir aqueixos atributs com a privats i a m\u00e9s es creen dins de la classe m\u00e8todes per a permetre'ns obtenir i/o modificar els valors d'aqueixos atributs. Per exemple: private $code ; public function setCode ( $newCode ) { if ( ! existsCode ( $newCode )) { $this -> code = $newCode ; return true ; } return false ; } public function getCode () { return $this -> code ; } Encara que no \u00e9s obligatori, el nom del m\u00e8tode que ens permet obtenir el valor de un atribut sol comen\u00e7ar per get , i el que ens permet modificar-lo per set . En PHP5 es van introduir els anomenats m\u00e8todes m\u00e0gics, entre ells __set i __get . Si es declaren aquests dos m\u00e8todes en una classe, PHP els invoca autom\u00e0ticament quan des de un objecte s'intenta usar un atribut no existent o no accessible. Per exemple, el codi seg\u00fcent simula que la classe Product t\u00e9 qualsevol atribut que vulguem usar. class Product { private $atributos = array (); public function __get ( $atributo ) { return $this -> atributos [ $atributo ]; } public function __set ( $atributo , $valor ) { $this -> atributos [ $atributo ] = $valor ; } }","title":"Definici\u00f3 de classes"},{"location":"03-phpoo/#constructor-i-destructor","text":"Com ja has vist, per a instanciar objectes de una classe s'utilitza la paraula new : $product = new Product (); En PHP7 pots definir en les classes m\u00e8todes constructors, que s'executen quan es crea l'objecte. El constructor d'una classe ha d'anomenar-se __construct . Es poden utilitzar, per exemple, per assignar valors a atributs. class Product { private static $numProducts = 0 ; private $code ; public function __construct () { self :: $numPoducts ++ ; } \u2026 } El constructor d'una classe pot cridar a altres m\u00e8todes o tenir par\u00e0metres, en aquest cas hauran de passar-se quan es crea l'objecte. No obstant a\u00e7\u00f2, nom\u00e9s pot haver-hi un m\u00e8tode constructor en cada classe. class Product { private static $numProducts = 0 ; private $code ; public function __construct ( $code ) { $this -> $code = $code ; self :: $numProducts ++ ; } ... } $p = new Product ( 'GALAXYS' ); Per exemple, si com en aquest exemple, definim un constructor en el qual calga passar el codi, sempre que instancies un nou objecte d'aqueixa classe haur\u00e0s de indicar el seu codi. Tamb\u00e9 \u00e9s possible definir un m\u00e8tode destructor, que ha d'anomenar-se __destruct() que s'executar\u00e0 quan s'elimine l'objecte. class Product { private static $numProducts = 0 ; private $code ; public function __construct ( $code ) { $this -> $code = $code ; self :: $numProducts ++ ; } public function __destruct () { self :: $numProducts -- ; } ... } $p = new Product ( 'GALAXYS' );","title":"Constructor i destructor"},{"location":"03-phpoo/#la-pseuodovariable-this","text":"Quan des d'un objecte s'invoca un m\u00e8tode de la classe, a aquest se li passa sempre una refer\u00e8ncia a l'objecte que ha fet la crida. Aquesta refer\u00e8ncia s'emmagatzema en la pseudovariable $this. S'utilitza, per exemple, en el codi anterior per a tenir acc\u00e9s als atributs privats de l'objecte (que nom\u00e9s s\u00f3n accessibles des dels m\u00e8todes de la classe). echo \" < p > \" . $this->code . \" </ p > \"; En la documentaci\u00f3 de PHP tens m\u00e9s informaci\u00f3 sobre els m\u00e8todes m\u00e0gics: http://es.php.net/manual/es/language.oop5.magic.php","title":"La pseuodovariable $this"},{"location":"03-phpoo/#constants-de-classe","text":"A m\u00e9s de m\u00e8todes i propietats, en una classe tamb\u00e9 es poden definir constants, utilitzant la paraula const . \u00c9s important que no confongues els atributs amb les constants. S\u00f3n conceptes diferents: les constants no poden canviar el seu valor (\u00f2bviament, de ac\u00ed el seu nom), no usen el car\u00e0cter $ , s'escriuen en maj\u00fascules (per convenci\u00f3) i el seu valor est\u00e0 associat a la classe, \u00e9s a dir, no existeix una c\u00f2pia del mateix en cada objecte. Per tant, per a accedir a les constants d'una classe, s'ha d'utilitzar el nom de la classe i l'operador :: , anomenat operador de resoluci\u00f3 d'\u00e0mbit (que s'utilitza per a accedir a els elements de una classe). class DB { const USUARIO = 'dwes' ; ... } echo DB :: USUARIO ; \u00c9s important ressaltar que no \u00e9s necessari que existisca cap objecte de una classe per a poder accedir al valor de les constants que definisca.","title":"Constants de classe"},{"location":"03-phpoo/#php-standard-recommendations","text":"PHP-FIG El PHP Framework Interop Group \u00e9s un grup de treball on est\u00e0 involucrada gent que treballa en diferents frameworks amb l'objectiu de posar en com\u00fa les t\u00e8cniques que usen en els diferents projectes per poder integrar-les i compartir-les i poder treballar millor junts. Les recomanacions PSR-1 i PSR-12 s\u00f3n recomanacions sobre l'estil de programaci\u00f3 amb l'objectiu d'aplicar estandards comuns i aix\u00ed facilitar la lectura del codi realitzar per altres. Algunes recomancions que cal seguir: Class names MUST be declared in StudlyCaps . For instance: Product . Class constants MUST be declared in all upper case with underscore separators. For example: const IMAGE_PATH. About property names the only recommendation is to be consistent. So, we SHOULD use $camelCase . The same recommendations applies for variables. Method names MUST be declared in camelCase() . M\u00e9s informaci\u00f3 en Est\u00e1ndares","title":"PHP Standard Recommendations"},{"location":"03-phpoo/#metodes-o-atributs-estatics","text":"Tampoc s'han de confondre les constants amb els membres est\u00e0tics d'una classe. En PHP7, una classe pot tenir atributs o m\u00e8todes est\u00e0tics, tamb\u00e9 anomenats a vegades atributs o m\u00e8todes de classe. Es defineixen utilitzant la paraula clau static . class Product { private static $numProducts = 0 ; public static function newProduct () { self :: $numProducts ++ ; } \u2026 } Els atributs i m\u00e8todes est\u00e0tics no poden ser cridats des d'un objecte de la classe utilitzant l'operador -> . Si el m\u00e8tode o atribut \u00e9s p\u00fablic, haur\u00e0 d'accedir-se utilitzant el nom de la classe i l'operador de resoluci\u00f3 d'\u00e0mbit. Product :: newProduct (); Si \u00e9s privat, com l'atribut $numProducts en l'exemple anterior, nom\u00e9s es podr\u00e0 accedir a ell des dels m\u00e8todes de la pr\u00f2pia classe, utilitzant la paraula self . De la mateixa forma que $this referencia a l'objecte actual, self fa refer\u00e8ncia a la classe actual. self :: $numProductes ++ ; Els atributs est\u00e0tics d'una classe s'utilitzen per a guardar informaci\u00f3 general sobre la mateixa, com pot ser el nombre d'objectes que s'han instanciat. Nom\u00e9s existeix un valor de l'atribut, que s'emmagatzema a nivell de classe. Els m\u00e8todes est\u00e0tics solen realitzar alguna tasca espec\u00edfica o retornar un objecte concret. Per exemple, les classes matem\u00e0tiques solen tenir m\u00e8todes est\u00e0tics per a realitzar logaritmes o arrels quadrades. No t\u00e9 sentit crear un objecte si l'\u00fanica cosa que volem \u00e9s realitzar una operaci\u00f3 matem\u00e0tica. Els m\u00e8todes est\u00e0tics es criden des de la classe. No \u00e9s possible cridar-los des d'un objecte i per tant, no podem usar $this dins d'un m\u00e8tode est\u00e0tic.","title":"M\u00e8todes o atributs est\u00e0tics"},{"location":"03-phpoo/#utilitzacio-dobjectes","text":"Ja saps com instanciar un objecte utilitzant new , i com accedir a els seus m\u00e8todes i atributs p\u00fablics amb l'operador fletxa: $product = new Product (); $product -> name = 'Samsung Galaxy S' ; $product -> show (); Una vegada creat un objecte, pots utilitzar l'operador instanceof per a comprovar si \u00e9s o no una inst\u00e0ncia de una classe determinada. if ( $product instanceof Product ) { \u2026 } Des de PHP7, pots indicar en les funcions i m\u00e8todes de quina classe han de ser els objectes que es passen com a par\u00e0metres. Per a a\u00e7\u00f2, has d'especificar el tipus abans del par\u00e0metre. public function sellProduct ( Product $product ) { \u2026 } Si quan es realitza la crida, el par\u00e0metre no \u00e9s del tipus adequat, es produeix un error que podries capturar. Una caracter\u00edstica de la POO que has de tenir molt en compte \u00e9s qu\u00e8 succeeix amb els objectes quan els passes a una funci\u00f3, o simplement quan executes un codi com el seg\u00fcent: $p = new Product (); $p -> name = 'Samsung Galaxy S' ; $a = $p ; El codi anterior simplement crearia un nou identificador del mateix objecte. A\u00e7\u00f2 \u00e9s, quan s'utilitze qualsevol dels identificadors per a canviar el valor de algun atribut, aquest canvi es veuria tamb\u00e9 reflectit en accedir utilitzant l'altre identificador. Recorda que, encara que hi haja dos o m\u00e9s identificadors del mateix objecte, en realitat tots es refereixen a l'\u00fanica c\u00f2pia que s'emmagatzema del mateix. Per tant, a partir de PHP5 no pots copiar un objecte utilitzant l'operador = . Si necessites copiar un objecte, has d'utilitzar clone . En utilitzar clone sobre un objecte existent, es crea una c\u00f2pia del mateix. A m\u00e9s, existeix una forma senzilla de personalitzar la c\u00f2pia per a cada classe particular. Per exemple, pot succeir que vulgues copiar tots els atributs menys algun. En el nostre exemple, almenys el codi de cada producte ha de ser diferent i, per tant, potser no tinga sentit copiar-lo en crear un nou objecte. Si aquest f\u00f3ra el cas, pots crear un m\u00e8tode de nom __clone en la classe. Aquest m\u00e8tode es cridar\u00e0 autom\u00e0ticament despr\u00e9s de copiar tots els atributs en el nou objecte.","title":"Utilitzaci\u00f3 d'objectes"},{"location":"03-phpoo/#comparacio-dobjectes","text":"En utilitzar l'operador de comparaci\u00f3 (==), es comparen d'una manera senzilla les variables de cada objecte, \u00e9s a dir: dues inst\u00e0ncies d'un objecte s\u00f3n iguals si tenen els mateixos atributs i valors (els valors es comparen amb ==), i s\u00f3n inst\u00e0ncies de la mateixa classe. Quan s'utilitza l'operador identitat (===), les variables d'un objecte s\u00f3n id\u00e8ntiques si i nom\u00e9s s\u00ed fan refer\u00e8ncia a la mateixa inst\u00e0ncia de la mateixa classe.","title":"Comparaci\u00f3 d'Objectes"},{"location":"03-phpoo/#clonacio-dobjectes","text":"Per crear una c\u00f2pia d'un objecte s'utilitza la paraula clau clone (que invoca, si fos possible, al m\u00e8tode __clone() de l'objecte). No es pot cridar el m\u00e8tode __clone() d'un objecte directament. $copia_objecte = clone $objecte ; Quan es clona un objecte, PHP7 dur\u00e0 a terme una c\u00f2pia superficial de les propietats de l'objecte. Les propietats que siguen refer\u00e8ncies a altres variables (per exemple, objectes), mantindran les refer\u00e8ncies. Compte: si els atributs s\u00f3n objectes no es clonaran.","title":"Clonaci\u00f3 d'Objectes"},{"location":"03-phpoo/#iteracio-dobjectes","text":"PHP 7 ofereix una forma de definir objectes, de manera que \u00e9s possible rec\u00f3rrer una llista d'elements amb, per exemple, una sent\u00e8ncia foreach . Per defecte, s'utilitzaran totes les propietats visibles per a la iteraci\u00f3.","title":"Iteraci\u00f3 d'objectes"},{"location":"03-phpoo/#herencia","text":"","title":"Her\u00e8ncia"},{"location":"03-phpoo/#introduccio_2","text":"L'her\u00e8ncia \u00e9s un mecanisme de la POO que ens permet definir noves classes sobre la base d'una altra ja existent. Les noves classes que hereten tamb\u00e9 es coneixen amb el nom de subclasses. La classe de la qual hereten es diu classe base o superclasse. Per exemple, en la nostra tenda web anem a tenir productes de diferents tipus. En principi hem creat per a manejar-los una classe anomenada Product , amb alguns atributs i un m\u00e8tode que genera una eixida personalitzada en format HTML del codi. class Product { public string $code ; public string $name ; public function show () { echo \"<p>\" . $this -> code . \"</p>\" ; } } Aquesta classe \u00e9s molt \u00fatil si l'\u00fanica informaci\u00f3 que tenim dels diferents productes \u00e9s la que es mostra a dalt. Per\u00f2, si vols personalitzar la informaci\u00f3 que vas a tractar de cada tipus de producte (i emmagatzemar, per exemple per als televisors, les polzades que tenen o la seua tecnologia de fabricaci\u00f3), pots crear noves classes que hereten de Product . Per exemple, TV , Computer , Phone . class TV extends Product { public $size ; public $technology ; }","title":"Introducci\u00f3"},{"location":"03-phpoo/#la-paraula-reservada-extends","text":"Com pots veure, per a definir una classe que herete d'una altra, simplement has de utilitzar la paraula extends indicant la superclasse. Els nous objectes que s'instancien a partir de la subclasse s\u00f3n tamb\u00e9 objectes de la classe base; es pot comprovar utilitzant l'operador instanceof . $tv = new TV (); if ( $tv instanceof Product ) { // Aquest codi s'executa doncs la condici\u00f3 \u00e9s certa \u2026 } La nova classe hereta tots els atributs i m\u00e8todes p\u00fablics de la classe base, per\u00f2 no els privats. Si vols crear en la classe base un m\u00e8tode no visible a l'exterior (com els privats) que s'herete a les subclasses, has d'utilitzar la paraula protected en lloc de private . A m\u00e9s, pots redefinir el comportament dels m\u00e8todes existents en la classe base, simplement creant en la subclasse un nou m\u00e8tode amb el mateix nom. class TV extends Producte { public $size ; public $technology ; public function show () { print \"<p>\" . $this -> size . \" polzades</p>\" ; } }","title":"La paraula reservada extends"},{"location":"03-phpoo/#la-paraula-reservada-final","text":"Existeix una forma d'evitar que les classes heretades puguen redefinir el comportament dels m\u00e8todes existents en la superclasse: utilitzar la paraula final . Si en el nostre exemple hagu\u00e9rem fet: class Product { public $code ; public $name ; public $price ; public final function show () { print \"<p>\" . $this -> code . \"</p>\" ; } } En aquest cas el m\u00e8tode show no podria redefinir-se en la classe TV . Tamb\u00e9 es pot declarar una classe utilitzant final . En aquest cas no podran crear-se classes heretades utilitzant-les com a base. final class Product { ... }","title":"La paraula reservada final"},{"location":"03-phpoo/#la-paraula-reservada-abstract","text":"Oposadament al modificador final , existeix tamb\u00e9 abstract . S'utilitza de la mateixa forma, tant amb m\u00e8todes com amb classes completes, per\u00f2 en lloc de prohibir l'her\u00e8ncia, obliga a que s'herete. \u00c9s a dir, una classe amb el modificador abstract no pot tenir objectes que la instancien, per\u00f2 s\u00ed podr\u00e0 utilitzar-se de classe base i les seues subclasses s\u00ed podran utilitzar-se per a instanciar objectes. abstract class Product { ... } Un m\u00e8tode en el qual s'indique abstract , ha de ser redefinit obligat\u00f2riament per les subclasses, i no podr\u00e0 contenir codi. class Product { \u2026 abstract public function show (); } Anem a fer una petita modificaci\u00f3 en la nostra classe Product . Per a facilitar la creaci\u00f3 de nous objectes, crearem un constructor al que se li passar\u00e0 un array amb els valors dels atributs del nou producte. class Product { public $code ; public $name ; public $shortName ; public $price ; public function show () { echo \"<p>\" . $this -> code . \"</p>\" ; } public function __construct ( $row ) { $this -> code = $row [ 'code' ]; $this -> name = $row [ 'name' ]; $this -> shortName = $row [ 'short_name' ]; $this -> price = $row [ 'price' ]; } } Qu\u00e8 passa ara amb la classe TV , qu\u00e8 hereta de Product? Quan crees un nou objecte d'aqueixa classe, es cridar\u00e0 al constructor de Product? Pots crear un nou constructor espec\u00edfic perqu\u00e8 redefinisca el comportament de la classe base? Comen\u00e7ant per aquesta \u00faltima pregunta, \u00f2bviament pots definir un nou constructor per a les classes heretades que redefinisquen el comportament del que existeix en la classe base, tal com faries amb qualsevol altre m\u00e8tode. I depenent de si programes o no el constructor en la classe heretada, es cridar\u00e0 o no autom\u00e0ticament al constructor de la classe base. En PHP5+, si la classe heretada no t\u00e9 constructor propi, es cridar\u00e0 autom\u00e0ticament al constructor de la classe base (si existeix). No obstant a\u00e7\u00f2, si la classe heretada defineix el seu propi constructor, haur\u00e0s de ser tu el que realitze la crida al constructor de la classe base si ho consideres necessari, utilitzant per a a\u00e7\u00f2 la paraula parent i l'operador de resoluci\u00f3 d'\u00e0mbit. class TV extends Product { public $size ; public $technology ; public function show () { print \"<p>\" . $this -> size . \" polzades</p>\" ; } public function __construct ( $row ) { parent :: __construct ( $row ); $this -> size = $row [ 'size' ]; $this -> technology = $row [ 'technology' ]; } } Ja has vist amb amb anterioritat com s'utilitzava la paraula clau self per a tenir acc\u00e9s a la classe actual. La paraula parent \u00e9s semblant. En utilitzar parent fas refer\u00e8ncia a la classe base de la actual, tal com apareix rere extends .","title":"La paraula reservada abstract"},{"location":"03-phpoo/#interficies","text":"","title":"Interf\u00edcies"},{"location":"03-phpoo/#introduccio_3","text":"Un interf\u00edcie ( interface ) \u00e9s com una classe buida que solament cont\u00e9 declaracions de m\u00e8todes. Es defineixen utilitzant la paraula interface . Per exemple, abans vam veure que pod\u00edem crear noves classes heretades de Product , com TV o Ordinador . Tamb\u00e9 vam veure que en les subclasses podies redefinir el comportament del m\u00e8tode perqu\u00e8 generara una eixida en HTML diferent per a cada tipus de producte. Si vols assegurar-te que tots els tipus de productes tinguen un m\u00e8tode show , pots crear un interface com el seg\u00fcent. interface IShow { public function show (); } I quan crees les subclasses haur\u00e0s d'indicar amb la paraula implements que han de implementar els m\u00e8todes declarats en aquest interface. class TV extends Product implements IShow { \u2026 public function show () { echo \"<p>\" . $this -> size . \" polzades</p>\" ; } \u2026 } Tots els m\u00e8todes que es declaren en un interface han de ser p\u00fablics. A m\u00e9s de m\u00e8todes, els interf\u00edcies podran contenir constants per\u00f2 no atributs. Un interface \u00e9s com un contracte que la classe ha de complir. En implementar tots els m\u00e8todes declarats en la interf\u00edcie s'assegura la interoperabilitat entre classes. Si saps que una classe implementa un interf\u00edcie determinada saps quins noms tenen els seus m\u00e8todes, quins par\u00e0metres els has de passar i, probablement, podr\u00e0s esbrinar f\u00e0cilment amb quins objectiu han sigut escrits. Per exemple, en la llibreria de PHP est\u00e0 definit la interf\u00edcie countable . Countable { abstract public int count ( void ) } Si crees una classe per a la cistella de la compra en la tenda web, podries implementar aquesta interf\u00edcie per a contar els productes que figuren en la mateixa. Abans vas aprendre que en PHP5 una classe nom\u00e9s pot heretar d'una altra. En PHP5 no existeix l'her\u00e8ncia m\u00faltiple. No obstant a\u00e7\u00f2, s\u00ed \u00e9s possible crear classes que implementen diverses interf\u00edcies, simplement separant la llista d'interf\u00edcies per comes despr\u00e9s de la paraula implements . class TV extends Product implements IShow , Countable { \u2026 } L'\u00fanica restricci\u00f3 \u00e9s que els noms dels m\u00e8todes que s'hagen d'implementar en els diferents interf\u00edcies no coincidisquen. \u00c9s a dir, en el nostre exemple, la interf\u00edcie IShow no podria contenir el m\u00e8tode count , doncs aquest ja est\u00e0 declarat en Countable . En PHP7 tamb\u00e9 es poden crear nous interf\u00edcies heretant d'uns altres ja existents. Es fa de la mateixa forma que amb les classes, utilitzant la paraula extends .","title":"Introducci\u00f3"},{"location":"03-phpoo/#classes-abstractes-vs-interficies","text":"Un dels dubtes m\u00e9s comuns en POO, \u00e9s quina soluci\u00f3 adoptar en algunes situacions: interf\u00edcies o classes abstractes. Ambdues permeten definir regles per a les classes que els implementen o hereten respectivament. I cap permet instanciar objectes. Les difer\u00e8ncies principals entre ambdues opcions s\u00f3n: En les classes abstractes, els m\u00e8todes poden contenir codi. Si van a existir diverses subclasses amb un comportament com\u00fa, es podria programar en els m\u00e8todes de la classe abstracta. Si s'opta per un interface, caldria repetir el codi en totes les classes que ho implemente. Les classes abstractes poden contenir atributs, i les interf\u00edcies no. No es pot crear una classe que herete de dues classes abstractes, per\u00f2 s\u00ed es pot crear una classe que implemente diverses interf\u00edcies. Per exemple, en la botiga online va a haver-hi dos tipus d'usuaris: clients i empleats. Si necessites crear en la teua aplicaci\u00f3 objectes de tipus Usuari (per exemple, per a manejar de forma conjunta als clients i als empleats), hauries de crear una classe no abstracta amb aqueix nom, de la qual heretarien Client i Empleat. Podeu llegir tamb\u00e9 l'article Clases abastractas e interfaces en PHP class Usuari { ... } class Client extends Usuari { ... } class Empleat extends Usuari { ... } Per\u00f2 si no f\u00f3ra aix\u00ed, hauries de decidir si crees o no Usuari , i si ho faries com una classe abstracta o com una interf\u00edcie. Si per exemple, volgueres definir en un \u00fanic lloc els atributs comuns a Client i a Empleat, hauries de crear una classe abstracta Usuari de la qual hereten. abstract class Usuari { public $dni ; protected $nom ; ... } Per\u00f2 a\u00e7\u00f2 no podries fer-ho si ja tens planificada alguna relaci\u00f3 d'her\u00e8ncia per a una d'aquestes dues classes. Per a finalitzar amb les interf\u00edcies, a la llista de funcions de PHP relacionades amb la POO pots afegir les seg\u00fcents. Funci\u00f3 Exemple Significat get_declared_interf\u00edcies print_r (get_declared_interf\u00edcies()); Retorna un array amb els noms dels interf\u00edcies declarats. interface_exists if (interface_exists('iShow') { \u2026 } Retorna true si existeix l'interface que s'indica, o false en cas contrari. {:.alert .alert-activity} ## Trets (Traits) Des de la seva versi\u00f3 5.4.0, PHP implementa una metodologia de reutilitzaci\u00f3 de codi anomenada `Traits`. Els trets (\u00abtraits\u00bb en angl\u00e8s) s\u00f3n un mecanisme de reutilitzaci\u00f3 de codi en llenguatges d'her\u00e8ncia simple, com PHP. L'objectiu d'un tret \u00e9s el de reduir les limitacions pr\u00f2pies de l'her\u00e8ncia simple permetent que els desenvolupadors reutilitzen a voluntat conjunts de m\u00e8todes sobre diverses classes independents i pertanyents a classes jer\u00e0rquiques diferents. Un Trait \u00e9s similar a una classe, per\u00f2 amb l'\u00fanic objectiu d'agrupar funcionalitats molt espec\u00edfiques i d'una manera coherent. No es pot instanciar directament un `Trait`. \u00c9s per tant un afegit a l'her\u00e8ncia tradicional, i habilita la composici\u00f3 horitzontal de comportaments; \u00e9s a dir, permet combinar membres de classes sense haver d'usar her\u00e8ncia. trait Saludar { function decirHola (){ return \"hola\" ; } } trait Despedir { function decirAdios (){ return \"adi\u00f3s\" ; } } class Comunicacion { use Saludar , Despedir ; } $comunicacion = new Comunicacion ; echo $comunicacion -> decirHola () . \", que tal. \" . $comunicacion -> decirAdios (); En l'exemple anterior la classe `Comunicacion` necessita reutilitzar els m\u00e8todes `Saludar::decirHola()` i `Despedir::decirAdios()` com que en PHP no hi ha her\u00e8ncia m\u00faltiple mitjan\u00e7ant els `trait` es pot aconseguir reutilitzar-les. ## Gesti\u00f3 d'errors i excepcions ### Introducci\u00f3 De ben segur que a mesura que has anat resolent exercicis o simplement provant codi, t'has trobat amb errors de programaci\u00f3. Alguns s\u00f3n reconeguts per l'entorn de desenvolupament i pots corregir-los abans d'executar. Altres apareixen al navegador en forma de missatge d'error a l'executar l'*script*. A difer\u00e8ncia d'altres llenguatges de programaci\u00f3 que tenen una gesti\u00f3 d'excepcions m\u00e9s completa PHP mant\u00e9 una gesti\u00f3 d'excepcions lleugera ja que distingeix entre errors i excepcions. Aix\u00ed mentre no es produisca una excepci\u00f3 o un error fatal l'execuci\u00f3 del programa continua. No obstant, en PHP 7 canvia la majoria dels errors notificats per PHP. En lloc de notificar errors a trav\u00e9s de l'mecanisme de notificaci\u00f3 d'errors tradicional de PHP 5, la majoria dels errors ara s\u00f3n notificats llan\u00e7ant excepcions `Error`. A l'igual que les excepcions normals, les excepcions `Error` es propagaran fins a arribar al primer bloc `catch` coincident. Si no hi ha blocs coincidents, ser\u00e0 invocat qualsevol gestor d'excepcions predeterminat instal\u00b7lat amb `set_exception_handler ()`, i si no hi hagu\u00e9s cap gestor d'excepcions predeterminat, l'excepci\u00f3 ser\u00e0 convertida en un error fatal i ser\u00e0 manejada com un error tradicional. A causa de que la jerarquia d'`Error` no hereta de `Exception`, el codi que empre blocs catch (Exception $ e) {...} per gestionar excepcions no capturades en PHP 5 trobareu que aquests `Errors` no s\u00f3n capturats per aquests blocs. Es requereix, per tant, un bloc `catch (Error $i)` {...} o un gestor `set_exception_handler()`. ## Errors PHP defineix una classificaci\u00f3 dels errors que es poden produir en l'execuci\u00f3 d'un programa i ofereix m\u00e8todes per ajustar el tractament dels mateixos. Per fer refer\u00e8ncia a cada un dels nivells d'error, PHP defineix una s\u00e8rie de constants. Cada nivell s'identifica per una constant. Per exemple, la constant `E_NOTICE` fa refer\u00e8ncia a avisos que poden indicar un error en executar el programa, i la constant `E_ERROR` engloba errors fatals que provoquen que s'interrompa for\u00e7osament l'execuci\u00f3. La llista completa de constants la pots consultar al manual de PHP, on tamb\u00e9 es descriu el tipus d'errors que representa : [http://es.php.net/manual/es/errorfunc.constants.php](http://es.php.net/manual/es/errorfunc.constants.php) ### Canviar el comportament de PHP La configuraci\u00f3 inicial de com va a tractar-se cada error segons el seu nivell es realitza en `php.ini` el fitxer de configuraci\u00f3 de PHP. Entre els principals par\u00e0metres que pots ajustar estan: - `error_reporting`. Indica quins tipus d'errors es notificaran. El seu valor es forma utilitzant els operadors a nivell de bit per combinar les constants anteriors. El seu valor per defecte \u00e9s `E_ALL & ~ E_NOTICE` que indica que es notifiquin tots els errors (`E_ALL`) excepte els avisos a temps d'execuci\u00f3 (`E_NOTICE`). - `display_errors`. En el seu valor per defecte (`On`), fa que els missatges s'envien a la sortida est\u00e0ndard (i per tant es mostrin al navegador). S'ha de desactivar (`Off`) en els servidors que s'usen per a producci\u00f3. Hi ha altres par\u00e0metres que podem utilitzar en `php.ini` per ajustar el comportament de PHP quan es produeix un error. Des codi, pots fer servir la funci\u00f3 `error_reporting` amb les constants anteriors per establir el nivell de notificaci\u00f3 en un moment determinat. Per exemple, si en algun lloc del teu codi figura una divisi\u00f3 en la qual hi haja la possibilitat que el divisor siga zero, quan aix\u00f2 passe obtindr\u00e0s un missatge d'error al navegador. Per evitar-ho, pots desactivar la notificaci\u00f3 de errors de nivell `E_WARNING` abans de la divisi\u00f3 i restaurar al seu valor normal a continuaci\u00f3: error_reporting ( E_ALL & ~ E_NOTICE & ~ E_WARNING ); $resultat = $dividend / $divisor ; error_reporting ( E_ALL & ~ E_NOTICE ); ### Notificaci\u00f3 d'error en entorns de producci\u00f3 {:.no_toc .nocount } ; PHP comes packaged with two INI files. One that is recommended to be used ; in production environments and one that is recommended to be used in ; development environments. ; php.ini-production contains settings which hold security, performance and ; best practices at its core. But please be aware, these settings may break ; compatibility with older or less security conscience applications. We ; recommending using the production ini in production and testing environments. ; display_errors ; Default Value: On ; Development Value: On ; Production Value: Off ; display_startup_errors ; Default Value: Off ; Development Value: On ; Production Value: Off ; error_reporting ; Default Value: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED ; Development Value: E_ALL ; Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT ; html_errors ; Default Value: On ; Development Value: On ; Production value: On ; log_errors ; Default Value: Off ; Development Value: On ; Production Value: On","title":"Classes abstractes vs interf\u00edcies"},{"location":"03-phpoo/#gestio-global-dels-errors","text":"En utilitzar la funci\u00f3 error_reporting nom\u00e9s controles quin tipus d'errors va a notificar PHP. A vegades pot ser suficient, per\u00f2 per obtenir m\u00e9s control sobre el proc\u00e9s existeix tamb\u00e9 la possibilitat de gestionar de forma personalitzada els errors. \u00c9s a dir, pots programar una funci\u00f3 perqu\u00e8 siga la que executa PHP cada vegada que es produeix un error. El nom d'aquesta funci\u00f3 s'indica utilitzant set_error_handler i ha de tenir com a m\u00ednim dos par\u00e0metres obligatoris (el nivell de l'error i el missatge descriptiu) i fins tres opcionals amb informaci\u00f3 addicional sobre el error (el nom del fitxer en qu\u00e8 es produeix, el nombre de l\u00ednia, i un bolcat de l'estat de les variables en aquest moment). set_error_handler ( \"miGestorDeErrores\" ); $resultat = $dividend / $divisor ; restore_error_handler (); function miGestorDeErrores ( $nivell , $missatge ) { switch ( $nivell ) { case E_WARNING : echo \"Error de tipus WARNING: $missatge . <br />\" ; break ; default : echo \"Error de tipus no especificat: $ missatge. <br />\" ; } } La funci\u00f3 restore_error_handler restaura el gestor d'errors original de PHP (m\u00e9s concretament, el que s'estava fent servir abans de la crida a set_error_handler ).","title":"Gesti\u00f3 global dels errors"},{"location":"03-phpoo/#errorexception","text":"Gr\u00e0cies a la combinaci\u00f3 de la classe ErrorException i el m\u00e8tode set_error_handler podem convertir f\u00e0cilment els errors en excepcions de tipus ErrorException : <? php function exception_error_handler ( $severidad , $mensaje , $fichero , $l\u00ednea ) { if ( ! ( error_reporting () & $severidad )) { // Este c\u00f3digo de error no est\u00e1 incluido en error_reporting return ; } throw new ErrorException ( $mensaje , 0 , $severidad , $fichero , $l\u00ednea ); } set_error_handler ( \"exception_error_handler\" ); /* Desencadenar la excepci\u00f3n */ strpos (); ?>","title":"ErrorException"},{"location":"03-phpoo/#excepcions","text":"A partir de la versi\u00f3 5 es va introduir en PHP un model d'excepcions similar a l'existent en altres llenguatges de programaci\u00f3: El codi susceptible de produir algun error s'introdueix en un bloc try . Quan es produeix algun error, es llan\u00e7a una excepci\u00f3 utilitzant la instrucci\u00f3 throw . Despr\u00e9s del bloc try ha d'haver com a m\u00ednim un bloc catch encarregat de processar el error. Si un cop acabat el bloc try no s'ha llan\u00e7at cap excepci\u00f3, es continua amb la execuci\u00f3 en la l\u00ednia seg\u00fcent al bloc o blocs catch . Per exemple, per llan\u00e7ar una excepci\u00f3 quan es produeix una divisi\u00f3 per zero podries fer: try { if ( $divisor == 0 ) throw new Exception ( \"Divisi\u00f3 per zero.\" ); $resultat = $dividend / $divisor ; } catch ( Exception $e ) { echo \"S'ha produ\u00eft el seg\u00fcent error:\" . $ e -> getMessage (); } PHP ofereix una classe base Exception per utilitzar com a gestor d'excepcions. Per llan\u00e7ar una excepci\u00f3 no cal indicar cap par\u00e0metre, encara que de forma opcional es pot passar un missatge d'error (com en l'exemple anterior) i tamb\u00e9 un codi d'error. Entre els m\u00e8todes que podeu utilitzar amb els objectes de la classe Exception estan: getMessage . Retorna el missatge, en cas que s'hagi posat algun. getCode . Retorna el codi d'error si existeix. Les funcions internes de PHP i moltes extensions com MySQLi usen el sistema d'errors vist anteriorment. Nom\u00e9s les extensions m\u00e9s modernes orientades a objectes, com \u00e9s el cas de PDO, utilitzen aquest model d'excepcions. En aquest cas, el m\u00e9s com\u00fa \u00e9s que l'extensi\u00f3 definisca els seues propis controladors d'errors heretant de la classe Exception . Classe ErrorException Com hem dit abans, utilitzant la classe ErrorException \u00e9s possible traduir els errors a excepcions. http://es.php.net/manual/es/class.errorexception.php Concretament, la classe PDO permet definir la f\u00f3rmula que far\u00e0 servir quan es produeixi un error, utilitzant l'atribut PDO::ATTR_ERRMODE . Les possibilitats s\u00f3n: PDO::ERRMODE\\_SILENT . No es fa res quan ocorre un error. \u00c9s el comportament per defecte. PDO::ERRMODE\\_WARNING . Genera un error de tipus E_WARNING quan es produeix un error. PDO::ERRMODE\\_EXCEPTION . Quan es produeix un error llan\u00e7a una excepci\u00f3 utilitzant el gestor propi PDOException. \u00c9s a dir, que si vols utilitzar excepcions amb l'extensi\u00f3 PDO, has de configurar la connexi\u00f3 fent: $dwes -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); Per exemple, el seg\u00fcent codi: $dwes = new PDO ( \"mysql: host = localhost; dbname = dwes\" , \"dwes\" , \"abc123.\" ); $dwes -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); try { $sql = \"SELECT * FROM stox\" ; $result = $dwes -> query ( $sql ); ... } catch ( PDOException $p ) { echo \"Error\" . $p -> getMessage () . \"<br />\" ; } Captura l'excepci\u00f3 que llan\u00e7a PDO a causa de que la taula no existeix. El bloc catch mostra el seg\u00fcent missatge: Error SQLSTATE [ 42 S02 ] : Base table or view not found : 1146 Table 'dwes.stox' does not exist","title":"Excepcions"},{"location":"03-phpoo/#el-bloc-finally","text":"En PHP 5.5 i posterior, es pot utilitzar un bloc finally despr\u00e9s o en lloc dels blocs catch . El codi de dins el bloc finally sempre s'executar\u00e0 despr\u00e9s dels blocs try i catch , independentment que s'haja llan\u00e7at una excepci\u00f3 o no, i abans que l'execuci\u00f3 normal continue. Com que el contingut del bloc finally sempre s'executa \u00e9s ideal per a alliberar recursos en cas d'error, com una connexi\u00f3 a base de dades o a la connexi\u00f3 a un servei proporcionats per tercers.","title":"El bloc finally"},{"location":"03-phpoo/#multiples-catch","text":"\u00c9s possible afegir m\u00e9s d'un cath de la seg\u00fcent manera: try { ... } catch ( FooException e ) { ... } catch ( BarException e ) { ... } catch ( Exception e ) { ... } A partir de PHP 7.1 tamb\u00e9 \u00e9s possible fer-ho aix\u00ed: try { ... } catch ( FooException | BarException | Exception e ) { ... }","title":"M\u00faltiples catch"},{"location":"03-phpoo/#ampliant-les-excepcions","text":"\u00c9s possible crear excepcions personalitzades heretant de la classe Exception . class NegativeIdException extends Exception { public function __construct ( $message = null ) { $this -> message = $message ?: 'ID Negatiu.' ; parent :: __construct ( $message ); } } Despr\u00e9s l'utilitzarem aix\u00ed: try { $post = new Post ( - 1 , \"Hola m\u00f3n\" , \"Aquest \u00e9s el primer post del blog\" , new DateTime (), \"Vicent\" ); } catch ( NegativeIdException $e ) { echo \"No es pot posar un ID negatiu \\n \" ; } catch ( Exception $e ) { echo \"Excepci\u00f3 desconeguda\" . $e -> getMessage (); }","title":"Ampliant les excepcions"},{"location":"03-phpoo/#interficie-throwable","text":"Throwable \u00e9s la interf\u00edcie base per a qualsevol objecte que puga ser llan\u00e7at mitjan\u00e7ant una sent\u00e8ncia throw en PHP 7, incloent Error i Exception . Les classes de PHP no poden implementar la interf\u00edcie Throwable directament, de manera que han d'estendre en el seu lloc Exception . Aquesta nova interf\u00edcie t\u00e9 per objectiu unificar les dos tipologies d'exceptions. Tant Exception com Error implementen la interf\u00edcie Throwable .","title":"Interf\u00edcie Throwable"},{"location":"03-phpoo/#gestio-derrors-i-excepcions","text":"Modifica les classes Input creades anteriorment perqu\u00e8 en cas que el atribut $name no tinga valor llance una excepci\u00f3 amb el missatge \"L'atribut name no pot estar buit\". Captura l'excepci\u00f3. Crea una excepci\u00f3 personalitzada ValuesNotFoundException en cas que el par\u00e0metre $values del control InputRadio estiga buit. Captura l'excepci\u00f3. Crea una excepci\u00f3 personalitzada MovieNotFound que es llance en cas que l'identificador $id sol\u00b7licitat no trobe cap pel\u00b7licula en single-page.php Captura l'excepci\u00f3.","title":"Gesti\u00f3 d'errors i excepcions"},{"location":"03-phpoo/#exercicis-practics","text":"","title":"Exercicis pr\u00e0ctics"},{"location":"03-phpoo/#activitat-pellicules","text":"","title":"Activitat: Pel\u00b7l\u00edcules"},{"location":"03-phpoo/#activitat-pellicules-ii","text":"","title":"Activitat: Pel\u00b7licules II"},{"location":"03-phpoo/#activitat-pellicules-iii","text":"","title":"Activitat: Pel\u00b7l\u00edcules III"},{"location":"03-phpoo/#activitat-42-herencia","text":"","title":"Activitat 4.2: Her\u00e8ncia"},{"location":"03-phpoo/#activitat-43-herencia-i-2","text":"{:.no_toc .nocount}","title":"Activitat 4.3: Her\u00e8ncia (i 2)"},{"location":"03-phpoo/#activitat-44-interficie-icontrol","text":"","title":"Activitat 4.4: Interf\u00edcie IControl"},{"location":"03-phpoo/#bibliografia","text":"{: .no_toc } Jos\u00e9 Luis Comesa\u00f1a. Apuntes de formaci\u00f3n a distancia del m\u00f3dulo \u00abDesarrollo web en entorno servidor\u00bb del CFGS DAW, elaborados y licenciados por el Ministerio de Educaci\u00f3n, Cultura y Deporte. [en l\u00ednia]. 2012 [data de consulta: 13 de setembre de 2019]. Disponible en \\< https://github.com/statickidz/TemarioDAW/tree/master/DWES > Antonio L\u00f3pez. Learning PHP 7. Packt Publishing (29 de marzo de 2016) .","title":"Bibliografia"},{"location":"01-intro/00_index/","text":"Introducci\u00f3 a la programaci\u00f3 web Objectius Seleccionar les arquitectures i tecnologies de programaci\u00f3 web en entorn servidor, analitzant-ne les capacitats i caracter\u00edstiques pr\u00f2pies. Introduir els principals llenguatges i frameworks per al desenvolupament en l'entorn servidor. Caracteritzar i diferenciar els models d'execuci\u00f3 de codi en el servidor i en el client web. Identificar les principals tecnologies associades. Instal\u00b7lar i configurar l'entorn de treball que emprarem per al desenvolupament web. Visualitzar mitjan\u00e7ant el navegador una p\u00e0gina web html amb codi PHP encastat. Continguts Arquitectura d'una aplicaci\u00f3 web Elements: navegador, servidor, protocol HTTP i HTML El model client/servidor P\u00e0gines web est\u00e0tiques i din\u00e0miques Execuci\u00f3 de codi en el servidor i en el client Tecnologies per a programaci\u00f3 web del costat del servidor Arquitectures i plataformes Servidors web vs Servidors d'Aplicacions Integraci\u00f3 amb el servidor web Llenguatges Codi embegut en el llenguatge de marques Eines de programaci\u00f3 Programaci\u00f3 web amb PHP Preparant l'entorn de desenvolupament Instal\u00b7laci\u00f3 de XAMPP Configuraci\u00f3 b\u00e0sica d'Apache Configuraci\u00f3 b\u00e0sica del m\u00f2dul de PHP Instal\u00b7laci\u00f3 de l'IDE PhpStorm \u00das b\u00e0sic de l'eina Depuraci\u00f3 Eines per a depuraci\u00f3 de codi php Instal\u00b7laci\u00f3 i configuraci\u00f3 de XDebug","title":"Introducci\u00f3"},{"location":"01-intro/00_index/#introduccio-a-la-programacio-web","text":"","title":"Introducci\u00f3 a la programaci\u00f3 web"},{"location":"01-intro/00_index/#objectius","text":"Seleccionar les arquitectures i tecnologies de programaci\u00f3 web en entorn servidor, analitzant-ne les capacitats i caracter\u00edstiques pr\u00f2pies. Introduir els principals llenguatges i frameworks per al desenvolupament en l'entorn servidor. Caracteritzar i diferenciar els models d'execuci\u00f3 de codi en el servidor i en el client web. Identificar les principals tecnologies associades. Instal\u00b7lar i configurar l'entorn de treball que emprarem per al desenvolupament web. Visualitzar mitjan\u00e7ant el navegador una p\u00e0gina web html amb codi PHP encastat.","title":"Objectius"},{"location":"01-intro/00_index/#continguts","text":"Arquitectura d'una aplicaci\u00f3 web Elements: navegador, servidor, protocol HTTP i HTML El model client/servidor P\u00e0gines web est\u00e0tiques i din\u00e0miques Execuci\u00f3 de codi en el servidor i en el client Tecnologies per a programaci\u00f3 web del costat del servidor Arquitectures i plataformes Servidors web vs Servidors d'Aplicacions Integraci\u00f3 amb el servidor web Llenguatges Codi embegut en el llenguatge de marques Eines de programaci\u00f3 Programaci\u00f3 web amb PHP Preparant l'entorn de desenvolupament Instal\u00b7laci\u00f3 de XAMPP Configuraci\u00f3 b\u00e0sica d'Apache Configuraci\u00f3 b\u00e0sica del m\u00f2dul de PHP Instal\u00b7laci\u00f3 de l'IDE PhpStorm \u00das b\u00e0sic de l'eina Depuraci\u00f3 Eines per a depuraci\u00f3 de codi php Instal\u00b7laci\u00f3 i configuraci\u00f3 de XDebug","title":"Continguts"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/","text":"Arquitectura d'una aplicaci\u00f3 web A difer\u00e8ncia de les aplicacions d'escriptori, que utilitzen els recursos d'un \u00fanic ordinador les aplicacions web s\u00f3n distribu\u00efdes, intervenen com a m\u00ednin dos equipos diferents: el client i el servidor. La comunicaci\u00f3 \u00e9s du a terme mitjan\u00e7ant un protocol, en el nostre cas el protocol HTTP, base de la WWW. Elements: navegador, servidor, protocol HTTP i HTML El protocol de transfer\u00e8ncia d'hipertext (HTTP) \u00e9s un protocol client-servidor molt senzill que articula els intercanvis d'informaci\u00f3 entre els clients web (navegadors) i els servidors HTTP. HTTP es basa en operacions senzilles de sol\u00b7licitud/resposta. Quan un client estableix una connexi\u00f3 amb un servidor i envia un missatge amb les dades de la sol\u00b7licitud, el servidor respon amb un missatge similar que cont\u00e9 l'estat de l'operaci\u00f3 i el seu resultat de la sol\u00b7licitud. Totes les operacions poden adjuntar un objecte o recurs sobre el qual actuen; cada objecte web (document HTML, arxiu multim\u00e8dia o aplicaci\u00f3 CGI) \u00e9s conegut pel seu localitzador uniforme de recursos (URL, Uniform Resource Locator ). Els recursos poden ser arxius, el resultat de l'execuci\u00f3 d'un programa, una consulta a una base de dades, la traducci\u00f3 autom\u00e0tica d'un document, etc. HTTP \u00e9s un protocol sense estat , \u00e9s a dir, no guarda cap informaci\u00f3 sobre connexions anteriors. El desenvolupament d'aplicacions web freq\u00fcentment necessita mantenir estat. Per aix\u00f2 s'utilitzen les galetes ( cookies ), \u00e9s a dir, la informaci\u00f3 que un servidor pot emmagatzemar en el sistema client. Aix\u00f2 permet que les aplicacions web institueixin la noci\u00f3 de \"sessi\u00f3\", i, alhora, permet rastrejar usuaris, ja que les galetes es poden emmagatzemar en el client durant un temps indeterminat. Amb la intenci\u00f3 de con\u00e8ixer amb m\u00e9s profunditat el protocol HTTP podem avaluar en qu\u00e8 consisteix una transacci\u00f3 HTTP. Cada vegada que un client fa una petici\u00f3 a un servidor, s'executen un seguit d'accions: Un usuari accedeix a una adre\u00e7a d'Internet (URL) seleccionant un enlla\u00e7 d'un document HTML o introduint-la directament a la barra de navegaci\u00f3 d'un navegador web des de la perspectiva del client web. El client web descodifica l'adre\u00e7a d'Internet (URL) separant-ne les diferents parts. \u00c9s aix\u00ed com s'identifiquen el protocol d'acc\u00e9s, el node expressat amb el nom de domini o la seua adre\u00e7a IP, el possible port opcional (el valor per defecte \u00e9s el 80) i l'objecte del servidor requerit. S'obre una connexi\u00f3 TCP/IP amb el servidor cridant el port TCP corresponent. Es fa la petici\u00f3. En conseq\u00fc\u00e8ncia, s'envien l'ordre necess\u00e0ria (GET, POST, HEAD, etc.), l'adre\u00e7a de l'objecte requerit (el contingut de l'adre\u00e7a d'Internet del servidor), la versi\u00f3 del protocol HTTP utilitzada (en la major part de les ocasions \u00e9s HTTP/1.0) i un conjunt variable d'informaci\u00f3 que inclou dades sobre les capacitats del navegador web, dades opcionals per al servidor, etc. El servidor localitza el recurs sol\u00b7licitat i torna la resposta al client. Aquesta resposta consisteix en un codi d'estat i el tipus de dada amb extensions multiprop\u00f2sit de correu d'Internet (MIME, Multipurpose Internet Mail Extension) de la informaci\u00f3 de tornada, seguit de la mateixa informaci\u00f3. El client formata i mostra el recurs rebut. Es tanca la connexi\u00f3 TCP. Aquest proc\u00e9s es repeteix en cada acc\u00e9s que es fa\u00e7a al servidor HTTP. Per exemple, si es recull un document HTML que cont\u00e9 quatre imatges, el proc\u00e9s de transici\u00f3 mostrat amb anterioritat es repeteix cinc vegades, \u00e9s a dir, una pel document HTML i quatre per les imatges. Si el recurs sol\u00b7licitat \u00e9s un programa (CGI, ASP.NET, PHP, etc.) el servidor HTTP redirigir\u00e0 la petici\u00f3 a la llibreria o int\u00e8rpret adequat que executar\u00e0 el programa i tornar\u00e0 el control al servidor web. Format de les URL La sintaxi general de les URL consisteix en una seq\u00fc\u00e8ncia jer\u00e0rquica de 5 components: URI = scheme:[//authority]path[?query][#fragment] on el component authoriry es deivideix en tres subcomponents: authority = [userinfo@]host[:port] El model client/servidor El model client-servidor \u00e9s aquell on tots els clients estan connectats a un servidor on es centralitzen els diferents recursos. Aquests recursos estan a disposici\u00f3 dels clients cada cop que els sol\u00b7liciten. Aix\u00f2 fa que totes les gestions que es realitzen es concentren en el servidor, que disposa dels requeriments dels clients amb prioritat, els arxius que s\u00f3n d'\u00fas p\u00fablic i els restringits, els arxius de nom\u00e9s lectura, els que poden ser modificats, etc. En el model client/servidor, el dispositiu que sol\u00b7licita informaci\u00f3 es denomina client i el dispositiu que respon la sol\u00b7licitud es denomina servidor. Els processos de client i servidor es consideren una part de la capa d'aplicaci\u00f3. El client comen\u00e7a l'intercanvi sol\u00b7licitant les dades al servidor, que respon enviant un o m\u00e9s blocs de dades al client. Els protocols de capa d'aplicaci\u00f3 descriuen el format de les sol\u00b7licituds i respostes entre clients i servidor. A m\u00e9s de la transfer\u00e8ncia real de dades, aquest intercanvi pot requerir informaci\u00f3 addicional, com l'autentificaci\u00f3 de l'usuari i la identificaci\u00f3 d'un arxiu de dades per transferir. Encara que les dades generalment es descriuen com un flux del servidor al client, algunes dades sempre flueixen del client al servidor. El flux de dades pot ser el mateix en les dues direccions o fins i tot ser major en la direcci\u00f3 que va del client al servidor. Per exemple, un client pot transferir un arxiu al servidor amb finalitats d'emmagatzemament. La transfer\u00e8ncia de dades d'un client a un servidor es coneix com a pujada i la de les dades d'un servidor a un client, baixada. P\u00e0gines web est\u00e0tiques i din\u00e0miques P\u00e0gines web est\u00e0tiques Les p\u00e0gines web est\u00e0tiques s\u00f3n aquelles on el seu contingut no varia per la qual cosa mostraran la mateixa informaci\u00f3 cada vegada que es carreguen. S\u00f3n les p\u00e0gines creades en el llenguatge HTML. Nom\u00e9s canvien si el programador web les modifica. P\u00e0gines web din\u00e0miques Les p\u00e0gines web din\u00e0miques s\u00f3n p\u00e0gines el contingut de les quals varia a partir d'informaci\u00f3 continguda en una BBDD. El contingut mostrat pot canviar segons l'usuari connectat, el navegador que s'utiltze o accions anteriors dels usuaris, etc. Aquest tipus de p\u00e0gines s'han de realitzar mitjan\u00e7at un llenguatge de programaci\u00f3. Execuci\u00f3 de codi en el client i en el servidor En el seg\u00fcent gr\u00e0fic es mostra un escenari on podem trobar codi que s'executa en el servidor (PHP) i en el client (javascript).","title":"1. Arquitectura d'una aplicaci\u00f3 web"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#arquitectura-duna-aplicacio-web","text":"A difer\u00e8ncia de les aplicacions d'escriptori, que utilitzen els recursos d'un \u00fanic ordinador les aplicacions web s\u00f3n distribu\u00efdes, intervenen com a m\u00ednin dos equipos diferents: el client i el servidor. La comunicaci\u00f3 \u00e9s du a terme mitjan\u00e7ant un protocol, en el nostre cas el protocol HTTP, base de la WWW.","title":"Arquitectura d'una aplicaci\u00f3 web"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#elements-navegador-servidor-protocol-http-i-html","text":"El protocol de transfer\u00e8ncia d'hipertext (HTTP) \u00e9s un protocol client-servidor molt senzill que articula els intercanvis d'informaci\u00f3 entre els clients web (navegadors) i els servidors HTTP. HTTP es basa en operacions senzilles de sol\u00b7licitud/resposta. Quan un client estableix una connexi\u00f3 amb un servidor i envia un missatge amb les dades de la sol\u00b7licitud, el servidor respon amb un missatge similar que cont\u00e9 l'estat de l'operaci\u00f3 i el seu resultat de la sol\u00b7licitud. Totes les operacions poden adjuntar un objecte o recurs sobre el qual actuen; cada objecte web (document HTML, arxiu multim\u00e8dia o aplicaci\u00f3 CGI) \u00e9s conegut pel seu localitzador uniforme de recursos (URL, Uniform Resource Locator ). Els recursos poden ser arxius, el resultat de l'execuci\u00f3 d'un programa, una consulta a una base de dades, la traducci\u00f3 autom\u00e0tica d'un document, etc. HTTP \u00e9s un protocol sense estat , \u00e9s a dir, no guarda cap informaci\u00f3 sobre connexions anteriors. El desenvolupament d'aplicacions web freq\u00fcentment necessita mantenir estat. Per aix\u00f2 s'utilitzen les galetes ( cookies ), \u00e9s a dir, la informaci\u00f3 que un servidor pot emmagatzemar en el sistema client. Aix\u00f2 permet que les aplicacions web institueixin la noci\u00f3 de \"sessi\u00f3\", i, alhora, permet rastrejar usuaris, ja que les galetes es poden emmagatzemar en el client durant un temps indeterminat. Amb la intenci\u00f3 de con\u00e8ixer amb m\u00e9s profunditat el protocol HTTP podem avaluar en qu\u00e8 consisteix una transacci\u00f3 HTTP. Cada vegada que un client fa una petici\u00f3 a un servidor, s'executen un seguit d'accions: Un usuari accedeix a una adre\u00e7a d'Internet (URL) seleccionant un enlla\u00e7 d'un document HTML o introduint-la directament a la barra de navegaci\u00f3 d'un navegador web des de la perspectiva del client web. El client web descodifica l'adre\u00e7a d'Internet (URL) separant-ne les diferents parts. \u00c9s aix\u00ed com s'identifiquen el protocol d'acc\u00e9s, el node expressat amb el nom de domini o la seua adre\u00e7a IP, el possible port opcional (el valor per defecte \u00e9s el 80) i l'objecte del servidor requerit. S'obre una connexi\u00f3 TCP/IP amb el servidor cridant el port TCP corresponent. Es fa la petici\u00f3. En conseq\u00fc\u00e8ncia, s'envien l'ordre necess\u00e0ria (GET, POST, HEAD, etc.), l'adre\u00e7a de l'objecte requerit (el contingut de l'adre\u00e7a d'Internet del servidor), la versi\u00f3 del protocol HTTP utilitzada (en la major part de les ocasions \u00e9s HTTP/1.0) i un conjunt variable d'informaci\u00f3 que inclou dades sobre les capacitats del navegador web, dades opcionals per al servidor, etc. El servidor localitza el recurs sol\u00b7licitat i torna la resposta al client. Aquesta resposta consisteix en un codi d'estat i el tipus de dada amb extensions multiprop\u00f2sit de correu d'Internet (MIME, Multipurpose Internet Mail Extension) de la informaci\u00f3 de tornada, seguit de la mateixa informaci\u00f3. El client formata i mostra el recurs rebut. Es tanca la connexi\u00f3 TCP. Aquest proc\u00e9s es repeteix en cada acc\u00e9s que es fa\u00e7a al servidor HTTP. Per exemple, si es recull un document HTML que cont\u00e9 quatre imatges, el proc\u00e9s de transici\u00f3 mostrat amb anterioritat es repeteix cinc vegades, \u00e9s a dir, una pel document HTML i quatre per les imatges. Si el recurs sol\u00b7licitat \u00e9s un programa (CGI, ASP.NET, PHP, etc.) el servidor HTTP redirigir\u00e0 la petici\u00f3 a la llibreria o int\u00e8rpret adequat que executar\u00e0 el programa i tornar\u00e0 el control al servidor web.","title":"Elements: navegador, servidor, protocol HTTP i HTML"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#format-de-les-url","text":"La sintaxi general de les URL consisteix en una seq\u00fc\u00e8ncia jer\u00e0rquica de 5 components: URI = scheme:[//authority]path[?query][#fragment] on el component authoriry es deivideix en tres subcomponents: authority = [userinfo@]host[:port]","title":"Format de les URL"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#el-model-clientservidor","text":"El model client-servidor \u00e9s aquell on tots els clients estan connectats a un servidor on es centralitzen els diferents recursos. Aquests recursos estan a disposici\u00f3 dels clients cada cop que els sol\u00b7liciten. Aix\u00f2 fa que totes les gestions que es realitzen es concentren en el servidor, que disposa dels requeriments dels clients amb prioritat, els arxius que s\u00f3n d'\u00fas p\u00fablic i els restringits, els arxius de nom\u00e9s lectura, els que poden ser modificats, etc. En el model client/servidor, el dispositiu que sol\u00b7licita informaci\u00f3 es denomina client i el dispositiu que respon la sol\u00b7licitud es denomina servidor. Els processos de client i servidor es consideren una part de la capa d'aplicaci\u00f3. El client comen\u00e7a l'intercanvi sol\u00b7licitant les dades al servidor, que respon enviant un o m\u00e9s blocs de dades al client. Els protocols de capa d'aplicaci\u00f3 descriuen el format de les sol\u00b7licituds i respostes entre clients i servidor. A m\u00e9s de la transfer\u00e8ncia real de dades, aquest intercanvi pot requerir informaci\u00f3 addicional, com l'autentificaci\u00f3 de l'usuari i la identificaci\u00f3 d'un arxiu de dades per transferir. Encara que les dades generalment es descriuen com un flux del servidor al client, algunes dades sempre flueixen del client al servidor. El flux de dades pot ser el mateix en les dues direccions o fins i tot ser major en la direcci\u00f3 que va del client al servidor. Per exemple, un client pot transferir un arxiu al servidor amb finalitats d'emmagatzemament. La transfer\u00e8ncia de dades d'un client a un servidor es coneix com a pujada i la de les dades d'un servidor a un client, baixada.","title":"El model client/servidor"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#pagines-web-estatiques-i-dinamiques","text":"","title":"P\u00e0gines web est\u00e0tiques i din\u00e0miques"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#pagines-web-estatiques","text":"Les p\u00e0gines web est\u00e0tiques s\u00f3n aquelles on el seu contingut no varia per la qual cosa mostraran la mateixa informaci\u00f3 cada vegada que es carreguen. S\u00f3n les p\u00e0gines creades en el llenguatge HTML. Nom\u00e9s canvien si el programador web les modifica.","title":"P\u00e0gines web est\u00e0tiques"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#pagines-web-dinamiques","text":"Les p\u00e0gines web din\u00e0miques s\u00f3n p\u00e0gines el contingut de les quals varia a partir d'informaci\u00f3 continguda en una BBDD. El contingut mostrat pot canviar segons l'usuari connectat, el navegador que s'utiltze o accions anteriors dels usuaris, etc. Aquest tipus de p\u00e0gines s'han de realitzar mitjan\u00e7at un llenguatge de programaci\u00f3.","title":"P\u00e0gines web din\u00e0miques"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#execucio-de-codi-en-el-client-i-en-el-servidor","text":"En el seg\u00fcent gr\u00e0fic es mostra un escenari on podem trobar codi que s'executa en el servidor (PHP) i en el client (javascript).","title":"Execuci\u00f3 de codi en el client i en el servidor"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/","text":"2. Tecnologies per a programaci\u00f3 web del costat del servidor Introducci\u00f3 Des d'un punt de vista de desenvolupament una aproximaci\u00f3 m\u00e9s detallada al model client-servidor \u00e9s el que es coneix com a model en 3 capes . \u00c9s un model on es mostra m\u00e9s en detall com es distribueix el programari que participa en qualsevol desenvolupament web. Segueix estant present l'arquitectura client-servidor (tot es basa en ella) per\u00f2 apareixen m\u00e9s detalls com el programari utilitzat en cada un dels dos actors i com interactuen les diferents tecnologies o aplicacions. Per comprendre millor que \u00e9s el model de desenvolupament de 3 capes podem tirar un ull al seg\u00fcent esquema on es mostra cadascuna d'aquestes capes i que s'encarrega cadascuna d'elles: Capa de presentaci\u00f3: \u00c9s la capa on l'aplicaci\u00f3 es mostra a l'usuari. B\u00e0sicament \u00e9s la GUI ( Graphical User Interface, interf\u00edcie gr\u00e0fica d'usuari ). En el cas d'una aplicaci\u00f3 web seria el codi HTML que es carrega directament al navegador web. En qualsevol cas, s'executa directament en l'equip del client. Capa de negoci: \u00c9s la capa interm\u00e8dia on es porta a terme tota la l\u00f2gica de l'aplicaci\u00f3. Sempre s'executar\u00e0 en el costat servidor. Aquesta capa, despr\u00e9s de realitzar tots els c\u00e0lculs i / o operacions sobre les dades, genera el codi HTML que ser\u00e0 presentat a l'usuari en la capa seg\u00fcent. Capa de dades: \u00c9s la capa que emmagatzema les dades. B\u00e0sicament, en condicions normals, fa refer\u00e8ncia al propi SGBD que \u00e9s l'encarregat d'emmagatzemar les dades. Depenent de l'arquitectura de l'aplicaci\u00f3, aquesta capa i la de negoci es poden trobar f\u00edsicament en el mateix equip, encara que tamb\u00e9 \u00e9s possible que s'hagin de separar per q\u00fcestions de rendiment. La capa de dades serveix totes la informaci\u00f3 necess\u00e0ria a la capa de negoci per dur a terme les seves operacions. Si ens imaginem una botiga online, la capa de dades emmagatzema tota la informaci\u00f3 en una base de dades (usuaris, comandes, articles, ofertes,...), La capa de negoci ha d'accedir a aquesta informaci\u00f3 i, despr\u00e9s processar una comanda, per exemple, ha de presentar el resultat final a l'usuari en el navegador, que \u00e9s la capa de presentaci\u00f3. I si ens centrem en un cas concret amb programari i tecnologies ja definits, un model de 3 capes podria ser el seg\u00fcent: Navegador web: En aquest cas, Mozilla Firefox, Internet Explorer o Google Chrome podrien ser qualsevol de les aplicacions que ocuparien aquesta capa Apache + PHP / IIS + ASP: Un servidor web acompanyat del seu corresponent llenguatge de programaci\u00f3 web permeten desenvolupar la part que ocupa la capa de negoci. Tamb\u00e9 podr\u00edem col\u00b7locar la combinaci\u00f3 Apache Tomcat + Servlets MySQL / PostgreSQL: Finalment a la capa de dades podem posar qualsevol SGBD, com poden ser MySQL o PostgreSQL. L'avantatge principal d'aquest model \u00e9s que el desenvolupament es pot dur a terme en diversos nivells i, en cas que sobrevinga algun canvi, nom\u00e9s afectar\u00e0 el nivell requerit sense haver de revisar entre el codi font d'altres m\u00f2duls, at\u00e8s que s'haur\u00e0 redu\u00eft el acoblament inform\u00e0tic fins a una interf\u00edcie de pas de missatges. ::: Front-end, Back-end, Full stack Tamb\u00e9 tenint en compte en quin costat se situen les tecnologies i per a qu\u00e8 s'utilitzen aquestes, actualment es parla molt de 3 perfils diferenciats en l'\u00e0mbit del desenvolupament web: Front-end: \u00c9s la part del desenvolupament que s'encarrega del disseny i maquetaci\u00f3 de l'aplicaci\u00f3 web utilitzant tecnologies com HTML, CSS i Javascript (i els seus frameworks). En aquest cas s'ha de preocupar tamb\u00e9 de la correcta presentaci\u00f3 en qualsevol tipus de dispositiu i fins i tot del posicionament en cercadors Back-end: \u00c9s la part del desenvolupament que s'encarrega del costat servidor utilitzant tecnologies com PHP, JSP i Python. Tamb\u00e9 s'encarrega de l'administraci\u00f3 del servidor d'aplicacions i la base de dades. Full stack: En un perfil que engloba els dos anteriors. En aquest cas el desenvolupador potser no \u00e9s un expert de cap tecnologia concreta per\u00f2 t\u00e9 amplis coneixements de tot el conjunt i \u00e9s capa\u00e7 de col\u00b7laborar en qualsevol de les parts. Servidors web i servidors d'aplicacions Aix\u00ed com les aplicacions d'escriptori s'executen directament sobre el sistema operatiu, les aplicacions web necessiten d'una eina addicional que permeti desplegar-les per a la seva posada en marxa. Parlem de servidors web i servidors d'aplicacions , respectivament. Qu\u00e8 \u00e9s un servidor web? Un servidor web \u00e9s una aplicaci\u00f3 que rep una petici\u00f3 HTTP (normalment a trav\u00e9s d'un navegador web) i retorna la p\u00e0gina web sol\u00b7licitada (escrita en llenguatge HTML i podent contenir codi Javascript encastat) perqu\u00e8 aquesta sigua interpretada i visualitzada pel navegador de qui va realitzar la sol\u00b7licitud (l'usuari). Qu\u00e8 \u00e9s un servidor d'aplicacions? Un servidor d'aplicacions \u00e9s un servidor que permet l'execuci\u00f3 d'aplicacions web. Exemples Apache Apache \u00e9s un dels servidors web m\u00e9s coneguts. \u00c9s programari lliure i multiplataforma, encara que aproximadament el 90% dels servidors Apache s'executen actualment en entorns Linux ja que \u00e9s el servidor preferit per a aquesta plataforma. \u00c9s molt modular el que permet incorporar caracter\u00edstiques un cop instal\u00b7lat i posat en marxa. Aix\u00f2 li fa tamb\u00e9 molt flexible i pot donar servei a webs escrites en els llenguatges de programaci\u00f3 web m\u00e9s estesos (com PHP, Python, ASP,...) A trav\u00e9s del m\u00f2dul corresponent. Apache Tomcat Apache Tomcat \u00e9s un servidor d'aplicacions que funciona com a contenidor de Servlets de Java. Actualment \u00e9s capa\u00e7 d'implementar diverses especificacions de Java EE com Servlets i JSP (Java Server Pages) i m\u00e9s proporciona un servidor web pur perqu\u00e8 es fa\u00e7a servir en combinaci\u00f3 amb l'entorn Java. WSGI ( Web Server Gateway Interface ) WSGI \u00e9s una interf\u00edcie que defineix com es comunica un servidor web amb aplicacions web o frameworks escrits en Python.","title":"2. Tecnologies per a programaci\u00f3 web del costat del servidor"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#2-tecnologies-per-a-programacio-web-del-costat-del-servidor","text":"","title":"2. Tecnologies per a programaci\u00f3 web del costat del servidor"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#introduccio","text":"Des d'un punt de vista de desenvolupament una aproximaci\u00f3 m\u00e9s detallada al model client-servidor \u00e9s el que es coneix com a model en 3 capes . \u00c9s un model on es mostra m\u00e9s en detall com es distribueix el programari que participa en qualsevol desenvolupament web. Segueix estant present l'arquitectura client-servidor (tot es basa en ella) per\u00f2 apareixen m\u00e9s detalls com el programari utilitzat en cada un dels dos actors i com interactuen les diferents tecnologies o aplicacions. Per comprendre millor que \u00e9s el model de desenvolupament de 3 capes podem tirar un ull al seg\u00fcent esquema on es mostra cadascuna d'aquestes capes i que s'encarrega cadascuna d'elles: Capa de presentaci\u00f3: \u00c9s la capa on l'aplicaci\u00f3 es mostra a l'usuari. B\u00e0sicament \u00e9s la GUI ( Graphical User Interface, interf\u00edcie gr\u00e0fica d'usuari ). En el cas d'una aplicaci\u00f3 web seria el codi HTML que es carrega directament al navegador web. En qualsevol cas, s'executa directament en l'equip del client. Capa de negoci: \u00c9s la capa interm\u00e8dia on es porta a terme tota la l\u00f2gica de l'aplicaci\u00f3. Sempre s'executar\u00e0 en el costat servidor. Aquesta capa, despr\u00e9s de realitzar tots els c\u00e0lculs i / o operacions sobre les dades, genera el codi HTML que ser\u00e0 presentat a l'usuari en la capa seg\u00fcent. Capa de dades: \u00c9s la capa que emmagatzema les dades. B\u00e0sicament, en condicions normals, fa refer\u00e8ncia al propi SGBD que \u00e9s l'encarregat d'emmagatzemar les dades. Depenent de l'arquitectura de l'aplicaci\u00f3, aquesta capa i la de negoci es poden trobar f\u00edsicament en el mateix equip, encara que tamb\u00e9 \u00e9s possible que s'hagin de separar per q\u00fcestions de rendiment. La capa de dades serveix totes la informaci\u00f3 necess\u00e0ria a la capa de negoci per dur a terme les seves operacions. Si ens imaginem una botiga online, la capa de dades emmagatzema tota la informaci\u00f3 en una base de dades (usuaris, comandes, articles, ofertes,...), La capa de negoci ha d'accedir a aquesta informaci\u00f3 i, despr\u00e9s processar una comanda, per exemple, ha de presentar el resultat final a l'usuari en el navegador, que \u00e9s la capa de presentaci\u00f3. I si ens centrem en un cas concret amb programari i tecnologies ja definits, un model de 3 capes podria ser el seg\u00fcent: Navegador web: En aquest cas, Mozilla Firefox, Internet Explorer o Google Chrome podrien ser qualsevol de les aplicacions que ocuparien aquesta capa Apache + PHP / IIS + ASP: Un servidor web acompanyat del seu corresponent llenguatge de programaci\u00f3 web permeten desenvolupar la part que ocupa la capa de negoci. Tamb\u00e9 podr\u00edem col\u00b7locar la combinaci\u00f3 Apache Tomcat + Servlets MySQL / PostgreSQL: Finalment a la capa de dades podem posar qualsevol SGBD, com poden ser MySQL o PostgreSQL. L'avantatge principal d'aquest model \u00e9s que el desenvolupament es pot dur a terme en diversos nivells i, en cas que sobrevinga algun canvi, nom\u00e9s afectar\u00e0 el nivell requerit sense haver de revisar entre el codi font d'altres m\u00f2duls, at\u00e8s que s'haur\u00e0 redu\u00eft el acoblament inform\u00e0tic fins a una interf\u00edcie de pas de missatges. :::","title":"Introducci\u00f3"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#front-end-back-end-full-stack","text":"Tamb\u00e9 tenint en compte en quin costat se situen les tecnologies i per a qu\u00e8 s'utilitzen aquestes, actualment es parla molt de 3 perfils diferenciats en l'\u00e0mbit del desenvolupament web: Front-end: \u00c9s la part del desenvolupament que s'encarrega del disseny i maquetaci\u00f3 de l'aplicaci\u00f3 web utilitzant tecnologies com HTML, CSS i Javascript (i els seus frameworks). En aquest cas s'ha de preocupar tamb\u00e9 de la correcta presentaci\u00f3 en qualsevol tipus de dispositiu i fins i tot del posicionament en cercadors Back-end: \u00c9s la part del desenvolupament que s'encarrega del costat servidor utilitzant tecnologies com PHP, JSP i Python. Tamb\u00e9 s'encarrega de l'administraci\u00f3 del servidor d'aplicacions i la base de dades. Full stack: En un perfil que engloba els dos anteriors. En aquest cas el desenvolupador potser no \u00e9s un expert de cap tecnologia concreta per\u00f2 t\u00e9 amplis coneixements de tot el conjunt i \u00e9s capa\u00e7 de col\u00b7laborar en qualsevol de les parts.","title":"Front-end, Back-end, Full stack"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#servidors-web-i-servidors-daplicacions","text":"Aix\u00ed com les aplicacions d'escriptori s'executen directament sobre el sistema operatiu, les aplicacions web necessiten d'una eina addicional que permeti desplegar-les per a la seva posada en marxa. Parlem de servidors web i servidors d'aplicacions , respectivament.","title":"Servidors web i servidors d'aplicacions"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#que-es-un-servidor-web","text":"Un servidor web \u00e9s una aplicaci\u00f3 que rep una petici\u00f3 HTTP (normalment a trav\u00e9s d'un navegador web) i retorna la p\u00e0gina web sol\u00b7licitada (escrita en llenguatge HTML i podent contenir codi Javascript encastat) perqu\u00e8 aquesta sigua interpretada i visualitzada pel navegador de qui va realitzar la sol\u00b7licitud (l'usuari).","title":"Qu\u00e8 \u00e9s un servidor web?"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#que-es-un-servidor-daplicacions","text":"Un servidor d'aplicacions \u00e9s un servidor que permet l'execuci\u00f3 d'aplicacions web.","title":"Qu\u00e8 \u00e9s un servidor d'aplicacions?"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#exemples","text":"","title":"Exemples"},{"location":"01-intro/3_llenguatges.html/","text":"3. Llenguatges PHP PHP (PHP Hypertext Preprocessor) \u00e9s un llenguatge de programaci\u00f3 de costat servidor dissenyat principalment per al desenvolupament web. PHP s'utilitza com a llenguatge de script embegut en p\u00e0gines HTML i funciona, normalment, com un m\u00f2dul del servidor web (per exemple, a Apache). El servidor web combina els resultats d'executar els scripts PHP amb l'HTML al qual va encastat i genera la p\u00e0gina web resultant per al navegador. Actualment PHP funciona pr\u00e0cticament amb qualsevol servidor web i en qualsevol Sistema Operatiu existents, i gaireb\u00e9 amb qualsevol SGBD en cas que necessitem utilitzar una base de dades. Tot i aix\u00f2, el m\u00e9s habitual \u00e9s veure-ho formant el que es coneix com una arquitectura LAMP (Linux, Apache, MySQL i PHP), \u00e9s a dir, funcionant sobre un sistema operatiu Linux, executant-com un m\u00f2dul del servidor web Apache i utilitzant a MySQL com SGBD per emmagatzemar la informaci\u00f3 en cas que es requereixi una base de dades. El llenguatge PHP va ser dissenyat per Rasmus Lerdorf i ara es mant\u00e9 per una comunitat de desenvolupadors, a m\u00e9s \u00e9s de codi obert. A continuaci\u00f3, un fragment d'una p\u00e0gina web din\u00e0mica escrita amb PHP on es pot apreciar com s'incrusta el codi juntament amb l'HTML de la p\u00e0gina: JSP / Servlets JavaServer Pages (tamb\u00e9 conegut com JSP) \u00e9s una tecnologia creada per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques del costat servidor. Igual que PHP, el seu codi s'escriu encastat juntament amb l'HTML de la p\u00e0gina web i \u00e9s el servidor d'aplicacions, en aquest cas, qui ha de processar-per generar la p\u00e0gina web resultant, en HTML. D'altra banda, Java Servlets \u00e9s una tecnologia que tamb\u00e9 es pot utilitzar per crear contingut web din\u00e0mic per\u00f2 que a m\u00e9s est\u00e9n la seva funcionalitat a la possibilitat de connectar aquestes webs din\u00e0miques amb un altre contingut accessible a trav\u00e9s d'Internet. De vegades s'utilitza juntament amb JSP per crear aplicacions web m\u00e9s complexes. Totes dues s\u00f3n tecnologies desenvolupades per Sun Microsystems i propietat ara d'Oracle, despr\u00e9s d'adquirir aquesta \u00faltima a la primera fa ja alguns anys. Python El llenguatge Python va ser dissenyat per Guido van Rossum i ara es mant\u00e9 gr\u00e0cies a una comunitat de desenvolupadors, i \u00e9s codi obert. Exemple de codi escrit amb Python. En aquest cas utilitzant el framework Django per al desenvolupament d'aplicacions web: < h1 > Mis pel\u00edculas < /h1> <a href=\"#\">+</ a > { % if lista_peliculas %} <ul> {% for pelicula in lista_peliculas %} < li >< a href = \"{% url 'pelicula' pelicula.id %}\" > {{ pelicula . titulo }} < /a></ li > { % endfor %} </ul> {% else %} < p > No hay pel\u00edculas disponibles < /p> {% endif %} Separada del controlador: from django.shortcuts import render . . . def index ( request ): lista_peliculas = Pelicula . objects . all () context = { 'lista_peliculas' : lista_peliculas } return render ( request , 'mispeliculas/index.html' , context ) ASP.NET ASP.NET \u00e9s una tecnologia, creada per Microsoft, per al desenvolupament de lloc web din\u00e0mics, aplicacions i serveis web. \u00c9s la tecnologia successora del que abans es coneixia com ASP, l'antiga tecnologia de Microsoft per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques. Com que funciona sobre la plataforma .NET de Microsoft, permet que es pugui desenvolupar en qualsevol dels llenguatges de programaci\u00f3 d'aquesta plataforma, Visual Basic .NET o C#. El m\u00e9s habitual \u00e9s veure-ho funcionar juntament amb el lloc web de Microsoft, IIS (Internet Information Server). A continuaci\u00f3, un exemple de p\u00e0gina web din\u00e0mica amb ASP.NET (desenvolupada en llenguatge C #) programant l'acci\u00f3 que passa en pr\u00e9mer un bot\u00f3 (apareix el text d'un formulari a la part final del web): protected void Button1_Click(object sender, EventArgs e) { string buf = TextBox1.Text; changed_text.InnerHtml = buf.ToUpper(); } < %@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\" Inherits=\"firstexample._Default\" %> <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> < html xmlns = \"http://www.w3.org/1999/xhtml\" > < head runat = \"server\" > < title > Untitled Page </ title > </ head > < body > < form id = \"form1\" runat = \"server\" > < div > < asp:TextBox ID = \"TextBox1\" runat = \"server\" style = \"width:224px\" > </ asp:TextBox > < asp:Button ID = \"Button1\" runat = \"server\" Text = \"Enter...\" style = \"width:85px\" onclick = \"Button1_Click\" /> < hr /> < h3 > Results: </ h3 > < span runat = \"server\" id = \"changed_text\" /> </ div > </ form > </ body > </ html >","title":"3. Llenguatges"},{"location":"01-intro/3_llenguatges.html/#3-llenguatges","text":"","title":"3. Llenguatges"},{"location":"01-intro/3_llenguatges.html/#php","text":"PHP (PHP Hypertext Preprocessor) \u00e9s un llenguatge de programaci\u00f3 de costat servidor dissenyat principalment per al desenvolupament web. PHP s'utilitza com a llenguatge de script embegut en p\u00e0gines HTML i funciona, normalment, com un m\u00f2dul del servidor web (per exemple, a Apache). El servidor web combina els resultats d'executar els scripts PHP amb l'HTML al qual va encastat i genera la p\u00e0gina web resultant per al navegador. Actualment PHP funciona pr\u00e0cticament amb qualsevol servidor web i en qualsevol Sistema Operatiu existents, i gaireb\u00e9 amb qualsevol SGBD en cas que necessitem utilitzar una base de dades. Tot i aix\u00f2, el m\u00e9s habitual \u00e9s veure-ho formant el que es coneix com una arquitectura LAMP (Linux, Apache, MySQL i PHP), \u00e9s a dir, funcionant sobre un sistema operatiu Linux, executant-com un m\u00f2dul del servidor web Apache i utilitzant a MySQL com SGBD per emmagatzemar la informaci\u00f3 en cas que es requereixi una base de dades. El llenguatge PHP va ser dissenyat per Rasmus Lerdorf i ara es mant\u00e9 per una comunitat de desenvolupadors, a m\u00e9s \u00e9s de codi obert. A continuaci\u00f3, un fragment d'una p\u00e0gina web din\u00e0mica escrita amb PHP on es pot apreciar com s'incrusta el codi juntament amb l'HTML de la p\u00e0gina:","title":"PHP"},{"location":"01-intro/3_llenguatges.html/#jsp-servlets","text":"JavaServer Pages (tamb\u00e9 conegut com JSP) \u00e9s una tecnologia creada per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques del costat servidor. Igual que PHP, el seu codi s'escriu encastat juntament amb l'HTML de la p\u00e0gina web i \u00e9s el servidor d'aplicacions, en aquest cas, qui ha de processar-per generar la p\u00e0gina web resultant, en HTML. D'altra banda, Java Servlets \u00e9s una tecnologia que tamb\u00e9 es pot utilitzar per crear contingut web din\u00e0mic per\u00f2 que a m\u00e9s est\u00e9n la seva funcionalitat a la possibilitat de connectar aquestes webs din\u00e0miques amb un altre contingut accessible a trav\u00e9s d'Internet. De vegades s'utilitza juntament amb JSP per crear aplicacions web m\u00e9s complexes. Totes dues s\u00f3n tecnologies desenvolupades per Sun Microsystems i propietat ara d'Oracle, despr\u00e9s d'adquirir aquesta \u00faltima a la primera fa ja alguns anys.","title":"JSP / Servlets"},{"location":"01-intro/3_llenguatges.html/#python","text":"El llenguatge Python va ser dissenyat per Guido van Rossum i ara es mant\u00e9 gr\u00e0cies a una comunitat de desenvolupadors, i \u00e9s codi obert. Exemple de codi escrit amb Python. En aquest cas utilitzant el framework Django per al desenvolupament d'aplicacions web: < h1 > Mis pel\u00edculas < /h1> <a href=\"#\">+</ a > { % if lista_peliculas %} <ul> {% for pelicula in lista_peliculas %} < li >< a href = \"{% url 'pelicula' pelicula.id %}\" > {{ pelicula . titulo }} < /a></ li > { % endfor %} </ul> {% else %} < p > No hay pel\u00edculas disponibles < /p> {% endif %} Separada del controlador: from django.shortcuts import render . . . def index ( request ): lista_peliculas = Pelicula . objects . all () context = { 'lista_peliculas' : lista_peliculas } return render ( request , 'mispeliculas/index.html' , context )","title":"Python"},{"location":"01-intro/3_llenguatges.html/#aspnet","text":"ASP.NET \u00e9s una tecnologia, creada per Microsoft, per al desenvolupament de lloc web din\u00e0mics, aplicacions i serveis web. \u00c9s la tecnologia successora del que abans es coneixia com ASP, l'antiga tecnologia de Microsoft per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques. Com que funciona sobre la plataforma .NET de Microsoft, permet que es pugui desenvolupar en qualsevol dels llenguatges de programaci\u00f3 d'aquesta plataforma, Visual Basic .NET o C#. El m\u00e9s habitual \u00e9s veure-ho funcionar juntament amb el lloc web de Microsoft, IIS (Internet Information Server). A continuaci\u00f3, un exemple de p\u00e0gina web din\u00e0mica amb ASP.NET (desenvolupada en llenguatge C #) programant l'acci\u00f3 que passa en pr\u00e9mer un bot\u00f3 (apareix el text d'un formulari a la part final del web): protected void Button1_Click(object sender, EventArgs e) { string buf = TextBox1.Text; changed_text.InnerHtml = buf.ToUpper(); } < %@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\" Inherits=\"firstexample._Default\" %> <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> < html xmlns = \"http://www.w3.org/1999/xhtml\" > < head runat = \"server\" > < title > Untitled Page </ title > </ head > < body > < form id = \"form1\" runat = \"server\" > < div > < asp:TextBox ID = \"TextBox1\" runat = \"server\" style = \"width:224px\" > </ asp:TextBox > < asp:Button ID = \"Button1\" runat = \"server\" Text = \"Enter...\" style = \"width:85px\" onclick = \"Button1_Click\" /> < hr /> < h3 > Results: </ h3 > < span runat = \"server\" id = \"changed_text\" /> </ div > </ form > </ body > </ html >","title":"ASP.NET"},{"location":"01-intro/4_preparant_lentorn_de_desenvolupament.html/","text":"4. Preparant l'entorn de desenvolupament Per a poder provar els nostres llocs web necessitarem instal\u00b7lar una s\u00e8rie d'eines com s\u00f3n: el servidor web Apache, el m\u00f2dul PHP per a aquest servidor, el SGBD MySql, un front-end per al SGBD (PHPMyAdmin), etc. Per simplificar les coses optarem per instal\u00b7lar-ho mitjan\u00e7ant XAMPP, un paquet de programari lliure que cont\u00e9 el servidor HTTP Apache, la base de dades de MySQL i eines necess\u00e0ries per utilitzar el PHP i el llenguatge de programaci\u00f3 Perl. Pr\u00e0ctica 1: Instal\u00b7laci\u00f3 de XAMPP Descarreguem el paquet XAMPP per a la nostra m\u00e0quina (https://www.apachefriends.org/). Li donem permisos d'execuci\u00f3 a l'arxiu descarregat: sudo chmod +x xampp-linux-x64-7.3.9-0-installer.run Executem l'assistent d'instal\u00b7laci\u00f3 sudo ./xampp-linux-x64-7.3.9-0-installer.run En l'assistent d'instal\u00b7laci\u00f3, deixarem les opcions per defecte (excepte la qual ens parla de bitnami que la desmarcarem). Una vegada finalitzada la instal\u00b7laci\u00f3, el nostre XAMPP es trobar\u00e0 en el directori /opt/lampp Ara ja podem arrancar els serveis amb el seg\u00fcent comando: sudo /opt/lampp/lampp start Quan els arranquem, si obrim el navegador i ens anem a la url http://localhost, ens hauria d'apar\u00e8ixer la p\u00e0gina de benvinguda de XAMPP. Per a parar els serveis podem fer a\u00e7\u00f2: sudo /opt/lampp/xampp stop En qualsevol cas, \u00e9s molt m\u00e9s c\u00f2mode treballar amb el panell de control de XAMPP que podrem executar amb la seg\u00fcent ordre: sudo /opt/lampp/manager-linux-x64.run Veurem que s'inicia l'aplicaci\u00f3 que ens permet controlar els serveis de XAMPP.","title":"4. Preparant l'entorn de desenvolupament"},{"location":"01-intro/4_preparant_lentorn_de_desenvolupament.html/#4-preparant-lentorn-de-desenvolupament","text":"Per a poder provar els nostres llocs web necessitarem instal\u00b7lar una s\u00e8rie d'eines com s\u00f3n: el servidor web Apache, el m\u00f2dul PHP per a aquest servidor, el SGBD MySql, un front-end per al SGBD (PHPMyAdmin), etc. Per simplificar les coses optarem per instal\u00b7lar-ho mitjan\u00e7ant XAMPP, un paquet de programari lliure que cont\u00e9 el servidor HTTP Apache, la base de dades de MySQL i eines necess\u00e0ries per utilitzar el PHP i el llenguatge de programaci\u00f3 Perl. Pr\u00e0ctica 1: Instal\u00b7laci\u00f3 de XAMPP Descarreguem el paquet XAMPP per a la nostra m\u00e0quina (https://www.apachefriends.org/). Li donem permisos d'execuci\u00f3 a l'arxiu descarregat: sudo chmod +x xampp-linux-x64-7.3.9-0-installer.run Executem l'assistent d'instal\u00b7laci\u00f3 sudo ./xampp-linux-x64-7.3.9-0-installer.run En l'assistent d'instal\u00b7laci\u00f3, deixarem les opcions per defecte (excepte la qual ens parla de bitnami que la desmarcarem). Una vegada finalitzada la instal\u00b7laci\u00f3, el nostre XAMPP es trobar\u00e0 en el directori /opt/lampp Ara ja podem arrancar els serveis amb el seg\u00fcent comando: sudo /opt/lampp/lampp start Quan els arranquem, si obrim el navegador i ens anem a la url http://localhost, ens hauria d'apar\u00e8ixer la p\u00e0gina de benvinguda de XAMPP. Per a parar els serveis podem fer a\u00e7\u00f2: sudo /opt/lampp/xampp stop En qualsevol cas, \u00e9s molt m\u00e9s c\u00f2mode treballar amb el panell de control de XAMPP que podrem executar amb la seg\u00fcent ordre: sudo /opt/lampp/manager-linux-x64.run Veurem que s'inicia l'aplicaci\u00f3 que ens permet controlar els serveis de XAMPP.","title":"4. Preparant l'entorn de desenvolupament"},{"location":"01-intro/5_eines_de_desenvolupament.html/","text":"5. Eines de desevolupament Per a programar en llenguatges encastats com PHP, ASP o Phython \u00e9s suficient amb un editor de text pla. No obstant sempre \u00e9s recomanable treballar en un entorn integrat de desenvolupament o IDE (acr\u00f2nim en angl\u00e8s de Integrated development environment ). Un IDE \u00e9s una eina inform\u00e0tica per al desenvolupament de programari de manera c\u00f2moda i r\u00e0pida. Aix\u00ed doncs \u00e9s un entorn de desenvolupament que agrupa diferents funcions en un sol programa, habitualment: editor de codi, compilador, depurador i un programa de disseny d'interf\u00edcie gr\u00e0fica. El principal avantatge \u00e9s que facilita la tasca del programador mentre que l'inconvenient m\u00e9s important \u00e9s que pot provocar mals h\u00e0bits a l'hora de programar o provocar errors que a priori comen\u00e7ant de zero no es produirien. Alguns dels IDE m\u00e9s emprats per al desenvolupament web s\u00f3n: Eclipse Netbeans Atom Sublime PHPStorm Brackets Durant les activitats anteriors has preparat el teu propi entorn de desenvolupament sobre una m\u00e0quina virtual (o una real) tal com s'ha explicat en les anotacions. Despr\u00e9s, has de crear un projecte php utilitzant PHPStorm i visualitzar la p\u00e0gina principal a trav\u00e9s del teu servidor XAMPP. Al llarg del curs, crearem els nostres projectes utilitzant l'IDE PHPStorm. Aquesta eina \u00e9s de pagament, per\u00f2 podem utilitzar-la de forma gratu\u00efta per a projectes OpenSource i amb finalitats educatives. En aqueixos casos caldr\u00e0 sol\u00b7licitar la llic\u00e8ncia corresponent al fabricant del programari. Una vegada obtinguda la llic\u00e8ncia educativa pel professor, ser\u00e0 renovable anualment i podran utilitzar-la tots els alumnes del curs. \u00c9s una eina molt completa que ens permetr\u00e0 la integraci\u00f3 amb moltes de les funcionalitats que emprarem. Instal\u00b7lar PHPStorm Per a instal\u00b7lar l'IDE PHPStorm seguirem els seg\u00fcents passos: Executarem sudo snap install phpstorm --classic Ens demanar\u00e0 si volem importar dades d'una instal\u00b7laci\u00f3 anterior, al que contestarem, \u00f2bviament, que no. Ens demanar\u00e0 que acceptem la pol\u00edtica de privadesa. En executar l'aplicaci\u00f3 per primera vegada ens demanar\u00e0 les dades de llic\u00e8ncia. Cada alumne s'haur\u00e0 de registrar utilitzant l'enlla\u00e7 que us passar\u00e0 el professor en classe. en pr\u00e9mer l'enlla\u00e7 ens redirigir\u00e0 a la p\u00e0gina web de jetbrains perqu\u00e8 ens registrem. Una vegada registrats, podrem accedir a l'aplicaci\u00f3 amb el nostre compte o amb el codi d'activaci\u00f3 que ens proporcionen. Finalment, indicarem la configuraci\u00f3 inicial. Integrant l'executable de PHP PHPStorm disposa d'ajuda intel\u00b7ligent (IntelliJ IDEA). Perqu\u00e8 aquesta ajuda es corresponga amb la versi\u00f3 de php que tenim en el nostre XAMPP haurem de registrar l'executable de PHP de XAMPP en el nostre PHPStorm. Per a a\u00e7\u00f2 seguirem els seg\u00fcents passos: En la pantalla d'inici anem a Configure \u2013 Settings . En la llista de categories de l'esquerra anem a Language & Frameworks - PHP . Necessitem indicar quin \u00e9s el nostre int\u00e8rpret. ja que la llista est\u00e0 buida anem a configurar un de la seg\u00fcent forma: Fem clic en el bot\u00f3 ... de la llista d'int\u00e8rprets Premem el bot\u00f3 + de la cantonada superior esquerra per a afegir-ne un. Li posem el nom PHP de XAMPP. Indiquem instal\u00b7lat on nostre est\u00e0 XAMPP: /opt/lampp/bin/php Immediatament ens indicar\u00e0 la versi\u00f3 de l'int\u00e8rpret que tenim instal\u00b7lat Premem OK i seleccionem el nou interprete en la llista d'int\u00e8rprets. Finalment, seleccionem en l'opci\u00f3 PHP language level aquell que es corresponga amb l'int\u00e8rpret que acabem de configurar. Ara el nostre PHPStorm far\u00e0 \u00fas del PHP de XAMPP i utilitzar\u00e0 la versi\u00f3 de PHP que tenim instal\u00b7lada quan ens oferisca les ajudes. Primer projecte amb PHPStorm Per a comen\u00e7ar a treballar amb PHPStorm anem a crear el nostre primer projecte PHP buit. Tingueu en compte que el projecte heu de crear-ho en el directori /opt/lampp/htdocs i que necessitem tenir permisos d'escriptura en aquest directori. Compte! Pot ser que ho h\u00e0gem instal\u00b7lat com root , mentre que quan executem PHPStorm ho fem amb l'usuari dwes , per tant, l'usuari dwes necessita poder escriure en aquest directori. Per a assegurar-nos que tenim permisos, anirem amb una finestra de terminal al directori /opt/lampp i executarem la seg\u00fcent ordre: ls \u2013la htdocs Aquesta ordre ens dir\u00e0 qui \u00e9s el propietari de la carpeta i quins permisos t\u00e9. En el cas que el propietari siga root executarem la seguent ordre: sudo chown -hR dwes htdocs/ A\u00e7\u00f2 canviar\u00e0 el propietari a l'usuari dwes , amb el que tindrem perm\u00eds d'escriptura en aquest directori des de PHPStorm. Treballarem tenint els projectes en la mateixa carpeta. Pr\u00e0ctica 2. Instal\u00b7laci\u00f3 de PHPStorm Seguint les instruccions anteriors instal\u00b7la i configura PHP Storm. Creaci\u00f3 de projectes i comprovaci\u00f3 de la instal\u00b7laci\u00f3 de PHP Seguirem els passos que s'indiquen a continuaci\u00f3: Arrancar XAMPP Iniciar el m\u00f2dul Apache Executar PHPStorm Crear un projecte buit amb Create New > Project PHP Empty Project Posar al projecte el nom practica1 i situar-lo en el directori /opt/lampp/htdocs . Amb a\u00e7\u00f2 es crea un directori de nom practica1 dintre de /opt/lampp/htdocs . En la finestra de l'esquerra (explorador de projectes) apareix el projecte creat. Dins d'ell crearem un nou fitxer PHP prement bot\u00f3 dret sobre el nom i seleccionant New > PHP File . Li posem de nom index.php . En el fitxer creat introdu\u00efm les seg\u00fcents l\u00ednies de codi: <! doctype html > < html lang = \"es\" > < head > < meta charset = \"utf-8\" > < title > Desenvolupament web en entorn servidor </ title > < meta name = \"description\" content = \"PHP, PHPStorm\" > < meta name = \"author\" content = \"Homer Simpson\" > </ head > < body > <? php phpinfo (); ?> </body> </html> Canviem l'autor del document al nostre nom. Obrim el navegador i teclegem en la barra d'adreces la url: http://localhost/practica1 Apareixer\u00e0 una p\u00e0gina similar a la de la seg\u00fcent imatge: Pr\u00e0ctica 3: Prova d'Apache i PHP L'objectiu d'aquesta pr\u00e0ctica \u00e9s aprendre el maneig b\u00e0sic de l'entorn de desenvolupament PHPStorm creant una primera p\u00e0gina PHP que alhora servir\u00e0 per a comprovar la correcta instal\u00b7laci\u00f3 de XAMPP. Seguint les instruccions anterior crea projecte i prova'l.","title":"5. Eines de desevolupament"},{"location":"01-intro/5_eines_de_desenvolupament.html/#5-eines-de-desevolupament","text":"Per a programar en llenguatges encastats com PHP, ASP o Phython \u00e9s suficient amb un editor de text pla. No obstant sempre \u00e9s recomanable treballar en un entorn integrat de desenvolupament o IDE (acr\u00f2nim en angl\u00e8s de Integrated development environment ). Un IDE \u00e9s una eina inform\u00e0tica per al desenvolupament de programari de manera c\u00f2moda i r\u00e0pida. Aix\u00ed doncs \u00e9s un entorn de desenvolupament que agrupa diferents funcions en un sol programa, habitualment: editor de codi, compilador, depurador i un programa de disseny d'interf\u00edcie gr\u00e0fica. El principal avantatge \u00e9s que facilita la tasca del programador mentre que l'inconvenient m\u00e9s important \u00e9s que pot provocar mals h\u00e0bits a l'hora de programar o provocar errors que a priori comen\u00e7ant de zero no es produirien. Alguns dels IDE m\u00e9s emprats per al desenvolupament web s\u00f3n: Eclipse Netbeans Atom Sublime PHPStorm Brackets Durant les activitats anteriors has preparat el teu propi entorn de desenvolupament sobre una m\u00e0quina virtual (o una real) tal com s'ha explicat en les anotacions. Despr\u00e9s, has de crear un projecte php utilitzant PHPStorm i visualitzar la p\u00e0gina principal a trav\u00e9s del teu servidor XAMPP. Al llarg del curs, crearem els nostres projectes utilitzant l'IDE PHPStorm. Aquesta eina \u00e9s de pagament, per\u00f2 podem utilitzar-la de forma gratu\u00efta per a projectes OpenSource i amb finalitats educatives. En aqueixos casos caldr\u00e0 sol\u00b7licitar la llic\u00e8ncia corresponent al fabricant del programari. Una vegada obtinguda la llic\u00e8ncia educativa pel professor, ser\u00e0 renovable anualment i podran utilitzar-la tots els alumnes del curs. \u00c9s una eina molt completa que ens permetr\u00e0 la integraci\u00f3 amb moltes de les funcionalitats que emprarem.","title":"5. Eines de desevolupament"},{"location":"01-intro/5_eines_de_desenvolupament.html/#installar-phpstorm","text":"Per a instal\u00b7lar l'IDE PHPStorm seguirem els seg\u00fcents passos: Executarem sudo snap install phpstorm --classic Ens demanar\u00e0 si volem importar dades d'una instal\u00b7laci\u00f3 anterior, al que contestarem, \u00f2bviament, que no. Ens demanar\u00e0 que acceptem la pol\u00edtica de privadesa. En executar l'aplicaci\u00f3 per primera vegada ens demanar\u00e0 les dades de llic\u00e8ncia. Cada alumne s'haur\u00e0 de registrar utilitzant l'enlla\u00e7 que us passar\u00e0 el professor en classe. en pr\u00e9mer l'enlla\u00e7 ens redirigir\u00e0 a la p\u00e0gina web de jetbrains perqu\u00e8 ens registrem. Una vegada registrats, podrem accedir a l'aplicaci\u00f3 amb el nostre compte o amb el codi d'activaci\u00f3 que ens proporcionen. Finalment, indicarem la configuraci\u00f3 inicial.","title":"Instal\u00b7lar PHPStorm"},{"location":"01-intro/5_eines_de_desenvolupament.html/#integrant-lexecutable-de-php","text":"PHPStorm disposa d'ajuda intel\u00b7ligent (IntelliJ IDEA). Perqu\u00e8 aquesta ajuda es corresponga amb la versi\u00f3 de php que tenim en el nostre XAMPP haurem de registrar l'executable de PHP de XAMPP en el nostre PHPStorm. Per a a\u00e7\u00f2 seguirem els seg\u00fcents passos: En la pantalla d'inici anem a Configure \u2013 Settings . En la llista de categories de l'esquerra anem a Language & Frameworks - PHP . Necessitem indicar quin \u00e9s el nostre int\u00e8rpret. ja que la llista est\u00e0 buida anem a configurar un de la seg\u00fcent forma: Fem clic en el bot\u00f3 ... de la llista d'int\u00e8rprets Premem el bot\u00f3 + de la cantonada superior esquerra per a afegir-ne un. Li posem el nom PHP de XAMPP. Indiquem instal\u00b7lat on nostre est\u00e0 XAMPP: /opt/lampp/bin/php Immediatament ens indicar\u00e0 la versi\u00f3 de l'int\u00e8rpret que tenim instal\u00b7lat Premem OK i seleccionem el nou interprete en la llista d'int\u00e8rprets. Finalment, seleccionem en l'opci\u00f3 PHP language level aquell que es corresponga amb l'int\u00e8rpret que acabem de configurar. Ara el nostre PHPStorm far\u00e0 \u00fas del PHP de XAMPP i utilitzar\u00e0 la versi\u00f3 de PHP que tenim instal\u00b7lada quan ens oferisca les ajudes. Primer projecte amb PHPStorm Per a comen\u00e7ar a treballar amb PHPStorm anem a crear el nostre primer projecte PHP buit. Tingueu en compte que el projecte heu de crear-ho en el directori /opt/lampp/htdocs i que necessitem tenir permisos d'escriptura en aquest directori. Compte! Pot ser que ho h\u00e0gem instal\u00b7lat com root , mentre que quan executem PHPStorm ho fem amb l'usuari dwes , per tant, l'usuari dwes necessita poder escriure en aquest directori. Per a assegurar-nos que tenim permisos, anirem amb una finestra de terminal al directori /opt/lampp i executarem la seg\u00fcent ordre: ls \u2013la htdocs Aquesta ordre ens dir\u00e0 qui \u00e9s el propietari de la carpeta i quins permisos t\u00e9. En el cas que el propietari siga root executarem la seguent ordre: sudo chown -hR dwes htdocs/ A\u00e7\u00f2 canviar\u00e0 el propietari a l'usuari dwes , amb el que tindrem perm\u00eds d'escriptura en aquest directori des de PHPStorm. Treballarem tenint els projectes en la mateixa carpeta. Pr\u00e0ctica 2. Instal\u00b7laci\u00f3 de PHPStorm Seguint les instruccions anteriors instal\u00b7la i configura PHP Storm.","title":"Integrant l'executable de PHP"},{"location":"01-intro/5_eines_de_desenvolupament.html/#creacio-de-projectes-i-comprovacio-de-la-installacio-de-php","text":"Seguirem els passos que s'indiquen a continuaci\u00f3: Arrancar XAMPP Iniciar el m\u00f2dul Apache Executar PHPStorm Crear un projecte buit amb Create New > Project PHP Empty Project Posar al projecte el nom practica1 i situar-lo en el directori /opt/lampp/htdocs . Amb a\u00e7\u00f2 es crea un directori de nom practica1 dintre de /opt/lampp/htdocs . En la finestra de l'esquerra (explorador de projectes) apareix el projecte creat. Dins d'ell crearem un nou fitxer PHP prement bot\u00f3 dret sobre el nom i seleccionant New > PHP File . Li posem de nom index.php . En el fitxer creat introdu\u00efm les seg\u00fcents l\u00ednies de codi: <! doctype html > < html lang = \"es\" > < head > < meta charset = \"utf-8\" > < title > Desenvolupament web en entorn servidor </ title > < meta name = \"description\" content = \"PHP, PHPStorm\" > < meta name = \"author\" content = \"Homer Simpson\" > </ head > < body > <? php phpinfo (); ?> </body> </html> Canviem l'autor del document al nostre nom. Obrim el navegador i teclegem en la barra d'adreces la url: http://localhost/practica1 Apareixer\u00e0 una p\u00e0gina similar a la de la seg\u00fcent imatge: Pr\u00e0ctica 3: Prova d'Apache i PHP L'objectiu d'aquesta pr\u00e0ctica \u00e9s aprendre el maneig b\u00e0sic de l'entorn de desenvolupament PHPStorm creant una primera p\u00e0gina PHP que alhora servir\u00e0 per a comprovar la correcta instal\u00b7laci\u00f3 de XAMPP. Seguint les instruccions anterior crea projecte i prova'l.","title":"Creaci\u00f3 de projectes i comprovaci\u00f3 de la instal\u00b7laci\u00f3 de PHP"},{"location":"01-intro/6_eines_per_a_depuraci_de_codi/","text":"6. Eines per a la depuraci\u00f3 de codi En els entorns de desevolupament \u00e9s necessari disposar de ferramentes que ens permenten depurar les nostres aplicacions. Ja siga per arreglar errors com per millorar l'execuci\u00f3 del codi. Els entorns de desevolupament d'aplicacions d'escriptori solen disposar dels seus propis sistemes de depuraci\u00f3, en el cas dels llenguatges d'entorn servidor alguns ecosistemes com el de .Net de Microsoft l'inclouen. Per a PHP hi ha diverses ferramentes com XDebug o DBG. Instal\u00b7laci\u00f3 d'XDEBUG 3.0 XDebug 3.0 Recentment s'ha publicat XDebug 3.0, versi\u00f3 que cobreix aquest document. Si busqueu informaci\u00f3, tingau en compte en quina versi\u00f3 treballeu. A continuaci\u00f3, explicarem com instal\u00b7lar el m\u00f2dul XDebug 3 en un entorn basat en XAMPP. Abans de res comprovarem que no el tenim instal\u00b7lat, per a aix\u00f2 seguirem els seg\u00fcents passos: Obrim la p\u00e0gina de benvinguda de XAMPP escrivint al navegador la URL http://localhost . A la part superior de la p\u00e0gina tenim una s\u00e8rie d'enlla\u00e7os, entre els que es troba un que diu phpinfo . Feu clic en aquest enlla\u00e7. Se'ns mostrar\u00e0 la p\u00e0gina de configuraci\u00f3 del nostre m\u00f2dul php. Anem a seleccionar tots els continguts d'aquesta p\u00e0gina i els anem a copiar. Obrirem al navegador la seg\u00fcent URL: http://xdebug.org/wizard.php . En aquesta p\u00e0gina podrem comprovar quins m\u00f2duls tenim instal\u00b7lats en nostre m\u00f2dul PHP. Per a aix\u00f2, enganxarem els continguts que hem copiat pr\u00e8viament a la caixa de text que apareix i premerem Analyse mi phpinfo() output . Ens apareixeran un resultats semblants a aquests: Com es pot observar, l'extensi\u00f3 XDebug no est\u00e0 instal\u00b7lada. Una altra informaci\u00f3 important que ens d\u00f3na \u00e9s que el nostre fitxer de configuraci\u00f3 del PHP el podem trobar en /opt/lampp/etc/php.ini i les extensions les tenim en /opt/lampp/lib/php/extensions/no-debug-non-zts-20180731 \u00c9s important que recordem aquestes dades. Per instal\u00b7lar l'extensi\u00f3 XDebug seguirem les instruccions que ens indica la p\u00e0gina anterior per\u00f2 compte perqu\u00e8 cal fer algunes modificacions: Important Els car\u00e0cters # representen valors que depenen de cada instal\u00b7laci\u00f3, aix\u00ed que cal tindre-ho en compte en executar-ho. Descarregueu la darrera versi\u00f3 d'Xdebug Instal\u00b7leu els requisits previs per a la compilaci\u00f3 d'extensions PHP.\\ Instal\u00b7leu-lo amb el sistema Ubuntu amb: apt-get install php-dev autoconf automake Desempaqueteu el fitxer descarregat amb tar -xvzf xdebug-#.#.#.tgz Executar: cd xdebug-#.#.# Executar: /opt/lampp/bin/phpize (hem canviat la ruta perqu\u00e8 execute el phpize de XAMPP). Com a part de la seva eixida hauria de mostrar: Configuring for: ... Zend Module Api No: ######## Zend Extension Api No: ######### Si no \u00e9s aix\u00ed, est\u00e0s utilitzant phpize incorrecta. Seguiu aquesta entrada de FAQ i passeu al pas seg\u00fcent. Executar: ./configure --with-php-config=/opt/lampp/bin/php-config (hem afegit la ruta del php-config de XAMPP). Compilem les fonts: make Executar: sudo cp modules/xdebug.so /opt/lampp/lib/php/extensions/no-debug-non-zts-######## Edita /opt/lampp/etc/php.ini i afegeix les seg\u00fcents l\u00ednies al final [xdebug] zend_extension = /opt/lampp/lib/php/extensions/no-debug-non-zts-########/xdebug.so xdebug.mode=develop xdebug.client_port=9003 xdebug.start_upon_error=yes xdebug.start_with_request=yes Reinicieu el servidor web Repeteix els passos del 1 al 5 inicials per comprovar que XDebug s\u00ed est\u00e0 instal\u00b7lat. Despr\u00e9s caldr\u00e0 configurar PHPStorm per a connectar-lo a XDebug Integraci\u00f3 amb PHPStorm i instal\u00b7lar una extensi\u00f3 de Firefox Xdebug Helper o Chrome. Pr\u00e0ctica 4. Instal\u00b7laci\u00f2 d'XDebug Seguint les instruccions anteriors instal\u00b7la i configura XDEBUG i connecta'l a PHP Storm.","title":"6. Eines per a la depuraci\u00f3 de codi"},{"location":"01-intro/6_eines_per_a_depuraci_de_codi/#6-eines-per-a-la-depuracio-de-codi","text":"En els entorns de desevolupament \u00e9s necessari disposar de ferramentes que ens permenten depurar les nostres aplicacions. Ja siga per arreglar errors com per millorar l'execuci\u00f3 del codi. Els entorns de desevolupament d'aplicacions d'escriptori solen disposar dels seus propis sistemes de depuraci\u00f3, en el cas dels llenguatges d'entorn servidor alguns ecosistemes com el de .Net de Microsoft l'inclouen. Per a PHP hi ha diverses ferramentes com XDebug o DBG.","title":"6. Eines per a la depuraci\u00f3 de codi"},{"location":"01-intro/6_eines_per_a_depuraci_de_codi/#installacio-dxdebug-30","text":"XDebug 3.0 Recentment s'ha publicat XDebug 3.0, versi\u00f3 que cobreix aquest document. Si busqueu informaci\u00f3, tingau en compte en quina versi\u00f3 treballeu. A continuaci\u00f3, explicarem com instal\u00b7lar el m\u00f2dul XDebug 3 en un entorn basat en XAMPP. Abans de res comprovarem que no el tenim instal\u00b7lat, per a aix\u00f2 seguirem els seg\u00fcents passos: Obrim la p\u00e0gina de benvinguda de XAMPP escrivint al navegador la URL http://localhost . A la part superior de la p\u00e0gina tenim una s\u00e8rie d'enlla\u00e7os, entre els que es troba un que diu phpinfo . Feu clic en aquest enlla\u00e7. Se'ns mostrar\u00e0 la p\u00e0gina de configuraci\u00f3 del nostre m\u00f2dul php. Anem a seleccionar tots els continguts d'aquesta p\u00e0gina i els anem a copiar. Obrirem al navegador la seg\u00fcent URL: http://xdebug.org/wizard.php . En aquesta p\u00e0gina podrem comprovar quins m\u00f2duls tenim instal\u00b7lats en nostre m\u00f2dul PHP. Per a aix\u00f2, enganxarem els continguts que hem copiat pr\u00e8viament a la caixa de text que apareix i premerem Analyse mi phpinfo() output . Ens apareixeran un resultats semblants a aquests: Com es pot observar, l'extensi\u00f3 XDebug no est\u00e0 instal\u00b7lada. Una altra informaci\u00f3 important que ens d\u00f3na \u00e9s que el nostre fitxer de configuraci\u00f3 del PHP el podem trobar en /opt/lampp/etc/php.ini i les extensions les tenim en /opt/lampp/lib/php/extensions/no-debug-non-zts-20180731 \u00c9s important que recordem aquestes dades. Per instal\u00b7lar l'extensi\u00f3 XDebug seguirem les instruccions que ens indica la p\u00e0gina anterior per\u00f2 compte perqu\u00e8 cal fer algunes modificacions: Important Els car\u00e0cters # representen valors que depenen de cada instal\u00b7laci\u00f3, aix\u00ed que cal tindre-ho en compte en executar-ho. Descarregueu la darrera versi\u00f3 d'Xdebug Instal\u00b7leu els requisits previs per a la compilaci\u00f3 d'extensions PHP.\\ Instal\u00b7leu-lo amb el sistema Ubuntu amb: apt-get install php-dev autoconf automake Desempaqueteu el fitxer descarregat amb tar -xvzf xdebug-#.#.#.tgz Executar: cd xdebug-#.#.# Executar: /opt/lampp/bin/phpize (hem canviat la ruta perqu\u00e8 execute el phpize de XAMPP). Com a part de la seva eixida hauria de mostrar: Configuring for: ... Zend Module Api No: ######## Zend Extension Api No: ######### Si no \u00e9s aix\u00ed, est\u00e0s utilitzant phpize incorrecta. Seguiu aquesta entrada de FAQ i passeu al pas seg\u00fcent. Executar: ./configure --with-php-config=/opt/lampp/bin/php-config (hem afegit la ruta del php-config de XAMPP). Compilem les fonts: make Executar: sudo cp modules/xdebug.so /opt/lampp/lib/php/extensions/no-debug-non-zts-######## Edita /opt/lampp/etc/php.ini i afegeix les seg\u00fcents l\u00ednies al final [xdebug] zend_extension = /opt/lampp/lib/php/extensions/no-debug-non-zts-########/xdebug.so xdebug.mode=develop xdebug.client_port=9003 xdebug.start_upon_error=yes xdebug.start_with_request=yes Reinicieu el servidor web Repeteix els passos del 1 al 5 inicials per comprovar que XDebug s\u00ed est\u00e0 instal\u00b7lat. Despr\u00e9s caldr\u00e0 configurar PHPStorm per a connectar-lo a XDebug Integraci\u00f3 amb PHPStorm i instal\u00b7lar una extensi\u00f3 de Firefox Xdebug Helper o Chrome. Pr\u00e0ctica 4. Instal\u00b7laci\u00f2 d'XDebug Seguint les instruccions anteriors instal\u00b7la i configura XDEBUG i connecta'l a PHP Storm.","title":"Instal\u00b7laci\u00f3 d'XDEBUG 3.0"},{"location":"02-basics/0_index/","text":"0. Introducci\u00f3 Continguts Programaci\u00f3 web amb PHP Funcionament i estructura b\u00e0sica Variables i tipus de dades Constants Expressions i operadors Estructures de control Maneig de cadenes de text i dates Maneig de cadenes de text Maneig de dates Maneig d'arrays Introducci\u00f3 Arrays associatius Arrays multidimensionals Funcions Predefinides De l'usuari Noves caracter\u00edstiques de PHP 7 Type Hinting Nous operadors PHP 7 Operador nau espacial Operador de fusi\u00f3 de null Funcions an\u00f2nimes ( closures ) Processament de formularis M\u00e8todes GET i POST Definici\u00f3 de formularis Recuperaci\u00f3 d'informaci\u00f3 amb GET Recuperaci\u00f3 d'informaci\u00f3 amb POST Enviament d'arxius Validaci\u00f3 de formularis Pujada de fitxers Cr\u00e8dits Aitor Medrano. (setembre de 2021) Desarrollo Web en Entorno Servidor disponible en: https://aitor-medrano.github.io/dwes2122/index.html","title":"0. Introducci\u00f3"},{"location":"02-basics/0_index/#0-introduccio","text":"","title":"0. Introducci\u00f3"},{"location":"02-basics/0_index/#continguts","text":"Programaci\u00f3 web amb PHP Funcionament i estructura b\u00e0sica Variables i tipus de dades Constants Expressions i operadors Estructures de control Maneig de cadenes de text i dates Maneig de cadenes de text Maneig de dates Maneig d'arrays Introducci\u00f3 Arrays associatius Arrays multidimensionals Funcions Predefinides De l'usuari Noves caracter\u00edstiques de PHP 7 Type Hinting Nous operadors PHP 7 Operador nau espacial Operador de fusi\u00f3 de null Funcions an\u00f2nimes ( closures ) Processament de formularis M\u00e8todes GET i POST Definici\u00f3 de formularis Recuperaci\u00f3 d'informaci\u00f3 amb GET Recuperaci\u00f3 d'informaci\u00f3 amb POST Enviament d'arxius Validaci\u00f3 de formularis Pujada de fitxers","title":"Continguts"},{"location":"02-basics/0_index/#credits","text":"Aitor Medrano. (setembre de 2021) Desarrollo Web en Entorno Servidor disponible en: https://aitor-medrano.github.io/dwes2122/index.html","title":"Cr\u00e8dits"},{"location":"02-basics/1_programaci_web_amb_php/","text":"1. Programaci\u00f3 web amb PHP PHP Acr\u00f2nim de Personal Home Page Llenguatge de prop\u00f2sit general, encara que el seu fort \u00e9s el desenvolupament web. Sintaxi similar a C / Java El codi s'executa en el servidor (en Apache mitjan\u00e7ant mod_php ) El client rep el resultat generat despr\u00e9s d'interpretar el codi al servidor. El codi s'emmagatzema en arxiu amb extensi\u00f3 .php. L'\u00faltima versi\u00f3 \u00e9s la 8.0, de novembre de 2020 (i en breu tindrem la versi\u00f3 8.1). La versi\u00f3 7.0 va sortir al desembre de 2015. A m\u00e9s de nombroses noves funcionalitats que anirem veient durant el curs, t\u00e9 m\u00e9s de dues vegades millor rendiment que PHP5. La seva documentaci\u00f3 \u00e9s extensa i est\u00e0 tradu\u00efda: https://www.php.net/manual/es/. Funcionament i estructura b\u00e0sica El nostre primer codi PHP El codi PHP sempre va entre els simbolos <?php i ?> . Les instruccions PHP acaben sempre amb ; . Per a generar codi HTML des de PHP podem utilitzar el m\u00e8tode echo passant-li el text del codi que volem generar. El codi pot anar entre les etiquetes d'HTML. < html > < head ></ head > < body > < h1 > <?php echo \"Hola m\u00f3n\" ?> </ h1 > < body > Tamb\u00e9 podem utilitzar l'etiqueta <?= fa el echo al mateix temps. < html > < head ></ head > < body > < h1 > <? = \"Hola m\u00f3n\" ?> </ h1 > < body > Comentaris De bloc entre /* i */ . De linea, comen\u00e7ant per // o per # . Codi incrustat El documents que contenen codi PHP s'han d'anomenar amb l'extensi\u00f3 .php Variables i tipus de dades Una de les caracter\u00edstiques de php \u00e9s que \u00e9s un llenguatge no fortament tipat . De fet no cal declarar la variable ni indicar el tipus de dades si la declare. Encara que si volem codi de qualitat ho hauriem de fer. Declaraci\u00f3 Els noms de les variables sempre comencen per $ Despr\u00e9s del $ els noms de les variables han d'anar seguits per una lletra o el car\u00e0cter _ i poden contenir tamb\u00e9 n\u00fameros. No \u00e9s necessari declarar una variable ni especificar-li un tipus (sencer, cadena,...) concret. Per crear una variable que continga el text a generar i mostrar-la: < html > < head ></ head > < body > < h1 > <?php $salutacio = \"Hola m\u00f3n\" ; echo $salutacio ; ?> </ h1 > < body > Tipus de les variables El tipus de la variable es decideix en funci\u00f3 del context en qu\u00e8 s'utilitze. En assignar-li el valor 7, la variable \u00e9s de tipus \u201csencer\u201d $la_meua_variable = 7 ; // ara \u00e9s un n\u00famero $la_meua_variable = \"set\" ; // ara \u00e9s cadena Si li canviem el contingut passa a ser de tipus \u201ccadena\u201d Variable no inicialitzades Si s'intenta utilitzar una variable abans d'assignar-li un valor, es genera un error de tipus E_NOTICE per\u00f2 no s'interromp l'execuci\u00f3 de l'script. L'eixida mostrar\u00e0 un av\u00eds cada volta que s'intente. Tipus de dades en PHP boole\u00e0 ( boolean ). Els seus possibles valors s\u00f3n true i false. A m\u00e9s, qualsevol nombre enter es considera com true, excepte el 0 que \u00e9s false. sencer ( integer ). Qualsevol nombre sense decimals. Es poden representar en format decimal, octal (comen\u00e7ant per un 0), o hexadecimal (comen\u00e7ant per 0x). real ( float ). Qualsevol nombre amb decimals. Es poden representar tamb\u00e9 en notaci\u00f3 cient\u00edfica. cadena ( string ). Conjunts de car\u00e0cters delimitats per cometes simples o dobles. vector ( array ). Conjunt de variables del mateix tipus ordenades. Objecte ( object ). Utilitzat per les inst\u00e0ncies de classes. null . \u00c9s un tipus de dades especial, que s'usa per a indicar que la variable no t\u00e9 valor. ( http://php.net/manual/es/language.types.null.php ) \u00c0mbit de les variables L'\u00e0mbit d'una variable \u00e9s la part del codi en que \u00e9s visible. Una variable declarada en un fitxer de PHP est\u00e0 disponible en eixe fitxer i en els que l'incloguen. Les funcions definixen un \u00e0mbit local, separat de la resta del codi. Es poden definir variables globlals amb la paraula reservada global , encara que no s\u00f3n aconsellables. Variables predefinides S\u00f3n variables internes predefinides de PHP que poden usar-se des de qualsevol \u00e0mbit. Tomem forma d'arrays associatius que contenen un conjunt de valors. $_SERVER . Cont\u00e9 informaci\u00f3 sobre l'entorn del servidor web i d'execuci\u00f3. $_GET, $_POST i $_COOKIE contenen les variables que s'han passat al script actual utilitzant, respectivament, els m\u00e8todes GET (par\u00e0metres en la URL), HTTP POST i Cookies HTTP $_REQUEST junta en un solament el contingut dels tres *arrays anteriors, $_GET, $_POST i $_COOKIE. $_ENV cont\u00e9 les variables que es puguen haver passat a PHP des de l'entorn en qu\u00e8 s'executa. $_FILES cont\u00e9 els fitxers que es puguen haver pujat al servidor utilitzant el m\u00e8tode POST. $_SESSION cont\u00e9 les variables de sessi\u00f3 disponibles per al gui\u00f3 actual. http://es.php.net/manual/es/language.variables.superglobals.php Constants Per a definir constants s'utilitza define() , que reb el nom de la constant i el valor que li volem donar define ( \"LIMITE\" , 1000 ); \u00c9s habitual utilitzar identificadors en majuscules per a les constants. Operadors Arim\u00e8tics Exemple Nom Resultat +$a Identidat Conversi\u00f3 de $a a int o float segons el cas. -$a Negaci\u00f3 Oposat de $a . $a + $b Suma Suma de $a i $b . $a - $b Resta Difer\u00e8ncia de $a i $b . $a * $b Multiplicaci\u00f3 Producte de $a i $b . $a / $b Divisi\u00f3 Quocient de $a i $b . $a % $b M\u00f3dul / Residu Residu de $a dividit per $b . $a ** $b Pot\u00e8ncia Resultat de $a elevat a $b . PHP >= 5.6. En el caso de cadenas , si queremos concatenarlas, se utiliza el operador . : $x = 33 ; $y = 11 ; $z = $x + $y ; echo \"La suma de 33 y 11 es \" . 44. \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . ( 33 + 11 ) . \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . $z . \"<br />\" ; Realment en lloc de concatenar cadenas con variables, podem imprimir-les directament ja que s'expandeixen autom\u00e0ticament: echo \"La suma de $x y $y es $z <br />\" ; En ocasions, necesitem envoltar el nom de la variable entre claus per poder un m\u00e9s text al resultat: $color = \"rojo\" ; echo \"El plural de $color el ${ color } s\" ; ?> M\u00e9s endavant estudiarem algunes funcions per al tractament de cadenes. Comparaci\u00f3 Exemple Nom Resultat $a == $b Igual true si $a \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a === $b Id\u00e8ntic, Comparaci\u00f3 estricta true si $a \u00e9s igual a $b , i s\u00f3n del mateix tipus de dada. $a != $b , $a <> $b Diferent true si $a no \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a !== $b No id\u00e8ntic true si $a no \u00e9s igual a $b , o si no s\u00f3n del mateix tipus. $a < $b Menor que true si $a \u00e9s estrictament menor que $b . $a > $b Major que true si $a \u00e9s estrictament major que $b . $a <= $b Menor o igual que true si $a \u00e9s menor o igual que $b . $a >= $b Major o igual que true si $a \u00e9s major o igual que $b . $a <=> $b Nau espacial Torna -1 , 0 o 1 quan $a \u00e9s respectivamente menor, igual, o major que $b . PHP >= 7. $a ?? $b ?? $c Fusi\u00f3n de null El primer operano d'esquerra a dreta que existisca i no siga null . null si no hi ha valors definits i no s\u00f3n null . PHP >= 7. L\u00f2gics Exemple Nom Resultat $a and $b , $a && $b And (i) true si tant $a com $b s\u00f3n true . $a or $b , $a || $b Or (o inclusiu) true si qualsevol de $a o $b \u00e9s true . $a xor $b Xor (o exclusiu) true si $a o $b \u00e9s true , pero no ambd\u00f3s. !$a Not (no) true si $a no \u00e9s true . Assignaci\u00f3 Exemple Nom Resultat $a = $b Assignaci\u00f3 Assigna a $a el valor de $b $a += $b Assignaci\u00f3 de la suma Le suma a $a el valor de $b . Equivalent a $a = $a + $b $a -= $b Assignaci\u00f3 de la resta Le resta a $a el valor de $b . Equivalent a $a = $a - $b $a *= $b Assignaci\u00f3 del producte Assigna a $a el producto de $a por $b . Equivalent a $a = $a * $b $a /= $b Assignaci\u00f3 de la divisi\u00f3 Assigna a $a el quocient de $a entre $b . Equivalent a $a = $a / $b $a %= $b Assignaci\u00f3 del residu Assigna a $a el residu de dividir $a entre $b . Equivalent a $a = $a % $b $a .= $b Concatenaci\u00f3 Concatena a $a la cadena $b . Equivalent a $a = $a . $b $a++ Increment Incrementa $a en una unitat. Equivalent a $a = $a + 1 $a-- Decrement Decrementa $a en una unitat. Equivalent a $a = $a - 1 Prioridad de los operadores Recorda la prioritat. Primer els par\u00e8ntesis, despr\u00e9s la negaci\u00f3 ( ! ), productes/divisions, sumes/restes, comparacions, l\u00f2gics i finalment es realitza l'assignaci\u00f3. M\u00e9s informaci\u00f3 a https://www.php.net/manual/es/language.operators.precedence.php Autoevaluaci\u00f3n Si $a=5 i $b=4 , esbrina el valor de $c si $c = $a*2 > $b+5 && !($b<>4) Operador ternari Funciona com un condicional condici\u00f3 ? valor si true : valor si false i que es pot simplificar ** condici\u00f3 https://www.php.net/manual/es/language.operators.php Farem alguns exercicis : Exercisi 2.0 Conceptes b\u00e0sics Estructures de control de flux Les instruccions de control de flux en PHP funcionen exactament igual que en altres llenguatges de programaci\u00f3. Les m\u00e9s habituals s\u00f3n: Condicionals: if, if else, switch Bucles: while, do while, for seguint les estructures: if ( condici\u00f3 ) { // instruccions } else { // instruccions } switch ( $variable ) { case valor : //instruccio1 break ; case valor : //instruccio1 break ; default : //instruccio1 } while ( condici\u00f3 ) { //instruccions } do { //instruccions } while ( condici\u00f3 ); for ( $i = 1 ; $i < 10 ; $i ++ ){ //instruccions } http://php.net/manual/es/language.control-structures.php Sent\u00e8ncies per a incloure Fitxers Les sent\u00e8ncies include() i include_once() i require() i require_once() inclouen i avaluen l'artxiu especificat. include_once() i require_once() verifica que l'arxiu no haja sigut incl\u00f2s abans i \u00e9s preferible a include. Cal ser cur\u00f2s amb el path de l'arxiu a incloure. La difer\u00e8ncia entre require i include \u00e9s el tractament de l'error quan el fitxer no existeix. fruites . php <? php $color = 'verde' ; $fruta = 'manzana' ; include ( 'fruite.view.php' ) ?> fruites.view.php < html > < head > < title > Fruites </ title > </ head > < body > < h3 > <?= \"Una $fruta $color\" ?> </ h3 > </ body > </ html > Expansi\u00f3 de variables Podem introduir una variable dins d'un text sempre que usem les cometes dobles per a delimitar el text. A\u00e7\u00f2 far\u00e0 que el contingut de la variable s'expandisca i es concatene amb el text existent en la cadena. echo \"<p>M\u00f2dul: $module </p>\" A voltes, \u00e9s necessari envoltar-la entre claus echo \"<p>M\u00f2dul: { $module } DAW</p>\" Si no pos\u00e0rem les claus l'int\u00e8rpret cercaria una variable que es cride $moduleDAW","title":"1. Programaci\u00f3 web amb PHP"},{"location":"02-basics/1_programaci_web_amb_php/#1-programacio-web-amb-php","text":"","title":"1. Programaci\u00f3 web amb PHP"},{"location":"02-basics/1_programaci_web_amb_php/#php","text":"Acr\u00f2nim de Personal Home Page Llenguatge de prop\u00f2sit general, encara que el seu fort \u00e9s el desenvolupament web. Sintaxi similar a C / Java El codi s'executa en el servidor (en Apache mitjan\u00e7ant mod_php ) El client rep el resultat generat despr\u00e9s d'interpretar el codi al servidor. El codi s'emmagatzema en arxiu amb extensi\u00f3 .php. L'\u00faltima versi\u00f3 \u00e9s la 8.0, de novembre de 2020 (i en breu tindrem la versi\u00f3 8.1). La versi\u00f3 7.0 va sortir al desembre de 2015. A m\u00e9s de nombroses noves funcionalitats que anirem veient durant el curs, t\u00e9 m\u00e9s de dues vegades millor rendiment que PHP5. La seva documentaci\u00f3 \u00e9s extensa i est\u00e0 tradu\u00efda: https://www.php.net/manual/es/.","title":"PHP"},{"location":"02-basics/1_programaci_web_amb_php/#funcionament-i-estructura-basica","text":"","title":"Funcionament i estructura b\u00e0sica"},{"location":"02-basics/1_programaci_web_amb_php/#el-nostre-primer-codi-php","text":"El codi PHP sempre va entre els simbolos <?php i ?> . Les instruccions PHP acaben sempre amb ; . Per a generar codi HTML des de PHP podem utilitzar el m\u00e8tode echo passant-li el text del codi que volem generar. El codi pot anar entre les etiquetes d'HTML. < html > < head ></ head > < body > < h1 > <?php echo \"Hola m\u00f3n\" ?> </ h1 > < body > Tamb\u00e9 podem utilitzar l'etiqueta <?= fa el echo al mateix temps. < html > < head ></ head > < body > < h1 > <? = \"Hola m\u00f3n\" ?> </ h1 > < body >","title":"El nostre primer codi PHP"},{"location":"02-basics/1_programaci_web_amb_php/#comentaris","text":"De bloc entre /* i */ . De linea, comen\u00e7ant per // o per # .","title":"Comentaris"},{"location":"02-basics/1_programaci_web_amb_php/#codi-incrustat","text":"El documents que contenen codi PHP s'han d'anomenar amb l'extensi\u00f3 .php","title":"Codi incrustat"},{"location":"02-basics/1_programaci_web_amb_php/#variables-i-tipus-de-dades","text":"Una de les caracter\u00edstiques de php \u00e9s que \u00e9s un llenguatge no fortament tipat . De fet no cal declarar la variable ni indicar el tipus de dades si la declare. Encara que si volem codi de qualitat ho hauriem de fer.","title":"Variables i tipus de dades"},{"location":"02-basics/1_programaci_web_amb_php/#constants","text":"Per a definir constants s'utilitza define() , que reb el nom de la constant i el valor que li volem donar define ( \"LIMITE\" , 1000 ); \u00c9s habitual utilitzar identificadors en majuscules per a les constants.","title":"Constants"},{"location":"02-basics/1_programaci_web_amb_php/#operadors","text":"","title":"Operadors"},{"location":"02-basics/1_programaci_web_amb_php/#arimetics","text":"Exemple Nom Resultat +$a Identidat Conversi\u00f3 de $a a int o float segons el cas. -$a Negaci\u00f3 Oposat de $a . $a + $b Suma Suma de $a i $b . $a - $b Resta Difer\u00e8ncia de $a i $b . $a * $b Multiplicaci\u00f3 Producte de $a i $b . $a / $b Divisi\u00f3 Quocient de $a i $b . $a % $b M\u00f3dul / Residu Residu de $a dividit per $b . $a ** $b Pot\u00e8ncia Resultat de $a elevat a $b . PHP >= 5.6. En el caso de cadenas , si queremos concatenarlas, se utiliza el operador . : $x = 33 ; $y = 11 ; $z = $x + $y ; echo \"La suma de 33 y 11 es \" . 44. \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . ( 33 + 11 ) . \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . $z . \"<br />\" ; Realment en lloc de concatenar cadenas con variables, podem imprimir-les directament ja que s'expandeixen autom\u00e0ticament: echo \"La suma de $x y $y es $z <br />\" ; En ocasions, necesitem envoltar el nom de la variable entre claus per poder un m\u00e9s text al resultat: $color = \"rojo\" ; echo \"El plural de $color el ${ color } s\" ; ?> M\u00e9s endavant estudiarem algunes funcions per al tractament de cadenes.","title":"Arim\u00e8tics"},{"location":"02-basics/1_programaci_web_amb_php/#comparacio","text":"Exemple Nom Resultat $a == $b Igual true si $a \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a === $b Id\u00e8ntic, Comparaci\u00f3 estricta true si $a \u00e9s igual a $b , i s\u00f3n del mateix tipus de dada. $a != $b , $a <> $b Diferent true si $a no \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a !== $b No id\u00e8ntic true si $a no \u00e9s igual a $b , o si no s\u00f3n del mateix tipus. $a < $b Menor que true si $a \u00e9s estrictament menor que $b . $a > $b Major que true si $a \u00e9s estrictament major que $b . $a <= $b Menor o igual que true si $a \u00e9s menor o igual que $b . $a >= $b Major o igual que true si $a \u00e9s major o igual que $b . $a <=> $b Nau espacial Torna -1 , 0 o 1 quan $a \u00e9s respectivamente menor, igual, o major que $b . PHP >= 7. $a ?? $b ?? $c Fusi\u00f3n de null El primer operano d'esquerra a dreta que existisca i no siga null . null si no hi ha valors definits i no s\u00f3n null . PHP >= 7.","title":"Comparaci\u00f3"},{"location":"02-basics/1_programaci_web_amb_php/#logics","text":"Exemple Nom Resultat $a and $b , $a && $b And (i) true si tant $a com $b s\u00f3n true . $a or $b , $a || $b Or (o inclusiu) true si qualsevol de $a o $b \u00e9s true . $a xor $b Xor (o exclusiu) true si $a o $b \u00e9s true , pero no ambd\u00f3s. !$a Not (no) true si $a no \u00e9s true .","title":"L\u00f2gics"},{"location":"02-basics/1_programaci_web_amb_php/#assignacio","text":"Exemple Nom Resultat $a = $b Assignaci\u00f3 Assigna a $a el valor de $b $a += $b Assignaci\u00f3 de la suma Le suma a $a el valor de $b . Equivalent a $a = $a + $b $a -= $b Assignaci\u00f3 de la resta Le resta a $a el valor de $b . Equivalent a $a = $a - $b $a *= $b Assignaci\u00f3 del producte Assigna a $a el producto de $a por $b . Equivalent a $a = $a * $b $a /= $b Assignaci\u00f3 de la divisi\u00f3 Assigna a $a el quocient de $a entre $b . Equivalent a $a = $a / $b $a %= $b Assignaci\u00f3 del residu Assigna a $a el residu de dividir $a entre $b . Equivalent a $a = $a % $b $a .= $b Concatenaci\u00f3 Concatena a $a la cadena $b . Equivalent a $a = $a . $b $a++ Increment Incrementa $a en una unitat. Equivalent a $a = $a + 1 $a-- Decrement Decrementa $a en una unitat. Equivalent a $a = $a - 1 Prioridad de los operadores Recorda la prioritat. Primer els par\u00e8ntesis, despr\u00e9s la negaci\u00f3 ( ! ), productes/divisions, sumes/restes, comparacions, l\u00f2gics i finalment es realitza l'assignaci\u00f3. M\u00e9s informaci\u00f3 a https://www.php.net/manual/es/language.operators.precedence.php Autoevaluaci\u00f3n Si $a=5 i $b=4 , esbrina el valor de $c si $c = $a*2 > $b+5 && !($b<>4)","title":"Assignaci\u00f3"},{"location":"02-basics/1_programaci_web_amb_php/#estructures-de-control-de-flux","text":"Les instruccions de control de flux en PHP funcionen exactament igual que en altres llenguatges de programaci\u00f3. Les m\u00e9s habituals s\u00f3n: Condicionals: if, if else, switch Bucles: while, do while, for seguint les estructures: if ( condici\u00f3 ) { // instruccions } else { // instruccions } switch ( $variable ) { case valor : //instruccio1 break ; case valor : //instruccio1 break ; default : //instruccio1 } while ( condici\u00f3 ) { //instruccions } do { //instruccions } while ( condici\u00f3 ); for ( $i = 1 ; $i < 10 ; $i ++ ){ //instruccions } http://php.net/manual/es/language.control-structures.php","title":"Estructures de control de flux"},{"location":"02-basics/1_programaci_web_amb_php/#sentencies-per-a-incloure-fitxers","text":"Les sent\u00e8ncies include() i include_once() i require() i require_once() inclouen i avaluen l'artxiu especificat. include_once() i require_once() verifica que l'arxiu no haja sigut incl\u00f2s abans i \u00e9s preferible a include. Cal ser cur\u00f2s amb el path de l'arxiu a incloure. La difer\u00e8ncia entre require i include \u00e9s el tractament de l'error quan el fitxer no existeix. fruites . php <? php $color = 'verde' ; $fruta = 'manzana' ; include ( 'fruite.view.php' ) ?> fruites.view.php < html > < head > < title > Fruites </ title > </ head > < body > < h3 > <?= \"Una $fruta $color\" ?> </ h3 > </ body > </ html >","title":"Sent\u00e8ncies per a incloure Fitxers"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/","text":"2. Maneig de cadenes de text i dates Maneig de cadenes de text Cadenes de text Podem utilitzar tant cometes simples com a cometes dobles. Per a concatenar cadenes utilitzarem l'operador punt (.) $fullName = $name.' '.$surname; Funcions de cadena Activitat 1 Crea una p\u00e0gina anomenada cadenes.php , copia el contingut de la p\u00e0gina index.php , activa la directiva de tipus estricta ( declare( strict_types = 1 ); ) i mostra el seg\u00fcent: Elimina els espais del principi i el final del nom si els hi haguera ( trim ). Elimina la lletra a del principi i el final del nom si els hi haguera ( trim ). Mostra la variable nom en maj\u00fascules, min\u00fascules i amb la primera lletra en maj\u00fascula i les altres en min\u00fascules ( strtoupper , strtolower , ucfirst ). Mostra el codi ascii de la primera lletra del nom ( ord ). Mostra la longitud del nom ( strlen ). Mostra el nombre de vegades que apareix la lletra a (maj\u00fascula o min\u00fascula, substr_count ). Mostra la posici\u00f3 de la primera a existent en el nom, siga maj\u00fascula o min\u00fascula ( strpos ). Si no hi ha cap mostrar\u00e0 -1. El mateix, per\u00f2 amb l''\u00faltima a. Mostra el nom substituint la lletr o pel n\u00famero zero, siga maj\u00fascula o min\u00fascula ( str_replace ). Indica si el nom comen\u00e7a per al o no. Activitat 2 En el mateix document cadenes.php i a partir d'una variable que continga una url: $url = 'http://username:password@hostname:9090/path?arg=value#anchor' ; Utilitza la funci\u00f3 parse_url per a extraure de la url les seg\u00fcents parts: 1. El protocol utilitzat (en l'exemple \"http\"). 2. El nom d'usuari (en l'exemple \"username\"). 3. El path de la url (en l'exemple \"/path\"). 4. El querystring de la url (en l'exemple \"arg=value\"). Maneig de dates Funci\u00f3 time() En PHP les dates s'emmagatzemen com a n\u00fameros enters. La funci\u00f3 time() retorna el nombre de segons transcorreguts des de l'1 de gener de 1970 (instant conegut com a \u00e8poca Unix). A aquesta forma d'expressar data i hora se li denomina timestamp . Funci\u00f3 date() date ( string $format [, int $timestamp = time ()]) : string La funci\u00f3 date retorna una cadena formatada segons els codi de format. Si no li passem la variable timestamp ens retorna la cadena formatada per a la data i l'hora actual. Els codis de format m\u00e9s habituals per a la funci\u00f3 date s\u00f3n: CODI DESCRIPCI\u00d3 a am o pm A AM o PM d Dia del mes amb zeros D Abreviatura del dia de la setmana (en angl\u00e8s) F Nom del mes (en angl\u00e8s) h Hora en format 1-12 H Hora en format 0-23 i Minuts j Dia del mes sense zeros l Dia de la setmana m N\u00famero de mes (1-12) M Abreviatura del mes (en angl\u00e8s) s Segons y Any amb 2 d\u00edgits Y Any amb 4 d\u00edgits z Dia de l'any (1-365) La informaci\u00f3 completa la pots trobar en el manual oficial de PHP: date Suposant que hui \u00e9s 15 de setembre de 2019 i les 19 hores 20 minuts i 23 segons et mostrem alguns exemples: date ( \"d-m-Y\" ); // 15-09-2019 date ( \"H:i:s\" ); // 19:20:23 date ( \"Y\" ); // 2019 date ( \"YmdHis\" ); // 20190915192023 date ( \"d/m/y H:i a\" ); // 15/09/19 19:20 pm date ( \"d-m-Y H:i\" , time ()); // Moment actual Funci\u00f3 mktime(hora, min, seg, mes, dia, any) La funci\u00f3 mktime permet obtenir la marca de temps Unix ( timestamp ) d'una data. Per exemple: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); echo date ( 'd-m-Y' , $data ); // mostrar\u00e0 01-01-2020 M\u00e9s informaci\u00f3 en https://www.php.net/manual/es/function.mktime.php Un altra forma de crear dates \u00e9s mitjan\u00e7ant la funci\u00f3 strtotime() on podem indicar les dates mitjan\u00e7ant una cadena de text. Per exemple: // posarem la data en el format any-mes-dia per a evitar confusions. $date = strtotime ( \"2020-01-01\" ); Operar amb dates Com hem dit al principi les dates s'emmagatzem com a enters on cada unitat representa un segon. Aix\u00ed podem sumar i restar dates ( timestamp ) per a afegir, llevar o calcular difer\u00e8ncies entre ells. Per exemple, per poder determinar els dies que falten per a l'1 de gener de 2020 far\u00edem: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); // timestamp que representa l'1 de gener de 2020 $diferencia = $data - time (); // restem a l'1 de gener de 2020 el temps actual, // el resultat estar\u00e0 en segons. $diferenciaEnDies = ((( $diferencia / 60 ) / 60 ) / 24 ); /* dividim els segons entre 60 i obtenim els minuts, els dividim entre 60 i obtenim les hores, els dividim entre 24 i obtenim els dies */ Validar dates En la funci\u00f3 checkdate podem validar una data. checkdate ( int $month , int $day , int $year ) : bool La funci\u00f3 torna true si la data es v\u00e0lida, si no, torna false . Classe DateTime PHP disposa tamb\u00e9 de la classe DateTime per a representar les dates, la veurem m\u00e9s avant. Activitat 3: Treballar amb dates Crea un fitxer anomenat dates.php i realitza les seg\u00fcents tasques: Mostra la data i hora actuals amb el format: dd/mm/yyyy hh:mm:ss Mostra el nom de la zona hor\u00e0ria que s'utilitza per defecte. Mostra la data de que ser\u00e0 d\u2019ac\u00ed 45 dies. Mostra el nombre de dies que han passat des de l'1 de gener. Mostra la data i hora actuals de Nova York. Mostra el dia de la setmana que era l'1 de gener d'enguany. En acabar penja el document a Aules. Activitat 4 200dadesPersonals.php : Escriu un programa que emmagatzeme en variables teu nom, primer cognom, segon cognom, email, any de naixement i tel\u00e8fon. Despr\u00e9s mostra'ls per pantalla dins d'una taula. Nom Bruce Cognoms Wayne Email batman@dccomics.com Any de naixement 1939 Tel\u00e8fon 555666777 206anyos.php : Despr\u00e9s de llegir l'edat d'una persona, mostrar l'edat que tindr\u00e0 d'aqu\u00ed a 10 anys i fa 10 anys. A m\u00e9s, mostra quin any ser\u00e0 en cada un dels casos. Finalment, mostra l'any de jubilaci\u00f3 suposant que treballar\u00e0s fins als 65 anys. Tip: $anyoActual = date(\"Y\") ;","title":"2. Maneig de cadenes de text i dates"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#2-maneig-de-cadenes-de-text-i-dates","text":"","title":"2. Maneig de cadenes de text i dates"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#maneig-de-cadenes-de-text","text":"","title":"Maneig de cadenes de text"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#cadenes-de-text","text":"Podem utilitzar tant cometes simples com a cometes dobles. Per a concatenar cadenes utilitzarem l'operador punt (.) $fullName = $name.' '.$surname; Funcions de cadena Activitat 1 Crea una p\u00e0gina anomenada cadenes.php , copia el contingut de la p\u00e0gina index.php , activa la directiva de tipus estricta ( declare( strict_types = 1 ); ) i mostra el seg\u00fcent: Elimina els espais del principi i el final del nom si els hi haguera ( trim ). Elimina la lletra a del principi i el final del nom si els hi haguera ( trim ). Mostra la variable nom en maj\u00fascules, min\u00fascules i amb la primera lletra en maj\u00fascula i les altres en min\u00fascules ( strtoupper , strtolower , ucfirst ). Mostra el codi ascii de la primera lletra del nom ( ord ). Mostra la longitud del nom ( strlen ). Mostra el nombre de vegades que apareix la lletra a (maj\u00fascula o min\u00fascula, substr_count ). Mostra la posici\u00f3 de la primera a existent en el nom, siga maj\u00fascula o min\u00fascula ( strpos ). Si no hi ha cap mostrar\u00e0 -1. El mateix, per\u00f2 amb l''\u00faltima a. Mostra el nom substituint la lletr o pel n\u00famero zero, siga maj\u00fascula o min\u00fascula ( str_replace ). Indica si el nom comen\u00e7a per al o no. Activitat 2 En el mateix document cadenes.php i a partir d'una variable que continga una url: $url = 'http://username:password@hostname:9090/path?arg=value#anchor' ; Utilitza la funci\u00f3 parse_url per a extraure de la url les seg\u00fcents parts: 1. El protocol utilitzat (en l'exemple \"http\"). 2. El nom d'usuari (en l'exemple \"username\"). 3. El path de la url (en l'exemple \"/path\"). 4. El querystring de la url (en l'exemple \"arg=value\").","title":"Cadenes de text"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#maneig-de-dates","text":"","title":"Maneig de dates"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#funcio-time","text":"En PHP les dates s'emmagatzemen com a n\u00fameros enters. La funci\u00f3 time() retorna el nombre de segons transcorreguts des de l'1 de gener de 1970 (instant conegut com a \u00e8poca Unix). A aquesta forma d'expressar data i hora se li denomina timestamp .","title":"Funci\u00f3 time()"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#funcio-date","text":"date ( string $format [, int $timestamp = time ()]) : string La funci\u00f3 date retorna una cadena formatada segons els codi de format. Si no li passem la variable timestamp ens retorna la cadena formatada per a la data i l'hora actual. Els codis de format m\u00e9s habituals per a la funci\u00f3 date s\u00f3n: CODI DESCRIPCI\u00d3 a am o pm A AM o PM d Dia del mes amb zeros D Abreviatura del dia de la setmana (en angl\u00e8s) F Nom del mes (en angl\u00e8s) h Hora en format 1-12 H Hora en format 0-23 i Minuts j Dia del mes sense zeros l Dia de la setmana m N\u00famero de mes (1-12) M Abreviatura del mes (en angl\u00e8s) s Segons y Any amb 2 d\u00edgits Y Any amb 4 d\u00edgits z Dia de l'any (1-365) La informaci\u00f3 completa la pots trobar en el manual oficial de PHP: date Suposant que hui \u00e9s 15 de setembre de 2019 i les 19 hores 20 minuts i 23 segons et mostrem alguns exemples: date ( \"d-m-Y\" ); // 15-09-2019 date ( \"H:i:s\" ); // 19:20:23 date ( \"Y\" ); // 2019 date ( \"YmdHis\" ); // 20190915192023 date ( \"d/m/y H:i a\" ); // 15/09/19 19:20 pm date ( \"d-m-Y H:i\" , time ()); // Moment actual","title":"Funci\u00f3 date()"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#funcio-mktimehora-min-seg-mes-dia-any","text":"La funci\u00f3 mktime permet obtenir la marca de temps Unix ( timestamp ) d'una data. Per exemple: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); echo date ( 'd-m-Y' , $data ); // mostrar\u00e0 01-01-2020 M\u00e9s informaci\u00f3 en https://www.php.net/manual/es/function.mktime.php Un altra forma de crear dates \u00e9s mitjan\u00e7ant la funci\u00f3 strtotime() on podem indicar les dates mitjan\u00e7ant una cadena de text. Per exemple: // posarem la data en el format any-mes-dia per a evitar confusions. $date = strtotime ( \"2020-01-01\" );","title":"Funci\u00f3 mktime(hora, min, seg, mes, dia, any)"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#operar-amb-dates","text":"Com hem dit al principi les dates s'emmagatzem com a enters on cada unitat representa un segon. Aix\u00ed podem sumar i restar dates ( timestamp ) per a afegir, llevar o calcular difer\u00e8ncies entre ells. Per exemple, per poder determinar els dies que falten per a l'1 de gener de 2020 far\u00edem: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); // timestamp que representa l'1 de gener de 2020 $diferencia = $data - time (); // restem a l'1 de gener de 2020 el temps actual, // el resultat estar\u00e0 en segons. $diferenciaEnDies = ((( $diferencia / 60 ) / 60 ) / 24 ); /* dividim els segons entre 60 i obtenim els minuts, els dividim entre 60 i obtenim les hores, els dividim entre 24 i obtenim els dies */","title":"Operar amb dates"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#validar-dates","text":"En la funci\u00f3 checkdate podem validar una data. checkdate ( int $month , int $day , int $year ) : bool La funci\u00f3 torna true si la data es v\u00e0lida, si no, torna false .","title":"Validar dates"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#classe-datetime","text":"PHP disposa tamb\u00e9 de la classe DateTime per a representar les dates, la veurem m\u00e9s avant. Activitat 3: Treballar amb dates Crea un fitxer anomenat dates.php i realitza les seg\u00fcents tasques: Mostra la data i hora actuals amb el format: dd/mm/yyyy hh:mm:ss Mostra el nom de la zona hor\u00e0ria que s'utilitza per defecte. Mostra la data de que ser\u00e0 d\u2019ac\u00ed 45 dies. Mostra el nombre de dies que han passat des de l'1 de gener. Mostra la data i hora actuals de Nova York. Mostra el dia de la setmana que era l'1 de gener d'enguany. En acabar penja el document a Aules. Activitat 4 200dadesPersonals.php : Escriu un programa que emmagatzeme en variables teu nom, primer cognom, segon cognom, email, any de naixement i tel\u00e8fon. Despr\u00e9s mostra'ls per pantalla dins d'una taula. Nom Bruce Cognoms Wayne Email batman@dccomics.com Any de naixement 1939 Tel\u00e8fon 555666777 206anyos.php : Despr\u00e9s de llegir l'edat d'una persona, mostrar l'edat que tindr\u00e0 d'aqu\u00ed a 10 anys i fa 10 anys. A m\u00e9s, mostra quin any ser\u00e0 en cada un dels casos. Finalment, mostra l'any de jubilaci\u00f3 suposant que treballar\u00e0s fins als 65 anys. Tip: $anyoActual = date(\"Y\") ;","title":"Classe DateTime"},{"location":"02-basics/3_maneig_darrays/","text":"3. Maneig d'arrays Introducci\u00f3 Un array \u00e9s un tipus de dades que ens permet emmagatzemar diversos valors. Per tal d'accedir a un valor utilitzarem una clau . Les claus poden ser nombres o textos ( arrays associatius ). Si no indiquem cap clau, a cada element se li associar\u00e0 una clau num\u00e8rica correlativa. Array indexat Crear array Podem crear un array buit de dues formes: $noms = array (); $noms = []; Si volem assignar valors al array en el moment de crear-ho: $noms = array ( 'Sandra' , 'Pedro' , 'Andrea' ); $noms = [ 'Sandra' , 'Pedro' , 'Andrea' ]; Mostrar el contingut d'un array Si intentem mostrar el contingut d'un array amb echo no obtindrem les dades que hi ha dins del array. En lloc d'a\u00e7\u00f2 podem utilitzar la funci\u00f3 print_r: print_r ( $noms ); Per\u00f2 si necessitem donar-li format als continguts del array, haurem de rec\u00f3rrer-ho amb un bucle i anar mostrant element a element. Afegint elements al array Podem afegir elements al array utilitzant claud\u00e0tors buits. La clau d'aquests elements ser\u00e0 el seg\u00fcent \u00edndex num\u00e8ric disponible. $noms [] = 'Raul' ; $noms [] = 'Marta' ; Accedir als elements del array Accedirem als elements del array indicant la clau de l'element entre claud\u00e0tors: echo $noms [ 2 ]; Tamb\u00e9 podem modificar el seu valor: $noms [ 0 ] = 'Sara' ; Rec\u00f3rrer arrays Arrays associatius Si el array cont\u00e9 dades diverses i/o ens interessa accedir a ells amb claus m\u00e9s espec\u00edfiques que un simple \u00edndex num\u00e8ric podem utilitzar arrays associatius: $alumne = array ( 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ); $alumne = [ 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ]; $alumne [ 'nom' ] = 'Ver\u00f3nica' ; echo $alumne [ 'nom' ]; Rec\u00f3rrer arrays associatius Rec\u00f3rrer claus i valors Arrays multidimensionals Imagina que volem tenir un array els elements del qual s\u00f3n noms d'esports. Volem dividir-los en esports d'hivern i esports d'estiu. Podem crear un array esports que continga dos elements que al seu torn tamb\u00e9 seran arrays. $esports = [ 'hivern' => [ 'esqu\u00ed de fons' , 'hoquei sobre gel' ], 'estiu' => [ 'nataci\u00f3' , 'voley platja' ] ]; Per a accedir al primer esport d'hivern: echo $esports [ 'hivern' ][ 0 ]; Funcions d'arrays Podem obtenir la mida de l'array mitjan\u00e7ant la funci\u00f3 count (array). Per rec\u00f3rrer l'array farem \u00fas d'un bucle for : $tam = count($fruites); // mida de l'array for ($i=0; $i < count ($ fruites ); $ i ++) { echo \" Element $ i: $ fruites [$ i ] < br /> \"; } Les operacions m\u00e9s importants que podem realitzar amb arrays s\u00f3n: print_r($ array) : mostra el contingut de tot el $array $elem = array_pop($array) : elimina l'\u00faltim $element array_push ($ array, $ elem) : afegeix un $element al final. $bool = in_array($elem, $array) : esbrina si $elem est\u00e0 en el $array PHP $fruits = [ \"orange\" , \"pear\" , \"apple\" ]; array_push ( $fruites , \"pinapple\" ); print_r ( $fruits ); $lastFruit = array_pop ( $fruits ); if ( in_array ( \"pineapple\" , $fruits )) { echo \"<p> Pineapple left </ p>\" ; } else { echo \"<p> No pineapple left </ p>\" ; } print_r ( $fruites ); ?> Consola Array ( [0] => orange [1] => pear [2] => apple [3] => pinapple ) <p>No pineapple left</ p> Array ( [0] => orange [1] => pear [2] => apple ) $claus = array_keys($array) : torna les claus de l' $ array associatiu. $tam = count ($array) : retorna la mida de $ array . sort($array) : ordena els elements de l' $ array . isset($array[element]) : indica si existeix / t\u00e9 valor element dins del array. unset($array[element]) : elimina l'element de l'array (deixa un buit). PHP $capitals = array ( \"Italy\" => \"Rome\" , \"France\" => \"Paris\" , \"Portugal\" => \"Lisbon\" ); $countries = array_keys ( $ capitals ); print_r ( $countries ); sort ( $countries ); print_r ( $countries ); unset ( $capitals [ \"France\" ]); print_r ( $capitals ); ?> Consola `Console Array ( [0] => Italy [1] => France [2] => Portugal ) Array ( [0] => France [1] => Italy [2] => Portugal ) Array ( [Italy] => Rome [Portugal] => Lisbon ) ` Existeixen molt\u00edssimes m\u00e9s funcions per treballar amb arrays. Tota la informaci\u00f3 en el documentaci\u00f3 oficial . Articles per aprofundir en les operacions amb arrays Un article molt complet (en angl\u00e8s) de Com treballar amb arrays en PHP de la manera correcta . Un altre article recomanable (en angl\u00e8s) \u00e9s Com ordenar arrays en PHP . Altres recursos: https://www.studytonight.com/php/indexed-array https://aprende-web.net/php/php6_1.php Activitats Activitat 231: Arrays indexats Crea una p\u00e0gina anomenada arrays.php , copia el contingut de la p\u00e0gina index.php i resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array amb els noms de diversos alumnes de la classe incloent el teu. Mostra el nombre d'elements que t\u00e9 l'array ( count ). Crea una cadena de text que continga els noms dels alumnes existents en l'array separats per un espai i mostra-la ( implode ). Mostra l'array en un ordre aleatori diferent al que ho vas crear ( shuffle ). Mostra l'array ordenat alfab\u00e8ticament ( sort ). Mostra els alumnes el nom dels quals continga almenys una \u201ca\u201d ( array_filter ). Mostra l'array en l'ordre invers al que es va crear ( rsort ). Mostra la posici\u00f3 que t\u00e9 el teu nom en l'array ( array_search ). Activitat 232: Arrays associatius Segons l'INE les 7 ciutats m\u00e9s grans d\u2019Espanya (per habitants) el 2018 van ser les seg\u00fcents: Madrid, MAD, 3.223.334 Sevilla, AN , 688.711 Murcia, MU, 447.182 M\u00e1laga, AN, 571.026 Zaragoza, AR, 666.880 Val\u00e8ncia, CV, 791.413 Barcelona, CAT, 1.620.343 Copia index.php i crea un nou document cituats.php . Defineix un array que continga aquesta informaci\u00f3 sobre ciutats i habitants. Imprimeix una taula d'ubicacions i habitants que incloga la poblaci\u00f3 total de les 7 ciutats. Opcional: Modifica la soluci\u00f3 de l\u2019anterior exercici perqu\u00e8 mostre les ciutats ordenades per habitants. Despr\u00e9s mostra-les per ordre alfab\u00e8tic. Activitat 233: Arrays multidimensionals Crea una p\u00e0gina anomenada arrays2.php , copia el contingut de la p\u00e0gina index.php i resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array d'alumnes on cada element siga un altre array que continga nom i edat de l'alumne. Crea una taula HTML en la qual es mostren totes les dades dels alumnes. Utilitza la funci\u00f3 array_column per a obtenir un array indexat que continga \u00fanicament els noms dels alumnes i mostra\u2019ls per pantalla. Crea un array amb 10 n\u00fameros : utilitza la funci\u00f3 array_sum per a obtenir la suma dels 10 nombres. Activitat 234: Opcional Modifica la soluci\u00f3 del exercici ciutats.php perqu\u00e8 la taula continga tamb\u00e9 la columna del total d\u2019habitants de la comunitat aut\u00f2noma de les ciutats de la llista i el percentatge sobre els habitants de la comunitat aut\u00f2noma que representa. Per exemple: Ciutat Habitants Habitats CA % sobre CA Val\u00e8ncia 791.413 5.003.769 15.81% Pista: Caldr\u00e0 modificar l'array $ciutats i convertir-lo en multidimensional. Les dades de comunitats aut\u00f2nomes hauran d'estar en un altre array. Dades: Municipis de Espa\u00f1a","title":"3. Maneig d'arrays"},{"location":"02-basics/3_maneig_darrays/#3-maneig-darrays","text":"","title":"3. Maneig d'arrays"},{"location":"02-basics/3_maneig_darrays/#introduccio","text":"Un array \u00e9s un tipus de dades que ens permet emmagatzemar diversos valors. Per tal d'accedir a un valor utilitzarem una clau . Les claus poden ser nombres o textos ( arrays associatius ). Si no indiquem cap clau, a cada element se li associar\u00e0 una clau num\u00e8rica correlativa.","title":"Introducci\u00f3"},{"location":"02-basics/3_maneig_darrays/#array-indexat","text":"","title":"Array indexat"},{"location":"02-basics/3_maneig_darrays/#crear-array","text":"Podem crear un array buit de dues formes: $noms = array (); $noms = []; Si volem assignar valors al array en el moment de crear-ho: $noms = array ( 'Sandra' , 'Pedro' , 'Andrea' ); $noms = [ 'Sandra' , 'Pedro' , 'Andrea' ];","title":"Crear array"},{"location":"02-basics/3_maneig_darrays/#mostrar-el-contingut-dun-array","text":"Si intentem mostrar el contingut d'un array amb echo no obtindrem les dades que hi ha dins del array. En lloc d'a\u00e7\u00f2 podem utilitzar la funci\u00f3 print_r: print_r ( $noms ); Per\u00f2 si necessitem donar-li format als continguts del array, haurem de rec\u00f3rrer-ho amb un bucle i anar mostrant element a element.","title":"Mostrar el contingut d'un array"},{"location":"02-basics/3_maneig_darrays/#afegint-elements-al-array","text":"Podem afegir elements al array utilitzant claud\u00e0tors buits. La clau d'aquests elements ser\u00e0 el seg\u00fcent \u00edndex num\u00e8ric disponible. $noms [] = 'Raul' ; $noms [] = 'Marta' ;","title":"Afegint elements al array"},{"location":"02-basics/3_maneig_darrays/#accedir-als-elements-del-array","text":"Accedirem als elements del array indicant la clau de l'element entre claud\u00e0tors: echo $noms [ 2 ]; Tamb\u00e9 podem modificar el seu valor: $noms [ 0 ] = 'Sara' ;","title":"Accedir als elements del array"},{"location":"02-basics/3_maneig_darrays/#recorrer-arrays","text":"","title":"Rec\u00f3rrer arrays"},{"location":"02-basics/3_maneig_darrays/#arrays-associatius","text":"Si el array cont\u00e9 dades diverses i/o ens interessa accedir a ells amb claus m\u00e9s espec\u00edfiques que un simple \u00edndex num\u00e8ric podem utilitzar arrays associatius: $alumne = array ( 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ); $alumne = [ 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ]; $alumne [ 'nom' ] = 'Ver\u00f3nica' ; echo $alumne [ 'nom' ];","title":"Arrays associatius"},{"location":"02-basics/3_maneig_darrays/#recorrer-arrays-associatius","text":"","title":"Rec\u00f3rrer arrays associatius"},{"location":"02-basics/3_maneig_darrays/#recorrer-claus-i-valors","text":"","title":"Rec\u00f3rrer claus i valors"},{"location":"02-basics/3_maneig_darrays/#arrays-multidimensionals","text":"Imagina que volem tenir un array els elements del qual s\u00f3n noms d'esports. Volem dividir-los en esports d'hivern i esports d'estiu. Podem crear un array esports que continga dos elements que al seu torn tamb\u00e9 seran arrays. $esports = [ 'hivern' => [ 'esqu\u00ed de fons' , 'hoquei sobre gel' ], 'estiu' => [ 'nataci\u00f3' , 'voley platja' ] ]; Per a accedir al primer esport d'hivern: echo $esports [ 'hivern' ][ 0 ];","title":"Arrays multidimensionals"},{"location":"02-basics/3_maneig_darrays/#funcions-darrays","text":"Podem obtenir la mida de l'array mitjan\u00e7ant la funci\u00f3 count (array). Per rec\u00f3rrer l'array farem \u00fas d'un bucle for : $tam = count($fruites); // mida de l'array for ($i=0; $i < count ($ fruites ); $ i ++) { echo \" Element $ i: $ fruites [$ i ] < br /> \"; } Les operacions m\u00e9s importants que podem realitzar amb arrays s\u00f3n: print_r($ array) : mostra el contingut de tot el $array $elem = array_pop($array) : elimina l'\u00faltim $element array_push ($ array, $ elem) : afegeix un $element al final. $bool = in_array($elem, $array) : esbrina si $elem est\u00e0 en el $array PHP $fruits = [ \"orange\" , \"pear\" , \"apple\" ]; array_push ( $fruites , \"pinapple\" ); print_r ( $fruits ); $lastFruit = array_pop ( $fruits ); if ( in_array ( \"pineapple\" , $fruits )) { echo \"<p> Pineapple left </ p>\" ; } else { echo \"<p> No pineapple left </ p>\" ; } print_r ( $fruites ); ?> Consola Array ( [0] => orange [1] => pear [2] => apple [3] => pinapple ) <p>No pineapple left</ p> Array ( [0] => orange [1] => pear [2] => apple ) $claus = array_keys($array) : torna les claus de l' $ array associatiu. $tam = count ($array) : retorna la mida de $ array . sort($array) : ordena els elements de l' $ array . isset($array[element]) : indica si existeix / t\u00e9 valor element dins del array. unset($array[element]) : elimina l'element de l'array (deixa un buit). PHP $capitals = array ( \"Italy\" => \"Rome\" , \"France\" => \"Paris\" , \"Portugal\" => \"Lisbon\" ); $countries = array_keys ( $ capitals ); print_r ( $countries ); sort ( $countries ); print_r ( $countries ); unset ( $capitals [ \"France\" ]); print_r ( $capitals ); ?> Consola `Console Array ( [0] => Italy [1] => France [2] => Portugal ) Array ( [0] => France [1] => Italy [2] => Portugal ) Array ( [Italy] => Rome [Portugal] => Lisbon ) ` Existeixen molt\u00edssimes m\u00e9s funcions per treballar amb arrays. Tota la informaci\u00f3 en el documentaci\u00f3 oficial . Articles per aprofundir en les operacions amb arrays Un article molt complet (en angl\u00e8s) de Com treballar amb arrays en PHP de la manera correcta . Un altre article recomanable (en angl\u00e8s) \u00e9s Com ordenar arrays en PHP . Altres recursos: https://www.studytonight.com/php/indexed-array https://aprende-web.net/php/php6_1.php","title":"Funcions d'arrays"},{"location":"02-basics/3_maneig_darrays/#activitats","text":"","title":"Activitats"},{"location":"02-basics/3_maneig_darrays/#activitat-231-arrays-indexats","text":"Crea una p\u00e0gina anomenada arrays.php , copia el contingut de la p\u00e0gina index.php i resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array amb els noms de diversos alumnes de la classe incloent el teu. Mostra el nombre d'elements que t\u00e9 l'array ( count ). Crea una cadena de text que continga els noms dels alumnes existents en l'array separats per un espai i mostra-la ( implode ). Mostra l'array en un ordre aleatori diferent al que ho vas crear ( shuffle ). Mostra l'array ordenat alfab\u00e8ticament ( sort ). Mostra els alumnes el nom dels quals continga almenys una \u201ca\u201d ( array_filter ). Mostra l'array en l'ordre invers al que es va crear ( rsort ). Mostra la posici\u00f3 que t\u00e9 el teu nom en l'array ( array_search ).","title":"Activitat 231: Arrays indexats"},{"location":"02-basics/3_maneig_darrays/#activitat-232-arrays-associatius","text":"Segons l'INE les 7 ciutats m\u00e9s grans d\u2019Espanya (per habitants) el 2018 van ser les seg\u00fcents: Madrid, MAD, 3.223.334 Sevilla, AN , 688.711 Murcia, MU, 447.182 M\u00e1laga, AN, 571.026 Zaragoza, AR, 666.880 Val\u00e8ncia, CV, 791.413 Barcelona, CAT, 1.620.343 Copia index.php i crea un nou document cituats.php . Defineix un array que continga aquesta informaci\u00f3 sobre ciutats i habitants. Imprimeix una taula d'ubicacions i habitants que incloga la poblaci\u00f3 total de les 7 ciutats. Opcional: Modifica la soluci\u00f3 de l\u2019anterior exercici perqu\u00e8 mostre les ciutats ordenades per habitants. Despr\u00e9s mostra-les per ordre alfab\u00e8tic.","title":"Activitat 232: Arrays associatius"},{"location":"02-basics/3_maneig_darrays/#activitat-233-arrays-multidimensionals","text":"Crea una p\u00e0gina anomenada arrays2.php , copia el contingut de la p\u00e0gina index.php i resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array d'alumnes on cada element siga un altre array que continga nom i edat de l'alumne. Crea una taula HTML en la qual es mostren totes les dades dels alumnes. Utilitza la funci\u00f3 array_column per a obtenir un array indexat que continga \u00fanicament els noms dels alumnes i mostra\u2019ls per pantalla. Crea un array amb 10 n\u00fameros : utilitza la funci\u00f3 array_sum per a obtenir la suma dels 10 nombres.","title":"Activitat 233: Arrays multidimensionals"},{"location":"02-basics/3_maneig_darrays/#activitat-234-opcional","text":"Modifica la soluci\u00f3 del exercici ciutats.php perqu\u00e8 la taula continga tamb\u00e9 la columna del total d\u2019habitants de la comunitat aut\u00f2noma de les ciutats de la llista i el percentatge sobre els habitants de la comunitat aut\u00f2noma que representa. Per exemple: Ciutat Habitants Habitats CA % sobre CA Val\u00e8ncia 791.413 5.003.769 15.81% Pista: Caldr\u00e0 modificar l'array $ciutats i convertir-lo en multidimensional. Les dades de comunitats aut\u00f2nomes hauran d'estar en un altre array. Dades: Municipis de Espa\u00f1a","title":"Activitat 234: Opcional"},{"location":"02-basics/4_funcions/","text":"4. Funcions Funcions predefinides Algunes de les funcions predefinides en PHP s\u00f3n les seg\u00fcents, per\u00f2 hi ha molt\u00edssimes m\u00e9s vinculades als diferents m\u00f2duls que podem instal\u00b7lar. is_null($var) determina si una variable \u00e9s nula o no. isset($var) determina si una variable estan definida i no \u00e9s NULL. unset($var) destrueix les variables especificades. empty($var) torna true si no existeix o \u00e9s FALSE is_int($var) , is_float() , is_bool() , is_array() var_dump($var) mostra informaci\u00f3 de la variable. Funcions definides per l'usuari Per a crear les teues pr\u00f2pies funcions, haur\u00e0s d'usar la paraula function : function suma ( $a , $b ) { return $a + $b ; } Per tal d'invocar la funci\u00f3: $resultat = suma ( 5 , 7 ); Si una funci\u00f3 no t\u00e9 una sent\u00e8ncia return , retorna null en finalitzar. Valors per defecte en els par\u00e0metres Podem indicar valors per defecte per als par\u00e0metres. Si quan cridem a la funci\u00f3 no indiquem el valor d'un par\u00e0metre es prendr\u00e0 el valor per defecte indicat. function preuAmbIva ( $preu , $iva = 0.21 ){ return $preu * ( 1 + $iva ); } $preu = 10 ; $pIva = preuAmbIva ( $preu ); Pot haver-hi m\u00e9s d'un par\u00e0metre amb valor per defecte, per\u00f2 sempre han d'estar al final. Pas de par\u00e0metres per refer\u00e8ncia Per defecte els par\u00e0metres es passen per valor. Per a passar un par\u00e0metre per refer\u00e8ncia afegirem el s\u00edmbol & davant del seu nom. function preuAmbIva ( & $preu , $iva = 0.18 ){ $preu *= ( 1 + $iva ); } Declaracions de tipus (Type Hinting) Les funcions obliguen a que els par\u00e0metres siguen de cert tipus. Si el valor donat \u00e9s d'un tipus incorrecte, es generar\u00e0 un error. Per aix\u00f2 s'ha d'anteposar-se el nom del tipus al nom del par\u00e0metre. Es pot fer que una declaraci\u00f3 accepte valors NULL si el valor predeterminat del par\u00e0metre s'estableix a NULL. Tipus v\u00e0lids Type Description Version Class/interface name The value must be an instanceof the given class or interface. self The value must be an instanceof the same class as the one in which the type declaration is used. Can only be used in classes. parent The value must be an instanceof the parent of the class in which the type declaration is used. Can only be used in classes. array The value must be an array. callable The value must be a valid callable. Cannot be used as a class property type declaration. bool The value must be a boolean value. float The value must be a floating point number. int The value must be an integer. string The value must be a string. iterable The value must be either an array or an instanceof Traversable. PHP 7.1.0 object The value must be an object. PHP 7.2.0 mixed The value can be any value. PHP 8.0.0 Exemple function suma ( int a , int b ) : int { return $a + $b ; } $resultado = suma ( 3 , 5 ); Funcions com a par\u00e0metres En PHP \u00e9s possible passar funcions com a par\u00e0metres a altres funcions. Nom\u00e9s cal passar el nom de la funci\u00f3 entre cometes. Exemple: function calculator ( $operation , $numA , $numB ){ return $operation ( $numA , $numB ); } function sumar ( $a , $b ) { return $a + $b ; } function restar ( $a , $b ) { return $a - $b ; } $a = 4 ; $b = 6 ; echo calculator ( 'sumar' , $a , $b ); echo calculator ( 'restar' , $a , $b ); Funcions an\u00f2nimes ( closures ) Estan implementades usant la classe Closure Permeten la creaci\u00f3 de funcions que no tenen un nom espec\u00edfic Podem assignar la funci\u00f3 a una variable o passar-la com a par\u00e0metre a una altra funci\u00f3. Exemple Sense par\u00e0metres: $anonima = function () { echo \"Hola\" ; }; $anonima (); Amb par\u00e0metres: $anonima = function ( $nom ) { echo \"Hola { $nom } \" ; }; $anonima ( 'Vicent' ); Usar variables de l'\u00e0mbit superior Una funci\u00f3 an\u00f2nima pot usar variables de l'\u00e0mbit superior mitjan\u00e7ant la paraula reservada use : function saluda ( callable $fnSaluda ) { $fnSaluda ( 'Vicent' ); } $salutacio = 'Hola' ; $anonima = function ( $nom ) use ( $salutacio ) { echo \" { $salutacio } { $nom } \" ; }; saluda ( $anonima ); Llibreries Podem fer llibreries de funcions guardant-les en un fitxer que despr\u00e8s importem des d'on les utilitzem. Ho podem fer amb include, o utilitzant composer per a fer-ho. Activitat 241: funci\u00f3 imatge Crea el fitxer funcions.php Escriviu una funci\u00f3 per retornar una etiqueta HTML <img /> . La funci\u00f3 hauria d\u2019acceptar com a argument obligatori l\u2019URL de la imatge i arguments opcionals per a un text alternatiu, al\u00e7ada i amplada. Activitat 242: funci\u00f3 imatge local Copieu la funci\u00f3 de l\u2019exercici anterior i modifiqueu-la de manera que nom\u00e9s es passe el nom de fitxer a la funci\u00f3 en lloc de l\u2019URL completa. Dins de la funci\u00f3, farem \u00fas d\u2019una variable global per fer l\u2019URL completa. Per exemple, si passem photo.png a la funci\u00f3, i la variable global cont\u00e9 /images , llavors l\u2019atribut src de l'etiqueta retornada ser\u00e0 /images/photo.png . Una funci\u00f3 com aquesta \u00e9s una forma senzilla de mantenir correctes les vostres etiquetes d\u2019imatges, fins i tot si les imatges es mouen a un nou cam\u00ed o servidor. Nom\u00e9s cal canviar la variable global, per exemple, de /images a http://images.example.com/. Activitat 243: Funcions Els colors web com #ffffff i #cc3399 es realitzen concatenant els valors hexadecimals de color per a vermell, verd i blau. Escriu una funci\u00f3 que accepte 3 arguments: roig, verd i blau, i que retorne un string que cont\u00e9 el color adequat per utilitzar-lo en una p\u00e0gina web. Per exemple, si els arguments s\u00f3n 255, 0, i 255, llavors la cadena retornada hauria de ser #FF00FF. Pot resultar \u00fatil utilitzeu la funci\u00f3 dechex() integrada, que es troba documentada a http://www.php.net/ Assegureu-vos que els par\u00e0metres reben valors enters i que s\u00f3n colors v\u00e0lids. Implementa 3 exemples d\u2019\u00fas. Activitat 244: SQL Crea un fitxer anomenat funcions_sql.php . Crea una funci\u00f3 anomenada insert que ens genere una sent\u00e8ncia INSERT INTO en SQL. Per a a\u00e7\u00f2 la funci\u00f3 rebr\u00e0 dos par\u00e0metres: 1. El nom de la taula 2. Un array associatiu que contindr\u00e0 els noms i valors dels camps de la taula. La sent\u00e8ncia resultant tindr\u00e0 la seg\u00fcent forma: \u201cINSERT INTO nom_taula (nom dels camps separats per comes) VALUES (noms dels camps separats per comes amb el car\u00e0cter \u201c:\u201d davant) De moment, no farem res amb els valors dels camps. Ajuda: utilitza les funcions sprintf , implode i array_keys Activitat 245: SQL A partir de l'exercici anterior crea una altra funci\u00f3 que reba els mateixos par\u00e0metres m\u00e9s un par\u00e0metre boole\u00e0 per a indicar si volem generar la query amb els noms dels camps o no. El par\u00e0metre tindr\u00e0 el valor true per defecte. Si el seu valor \u00e9s true generar\u00e0 la consulta igual que en l'exercici anterior, per\u00f2 si \u00e9s false la generar\u00e0 aix\u00ed: INSERT INTO nom_taula VALUES ( valors dels camps separats per comes amb el car\u00e0cter \u2018 : \u2019 davant ) Activitat 246: SQL Repeteix l'exercici anterior amb els seg\u00fcents canvis: La cadena resultant es passar\u00e0 per refer\u00e8ncia. Passarem la cadena de la seg\u00fcent forma: INSERT INTO taula ( camps ) VALUES ( valors ) Dins de la funci\u00f3 substituirem el seg\u00fcent: El text taula pel nom de la taula. El text camps pels noms dels camps separats per comes El text valors pels noms dels camps separats per comes i el car\u00e0cter \u2018:\u2019 davant.","title":"4. Funcions"},{"location":"02-basics/4_funcions/#4-funcions","text":"","title":"4. Funcions"},{"location":"02-basics/4_funcions/#funcions-predefinides","text":"Algunes de les funcions predefinides en PHP s\u00f3n les seg\u00fcents, per\u00f2 hi ha molt\u00edssimes m\u00e9s vinculades als diferents m\u00f2duls que podem instal\u00b7lar. is_null($var) determina si una variable \u00e9s nula o no. isset($var) determina si una variable estan definida i no \u00e9s NULL. unset($var) destrueix les variables especificades. empty($var) torna true si no existeix o \u00e9s FALSE is_int($var) , is_float() , is_bool() , is_array() var_dump($var) mostra informaci\u00f3 de la variable.","title":"Funcions predefinides"},{"location":"02-basics/4_funcions/#funcions-definides-per-lusuari","text":"Per a crear les teues pr\u00f2pies funcions, haur\u00e0s d'usar la paraula function : function suma ( $a , $b ) { return $a + $b ; } Per tal d'invocar la funci\u00f3: $resultat = suma ( 5 , 7 ); Si una funci\u00f3 no t\u00e9 una sent\u00e8ncia return , retorna null en finalitzar.","title":"Funcions definides per l'usuari"},{"location":"02-basics/4_funcions/#valors-per-defecte-en-els-parametres","text":"Podem indicar valors per defecte per als par\u00e0metres. Si quan cridem a la funci\u00f3 no indiquem el valor d'un par\u00e0metre es prendr\u00e0 el valor per defecte indicat. function preuAmbIva ( $preu , $iva = 0.21 ){ return $preu * ( 1 + $iva ); } $preu = 10 ; $pIva = preuAmbIva ( $preu ); Pot haver-hi m\u00e9s d'un par\u00e0metre amb valor per defecte, per\u00f2 sempre han d'estar al final.","title":"Valors per defecte en els par\u00e0metres"},{"location":"02-basics/4_funcions/#pas-de-parametres-per-referencia","text":"Per defecte els par\u00e0metres es passen per valor. Per a passar un par\u00e0metre per refer\u00e8ncia afegirem el s\u00edmbol & davant del seu nom. function preuAmbIva ( & $preu , $iva = 0.18 ){ $preu *= ( 1 + $iva ); }","title":"Pas de par\u00e0metres per refer\u00e8ncia"},{"location":"02-basics/4_funcions/#activitat-241-funcio-imatge","text":"Crea el fitxer funcions.php Escriviu una funci\u00f3 per retornar una etiqueta HTML <img /> . La funci\u00f3 hauria d\u2019acceptar com a argument obligatori l\u2019URL de la imatge i arguments opcionals per a un text alternatiu, al\u00e7ada i amplada.","title":"Activitat 241: funci\u00f3 imatge"},{"location":"02-basics/4_funcions/#activitat-242-funcio-imatge-local","text":"Copieu la funci\u00f3 de l\u2019exercici anterior i modifiqueu-la de manera que nom\u00e9s es passe el nom de fitxer a la funci\u00f3 en lloc de l\u2019URL completa. Dins de la funci\u00f3, farem \u00fas d\u2019una variable global per fer l\u2019URL completa. Per exemple, si passem photo.png a la funci\u00f3, i la variable global cont\u00e9 /images , llavors l\u2019atribut src de l'etiqueta retornada ser\u00e0 /images/photo.png . Una funci\u00f3 com aquesta \u00e9s una forma senzilla de mantenir correctes les vostres etiquetes d\u2019imatges, fins i tot si les imatges es mouen a un nou cam\u00ed o servidor. Nom\u00e9s cal canviar la variable global, per exemple, de /images a http://images.example.com/.","title":"Activitat 242: funci\u00f3 imatge local"},{"location":"02-basics/4_funcions/#activitat-243-funcions","text":"Els colors web com #ffffff i #cc3399 es realitzen concatenant els valors hexadecimals de color per a vermell, verd i blau. Escriu una funci\u00f3 que accepte 3 arguments: roig, verd i blau, i que retorne un string que cont\u00e9 el color adequat per utilitzar-lo en una p\u00e0gina web. Per exemple, si els arguments s\u00f3n 255, 0, i 255, llavors la cadena retornada hauria de ser #FF00FF. Pot resultar \u00fatil utilitzeu la funci\u00f3 dechex() integrada, que es troba documentada a http://www.php.net/ Assegureu-vos que els par\u00e0metres reben valors enters i que s\u00f3n colors v\u00e0lids. Implementa 3 exemples d\u2019\u00fas.","title":"Activitat 243: Funcions"},{"location":"02-basics/4_funcions/#activitat-244-sql","text":"Crea un fitxer anomenat funcions_sql.php . Crea una funci\u00f3 anomenada insert que ens genere una sent\u00e8ncia INSERT INTO en SQL. Per a a\u00e7\u00f2 la funci\u00f3 rebr\u00e0 dos par\u00e0metres: 1. El nom de la taula 2. Un array associatiu que contindr\u00e0 els noms i valors dels camps de la taula. La sent\u00e8ncia resultant tindr\u00e0 la seg\u00fcent forma: \u201cINSERT INTO nom_taula (nom dels camps separats per comes) VALUES (noms dels camps separats per comes amb el car\u00e0cter \u201c:\u201d davant) De moment, no farem res amb els valors dels camps. Ajuda: utilitza les funcions sprintf , implode i array_keys","title":"Activitat 244: SQL"},{"location":"02-basics/4_funcions/#activitat-245-sql","text":"A partir de l'exercici anterior crea una altra funci\u00f3 que reba els mateixos par\u00e0metres m\u00e9s un par\u00e0metre boole\u00e0 per a indicar si volem generar la query amb els noms dels camps o no. El par\u00e0metre tindr\u00e0 el valor true per defecte. Si el seu valor \u00e9s true generar\u00e0 la consulta igual que en l'exercici anterior, per\u00f2 si \u00e9s false la generar\u00e0 aix\u00ed: INSERT INTO nom_taula VALUES ( valors dels camps separats per comes amb el car\u00e0cter \u2018 : \u2019 davant )","title":"Activitat 245: SQL"},{"location":"02-basics/4_funcions/#activitat-246-sql","text":"Repeteix l'exercici anterior amb els seg\u00fcents canvis: La cadena resultant es passar\u00e0 per refer\u00e8ncia. Passarem la cadena de la seg\u00fcent forma: INSERT INTO taula ( camps ) VALUES ( valors ) Dins de la funci\u00f3 substituirem el seg\u00fcent: El text taula pel nom de la taula. El text camps pels noms dels camps separats per comes El text valors pels noms dels camps separats per comes i el car\u00e0cter \u2018:\u2019 davant.","title":"Activitat 246: SQL"},{"location":"02-basics/5_noves%20caracteristiques_php/","text":"Noves caracter\u00edsques PHP 7 Spaceship operator (<==>) Compara dues expressions $a i $b i torna -1 si $a \u00e9s menor que $b, 0 si s\u00f3n iguals i 1 si $b \u00e9s major que $a. Exemple: // Integers echo 1 <=> 1 ; // 0 echo 1 <=> 2 ; // -1 echo 2 <=> 1 ; // 1 Operador de fusi\u00f3 de null ?? Torna el primer operand si existeix i no \u00e9s NULL o el segon operand. Exemple: // Fetches the value of $_GET['user'] and returns 'nobody' // if it does not exist. $username = $_GET [ 'user' ] ?? 'nobody' ; // This is equivalent to: $username = isset ( $_GET [ 'user' ]) ? $_GET [ 'user' ] : 'nobody' ; M\u00e9s recursos: Noves caracter\u00edstiques PHP 7.0 Noves caracter\u00edstiques PHP 7.1 Noves caracter\u00edstiques PHP 7.2 Noves caracter\u00edstiques PHP 7.3 Noves caracter\u00edstiques PHP 7.4 Noves caracter\u00edstiques PHP 8.0","title":"5. Noves caracter\u00edstiques de PHP 7"},{"location":"02-basics/5_noves%20caracteristiques_php/#noves-caracterisques-php-7","text":"","title":"Noves caracter\u00edsques PHP 7"},{"location":"02-basics/5_noves%20caracteristiques_php/#spaceship-operator","text":"Compara dues expressions $a i $b i torna -1 si $a \u00e9s menor que $b, 0 si s\u00f3n iguals i 1 si $b \u00e9s major que $a. Exemple: // Integers echo 1 <=> 1 ; // 0 echo 1 <=> 2 ; // -1 echo 2 <=> 1 ; // 1","title":"Spaceship operator  (&lt;==&gt;)"},{"location":"02-basics/5_noves%20caracteristiques_php/#operador-de-fusio-de-null","text":"Torna el primer operand si existeix i no \u00e9s NULL o el segon operand. Exemple: // Fetches the value of $_GET['user'] and returns 'nobody' // if it does not exist. $username = $_GET [ 'user' ] ?? 'nobody' ; // This is equivalent to: $username = isset ( $_GET [ 'user' ]) ? $_GET [ 'user' ] : 'nobody' ;","title":"Operador de fusi\u00f3 de null ??"},{"location":"02-basics/5_noves%20caracteristiques_php/#mes-recursos","text":"Noves caracter\u00edstiques PHP 7.0 Noves caracter\u00edstiques PHP 7.1 Noves caracter\u00edstiques PHP 7.2 Noves caracter\u00edstiques PHP 7.3 Noves caracter\u00edstiques PHP 7.4 Noves caracter\u00edstiques PHP 8.0","title":"M\u00e9s recursos:"},{"location":"02-basics/6_processament_formularis%20copy/","text":"6. Processament de formularis Introducci\u00f3 Qu\u00e8 \u00e9s una petici\u00f3 HTTP? Una petici\u00f3 HTTP \u00e9s una sol\u00b7licitud d'un recurs a un servidor. La petici\u00f3 es realitza a trav\u00e9s d'una URL. Amb la petici\u00f3 s'envien tamb\u00e9 par\u00e0metres. Hi ha diferents m\u00e8todes (METHOD) per a realitzar una petici\u00f3 (GET, POST, PUT, DELETE, PATCH, etc.). Els m\u00e9s habituals s\u00f3n GET i POST. La resta s\u00f3n m\u00e9s utilitzats en les RESTful API. M\u00e8todes GET i POST M\u00e8tode GET S'utilitza per a sol\u00b7licitar dades d'un recurs. Mostren els par\u00e0metres que s'envien en la url. Es poden utilitzar directament en enlla\u00e7os. El resultat es pot emmagatzemar en cache. Romanen en l'historial del navegador. La grand\u00e0ria dels par\u00e0metres est\u00e0 limitat a 255 car\u00e0cters. Exemple de petici\u00f3 GET Inspecci\u00f3 de la petici\u00f3 Inspecci\u00f3 de la petici\u00f3 Accedir a les dades de la petici\u00f3 GET Per a accedir a les dades usem la variable superglobal $_GET . $_GET \u00e9s un array associatiu les claus del qual coincidiran amb els noms que li hem donat als par\u00e0metres. Per a accedir als par\u00e0metres de la petici\u00f3 anterior: echo $_GET [ 'nom' ] . ' ' . $_GET [ 'cognom' ]; // Homer Simpson M\u00e8tode POST El m\u00e8tode POST t\u00e9 les seg\u00fcents caracter\u00edstiques: S'utilitza per a enviar dades a un recurs. Els par\u00e0metres van en el cos de la petici\u00f3, no s\u00f3n visibles per a l'usuari. La petici\u00f3 no es guarda en cache. No es pot utilitzar en un enlla\u00e7. No roman en l'historial. No tenim la limitaci\u00f3 de grand\u00e0ria dels par\u00e0metres. Es solen utilitzar en els formularis. Evitar el CSRF En tota p\u00e0gina que reba par\u00e0metres GET has de comprovar el HTTP referer del navegador, i que aquest siga de dins de la teua web. En php el referer que envia el navegador s'emmagatzema en $_SERVER['HTTP_REFERER'] . Seria tal com: if ( parse_url ( $_SERVER [ 'HTTP_REFERER' ], PHP_URL_HOST ) != $_SERVER [ 'HTTP_HOST' ]) die ( 'Anti-CSRF' ); Important Amb aquest codi estem obligant al fet que el navegador envie un referer si o s\u00ed. Per tant nom\u00e9s ha d'utilitzar-se en p\u00e0gines a les quals el navegador accedisca des d'una altra p\u00e0gina de la nostra web. \u00d2bviament no podem col\u00b7locar-ho en la primera p\u00e0gina a la qual s'accedeix a la nostra web ( index.php o similar), ja que si l'usuari a escrit l'adre\u00e7a a m\u00e0 en la barra del navegador no s'enviar\u00e0 referer cap i saltar\u00e0 el sistema. Definici\u00f3 de formularis Com hem dit abans el m\u00e8tode POST s'empra en els formularis. El formulari seg\u00fcent enviar\u00e0 les dades a la p\u00e0gina index.php (atribut action de l'element form ). Utilitza el m\u00e8tode post indicat en l'atribut method : < form action = \"index.php\" method = \"post\" > < label for = \"nom\" > Nom </ label > < input type = \"text\" name = \"nom\" value = \"\" > < br /> < label for = \"cognom\" > Cognom </ label > < input type = \"text\" name = \"cognom\" value = \"\" > < br /> < input type = \"submit\" value = \"Enviar\" > </ form > Inspecci\u00f3 de la petici\u00f3: Headers Inspecci\u00f3 de la petici\u00f3: Param\u00e8tres Accedir a les dades de la petici\u00f3 POST Usem la variable superglobal $_POST . Funciona igual que $_GET , per\u00f2 amb els noms (atribut name ) que li hem donat als camps del formulari. En depuraci\u00f3 podem mostar totes les dades rebudes: var_dump ( $_POST ); print_r ( $_POST ) Per a mostrar les dades individualment: echo $_POST [ 'nom' ]; echo $_POST [ 'cognom' ]; Accedir a par\u00e0metres no existents Errors del tipus Notice: Undefined index: nom in /home/ubuntu/index.php on line 6 ens indiquen que la clau nom no existeix en l'array $_POST . La variable supergloblal $_POST est\u00e0 buida si no s'ha enviat el formulari. Per a evitar aquest tipus d'errors \u00e9s important verificar que s'haja enviat el formulari pr\u00e8viament: if ( $_SERVER [ 'REQUEST_METHOD' ] === 'POST' ) { } Validaci\u00f3 de formularis Hem de comprovar que les dades que envia el formulari s\u00f3n correctes. Les validacions a realitzar s\u00f3n les seg\u00fcents: Els camps requerits no han de quedar buits. Ni contenir espais en blanc a l'inici i al final. Els camps email i data han de tenir el format esperat. Tots els camps s'han de filtrar amb htmlspecialchars per a evitar atacs de Cross-site Scripting (XSS). Valors buits Els camps requerits no deurien quedar-se buits. Per a verificar que un valor no queda buit podem utilitzar la funci\u00f3 empty() de PHP. Espais en blanc Hem d'eliminar els espais en blanc del principi i final dels camps. S'utilitza la funci\u00f3 trim Escapar l'entrada Sempre hem de filtrar l'entrada amb htmlspecialchars abans de mostrar el camp amb echo o similar. Ac\u00f2 convertir\u00e0 qualsevol car\u00e0cter especial d'html en la entitat, aix\u00ed no interferir\u00e0 en el el programa. Comprovar l'email Per a verificar si un email \u00e9s correcte podem utilitzar la funci\u00f3 filter_var filter_var ( $email , FILTER_VALIDATE_EMAIL ) o la funci\u00f3 filter_input quan obtenin les dades directament d'una variable extern. // suposem que rebem les dades d'un formulari que t\u00e9 un quadre de text de nom 'email' $email = filter_input ( INPUT_POST , 'email' , FILTER_VALIDATE_EMAIL ) filter_input filter_input ( int $type , string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options ]]) : mixed La funci\u00f3 filter_input agafa una variable externa ( $_GET , $_POST , etc) concreta pel seu nom i aplica el filtre indicat. Els filtres poden sanejar o validar les variables externes. Per exemple, si volem agafar el valor del par\u00e0metre nom del querystring (http://localhost/index.php?nom= Homer ) usarem el tipus INPUT_GET. El fltre FILTER_SANITIZE_STRING elimina etiquetes, i opcionalment elimina o codifica caracters especials. $nom = filter_input ( INPUT_GET , 'nom' , FILTER_SANITIZE_STRING ) . // $nom = Homer M\u00e9s informaci\u00f3 en: filter_var filter_input Comprovar la data Per a comprovar la data hem de crear una funci\u00f3 a aquest efecte. Podem utilitzar el m\u00e8tode est\u00e0tic createFromFormat de la classe DateTime M\u00e9s informaci\u00f3: http://php.net/manual/es/datetime.createfromformat.php Exemple $data1 = \"2001-05-02\" ; // Data \u00e9s de tipus string // DateTime::createFromFormat converteix una cadena de text a on objecte DateTime // ens tornar\u00e0 una inst\u00e0ncia de DateTime o FALSE en cas d'error. $dt1 = DateTime :: createFromFormat ( 'Y-m-d' , $data1 ); if ( $dt1 === false ) { echo \"La data d'inici \u00e9s incorrecta\" ; } https://www.php.net/manual/es/function.strtotime.php Tamb\u00e9 \u00e9s habitual trobar els controls de data separats en 3 elements input. Un per a l\u2019any, l\u2019altre per a mes i l\u2019altre per al dia. Bones pr\u00e0ctiques en l\u2019obtenci\u00f3 de dades des de l\u2019exterior Cal seguir les seg\u00fcents bones pr\u00e0ctiques: No confieu mai (mai) en l\u2019entrada des de l\u2019exterior del vostre PHP. Sanegeu i valideu l\u2019entrada de dades sempre. Les funcions filter_var() i filter_input() poden sanejar el text i validar els formats de text (per exemple, adreces de correu electr\u00f2nic, enters). Recordeu que l\u2019entrada de dades no es limita a formularis enviats per l\u2019usuari. Els fitxers carregats i descarregats, els valors de sessi\u00f3, les dades de galetes i les dades de serveis web de tercers tamb\u00e9 s\u00f3n d\u2019entrada estrangera. A mode de resum pod\u00edem resumir la gesti\u00f3 de formularis en el seg\u00fcent diagrama de flux. Formularis en HTML5 En els seg\u00fcents recursos trobar\u00e0s informaci\u00f3 addicional sobre els controls de formularis en HTML5: * Formularios en HTML en MDN web docs. * Formularios en HTML5 en MDN web docs. * HTML Forms en W3CSchools. Activities Activit 261 Crea una p\u00e0gina que reba com a par\u00e0metre un nom i mostre el text \u2018Benvingut [nom]!!!\u2019 sent [nom] el nom has passat com a par\u00e0metre. Guarda-la amb el nom exemple_get.php . Activitat 12 A: Creaci\u00f3 d'un formulari Crea un formulari que tinga els seg\u00fcents camps: Nom i cognoms Data de naixement Correu electr\u00f2nic Assumpte Missatge En l'atribut action del formulari posarem el seg\u00fcent: action = \"<?= $_SERVER['PHP_SELF'] ; ?>\" A\u00e7\u00f2 far\u00e0 que siga la pr\u00f2pia p\u00e0gina del formulari la que processe les dades del mateix. En pr\u00e9mer Enviar han d'apar\u00e8ixer sota el formulari les dades que s'han introdu\u00eft en el mateix. Activitat 12 B: Creaci\u00f3 d'un formulari Soluciona el problema dels par\u00e0metres no enviats de l'exercici anterior. Activitat 12 C: Validaci\u00f3 d'un formulari Modifica l'exercici anterior realitzant les validacions oportunes.","title":"6. Processament de formularis"},{"location":"02-basics/6_processament_formularis%20copy/#6-processament-de-formularis","text":"","title":"6. Processament de formularis"},{"location":"02-basics/6_processament_formularis%20copy/#introduccio","text":"","title":"Introducci\u00f3"},{"location":"02-basics/6_processament_formularis%20copy/#que-es-una-peticio-http","text":"Una petici\u00f3 HTTP \u00e9s una sol\u00b7licitud d'un recurs a un servidor. La petici\u00f3 es realitza a trav\u00e9s d'una URL. Amb la petici\u00f3 s'envien tamb\u00e9 par\u00e0metres. Hi ha diferents m\u00e8todes (METHOD) per a realitzar una petici\u00f3 (GET, POST, PUT, DELETE, PATCH, etc.). Els m\u00e9s habituals s\u00f3n GET i POST. La resta s\u00f3n m\u00e9s utilitzats en les RESTful API.","title":"Qu\u00e8 \u00e9s una petici\u00f3 HTTP?"},{"location":"02-basics/6_processament_formularis%20copy/#metodes-get-i-post","text":"","title":"M\u00e8todes GET i POST"},{"location":"02-basics/6_processament_formularis%20copy/#metode-get","text":"S'utilitza per a sol\u00b7licitar dades d'un recurs. Mostren els par\u00e0metres que s'envien en la url. Es poden utilitzar directament en enlla\u00e7os. El resultat es pot emmagatzemar en cache. Romanen en l'historial del navegador. La grand\u00e0ria dels par\u00e0metres est\u00e0 limitat a 255 car\u00e0cters. Exemple de petici\u00f3 GET Inspecci\u00f3 de la petici\u00f3 Inspecci\u00f3 de la petici\u00f3","title":"M\u00e8tode GET"},{"location":"02-basics/6_processament_formularis%20copy/#metode-post","text":"El m\u00e8tode POST t\u00e9 les seg\u00fcents caracter\u00edstiques: S'utilitza per a enviar dades a un recurs. Els par\u00e0metres van en el cos de la petici\u00f3, no s\u00f3n visibles per a l'usuari. La petici\u00f3 no es guarda en cache. No es pot utilitzar en un enlla\u00e7. No roman en l'historial. No tenim la limitaci\u00f3 de grand\u00e0ria dels par\u00e0metres. Es solen utilitzar en els formularis.","title":"M\u00e8tode POST"},{"location":"02-basics/6_processament_formularis%20copy/#definicio-de-formularis","text":"Com hem dit abans el m\u00e8tode POST s'empra en els formularis. El formulari seg\u00fcent enviar\u00e0 les dades a la p\u00e0gina index.php (atribut action de l'element form ). Utilitza el m\u00e8tode post indicat en l'atribut method : < form action = \"index.php\" method = \"post\" > < label for = \"nom\" > Nom </ label > < input type = \"text\" name = \"nom\" value = \"\" > < br /> < label for = \"cognom\" > Cognom </ label > < input type = \"text\" name = \"cognom\" value = \"\" > < br /> < input type = \"submit\" value = \"Enviar\" > </ form > Inspecci\u00f3 de la petici\u00f3: Headers Inspecci\u00f3 de la petici\u00f3: Param\u00e8tres","title":"Definici\u00f3 de formularis"},{"location":"02-basics/6_processament_formularis%20copy/#accedir-a-les-dades-de-la-peticio-post","text":"Usem la variable superglobal $_POST . Funciona igual que $_GET , per\u00f2 amb els noms (atribut name ) que li hem donat als camps del formulari. En depuraci\u00f3 podem mostar totes les dades rebudes: var_dump ( $_POST ); print_r ( $_POST ) Per a mostrar les dades individualment: echo $_POST [ 'nom' ]; echo $_POST [ 'cognom' ];","title":"Accedir a les dades de la petici\u00f3 POST"},{"location":"02-basics/6_processament_formularis%20copy/#accedir-a-parametres-no-existents","text":"Errors del tipus Notice: Undefined index: nom in /home/ubuntu/index.php on line 6 ens indiquen que la clau nom no existeix en l'array $_POST . La variable supergloblal $_POST est\u00e0 buida si no s'ha enviat el formulari. Per a evitar aquest tipus d'errors \u00e9s important verificar que s'haja enviat el formulari pr\u00e8viament: if ( $_SERVER [ 'REQUEST_METHOD' ] === 'POST' ) { }","title":"Accedir a par\u00e0metres no existents"},{"location":"02-basics/6_processament_formularis%20copy/#validacio-de-formularis","text":"Hem de comprovar que les dades que envia el formulari s\u00f3n correctes. Les validacions a realitzar s\u00f3n les seg\u00fcents: Els camps requerits no han de quedar buits. Ni contenir espais en blanc a l'inici i al final. Els camps email i data han de tenir el format esperat. Tots els camps s'han de filtrar amb htmlspecialchars per a evitar atacs de Cross-site Scripting (XSS).","title":"Validaci\u00f3 de formularis"},{"location":"02-basics/6_processament_formularis%20copy/#valors-buits","text":"Els camps requerits no deurien quedar-se buits. Per a verificar que un valor no queda buit podem utilitzar la funci\u00f3 empty() de PHP.","title":"Valors buits"},{"location":"02-basics/6_processament_formularis%20copy/#espais-en-blanc","text":"Hem d'eliminar els espais en blanc del principi i final dels camps. S'utilitza la funci\u00f3 trim","title":"Espais en blanc"},{"location":"02-basics/6_processament_formularis%20copy/#escapar-lentrada","text":"Sempre hem de filtrar l'entrada amb htmlspecialchars abans de mostrar el camp amb echo o similar. Ac\u00f2 convertir\u00e0 qualsevol car\u00e0cter especial d'html en la entitat, aix\u00ed no interferir\u00e0 en el el programa.","title":"Escapar l'entrada"},{"location":"02-basics/6_processament_formularis%20copy/#comprovar-lemail","text":"Per a verificar si un email \u00e9s correcte podem utilitzar la funci\u00f3 filter_var filter_var ( $email , FILTER_VALIDATE_EMAIL ) o la funci\u00f3 filter_input quan obtenin les dades directament d'una variable extern. // suposem que rebem les dades d'un formulari que t\u00e9 un quadre de text de nom 'email' $email = filter_input ( INPUT_POST , 'email' , FILTER_VALIDATE_EMAIL )","title":"Comprovar l'email"},{"location":"02-basics/6_processament_formularis%20copy/#comprovar-la-data","text":"Per a comprovar la data hem de crear una funci\u00f3 a aquest efecte. Podem utilitzar el m\u00e8tode est\u00e0tic createFromFormat de la classe DateTime M\u00e9s informaci\u00f3: http://php.net/manual/es/datetime.createfromformat.php","title":"Comprovar la data"},{"location":"02-basics/6_processament_formularis%20copy/#bones-practiques-en-lobtencio-de-dades-des-de-lexterior","text":"Cal seguir les seg\u00fcents bones pr\u00e0ctiques: No confieu mai (mai) en l\u2019entrada des de l\u2019exterior del vostre PHP. Sanegeu i valideu l\u2019entrada de dades sempre. Les funcions filter_var() i filter_input() poden sanejar el text i validar els formats de text (per exemple, adreces de correu electr\u00f2nic, enters). Recordeu que l\u2019entrada de dades no es limita a formularis enviats per l\u2019usuari. Els fitxers carregats i descarregats, els valors de sessi\u00f3, les dades de galetes i les dades de serveis web de tercers tamb\u00e9 s\u00f3n d\u2019entrada estrangera. A mode de resum pod\u00edem resumir la gesti\u00f3 de formularis en el seg\u00fcent diagrama de flux.","title":"Bones pr\u00e0ctiques en l\u2019obtenci\u00f3 de dades des de l\u2019exterior"},{"location":"02-basics/6_processament_formularis%20copy/#formularis-en-html5","text":"En els seg\u00fcents recursos trobar\u00e0s informaci\u00f3 addicional sobre els controls de formularis en HTML5: * Formularios en HTML en MDN web docs. * Formularios en HTML5 en MDN web docs. * HTML Forms en W3CSchools.","title":"Formularis en HTML5"},{"location":"02-basics/6_processament_formularis%20copy/#activities","text":"","title":"Activities"},{"location":"02-basics/6_processament_formularis%20copy/#activit-261","text":"Crea una p\u00e0gina que reba com a par\u00e0metre un nom i mostre el text \u2018Benvingut [nom]!!!\u2019 sent [nom] el nom has passat com a par\u00e0metre. Guarda-la amb el nom exemple_get.php .","title":"Activit 261"},{"location":"02-basics/6_processament_formularis%20copy/#activitat-12-a-creacio-dun-formulari","text":"Crea un formulari que tinga els seg\u00fcents camps: Nom i cognoms Data de naixement Correu electr\u00f2nic Assumpte Missatge En l'atribut action del formulari posarem el seg\u00fcent: action = \"<?= $_SERVER['PHP_SELF'] ; ?>\" A\u00e7\u00f2 far\u00e0 que siga la pr\u00f2pia p\u00e0gina del formulari la que processe les dades del mateix. En pr\u00e9mer Enviar han d'apar\u00e8ixer sota el formulari les dades que s'han introdu\u00eft en el mateix.","title":"Activitat 12 A: Creaci\u00f3 d'un formulari"},{"location":"02-basics/6_processament_formularis%20copy/#activitat-12-b-creacio-dun-formulari","text":"Soluciona el problema dels par\u00e0metres no enviats de l'exercici anterior.","title":"Activitat 12 B: Creaci\u00f3 d'un formulari"},{"location":"02-basics/6_processament_formularis%20copy/#activitat-12-c-validacio-dun-formulari","text":"Modifica l'exercici anterior realitzant les validacions oportunes.","title":"Activitat 12 C: Validaci\u00f3 d'un formulari"},{"location":"02-basics/7_pujada_fitxers/","text":"7. Pujada de fitxers Introducci\u00f3 Per a pujar fitxers PHP implementa un mecanisme senzill a trav\u00e9s de la variable superglobal $_FILES . En Pujada d'arxius disposeu de tota la informaci\u00f3 necess\u00e0ria per a gestionar la pujada d'arxius. Formulari Per poder utilitzar el tipus file en l'element input cal que el formulari incloga l'atribut enctype amb el valor multipart/form-data . El valor de l'atribut name de l'element input ser\u00e0 l'\u00edndex de l'array associatiu $_FILES que ens permetr\u00e0 obtenir tota la informaci\u00f3 del proc\u00e9s de pujada del fitxer. En el seg\u00fcent exemple: < form action = \"upload.php\" enctype = \"multipart/form-data\" method = \"POST\" > < input type = \"hidden\" name = \"MAX_FILE_SIZE\" value = \"10240\" > < input type = \"file\" name = \"image\" /> < input type = \"submit\" value = \"Upload\" /> </ form > Emprarem $_FILES['image'] per obtenir les dades de l'arxiu penjat. Variable superglobal $_FILES Cada element en $_FILES \u00e9s un array que aporta informaci\u00f3 sobre el fitxer pujat. Les claus m\u00e9s importants s\u00f3n: * name . El nom original del fitxer pujat. No \u00e9s massa \u00fatil perqu\u00e8 el sistema original pot tindre convencions diferents i pot generar col\u00b7lisions si l'utilitzem per a emmagatzemar-lo en la seua ubicaci\u00f3 definitiva. * type . El tipus MIME del fitxer dedu\u00eft pel navegador. * size . La grand\u00e0ria en bytes del fitxer. Si el fitxer \u00e9s massa gran el valor enviat ser\u00e0 0. * tmp_name . El nom temporal del fitxer en el servidor on s'ha emmagatzemat el fitxer pujat. Moure el fitxer Com que el fitxer pujat es guarda en una carpeta temporal hem d'emprar la funci\u00f3 move_uploaded_file per a guardar-lo en la ubicaci\u00f3 definitiva. La funci\u00f3 is_uploaded_file ens permet a assegurar-nos que el fitxer ha estat pujat usant HTTP POST i no es tracta d'un fitxer malici\u00f3s. move_uploaded_file ja fa eixa comprovaci\u00f3 en executar-se. Gesti\u00f3 d'errors PHP torna un codi d'error en $_FILES . El codi es pot trabar en la clau error . Per exemple: $_FILES['image']['error'] . Els missates d'error m\u00e9s importants s\u00f3n: UPLOAD_ERR_OK : La pujada ha sigut correcta. UPLOAD_ERR_INI_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en la directiva upload_max_filesize . UPLOAD_ERR_FORM_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en el formulari en max_file_size . UPLOAD_ERR_NO_FILE : No s'ha enviat cap fitxer. En Explicaci\u00f3 dels missatges d'error teniu m\u00e9s informaci\u00f3. Activitats Activitat 271: Pujada d'imatges (opcional) Modifica l'activitat anterior afegint un camp de tipus FILE per a pujar una imatge al servidor. Es guardar\u00e0 en la carpeta uploads i es mostrar\u00e0 amb la resta de dades.","title":"7. Pujada de fitxers"},{"location":"02-basics/7_pujada_fitxers/#7-pujada-de-fitxers","text":"","title":"7. Pujada de fitxers"},{"location":"02-basics/7_pujada_fitxers/#introduccio","text":"Per a pujar fitxers PHP implementa un mecanisme senzill a trav\u00e9s de la variable superglobal $_FILES . En Pujada d'arxius disposeu de tota la informaci\u00f3 necess\u00e0ria per a gestionar la pujada d'arxius.","title":"Introducci\u00f3"},{"location":"02-basics/7_pujada_fitxers/#formulari","text":"Per poder utilitzar el tipus file en l'element input cal que el formulari incloga l'atribut enctype amb el valor multipart/form-data . El valor de l'atribut name de l'element input ser\u00e0 l'\u00edndex de l'array associatiu $_FILES que ens permetr\u00e0 obtenir tota la informaci\u00f3 del proc\u00e9s de pujada del fitxer. En el seg\u00fcent exemple: < form action = \"upload.php\" enctype = \"multipart/form-data\" method = \"POST\" > < input type = \"hidden\" name = \"MAX_FILE_SIZE\" value = \"10240\" > < input type = \"file\" name = \"image\" /> < input type = \"submit\" value = \"Upload\" /> </ form > Emprarem $_FILES['image'] per obtenir les dades de l'arxiu penjat.","title":"Formulari"},{"location":"02-basics/7_pujada_fitxers/#variable-superglobal-_files","text":"Cada element en $_FILES \u00e9s un array que aporta informaci\u00f3 sobre el fitxer pujat. Les claus m\u00e9s importants s\u00f3n: * name . El nom original del fitxer pujat. No \u00e9s massa \u00fatil perqu\u00e8 el sistema original pot tindre convencions diferents i pot generar col\u00b7lisions si l'utilitzem per a emmagatzemar-lo en la seua ubicaci\u00f3 definitiva. * type . El tipus MIME del fitxer dedu\u00eft pel navegador. * size . La grand\u00e0ria en bytes del fitxer. Si el fitxer \u00e9s massa gran el valor enviat ser\u00e0 0. * tmp_name . El nom temporal del fitxer en el servidor on s'ha emmagatzemat el fitxer pujat.","title":"Variable superglobal $_FILES"},{"location":"02-basics/7_pujada_fitxers/#moure-el-fitxer","text":"Com que el fitxer pujat es guarda en una carpeta temporal hem d'emprar la funci\u00f3 move_uploaded_file per a guardar-lo en la ubicaci\u00f3 definitiva. La funci\u00f3 is_uploaded_file ens permet a assegurar-nos que el fitxer ha estat pujat usant HTTP POST i no es tracta d'un fitxer malici\u00f3s. move_uploaded_file ja fa eixa comprovaci\u00f3 en executar-se.","title":"Moure el fitxer"},{"location":"02-basics/7_pujada_fitxers/#gestio-derrors","text":"PHP torna un codi d'error en $_FILES . El codi es pot trabar en la clau error . Per exemple: $_FILES['image']['error'] . Els missates d'error m\u00e9s importants s\u00f3n: UPLOAD_ERR_OK : La pujada ha sigut correcta. UPLOAD_ERR_INI_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en la directiva upload_max_filesize . UPLOAD_ERR_FORM_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en el formulari en max_file_size . UPLOAD_ERR_NO_FILE : No s'ha enviat cap fitxer. En Explicaci\u00f3 dels missatges d'error teniu m\u00e9s informaci\u00f3.","title":"Gesti\u00f3 d'errors"},{"location":"02-basics/7_pujada_fitxers/#activitats","text":"","title":"Activitats"},{"location":"02-basics/7_pujada_fitxers/#activitat-271-pujada-dimatges-opcional","text":"Modifica l'activitat anterior afegint un camp de tipus FILE per a pujar una imatge al servidor. Es guardar\u00e0 en la carpeta uploads i es mostrar\u00e0 amb la resta de dades.","title":"Activitat 271: Pujada d'imatges (opcional)"}]}