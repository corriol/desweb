{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Desenvolupament Web en Entorn Servidor","title":"Desenvolupament Web en Entorn Servidor"},{"location":"#desenvolupament-web-en-entorn-servidor","text":"","title":"Desenvolupament Web en Entorn Servidor"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/00_index/","text":"Introducci\u00f3 a la programaci\u00f3 web Objectius Seleccionar les arquitectures i tecnologies de programaci\u00f3 web en entorn servidor, analitzant-ne les capacitats i caracter\u00edstiques pr\u00f2pies. Introduir els principals llenguatges i frameworks per al desenvolupament en l'entorn servidor. Caracteritzar i diferenciar els models d'execuci\u00f3 de codi en el servidor i en el client web. Identificar les principals tecnologies associades. Instal\u00b7lar i configurar l'entorn de treball que emprarem per al desenvolupament web. Visualitzar mitjan\u00e7ant el navegador una p\u00e0gina web html amb codi PHP encastat. Continguts Arquitectura d'una aplicaci\u00f3 web Elements: navegador, servidor, protocol HTTP i HTML El model client/servidor P\u00e0gines web est\u00e0tiques i din\u00e0miques Execuci\u00f3 de codi en el servidor i en el client Tecnologies per a programaci\u00f3 web del costat del servidor Arquitectures i plataformes Servidors web vs Servidors d'Aplicacions Integraci\u00f3 amb el servidor web Llenguatges Codi embegut en el llenguatge de marques Eines de programaci\u00f3 Programaci\u00f3 web amb PHP Preparant l'entorn de desenvolupament Instal\u00b7laci\u00f3 de XAMPP Configuraci\u00f3 b\u00e0sica d'Apache Configuraci\u00f3 b\u00e0sica del m\u00f2dul de PHP Instal\u00b7laci\u00f3 de l'IDE PhpStorm \u00das b\u00e0sic de l'eina Depuraci\u00f3 Eines per a depuraci\u00f3 de codi php Instal\u00b7laci\u00f3 i configuraci\u00f3 de XDebug","title":"Introducci\u00f3"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/00_index/#introduccio-a-la-programacio-web","text":"","title":"Introducci\u00f3 a la programaci\u00f3 web"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/00_index/#objectius","text":"Seleccionar les arquitectures i tecnologies de programaci\u00f3 web en entorn servidor, analitzant-ne les capacitats i caracter\u00edstiques pr\u00f2pies. Introduir els principals llenguatges i frameworks per al desenvolupament en l'entorn servidor. Caracteritzar i diferenciar els models d'execuci\u00f3 de codi en el servidor i en el client web. Identificar les principals tecnologies associades. Instal\u00b7lar i configurar l'entorn de treball que emprarem per al desenvolupament web. Visualitzar mitjan\u00e7ant el navegador una p\u00e0gina web html amb codi PHP encastat.","title":"Objectius"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/00_index/#continguts","text":"Arquitectura d'una aplicaci\u00f3 web Elements: navegador, servidor, protocol HTTP i HTML El model client/servidor P\u00e0gines web est\u00e0tiques i din\u00e0miques Execuci\u00f3 de codi en el servidor i en el client Tecnologies per a programaci\u00f3 web del costat del servidor Arquitectures i plataformes Servidors web vs Servidors d'Aplicacions Integraci\u00f3 amb el servidor web Llenguatges Codi embegut en el llenguatge de marques Eines de programaci\u00f3 Programaci\u00f3 web amb PHP Preparant l'entorn de desenvolupament Instal\u00b7laci\u00f3 de XAMPP Configuraci\u00f3 b\u00e0sica d'Apache Configuraci\u00f3 b\u00e0sica del m\u00f2dul de PHP Instal\u00b7laci\u00f3 de l'IDE PhpStorm \u00das b\u00e0sic de l'eina Depuraci\u00f3 Eines per a depuraci\u00f3 de codi php Instal\u00b7laci\u00f3 i configuraci\u00f3 de XDebug","title":"Continguts"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/1_arquitectura_duna_aplicaci_web/","text":"Arquitectura d'una aplicaci\u00f3 web Elements: navegador, servidor, protocol HTTP i HTML El protocol de transfer\u00e8ncia d'hipertext (HTTP) \u00e9s un protocol client-servidor molt senzill que articula els intercanvis d'informaci\u00f3 entre els clients web (navegadors) i els servidors HTTP. HTTP es basa en operacions senzilles de sol\u00b7licitud/resposta. Quan un client estableix una connexi\u00f3 amb un servidor i envia un missatge amb les dades de la sol\u00b7licitud, el servidor respon amb un missatge similar que cont\u00e9 l'estat de l'operaci\u00f3 i el seu resultat de la sol\u00b7licitud. Totes les operacions poden adjuntar un objecte o recurs sobre el qual actuen; cada objecte web (document HTML, arxiu multim\u00e8dia o aplicaci\u00f3 CGI) \u00e9s conegut pel seu localitzador uniforme de recursos (URL, Uniform Resource Locator ). Els recursos poden ser arxius, el resultat de l'execuci\u00f3 d'un programa, una consulta a una base de dades, la traducci\u00f3 autom\u00e0tica d'un document, etc. HTTP \u00e9s un protocol sense estat , \u00e9s a dir, no guarda cap informaci\u00f3 sobre connexions anteriors. El desenvolupament d'aplicacions web freq\u00fcentment necessita mantenir estat. Per aix\u00f2 s'utilitzen les galetes ( cookies ), \u00e9s a dir, la informaci\u00f3 que un servidor pot emmagatzemar en el sistema client. Aix\u00f2 permet que les aplicacions web institueixin la noci\u00f3 de \"sessi\u00f3\", i, alhora, permet rastrejar usuaris, ja que les galetes es poden emmagatzemar en el client durant un temps indeterminat. Amb la intenci\u00f3 de con\u00e8ixer amb m\u00e9s profunditat el protocol HTTP podem avaluar en qu\u00e8 consisteix una transacci\u00f3 HTTP. Cada vegada que un client fa una petici\u00f3 a un servidor, s'executen un seguit d'accions: Un usuari accedeix a una adre\u00e7a d'Internet (URL) seleccionant un enlla\u00e7 d'un document HTML o introduint-la directament a la barra de navegaci\u00f3 d'un navegador web des de la perspectiva del client web. El client web descodifica l'adre\u00e7a d'Internet (URL) separant-ne les diferents parts. \u00c9s aix\u00ed com s'identifiquen el protocol d'acc\u00e9s, el node expressat amb el nom de domini o la seua adre\u00e7a IP, el possible port opcional (el valor per defecte \u00e9s el 80) i l'objecte del servidor requerit. S'obre una connexi\u00f3 TCP/IP amb el servidor cridant el port TCP corresponent. Es fa la petici\u00f3. En conseq\u00fc\u00e8ncia, s'envien l'ordre necess\u00e0ria (GET, POST, HEAD, etc.), l'adre\u00e7a de l'objecte requerit (el contingut de l'adre\u00e7a d'Internet del servidor), la versi\u00f3 del protocol HTTP utilitzada (en la major part de les ocasions \u00e9s HTTP/1.0) i un conjunt variable d'informaci\u00f3 que inclou dades sobre les capacitats del navegador web, dades opcionals per al servidor, etc. El servidor localitza el recurs sol\u00b7licitat i torna la resposta al client. Aquesta resposta consisteix en un codi d'estat i el tipus de dada amb extensions multiprop\u00f2sit de correu d'Internet (MIME, Multipurpose Internet Mail Extension) de la informaci\u00f3 de tornada, seguit de la mateixa informaci\u00f3. El client formata i mostra el recurs rebut. Es tanca la connexi\u00f3 TCP. Aquest proc\u00e9s es repeteix en cada acc\u00e9s que es fa\u00e7a al servidor HTTP. Per exemple, si es recull un document HTML que cont\u00e9 quatre imatges, el proc\u00e9s de transici\u00f3 mostrat amb anterioritat es repeteix cinc vegades, \u00e9s a dir, una pel document HTML i quatre per les imatges. Si el recurs sol\u00b7licitat \u00e9s un programa (CGI, ASP.NET, PHP, etc.) el servidor HTTP redirigir\u00e0 la petici\u00f3 a la llibreria o int\u00e8rpret adequat que executar\u00e0 el programa i tornar\u00e0 el control al servidor web. Format de les URL La sintaxi general de les URL consisteix en una seq\u00fc\u00e8ncia jer\u00e0rquica de 5 components: URI = scheme:[//authority]path[?query][#fragment] on el component authoriry es deivideix en tres subcomponents: authority = [userinfo@]host[:port] El model client/servidor El model client-servidor \u00e9s aquell on tots els clients estan connectats a un servidor on es centralitzen els diferents recursos. Aquests recursos estan a disposici\u00f3 dels clients cada cop que els sol\u00b7liciten. Aix\u00f2 fa que totes les gestions que es realitzen es concentren en el servidor, que disposa dels requeriments dels clients amb prioritat, els arxius que s\u00f3n d'\u00fas p\u00fablic i els restringits, els arxius de nom\u00e9s lectura, els que poden ser modificats, etc. En el model client/servidor, el dispositiu que sol\u00b7licita informaci\u00f3 es denomina client i el dispositiu que respon la sol\u00b7licitud es denomina servidor. Els processos de client i servidor es consideren una part de la capa d'aplicaci\u00f3. El client comen\u00e7a l'intercanvi sol\u00b7licitant les dades al servidor, que respon enviant un o m\u00e9s blocs de dades al client. Els protocols de capa d'aplicaci\u00f3 descriuen el format de les sol\u00b7licituds i respostes entre clients i servidor. A m\u00e9s de la transfer\u00e8ncia real de dades, aquest intercanvi pot requerir informaci\u00f3 addicional, com l'autentificaci\u00f3 de l'usuari i la identificaci\u00f3 d'un arxiu de dades per transferir. Encara que les dades generalment es descriuen com un flux del servidor al client, algunes dades sempre flueixen del client al servidor. El flux de dades pot ser el mateix en les dues direccions o fins i tot ser major en la direcci\u00f3 que va del client al servidor. Per exemple, un client pot transferir un arxiu al servidor amb finalitats d'emmagatzemament. La transfer\u00e8ncia de dades d'un client a un servidor es coneix com a pujada i la de les dades d'un servidor a un client, baixada. P\u00e0gines web est\u00e0tiques i din\u00e0miques P\u00e0gines web est\u00e0tiques Les p\u00e0gines web est\u00e0tiques s\u00f3n aquelles on el seu contingut no varia per la qual cosa mostraran la mateixa informaci\u00f3 cada vegada que es carreguen. S\u00f3n les p\u00e0gines creades en el llenguatge HTML. Nom\u00e9s canvien si el programador web les modifica. P\u00e0gines web din\u00e0miques Les p\u00e0gines web din\u00e0miques s\u00f3n p\u00e0gines el contingut de les quals varia a partir d'informaci\u00f3 continguda en una BBDD. El contingut mostrat pot canviar segons l'usuari connectat, el navegador que s'utiltze o accions anteriors dels usuaris, etc. Aquest tipus de p\u00e0gines s'han de realitzar mitjan\u00e7at un llenguatge de programaci\u00f3. En el seg\u00fcent gr\u00e0fic es mostra un escenari on podem trobar codi que s'executa en el servidor (PHP) i en el client (javascript).","title":"1. Arquitectura d'una aplicaci\u00f3 web"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/1_arquitectura_duna_aplicaci_web/#arquitectura-duna-aplicacio-web","text":"","title":"Arquitectura d'una aplicaci\u00f3 web"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/1_arquitectura_duna_aplicaci_web/#elements-navegador-servidor-protocol-http-i-html","text":"El protocol de transfer\u00e8ncia d'hipertext (HTTP) \u00e9s un protocol client-servidor molt senzill que articula els intercanvis d'informaci\u00f3 entre els clients web (navegadors) i els servidors HTTP. HTTP es basa en operacions senzilles de sol\u00b7licitud/resposta. Quan un client estableix una connexi\u00f3 amb un servidor i envia un missatge amb les dades de la sol\u00b7licitud, el servidor respon amb un missatge similar que cont\u00e9 l'estat de l'operaci\u00f3 i el seu resultat de la sol\u00b7licitud. Totes les operacions poden adjuntar un objecte o recurs sobre el qual actuen; cada objecte web (document HTML, arxiu multim\u00e8dia o aplicaci\u00f3 CGI) \u00e9s conegut pel seu localitzador uniforme de recursos (URL, Uniform Resource Locator ). Els recursos poden ser arxius, el resultat de l'execuci\u00f3 d'un programa, una consulta a una base de dades, la traducci\u00f3 autom\u00e0tica d'un document, etc. HTTP \u00e9s un protocol sense estat , \u00e9s a dir, no guarda cap informaci\u00f3 sobre connexions anteriors. El desenvolupament d'aplicacions web freq\u00fcentment necessita mantenir estat. Per aix\u00f2 s'utilitzen les galetes ( cookies ), \u00e9s a dir, la informaci\u00f3 que un servidor pot emmagatzemar en el sistema client. Aix\u00f2 permet que les aplicacions web institueixin la noci\u00f3 de \"sessi\u00f3\", i, alhora, permet rastrejar usuaris, ja que les galetes es poden emmagatzemar en el client durant un temps indeterminat. Amb la intenci\u00f3 de con\u00e8ixer amb m\u00e9s profunditat el protocol HTTP podem avaluar en qu\u00e8 consisteix una transacci\u00f3 HTTP. Cada vegada que un client fa una petici\u00f3 a un servidor, s'executen un seguit d'accions: Un usuari accedeix a una adre\u00e7a d'Internet (URL) seleccionant un enlla\u00e7 d'un document HTML o introduint-la directament a la barra de navegaci\u00f3 d'un navegador web des de la perspectiva del client web. El client web descodifica l'adre\u00e7a d'Internet (URL) separant-ne les diferents parts. \u00c9s aix\u00ed com s'identifiquen el protocol d'acc\u00e9s, el node expressat amb el nom de domini o la seua adre\u00e7a IP, el possible port opcional (el valor per defecte \u00e9s el 80) i l'objecte del servidor requerit. S'obre una connexi\u00f3 TCP/IP amb el servidor cridant el port TCP corresponent. Es fa la petici\u00f3. En conseq\u00fc\u00e8ncia, s'envien l'ordre necess\u00e0ria (GET, POST, HEAD, etc.), l'adre\u00e7a de l'objecte requerit (el contingut de l'adre\u00e7a d'Internet del servidor), la versi\u00f3 del protocol HTTP utilitzada (en la major part de les ocasions \u00e9s HTTP/1.0) i un conjunt variable d'informaci\u00f3 que inclou dades sobre les capacitats del navegador web, dades opcionals per al servidor, etc. El servidor localitza el recurs sol\u00b7licitat i torna la resposta al client. Aquesta resposta consisteix en un codi d'estat i el tipus de dada amb extensions multiprop\u00f2sit de correu d'Internet (MIME, Multipurpose Internet Mail Extension) de la informaci\u00f3 de tornada, seguit de la mateixa informaci\u00f3. El client formata i mostra el recurs rebut. Es tanca la connexi\u00f3 TCP. Aquest proc\u00e9s es repeteix en cada acc\u00e9s que es fa\u00e7a al servidor HTTP. Per exemple, si es recull un document HTML que cont\u00e9 quatre imatges, el proc\u00e9s de transici\u00f3 mostrat amb anterioritat es repeteix cinc vegades, \u00e9s a dir, una pel document HTML i quatre per les imatges. Si el recurs sol\u00b7licitat \u00e9s un programa (CGI, ASP.NET, PHP, etc.) el servidor HTTP redirigir\u00e0 la petici\u00f3 a la llibreria o int\u00e8rpret adequat que executar\u00e0 el programa i tornar\u00e0 el control al servidor web.","title":"Elements: navegador, servidor, protocol HTTP i HTML"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/1_arquitectura_duna_aplicaci_web/#format-de-les-url","text":"La sintaxi general de les URL consisteix en una seq\u00fc\u00e8ncia jer\u00e0rquica de 5 components: URI = scheme:[//authority]path[?query][#fragment] on el component authoriry es deivideix en tres subcomponents: authority = [userinfo@]host[:port]","title":"Format de les URL"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/1_arquitectura_duna_aplicaci_web/#el-model-clientservidor","text":"El model client-servidor \u00e9s aquell on tots els clients estan connectats a un servidor on es centralitzen els diferents recursos. Aquests recursos estan a disposici\u00f3 dels clients cada cop que els sol\u00b7liciten. Aix\u00f2 fa que totes les gestions que es realitzen es concentren en el servidor, que disposa dels requeriments dels clients amb prioritat, els arxius que s\u00f3n d'\u00fas p\u00fablic i els restringits, els arxius de nom\u00e9s lectura, els que poden ser modificats, etc. En el model client/servidor, el dispositiu que sol\u00b7licita informaci\u00f3 es denomina client i el dispositiu que respon la sol\u00b7licitud es denomina servidor. Els processos de client i servidor es consideren una part de la capa d'aplicaci\u00f3. El client comen\u00e7a l'intercanvi sol\u00b7licitant les dades al servidor, que respon enviant un o m\u00e9s blocs de dades al client. Els protocols de capa d'aplicaci\u00f3 descriuen el format de les sol\u00b7licituds i respostes entre clients i servidor. A m\u00e9s de la transfer\u00e8ncia real de dades, aquest intercanvi pot requerir informaci\u00f3 addicional, com l'autentificaci\u00f3 de l'usuari i la identificaci\u00f3 d'un arxiu de dades per transferir. Encara que les dades generalment es descriuen com un flux del servidor al client, algunes dades sempre flueixen del client al servidor. El flux de dades pot ser el mateix en les dues direccions o fins i tot ser major en la direcci\u00f3 que va del client al servidor. Per exemple, un client pot transferir un arxiu al servidor amb finalitats d'emmagatzemament. La transfer\u00e8ncia de dades d'un client a un servidor es coneix com a pujada i la de les dades d'un servidor a un client, baixada.","title":"El model client/servidor"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/1_arquitectura_duna_aplicaci_web/#pagines-web-estatiques-i-dinamiques","text":"","title":"P\u00e0gines web est\u00e0tiques i din\u00e0miques"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/1_arquitectura_duna_aplicaci_web/#pagines-web-estatiques","text":"Les p\u00e0gines web est\u00e0tiques s\u00f3n aquelles on el seu contingut no varia per la qual cosa mostraran la mateixa informaci\u00f3 cada vegada que es carreguen. S\u00f3n les p\u00e0gines creades en el llenguatge HTML. Nom\u00e9s canvien si el programador web les modifica.","title":"P\u00e0gines web est\u00e0tiques"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/1_arquitectura_duna_aplicaci_web/#pagines-web-dinamiques","text":"Les p\u00e0gines web din\u00e0miques s\u00f3n p\u00e0gines el contingut de les quals varia a partir d'informaci\u00f3 continguda en una BBDD. El contingut mostrat pot canviar segons l'usuari connectat, el navegador que s'utiltze o accions anteriors dels usuaris, etc. Aquest tipus de p\u00e0gines s'han de realitzar mitjan\u00e7at un llenguatge de programaci\u00f3. En el seg\u00fcent gr\u00e0fic es mostra un escenari on podem trobar codi que s'executa en el servidor (PHP) i en el client (javascript).","title":"P\u00e0gines web din\u00e0miques"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/","text":"2. Tecnologies per a programaci\u00f3 web del costat del servidor Introducci\u00f3 Des d'un punt de vista de desenvolupament una aproximaci\u00f3 m\u00e9s detallada al model client-servidor \u00e9s el que es coneix com a model en 3 capes . \u00c9s un model on es mostra m\u00e9s en detall com es distribueix el programari que participa en qualsevol desenvolupament web. Segueix estant present l'arquitectura client-servidor (tot es basa en ella) per\u00f2 apareixen m\u00e9s detalls com el programari utilitzat en cada un dels dos actors i com interactuen les diferents tecnologies o aplicacions. Per comprendre millor que \u00e9s el model de desenvolupament de 3 capes podem tirar un ull al seg\u00fcent esquema on es mostra cadascuna d'aquestes capes i que s'encarrega cadascuna d'elles: Capa de presentaci\u00f3: \u00c9s la capa on l'aplicaci\u00f3 es mostra a l'usuari. B\u00e0sicament \u00e9s la GUI ( Graphical User Interface, interf\u00edcie gr\u00e0fica d'usuari ). En el cas d'una aplicaci\u00f3 web seria el codi HTML que es carrega directament al navegador web. En qualsevol cas, s'executa directament en l'equip del client. Capa de negoci: \u00c9s la capa interm\u00e8dia on es porta a terme tota la l\u00f2gica de l'aplicaci\u00f3. Sempre s'executar\u00e0 en el costat servidor. Aquesta capa, despr\u00e9s de realitzar tots els c\u00e0lculs i / o operacions sobre les dades, genera el codi HTML que ser\u00e0 presentat a l'usuari en la capa seg\u00fcent. Capa de dades: \u00c9s la capa que emmagatzema les dades. B\u00e0sicament, en condicions normals, fa refer\u00e8ncia al propi SGBD que \u00e9s l'encarregat d'emmagatzemar les dades. Depenent de l'arquitectura de l'aplicaci\u00f3, aquesta capa i la de negoci es poden trobar f\u00edsicament en el mateix equip, encara que tamb\u00e9 \u00e9s possible que s'hagin de separar per q\u00fcestions de rendiment. La capa de dades serveix totes la informaci\u00f3 necess\u00e0ria a la capa de negoci per dur a terme les seves operacions. Si ens imaginem una botiga online, la capa de dades emmagatzema tota la informaci\u00f3 en una base de dades (usuaris, comandes, articles, ofertes,...), La capa de negoci ha d'accedir a aquesta informaci\u00f3 i, despr\u00e9s processar una comanda, per exemple, ha de presentar el resultat final a l'usuari en el navegador, que \u00e9s la capa de presentaci\u00f3. I si ens centrem en un cas concret amb programari i tecnologies ja definits, un model de 3 capes podria ser el seg\u00fcent: Navegador web: En aquest cas, Mozilla Firefox, Internet Explorer o Google Chrome podrien ser qualsevol de les aplicacions que ocuparien aquesta capa Apache + PHP / IIS + ASP: Un servidor web acompanyat del seu corresponent llenguatge de programaci\u00f3 web permeten desenvolupar la part que ocupa la capa de negoci. Tamb\u00e9 podr\u00edem col\u00b7locar la combinaci\u00f3 Apache Tomcat + Servlets MySQL / PostgreSQL: Finalment a la capa de dades podem posar qualsevol SGBD, com poden ser MySQL o PostgreSQL. L'avantatge principal d'aquest model \u00e9s que el desenvolupament es pot dur a terme en diversos nivells i, en cas que sobrevinga algun canvi, nom\u00e9s afectar\u00e0 el nivell requerit sense haver de revisar entre el codi font d'altres m\u00f2duls, at\u00e8s que s'haur\u00e0 redu\u00eft el acoblament inform\u00e0tic fins a una interf\u00edcie de pas de missatges. ::: Front-end, Back-end, Full stack Tamb\u00e9 tenint en compte en quin costat se situen les tecnologies i per a qu\u00e8 s'utilitzen aquestes, actualment es parla molt de 3 perfils diferenciats en l'\u00e0mbit del desenvolupament web: Front-end: \u00c9s la part del desenvolupament que s'encarrega del disseny i maquetaci\u00f3 de l'aplicaci\u00f3 web utilitzant tecnologies com HTML, CSS i Javascript (i els seus frameworks). En aquest cas s'ha de preocupar tamb\u00e9 de la correcta presentaci\u00f3 en qualsevol tipus de dispositiu i fins i tot del posicionament en cercadors Back-end: \u00c9s la part del desenvolupament que s'encarrega del costat servidor utilitzant tecnologies com PHP, JSP i Python. Tamb\u00e9 s'encarrega de l'administraci\u00f3 del servidor d'aplicacions i la base de dades. Full stack: En un perfil que engloba els dos anteriors. En aquest cas el desenvolupador potser no \u00e9s un expert de cap tecnologia concreta per\u00f2 t\u00e9 amplis coneixements de tot el conjunt i \u00e9s capa\u00e7 de col\u00b7laborar en qualsevol de les parts. Servidors web i servidors d'aplicacions Aix\u00ed com les aplicacions d'escriptori s'executen directament sobre el sistema operatiu, les aplicacions web necessiten d'una eina addicional que permeti desplegar-les per a la seva posada en marxa. Parlem de servidors web i servidors d'aplicacions , respectivament. Qu\u00e8 \u00e9s un servidor web? Un servidor web \u00e9s una aplicaci\u00f3 que rep una petici\u00f3 HTTP (normalment a trav\u00e9s d'un navegador web) i retorna la p\u00e0gina web sol\u00b7licitada (escrita en llenguatge HTML i podent contenir codi Javascript encastat) perqu\u00e8 aquesta sigua interpretada i visualitzada pel navegador de qui va realitzar la sol\u00b7licitud (l'usuari). Qu\u00e8 \u00e9s un servidor d'aplicacions? Un servidor d'aplicacions \u00e9s un servidor que permet l'execuci\u00f3 d'aplicacions web. Exemples Apache Apache \u00e9s un dels servidors web m\u00e9s coneguts. \u00c9s programari lliure i multiplataforma, encara que aproximadament el 90% dels servidors Apache s'executen actualment en entorns Linux ja que \u00e9s el servidor preferit per a aquesta plataforma. \u00c9s molt modular el que permet incorporar caracter\u00edstiques un cop instal\u00b7lat i posat en marxa. Aix\u00f2 li fa tamb\u00e9 molt flexible i pot donar servei a webs escrites en els llenguatges de programaci\u00f3 web m\u00e9s estesos (com PHP, Python, ASP,...) A trav\u00e9s del m\u00f2dul corresponent. Apache Tomcat Apache Tomcat \u00e9s un servidor d'aplicacions que funciona com a contenidor de Servlets de Java. Actualment \u00e9s capa\u00e7 d'implementar diverses especificacions de Java EE com Servlets i JSP (Java Server Pages) i m\u00e9s proporciona un servidor web pur perqu\u00e8 es fa\u00e7a servir en combinaci\u00f3 amb l'entorn Java. WSGI ( Web Server Gateway Interface ) WSGI \u00e9s una interf\u00edcie que defineix com es comunica un servidor web amb aplicacions web o frameworks escrits en Python.","title":"2. Tecnologies per a programaci\u00f3 web del costat del servidor"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#2-tecnologies-per-a-programacio-web-del-costat-del-servidor","text":"","title":"2. Tecnologies per a programaci\u00f3 web del costat del servidor"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#introduccio","text":"Des d'un punt de vista de desenvolupament una aproximaci\u00f3 m\u00e9s detallada al model client-servidor \u00e9s el que es coneix com a model en 3 capes . \u00c9s un model on es mostra m\u00e9s en detall com es distribueix el programari que participa en qualsevol desenvolupament web. Segueix estant present l'arquitectura client-servidor (tot es basa en ella) per\u00f2 apareixen m\u00e9s detalls com el programari utilitzat en cada un dels dos actors i com interactuen les diferents tecnologies o aplicacions. Per comprendre millor que \u00e9s el model de desenvolupament de 3 capes podem tirar un ull al seg\u00fcent esquema on es mostra cadascuna d'aquestes capes i que s'encarrega cadascuna d'elles: Capa de presentaci\u00f3: \u00c9s la capa on l'aplicaci\u00f3 es mostra a l'usuari. B\u00e0sicament \u00e9s la GUI ( Graphical User Interface, interf\u00edcie gr\u00e0fica d'usuari ). En el cas d'una aplicaci\u00f3 web seria el codi HTML que es carrega directament al navegador web. En qualsevol cas, s'executa directament en l'equip del client. Capa de negoci: \u00c9s la capa interm\u00e8dia on es porta a terme tota la l\u00f2gica de l'aplicaci\u00f3. Sempre s'executar\u00e0 en el costat servidor. Aquesta capa, despr\u00e9s de realitzar tots els c\u00e0lculs i / o operacions sobre les dades, genera el codi HTML que ser\u00e0 presentat a l'usuari en la capa seg\u00fcent. Capa de dades: \u00c9s la capa que emmagatzema les dades. B\u00e0sicament, en condicions normals, fa refer\u00e8ncia al propi SGBD que \u00e9s l'encarregat d'emmagatzemar les dades. Depenent de l'arquitectura de l'aplicaci\u00f3, aquesta capa i la de negoci es poden trobar f\u00edsicament en el mateix equip, encara que tamb\u00e9 \u00e9s possible que s'hagin de separar per q\u00fcestions de rendiment. La capa de dades serveix totes la informaci\u00f3 necess\u00e0ria a la capa de negoci per dur a terme les seves operacions. Si ens imaginem una botiga online, la capa de dades emmagatzema tota la informaci\u00f3 en una base de dades (usuaris, comandes, articles, ofertes,...), La capa de negoci ha d'accedir a aquesta informaci\u00f3 i, despr\u00e9s processar una comanda, per exemple, ha de presentar el resultat final a l'usuari en el navegador, que \u00e9s la capa de presentaci\u00f3. I si ens centrem en un cas concret amb programari i tecnologies ja definits, un model de 3 capes podria ser el seg\u00fcent: Navegador web: En aquest cas, Mozilla Firefox, Internet Explorer o Google Chrome podrien ser qualsevol de les aplicacions que ocuparien aquesta capa Apache + PHP / IIS + ASP: Un servidor web acompanyat del seu corresponent llenguatge de programaci\u00f3 web permeten desenvolupar la part que ocupa la capa de negoci. Tamb\u00e9 podr\u00edem col\u00b7locar la combinaci\u00f3 Apache Tomcat + Servlets MySQL / PostgreSQL: Finalment a la capa de dades podem posar qualsevol SGBD, com poden ser MySQL o PostgreSQL. L'avantatge principal d'aquest model \u00e9s que el desenvolupament es pot dur a terme en diversos nivells i, en cas que sobrevinga algun canvi, nom\u00e9s afectar\u00e0 el nivell requerit sense haver de revisar entre el codi font d'altres m\u00f2duls, at\u00e8s que s'haur\u00e0 redu\u00eft el acoblament inform\u00e0tic fins a una interf\u00edcie de pas de missatges. :::","title":"Introducci\u00f3"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#front-end-back-end-full-stack","text":"Tamb\u00e9 tenint en compte en quin costat se situen les tecnologies i per a qu\u00e8 s'utilitzen aquestes, actualment es parla molt de 3 perfils diferenciats en l'\u00e0mbit del desenvolupament web: Front-end: \u00c9s la part del desenvolupament que s'encarrega del disseny i maquetaci\u00f3 de l'aplicaci\u00f3 web utilitzant tecnologies com HTML, CSS i Javascript (i els seus frameworks). En aquest cas s'ha de preocupar tamb\u00e9 de la correcta presentaci\u00f3 en qualsevol tipus de dispositiu i fins i tot del posicionament en cercadors Back-end: \u00c9s la part del desenvolupament que s'encarrega del costat servidor utilitzant tecnologies com PHP, JSP i Python. Tamb\u00e9 s'encarrega de l'administraci\u00f3 del servidor d'aplicacions i la base de dades. Full stack: En un perfil que engloba els dos anteriors. En aquest cas el desenvolupador potser no \u00e9s un expert de cap tecnologia concreta per\u00f2 t\u00e9 amplis coneixements de tot el conjunt i \u00e9s capa\u00e7 de col\u00b7laborar en qualsevol de les parts.","title":"Front-end, Back-end, Full stack"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#servidors-web-i-servidors-daplicacions","text":"Aix\u00ed com les aplicacions d'escriptori s'executen directament sobre el sistema operatiu, les aplicacions web necessiten d'una eina addicional que permeti desplegar-les per a la seva posada en marxa. Parlem de servidors web i servidors d'aplicacions , respectivament.","title":"Servidors web i servidors d'aplicacions"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#que-es-un-servidor-web","text":"Un servidor web \u00e9s una aplicaci\u00f3 que rep una petici\u00f3 HTTP (normalment a trav\u00e9s d'un navegador web) i retorna la p\u00e0gina web sol\u00b7licitada (escrita en llenguatge HTML i podent contenir codi Javascript encastat) perqu\u00e8 aquesta sigua interpretada i visualitzada pel navegador de qui va realitzar la sol\u00b7licitud (l'usuari).","title":"Qu\u00e8 \u00e9s un servidor web?"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#que-es-un-servidor-daplicacions","text":"Un servidor d'aplicacions \u00e9s un servidor que permet l'execuci\u00f3 d'aplicacions web.","title":"Qu\u00e8 \u00e9s un servidor d'aplicacions?"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#exemples","text":"","title":"Exemples"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#apache","text":"Apache \u00e9s un dels servidors web m\u00e9s coneguts. \u00c9s programari lliure i multiplataforma, encara que aproximadament el 90% dels servidors Apache s'executen actualment en entorns Linux ja que \u00e9s el servidor preferit per a aquesta plataforma. \u00c9s molt modular el que permet incorporar caracter\u00edstiques un cop instal\u00b7lat i posat en marxa. Aix\u00f2 li fa tamb\u00e9 molt flexible i pot donar servei a webs escrites en els llenguatges de programaci\u00f3 web m\u00e9s estesos (com PHP, Python, ASP,...) A trav\u00e9s del m\u00f2dul corresponent.","title":"Apache"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#apache-tomcat","text":"Apache Tomcat \u00e9s un servidor d'aplicacions que funciona com a contenidor de Servlets de Java. Actualment \u00e9s capa\u00e7 d'implementar diverses especificacions de Java EE com Servlets i JSP (Java Server Pages) i m\u00e9s proporciona un servidor web pur perqu\u00e8 es fa\u00e7a servir en combinaci\u00f3 amb l'entorn Java.","title":"Apache Tomcat"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#wsgi-web-server-gateway-interface","text":"WSGI \u00e9s una interf\u00edcie que defineix com es comunica un servidor web amb aplicacions web o frameworks escrits en Python.","title":"WSGI (Web Server Gateway Interface)"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/3_llenguatges.html/","text":"3. Llenguatges PHP PHP (PHP Hypertext Preprocessor) \u00e9s un llenguatge de programaci\u00f3 de costat servidor dissenyat principalment per al desenvolupament web. PHP s'utilitza com a llenguatge de script embegut en p\u00e0gines HTML i funciona, normalment, com un m\u00f2dul del servidor web (per exemple, a Apache). El servidor web combina els resultats d'executar els scripts PHP amb l'HTML al qual va encastat i genera la p\u00e0gina web resultant per al navegador. Actualment PHP funciona pr\u00e0cticament amb qualsevol servidor web i en qualsevol Sistema Operatiu existents, i gaireb\u00e9 amb qualsevol SGBD en cas que necessitem utilitzar una base de dades. Tot i aix\u00f2, el m\u00e9s habitual \u00e9s veure-ho formant el que es coneix com una arquitectura LAMP (Linux, Apache, MySQL i PHP), \u00e9s a dir, funcionant sobre un sistema operatiu Linux, executant-com un m\u00f2dul del servidor web Apache i utilitzant a MySQL com SGBD per emmagatzemar la informaci\u00f3 en cas que es requereixi una base de dades. El llenguatge PHP va ser dissenyat per Rasmus Lerdorf i ara es mant\u00e9 per una comunitat de desenvolupadors, a m\u00e9s \u00e9s de codi obert. A continuaci\u00f3, un fragment d'una p\u00e0gina web din\u00e0mica escrita amb PHP on es pot apreciar com s'incrusta el codi juntament amb l'HTML de la p\u00e0gina: JSP / Servlets JavaServer Pages (tamb\u00e9 conegut com JSP) \u00e9s una tecnologia creada per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques del costat servidor. Igual que PHP, el seu codi s'escriu encastat juntament amb l'HTML de la p\u00e0gina web i \u00e9s el servidor d'aplicacions, en aquest cas, qui ha de processar-per generar la p\u00e0gina web resultant, en HTML. D'altra banda, Java Servlets \u00e9s una tecnologia que tamb\u00e9 es pot utilitzar per crear contingut web din\u00e0mic per\u00f2 que a m\u00e9s est\u00e9n la seva funcionalitat a la possibilitat de connectar aquestes webs din\u00e0miques amb un altre contingut accessible a trav\u00e9s d'Internet. De vegades s'utilitza juntament amb JSP per crear aplicacions web m\u00e9s complexes. Totes dues s\u00f3n tecnologies desenvolupades per Sun Microsystems i propietat ara d'Oracle, despr\u00e9s d'adquirir aquesta \u00faltima a la primera fa ja alguns anys. Python El llenguatge Python va ser dissenyat per Guido van Rossum i ara es mant\u00e9 gr\u00e0cies a una comunitat de desenvolupadors, i \u00e9s codi obert. Exemple de codi escrit amb Python. En aquest cas utilitzant el framework Django per al desenvolupament d'aplicacions web: < h1 > Mis pel\u00edculas < /h1> <a href=\"#\">+</ a > { % if lista_peliculas %} <ul> {% for pelicula in lista_peliculas %} < li >< a href = \"{% url 'pelicula' pelicula.id %}\" > {{ pelicula . titulo }} < /a></ li > { % endfor %} </ul> {% else %} < p > No hay pel\u00edculas disponibles < /p> {% endif %} Separada del controlador: from django.shortcuts import render . . . def index ( request ): lista_peliculas = Pelicula . objects . all () context = { 'lista_peliculas' : lista_peliculas } return render ( request , 'mispeliculas/index.html' , context ) ASP.NET ASP.NET \u00e9s una tecnologia, creada per Microsoft, per al desenvolupament de lloc web din\u00e0mics, aplicacions i serveis web. \u00c9s la tecnologia successora del que abans es coneixia com ASP, l'antiga tecnologia de Microsoft per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques. Com que funciona sobre la plataforma .NET de Microsoft, permet que es pugui desenvolupar en qualsevol dels llenguatges de programaci\u00f3 d'aquesta plataforma, Visual Basic .NET o C#. El m\u00e9s habitual \u00e9s veure-ho funcionar juntament amb el lloc web de Microsoft, IIS (Internet Information Server). A continuaci\u00f3, un exemple de p\u00e0gina web din\u00e0mica amb ASP.NET (desenvolupada en llenguatge C #) programant l'acci\u00f3 que passa en pr\u00e9mer un bot\u00f3 (apareix el text d'un formulari a la part final del web): protected void Button1_Click(object sender, EventArgs e) { string buf = TextBox1.Text; changed_text.InnerHtml = buf.ToUpper(); } < %@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\" Inherits=\"firstexample._Default\" %> <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> < html xmlns = \"http://www.w3.org/1999/xhtml\" > < head runat = \"server\" > < title > Untitled Page </ title > </ head > < body > < form id = \"form1\" runat = \"server\" > < div > < asp:TextBox ID = \"TextBox1\" runat = \"server\" style = \"width:224px\" > </ asp:TextBox > < asp:Button ID = \"Button1\" runat = \"server\" Text = \"Enter...\" style = \"width:85px\" onclick = \"Button1_Click\" /> < hr /> < h3 > Results: </ h3 > < span runat = \"server\" id = \"changed_text\" /> </ div > </ form > </ body > </ html >","title":"3. Llenguatges"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/3_llenguatges.html/#3-llenguatges","text":"","title":"3. Llenguatges"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/3_llenguatges.html/#php","text":"PHP (PHP Hypertext Preprocessor) \u00e9s un llenguatge de programaci\u00f3 de costat servidor dissenyat principalment per al desenvolupament web. PHP s'utilitza com a llenguatge de script embegut en p\u00e0gines HTML i funciona, normalment, com un m\u00f2dul del servidor web (per exemple, a Apache). El servidor web combina els resultats d'executar els scripts PHP amb l'HTML al qual va encastat i genera la p\u00e0gina web resultant per al navegador. Actualment PHP funciona pr\u00e0cticament amb qualsevol servidor web i en qualsevol Sistema Operatiu existents, i gaireb\u00e9 amb qualsevol SGBD en cas que necessitem utilitzar una base de dades. Tot i aix\u00f2, el m\u00e9s habitual \u00e9s veure-ho formant el que es coneix com una arquitectura LAMP (Linux, Apache, MySQL i PHP), \u00e9s a dir, funcionant sobre un sistema operatiu Linux, executant-com un m\u00f2dul del servidor web Apache i utilitzant a MySQL com SGBD per emmagatzemar la informaci\u00f3 en cas que es requereixi una base de dades. El llenguatge PHP va ser dissenyat per Rasmus Lerdorf i ara es mant\u00e9 per una comunitat de desenvolupadors, a m\u00e9s \u00e9s de codi obert. A continuaci\u00f3, un fragment d'una p\u00e0gina web din\u00e0mica escrita amb PHP on es pot apreciar com s'incrusta el codi juntament amb l'HTML de la p\u00e0gina:","title":"PHP"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/3_llenguatges.html/#jsp-servlets","text":"JavaServer Pages (tamb\u00e9 conegut com JSP) \u00e9s una tecnologia creada per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques del costat servidor. Igual que PHP, el seu codi s'escriu encastat juntament amb l'HTML de la p\u00e0gina web i \u00e9s el servidor d'aplicacions, en aquest cas, qui ha de processar-per generar la p\u00e0gina web resultant, en HTML. D'altra banda, Java Servlets \u00e9s una tecnologia que tamb\u00e9 es pot utilitzar per crear contingut web din\u00e0mic per\u00f2 que a m\u00e9s est\u00e9n la seva funcionalitat a la possibilitat de connectar aquestes webs din\u00e0miques amb un altre contingut accessible a trav\u00e9s d'Internet. De vegades s'utilitza juntament amb JSP per crear aplicacions web m\u00e9s complexes. Totes dues s\u00f3n tecnologies desenvolupades per Sun Microsystems i propietat ara d'Oracle, despr\u00e9s d'adquirir aquesta \u00faltima a la primera fa ja alguns anys.","title":"JSP / Servlets"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/3_llenguatges.html/#python","text":"El llenguatge Python va ser dissenyat per Guido van Rossum i ara es mant\u00e9 gr\u00e0cies a una comunitat de desenvolupadors, i \u00e9s codi obert. Exemple de codi escrit amb Python. En aquest cas utilitzant el framework Django per al desenvolupament d'aplicacions web: < h1 > Mis pel\u00edculas < /h1> <a href=\"#\">+</ a > { % if lista_peliculas %} <ul> {% for pelicula in lista_peliculas %} < li >< a href = \"{% url 'pelicula' pelicula.id %}\" > {{ pelicula . titulo }} < /a></ li > { % endfor %} </ul> {% else %} < p > No hay pel\u00edculas disponibles < /p> {% endif %} Separada del controlador: from django.shortcuts import render . . . def index ( request ): lista_peliculas = Pelicula . objects . all () context = { 'lista_peliculas' : lista_peliculas } return render ( request , 'mispeliculas/index.html' , context )","title":"Python"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/3_llenguatges.html/#aspnet","text":"ASP.NET \u00e9s una tecnologia, creada per Microsoft, per al desenvolupament de lloc web din\u00e0mics, aplicacions i serveis web. \u00c9s la tecnologia successora del que abans es coneixia com ASP, l'antiga tecnologia de Microsoft per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques. Com que funciona sobre la plataforma .NET de Microsoft, permet que es pugui desenvolupar en qualsevol dels llenguatges de programaci\u00f3 d'aquesta plataforma, Visual Basic .NET o C#. El m\u00e9s habitual \u00e9s veure-ho funcionar juntament amb el lloc web de Microsoft, IIS (Internet Information Server). A continuaci\u00f3, un exemple de p\u00e0gina web din\u00e0mica amb ASP.NET (desenvolupada en llenguatge C #) programant l'acci\u00f3 que passa en pr\u00e9mer un bot\u00f3 (apareix el text d'un formulari a la part final del web): protected void Button1_Click(object sender, EventArgs e) { string buf = TextBox1.Text; changed_text.InnerHtml = buf.ToUpper(); } < %@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\" Inherits=\"firstexample._Default\" %> <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> < html xmlns = \"http://www.w3.org/1999/xhtml\" > < head runat = \"server\" > < title > Untitled Page </ title > </ head > < body > < form id = \"form1\" runat = \"server\" > < div > < asp:TextBox ID = \"TextBox1\" runat = \"server\" style = \"width:224px\" > </ asp:TextBox > < asp:Button ID = \"Button1\" runat = \"server\" Text = \"Enter...\" style = \"width:85px\" onclick = \"Button1_Click\" /> < hr /> < h3 > Results: </ h3 > < span runat = \"server\" id = \"changed_text\" /> </ div > </ form > </ body > </ html >","title":"ASP.NET"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/4_execuci_de_codi_en_el_servidor_i_en_el_client.html/","text":"4. Execuci\u00f3 de codi en el servidor i en el client En el seg\u00fcent gr\u00e0fic es mostra un escenari on podem trobar codi que s\\'executa en el servidor (PHP) i en el client (javascript).","title":"4. Execuci\u00f3 de codi en el servidor i en el client"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/4_execuci_de_codi_en_el_servidor_i_en_el_client.html/#4-execucio-de-codi-en-el-servidor-i-en-el-client","text":"En el seg\u00fcent gr\u00e0fic es mostra un escenari on podem trobar codi que s\\'executa en el servidor (PHP) i en el client (javascript).","title":"4. Execuci\u00f3 de codi en el servidor i en el client"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/4_preparant_lentorn_de_desenvolupament.html/","text":"4. Preparant l'entorn de desenvolupament Per a poder provar els nostres llocs web necessitarem instal\u00b7lar una s\u00e8rie d'eines com s\u00f3n: el servidor web Apache, el m\u00f2dul PHP per a aquest servidor, el SGBD MySql, un front-end per al SGBD (PHPMyAdmin), etc. Per simplificar les coses optarem per instal\u00b7lar-ho mitjan\u00e7ant XAMPP, un paquet de programari lliure que cont\u00e9 el servidor HTTP Apache, la base de dades de MySQL i eines necess\u00e0ries per utilitzar el PHP i el llenguatge de programaci\u00f3 Perl. Pr\u00e0ctica 1: Instal\u00b7laci\u00f3 de XAMPP Descarreguem el paquet XAMPP per a la nostra m\u00e0quina (https://www.apachefriends.org/). Li donem permisos d'execuci\u00f3 a l'arxiu descarregat: sudo chmod +x xampp-linux-x64-7.3.9-0-installer.run Executem l'assistent d'instal\u00b7laci\u00f3 sudo ./xampp-linux-x64-7.3.9-0-installer.run En l'assistent d'instal\u00b7laci\u00f3, deixarem les opcions per defecte (excepte la qual ens parla de bitnami que la desmarcarem). Una vegada finalitzada la instal\u00b7laci\u00f3, el nostre XAMPP es trobar\u00e0 en el directori /opt/lampp Ara ja podem arrancar els serveis amb el seg\u00fcent comando: sudo /opt/lampp/lampp start Quan els arranquem, si obrim el navegador i ens anem a la url http://localhost, ens hauria d'apar\u00e8ixer la p\u00e0gina de benvinguda de XAMPP. Per a parar els serveis podem fer a\u00e7\u00f2: sudo /opt/lampp/xampp stop En qualsevol cas, \u00e9s molt m\u00e9s c\u00f2mode treballar amb el panell de control de XAMPP que podrem executar amb la seg\u00fcent ordre: sudo /opt/lampp/manager-linux-x64.run Veurem que s'inicia l'aplicaci\u00f3 que ens permet controlar els serveis de XAMPP.","title":"4. Preparant l'entorn de desenvolupament"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/4_preparant_lentorn_de_desenvolupament.html/#4-preparant-lentorn-de-desenvolupament","text":"Per a poder provar els nostres llocs web necessitarem instal\u00b7lar una s\u00e8rie d'eines com s\u00f3n: el servidor web Apache, el m\u00f2dul PHP per a aquest servidor, el SGBD MySql, un front-end per al SGBD (PHPMyAdmin), etc. Per simplificar les coses optarem per instal\u00b7lar-ho mitjan\u00e7ant XAMPP, un paquet de programari lliure que cont\u00e9 el servidor HTTP Apache, la base de dades de MySQL i eines necess\u00e0ries per utilitzar el PHP i el llenguatge de programaci\u00f3 Perl. Pr\u00e0ctica 1: Instal\u00b7laci\u00f3 de XAMPP Descarreguem el paquet XAMPP per a la nostra m\u00e0quina (https://www.apachefriends.org/). Li donem permisos d'execuci\u00f3 a l'arxiu descarregat: sudo chmod +x xampp-linux-x64-7.3.9-0-installer.run Executem l'assistent d'instal\u00b7laci\u00f3 sudo ./xampp-linux-x64-7.3.9-0-installer.run En l'assistent d'instal\u00b7laci\u00f3, deixarem les opcions per defecte (excepte la qual ens parla de bitnami que la desmarcarem). Una vegada finalitzada la instal\u00b7laci\u00f3, el nostre XAMPP es trobar\u00e0 en el directori /opt/lampp Ara ja podem arrancar els serveis amb el seg\u00fcent comando: sudo /opt/lampp/lampp start Quan els arranquem, si obrim el navegador i ens anem a la url http://localhost, ens hauria d'apar\u00e8ixer la p\u00e0gina de benvinguda de XAMPP. Per a parar els serveis podem fer a\u00e7\u00f2: sudo /opt/lampp/xampp stop En qualsevol cas, \u00e9s molt m\u00e9s c\u00f2mode treballar amb el panell de control de XAMPP que podrem executar amb la seg\u00fcent ordre: sudo /opt/lampp/manager-linux-x64.run Veurem que s'inicia l'aplicaci\u00f3 que ens permet controlar els serveis de XAMPP.","title":"4. Preparant l'entorn de desenvolupament"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/5_eines_de_desenvolupament.html/","text":"Per a programar en llenguatges encastats com PHP, ASP o Phython \u00e9s suficient amb un editor de text pla. No obstant sempre \u00e9s recomanable treballar en un entorn integrat de desenvolupament o IDE (acr\u00f2nim en angl\u00e8s de Integrated development environment ). Un IDE \u00e9s una eina inform\u00e0tica per al desenvolupament de programari de manera c\u00f2moda i r\u00e0pida. Aix\u00ed doncs \u00e9s un entorn de desenvolupament que agrupa diferents funcions en un sol programa, habitualment: editor de codi, compilador, depurador i un programa de disseny d\\'interf\u00edcie gr\u00e0fica. El principal avantatge \u00e9s que facilita la tasca del programador mentre que l'inconvenient m\u00e9s important \u00e9s que pot provocar mals h\u00e0bits a l'hora de programar o provocar errors que a priori comen\u00e7ant de zero no es produirien. Alguns dels IDE m\u00e9s emprats per al desenvolupament web s\u00f3n: Eclipse Netbeans Atom Sublime PHPStorm Brackets Durant les activitats anteriors has preparat el teu propi entorn de desenvolupament sobre una m\u00e0quina virtual (o una real) tal com s\\'ha explicat en les anotacions. Despr\u00e9s, has de crear un projecte php utilitzant PHPStorm i visualitzar la p\u00e0gina principal a trav\u00e9s del teu servidor XAMPP. {:.alert .alert-activity} {: .no_toc .nocount } ### Pr\u00e0ctica 2. Instal\u00b7laci\u00f3 de PHPStorm Al llarg del curs, crearem els nostres projectes utilitzant l\\'IDE PHPStorm. Aquesta eina \u00e9s de pagament, per\u00f2 podem utilitzar-la de forma gratu\u00efta per a projectes OpenSource i amb finalitats educatives. En aqueixos casos caldr\u00e0 sol\u00b7licitar la llic\u00e8ncia corresponent al fabricant del programari. Una vegada obtinguda la llic\u00e8ncia educativa pel professor, ser\u00e0 renovable anualment i podran utilitzar-la tots els alumnes del curs. \u00c9s una eina molt completa que ens permetr\u00e0 la integraci\u00f3 amb moltes de les funcionalitats que emprarem. #### Instal\u00b7lar PHPStorm Per a instal\u00b7lar l\\'IDE PHPStorm seguirem els seg\u00fcents passos: 1. Executarem\\ sudo snap install phpstorm \\--classic 2. Ens demanar\u00e0 si volem importar dades d\\'una instal\u00b7laci\u00f3 anterior, al que contestarem, \u00f2bviament, que no. 3. Ens demanar\u00e0 que acceptem la pol\u00edtica de privadesa. 4. En executar l\\'aplicaci\u00f3 per primera vegada ens demanar\u00e0 les dades de llic\u00e8ncia. Cada alumne s\\'haur\u00e0 de registrar utilitzant l\\'enlla\u00e7 que us passar\u00e0 el professor en classe. en pr\u00e9mer l\\'enlla\u00e7 ens redirigir\u00e0 a la p\u00e0gina web de jetbrains perqu\u00e8 ens registrem. Una vegada registrats, podrem accedir a l\\'aplicaci\u00f3 amb el nostre compte o amb el codi d\\'activaci\u00f3 que ens proporcionen. 5. Finalment, indicarem la configuraci\u00f3 inicial. #### Integrant l\\'executable de PHP PHPStorm disposa d\\'ajuda intel\u00b7ligent (IntelliJ IDEA). Perqu\u00e8 aquesta ajuda es corresponga amb la versi\u00f3 de php que tenim en el nostre XAMPP haurem de registrar l\\'executable de PHP de XAMPP en el nostre PHPStorm. Per a a\u00e7\u00f2 seguirem els seg\u00fcents passos: 1. En la pantalla d\\'inici anem a `Configure \u2013 Settings`. 2. En la llista de categories de l\\'esquerra anem a `Language & Frameworks - PHP`. 3. Necessitem indicar quin \u00e9s el nostre int\u00e8rpret. ja que la llista est\u00e0 buida anem a configurar un de la seg\u00fcent forma: 1. Fem clic en el bot\u00f3 \\... de la llista d\\'int\u00e8rprets 2. Premem el bot\u00f3 + de la cantonada superior esquerra per a afegir-ne un. 3. Li posem el nom PHP de XAMPP. 4. Indiquem instal\u00b7lat on nostre est\u00e0 XAMPP: `/opt/lampp/bin/php` 5. Immediatament ens indicar\u00e0 la versi\u00f3 de l\\'int\u00e8rpret que tenim instal\u00b7lat 6. Premem OK i seleccionem el nou interprete en la llista d\\'int\u00e8rprets. 7. Finalment, seleccionem en l\\'opci\u00f3 PHP *language level* aquell que es corresponga amb l\\'int\u00e8rpret que acabem de configurar. 8. Ara el nostre PHPStorm far\u00e0 \u00fas del PHP de XAMPP i utilitzar\u00e0 la versi\u00f3 de PHP que tenim instal\u00b7lada quan ens oferisca les ajudes. 9. Primer projecte amb PHPStorm Per a comen\u00e7ar a treballar amb PHPStorm anem a crear el nostre primer projecte PHP buit. Tingueu en compte que el projecte heu de crear-ho en el directori `/opt/lampp/htdocs` i que necessitem tenir permisos d\\'escriptura en aquest directori. **Compte!** Pot ser que ho h\u00e0gem instal\u00b7lat com `root`, mentre que quan executem PHPStorm ho fem amb l\\'usuari `dwes`, per tant, l\\'usuari `dwes` necessita poder escriure en aquest directori. Per a assegurar-nos que tenim permisos, anirem amb una finestra de terminal al directori `/opt/lampp` i executarem la seg\u00fcent ordre: `ls \u2013la htdocs` Aquesta ordre ens dir\u00e0 qui \u00e9s el propietari de la carpeta i quins permisos t\u00e9. En el cas que el propietari siga root executarem el seg\u00fcent comando: `sudo chown -hR dwes htdocs/` A\u00e7\u00f2 canviar\u00e0 el propietari a l\\'usuari `dwes`, amb el que tindrem perm\u00eds d\\'escriptura en aquest directori des de PHPStorm. Treballarem tenint els projectes en la mateixa carpeta. {:.alert .alert-activity } {: .nocount .no_toc } ### Pr\u00e0ctica 3: Prova d\\'Apache i PHP L\\'objectiu d\\'aquesta pr\u00e0ctica \u00e9s aprendre el maneig b\u00e0sic de l\\'entorn de desenvolupament PHPStorm creant una primera p\u00e0gina PHP que alhora servir\u00e0 per a comprovar la correcta instal\u00b7laci\u00f3 de XAMPP. Per a aconseguir aquest objectiu, seguirem els passos que s\\'indiquen a continuaci\u00f3: 1. Arrancar XAMPP 2. Iniciar el m\u00f2dul Apache 3. Executar PHPStorm 4. Crear un projecte buit amb `Create New > Project PHP Empty Project` 5. Posar al projecte el nom `practica1` i situar-lo en el directori `/opt/lampp/htdocs` . Amb a\u00e7\u00f2 es crea un directori de nom `practica1` dintre de `/opt/lampp/htdocs`. ![](assets/projecte.png) 6. En la finestra de l\\'esquerra (explorador de projectes) apareix el projecte creat. Dins d\\'ell crearem un nou fitxer PHP prement bot\u00f3 dret sobre el nom i seleccionant `New > PHP File` . Li posem de nom `index.php` . 7. En el fitxer creat introdu\u00efm les seg\u00fcents l\u00ednies de codi: <! doctype html > < html lang = \"\u00e9s\" > < head > < meta charset = \"utf-8\" > < title > Desenvolupament web en entorn servidor </ title > < meta name = \"description\" content = \"PHP, PHPStorm\" > < meta name = \"author\" content = \"Homer Simpson\" > </ head > < body > <? php phpinfo (); ?> </body> </html> 8. Canviem l\\'autor del document al nostre nom. 9. Obrim el navegador i teclegem en la barra d\\'adreces la url: 10. Apareixer\u00e0 una p\u00e0gina similar a la de la seg\u00fcent imatge: ![](assets/phpinfo.png)","title":"5. Eines de desenvolupament"},{"location":"01.%20Introducci%C3%B3%20a%20la%20programaci%C3%B3%20web/6_eines_per_a_depuraci_de_codi/","text":"En els entorns de desevolupament \u00e9s necessari disposar de ferramentes que ens permenten depurar les nostres aplicacions. Ja siga per arreglar errors com per millorar l'execuci\u00f3 del codi. Els entorns de desevolupament d'aplicacions d'escriptori solen disposar dels seus propis sistemes de depuraci\u00f3, en el cas dels llenguatges d'entorn servidor alguns ecosistemes com el de .Net de Microsoft l'inclouen. Per a PHP hi ha diverses ferramentes com XDebug o DBG. {: .alert .alert-activity } ### Pr\u00e0ctica 4. Instal\u00b7laci\u00f2 d'XDebug {: .no_toc .nocount} En el nostre cas utilitzarem el m\u00f2dul XDebug. A continuaci\u00f3, explicarem com instal\u00b7lar aquest m\u00f2dul. Abans de res comprovarem que no el tenim instal\u00b7lat, per a aix\u00f2 seguirem els seg\u00fcents passos: 1. Obrim la p\u00e0gina de benvinguda de XAMPP escrivint al navegador la URL [http://localhost](http://localhost). 2. A la part superior de la p\u00e0gina tenim una s\u00e8rie d'enlla\u00e7os, entre els que es troba un que diu `phpinfo`. Feu clic en aquest enlla\u00e7. 3. Se'ns mostrar\u00e0 la p\u00e0gina de configuraci\u00f3 del nostre m\u00f2dul php. Anem a seleccionar tots els continguts d\\'aquesta p\u00e0gina i els anem a copiar. 4. Obrirem al navegador la seg\u00fcent URL: . 5. En aquesta p\u00e0gina podrem comprovar quins m\u00f2duls tenim instal\u00b7lats en nostre m\u00f2dul PHP. Per a aix\u00f2, enganxarem els continguts que hem copiat pr\u00e8viament a la caixa de text que apareix i premerem Analyse mi phpinfo () output. 6. Ens apareixeran els resultats de la seg\u00fcent manera: ![XDebug](Screenshot_2019-09-14_Xdebug_Support__Tailored_Installation_Instructions.png) Com es pot observar, l'extensi\u00f3 XDebug no est\u00e0 instal\u00b7lada. Una altra informaci\u00f3 important que ens d\u00f3na \u00e9s que el nostre fitxer de configuraci\u00f3 del PHP el podem trobar en `/opt/lampp/etc/php.ini` i les extensions les tenim en `/opt/lampp/lib/php/extensions/no-debug-non-zts-20180731` *\u00c9s important que recordem aquestes dades.* Per instal\u00b7lar l\\'extensi\u00f3 XDebug seguirem les instruccions que ens indica la p\u00e0gina anterior per\u00f2 compte perqu\u00e8 cal fer algunes modificacions: 1. Descarregueu [la darrera versi\u00f3 d'Xdebug](https://xdebug.org/download) 2. Instal\u00b7leu els requisits previs per a la compilaci\u00f3 d'extensions PHP.\\ Instal\u00b7leu-lo amb el sistema Ubuntu amb: `apt-get install php-dev autoconf automake` 3. Desempaqueteu el fitxer descarregat amb `tar -xvzf xdebug-#.#.#.tgz` 4. Executar: `cd xdebug-#.#.#` 5. Executar: `/opt/lampp/bin/phpize` (hem canviat la ruta perqu\u00e8 execute el phpize de XAMPP). Com a part de la seva eixida hauria de mostrar: Configuring for: ... Zend Module Api No: ######## Zend Extension Api No: 320180731 Si no \u00e9s aix\u00ed, est\u00e0s utilitzant phpize incorrecta. Seguiu aquesta entrada de FAQ i passeu al pas seg\u00fcent. 6. Executar: `./configure --with-php-config=/opt/lampp/bin/php-config` (hem afegit la ruta del php-config de XAMPP). 7. Compilem les fonts: `make` 8. Executar: `sudo cp modules/xdebug.so /opt/lampp/lib/php/extensions/no-debug-non-zts-########` 9. Edita `/opt/lampp/etc/php.ini` i afegeix les seg\u00fcents l\u00ednies al final [xdebug] zend_extension = /opt/lampp/lib/php/extensions/no-debug-non-zts-########/xdebug.so xdebug.remote_enable=1 xdebug.remote_host=\"localhost\" xdebug.remote_port=9000 10. Reinicieu el servidor web Repeteix els passos del 1 al 5 inicials per comprovar que XDebug s\u00ed est\u00e0 instal\u00b7lat. ![](Screenshot_2019-09-14_Xdebug_Support__Tailored_Installation_Instructions(1).png) Despr\u00e9s caldr\u00e0 configurar PHPStorm per a connectar-lo a XDebug Integraci\u00f3 amb PHPStorm i instal\u00b7lar una extensi\u00f3 de Firefox Xdebug Helper o Chrome.","title":"6. Eines per a la depuraci\u00f3 de codi"}]}