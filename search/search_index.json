{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Desenvolupament Web en Entorn Servidor","title":"Inici"},{"location":"#desenvolupament-web-en-entorn-servidor","text":"","title":"Desenvolupament Web en Entorn Servidor"},{"location":"01-intro/","text":"Introducci\u00f3 a la programaci\u00f3 web Objectius Seleccionar les arquitectures i tecnologies de programaci\u00f3 web en entorn servidor, analitzant-ne les capacitats i caracter\u00edstiques pr\u00f2pies. Introduir els principals llenguatges i frameworks per al desenvolupament en l'entorn servidor. Caracteritzar i diferenciar els models d'execuci\u00f3 de codi en el servidor i en el client web. Identificar les principals tecnologies associades. Instal\u00b7lar i configurar l'entorn de treball que emprarem per al desenvolupament web. Visualitzar mitjan\u00e7ant el navegador una p\u00e0gina web html amb codi PHP encastat. Arquitectura d'una aplicaci\u00f3 web A difer\u00e8ncia de les aplicacions d'escriptori, que utilitzen els recursos d'un \u00fanic ordinador les aplicacions web s\u00f3n distribu\u00efdes, intervenen com a m\u00ednin dos equipos diferents: el client i el servidor. La comunicaci\u00f3 \u00e9s du a terme mitjan\u00e7ant un protocol, en el nostre cas el protocol HTTP, base de la WWW. Elements: navegador, servidor, protocol HTTP i HTML El protocol de transfer\u00e8ncia d'hipertext (HTTP) \u00e9s un protocol client-servidor molt senzill que articula els intercanvis d'informaci\u00f3 entre els clients web (navegadors) i els servidors HTTP. HTTP es basa en operacions senzilles de sol\u00b7licitud/resposta. Quan un client estableix una connexi\u00f3 amb un servidor i envia un missatge amb les dades de la sol\u00b7licitud, el servidor respon amb un missatge similar que cont\u00e9 l'estat de l'operaci\u00f3 i el seu resultat de la sol\u00b7licitud. Totes les operacions poden adjuntar un objecte o recurs sobre el qual actuen; cada objecte web (document HTML, arxiu multim\u00e8dia o aplicaci\u00f3 CGI) \u00e9s conegut pel seu localitzador uniforme de recursos (URL, Uniform Resource Locator ). Els recursos poden ser arxius, el resultat de l'execuci\u00f3 d'un programa, una consulta a una base de dades, la traducci\u00f3 autom\u00e0tica d'un document, etc. HTTP \u00e9s un protocol sense estat , \u00e9s a dir, no guarda cap informaci\u00f3 sobre connexions anteriors. El desenvolupament d'aplicacions web freq\u00fcentment necessita mantenir estat. Per aix\u00f2 s'utilitzen les galetes ( cookies ), \u00e9s a dir, la informaci\u00f3 que un servidor pot emmagatzemar en el sistema client. Aix\u00f2 permet que les aplicacions web institueixin la noci\u00f3 de \"sessi\u00f3\", i, alhora, permet rastrejar usuaris, ja que les galetes es poden emmagatzemar en el client durant un temps indeterminat. Amb la intenci\u00f3 de con\u00e8ixer amb m\u00e9s profunditat el protocol HTTP podem avaluar en qu\u00e8 consisteix una transacci\u00f3 HTTP. Cada vegada que un client fa una petici\u00f3 a un servidor, s'executen un seguit d'accions: Un usuari accedeix a una adre\u00e7a d'Internet (URL) seleccionant un enlla\u00e7 d'un document HTML o introduint-la directament a la barra de navegaci\u00f3 d'un navegador web des de la perspectiva del client web. El client web descodifica l'adre\u00e7a d'Internet (URL) separant-ne les diferents parts. \u00c9s aix\u00ed com s'identifiquen el protocol d'acc\u00e9s, el node expressat amb el nom de domini o la seua adre\u00e7a IP, el possible port opcional (el valor per defecte \u00e9s el 80) i l'objecte del servidor requerit. S'obre una connexi\u00f3 TCP/IP amb el servidor cridant el port TCP corresponent. Es fa la petici\u00f3. En conseq\u00fc\u00e8ncia, s'envien l'ordre necess\u00e0ria (GET, POST, HEAD, etc.), l'adre\u00e7a de l'objecte requerit (el contingut de l'adre\u00e7a d'Internet del servidor), la versi\u00f3 del protocol HTTP utilitzada (en la major part de les ocasions \u00e9s HTTP/1.0) i un conjunt variable d'informaci\u00f3 que inclou dades sobre les capacitats del navegador web, dades opcionals per al servidor, etc. El servidor localitza el recurs sol\u00b7licitat i torna la resposta al client. Aquesta resposta consisteix en un codi d'estat i el tipus de dada amb extensions multiprop\u00f2sit de correu d'Internet (MIME, Multipurpose Internet Mail Extension) de la informaci\u00f3 de tornada, seguit de la mateixa informaci\u00f3. El client formata i mostra el recurs rebut. Es tanca la connexi\u00f3 TCP. Aquest proc\u00e9s es repeteix en cada acc\u00e9s que es fa\u00e7a al servidor HTTP. Per exemple, si es recull un document HTML que cont\u00e9 quatre imatges, el proc\u00e9s de transici\u00f3 mostrat amb anterioritat es repeteix cinc vegades, \u00e9s a dir, una pel document HTML i quatre per les imatges. Si el recurs sol\u00b7licitat \u00e9s un programa (CGI, ASP.NET, PHP, etc.) el servidor HTTP redirigir\u00e0 la petici\u00f3 a la llibreria o int\u00e8rpret adequat que executar\u00e0 el programa i tornar\u00e0 el control al servidor web. Format de les URL La sintaxi general de les URL consisteix en una seq\u00fc\u00e8ncia jer\u00e0rquica de 5 components: URI = scheme:[//authority]path[?query][#fragment] on el component authoriry es deivideix en tres subcomponents: authority = [userinfo@]host[:port] El model client/servidor El model client-servidor \u00e9s aquell on tots els clients estan connectats a un servidor on es centralitzen els diferents recursos. Aquests recursos estan a disposici\u00f3 dels clients cada cop que els sol\u00b7liciten. Aix\u00f2 fa que totes les gestions que es realitzen es concentren en el servidor, que disposa dels requeriments dels clients amb prioritat, els arxius que s\u00f3n d'\u00fas p\u00fablic i els restringits, els arxius de nom\u00e9s lectura, els que poden ser modificats, etc. En el model client/servidor, el dispositiu que sol\u00b7licita informaci\u00f3 es denomina client i el dispositiu que respon la sol\u00b7licitud es denomina servidor. Els processos de client i servidor es consideren una part de la capa d'aplicaci\u00f3. El client comen\u00e7a l'intercanvi sol\u00b7licitant les dades al servidor, que respon enviant un o m\u00e9s blocs de dades al client. Els protocols de capa d'aplicaci\u00f3 descriuen el format de les sol\u00b7licituds i respostes entre clients i servidor. A m\u00e9s de la transfer\u00e8ncia real de dades, aquest intercanvi pot requerir informaci\u00f3 addicional, com l'autentificaci\u00f3 de l'usuari i la identificaci\u00f3 d'un arxiu de dades per transferir. Encara que les dades generalment es descriuen com un flux del servidor al client, algunes dades sempre flueixen del client al servidor. El flux de dades pot ser el mateix en les dues direccions o fins i tot ser major en la direcci\u00f3 que va del client al servidor. Per exemple, un client pot transferir un arxiu al servidor amb finalitats d'emmagatzemament. La transfer\u00e8ncia de dades d'un client a un servidor es coneix com a pujada i la de les dades d'un servidor a un client, baixada. P\u00e0gines web est\u00e0tiques i din\u00e0miques P\u00e0gines web est\u00e0tiques Les p\u00e0gines web est\u00e0tiques s\u00f3n aquelles on el seu contingut no varia per la qual cosa mostraran la mateixa informaci\u00f3 cada vegada que es carreguen. S\u00f3n les p\u00e0gines creades en el llenguatge HTML. Nom\u00e9s canvien si el programador web les modifica. P\u00e0gines web din\u00e0miques Les p\u00e0gines web din\u00e0miques s\u00f3n p\u00e0gines el contingut de les quals varia a partir d'informaci\u00f3 continguda en una BBDD. El contingut mostrat pot canviar segons l'usuari connectat, el navegador que s'utiltze o accions anteriors dels usuaris, etc. Aquest tipus de p\u00e0gines s'han de realitzar mitjan\u00e7at un llenguatge de programaci\u00f3. Execuci\u00f3 de codi en el client i en el servidor En el seg\u00fcent gr\u00e0fic es mostra un escenari on podem trobar codi que s'executa en el servidor (PHP) i en el client (javascript). # 2. Tecnologies per a programaci\u00f3 web del costat del servidor Model de desenvolupament en 3 capes. Des d'un punt de vista de desenvolupament una aproximaci\u00f3 m\u00e9s detallada al model client-servidor \u00e9s el que es coneix com a model en 3 capes . \u00c9s un model on es mostra m\u00e9s en detall com es distribueix el programari que participa en qualsevol desenvolupament web. Segueix estant present l'arquitectura client-servidor (tot es basa en ella) per\u00f2 apareixen m\u00e9s detalls com el programari utilitzat en cada un dels dos actors i com interactuen les diferents tecnologies o aplicacions. Per comprendre millor que \u00e9s el model de desenvolupament de 3 capes podem tirar un ull al seg\u00fcent esquema on es mostra cadascuna d'aquestes capes i que s'encarrega cadascuna d'elles: Capa de presentaci\u00f3: \u00c9s la capa on l'aplicaci\u00f3 es mostra a l'usuari. B\u00e0sicament \u00e9s la GUI ( Graphical User Interface, interf\u00edcie gr\u00e0fica d'usuari ). En el cas d'una aplicaci\u00f3 web seria el codi HTML que es carrega directament al navegador web. En qualsevol cas, s'executa directament en l'equip del client. Capa de negoci: \u00c9s la capa interm\u00e8dia on es porta a terme tota la l\u00f2gica de l'aplicaci\u00f3. Sempre s'executar\u00e0 en el costat servidor. Aquesta capa, despr\u00e9s de realitzar tots els c\u00e0lculs i / o operacions sobre les dades, genera el codi HTML que ser\u00e0 presentat a l'usuari en la capa seg\u00fcent. Capa de dades: \u00c9s la capa que emmagatzema les dades. B\u00e0sicament, en condicions normals, fa refer\u00e8ncia al propi SGBD que \u00e9s l'encarregat d'emmagatzemar les dades. Depenent de l'arquitectura de l'aplicaci\u00f3, aquesta capa i la de negoci es poden trobar f\u00edsicament en el mateix equip, encara que tamb\u00e9 \u00e9s possible que s'hagin de separar per q\u00fcestions de rendiment. La capa de dades serveix totes la informaci\u00f3 necess\u00e0ria a la capa de negoci per dur a terme les seves operacions. Si ens imaginem una botiga online, la capa de dades emmagatzema tota la informaci\u00f3 en una base de dades (usuaris, comandes, articles, ofertes,...), La capa de negoci ha d'accedir a aquesta informaci\u00f3 i, despr\u00e9s processar una comanda, per exemple, ha de presentar el resultat final a l'usuari en el navegador, que \u00e9s la capa de presentaci\u00f3. I si ens centrem en un cas concret amb programari i tecnologies ja definits, un model de 3 capes podria ser el seg\u00fcent: Navegador web: En aquest cas, Mozilla Firefox, Internet Explorer o Google Chrome podrien ser qualsevol de les aplicacions que ocuparien aquesta capa Apache + PHP / IIS + ASP: Un servidor web acompanyat del seu corresponent llenguatge de programaci\u00f3 web permeten desenvolupar la part que ocupa la capa de negoci. Tamb\u00e9 podr\u00edem col\u00b7locar la combinaci\u00f3 Apache Tomcat + Servlets MySQL / PostgreSQL: Finalment a la capa de dades podem posar qualsevol SGBD, com poden ser MySQL o PostgreSQL. L'avantatge principal d'aquest model \u00e9s que el desenvolupament es pot dur a terme en diversos nivells i, en cas que sobrevinga algun canvi, nom\u00e9s afectar\u00e0 el nivell requerit sense haver de revisar entre el codi font d'altres m\u00f2duls, at\u00e8s que s'haur\u00e0 redu\u00eft el acoblament inform\u00e0tic fins a una interf\u00edcie de pas de missatges. ::: Front-end, Back-end, Full stack Tamb\u00e9 tenint en compte en quin costat se situen les tecnologies i per a qu\u00e8 s'utilitzen aquestes, actualment es parla molt de 3 perfils diferenciats en l'\u00e0mbit del desenvolupament web: Front-end: \u00c9s la part del desenvolupament que s'encarrega del disseny i maquetaci\u00f3 de l'aplicaci\u00f3 web utilitzant tecnologies com HTML, CSS i Javascript (i els seus frameworks). En aquest cas s'ha de preocupar tamb\u00e9 de la correcta presentaci\u00f3 en qualsevol tipus de dispositiu i fins i tot del posicionament en cercadors Back-end: \u00c9s la part del desenvolupament que s'encarrega del costat servidor utilitzant tecnologies com PHP, JSP i Python. Tamb\u00e9 s'encarrega de l'administraci\u00f3 del servidor d'aplicacions i la base de dades. Full stack: En un perfil que engloba els dos anteriors. En aquest cas el desenvolupador potser no \u00e9s un expert de cap tecnologia concreta per\u00f2 t\u00e9 amplis coneixements de tot el conjunt i \u00e9s capa\u00e7 de col\u00b7laborar en qualsevol de les parts. Servidors web i servidors d'aplicacions Aix\u00ed com les aplicacions d'escriptori s'executen directament sobre el sistema operatiu, les aplicacions web necessiten d'una eina addicional que permeti desplegar-les per a la seva posada en marxa. Parlem de servidors web i servidors d'aplicacions , respectivament. Qu\u00e8 \u00e9s un servidor web? Un servidor web \u00e9s una aplicaci\u00f3 que rep una petici\u00f3 HTTP (normalment a trav\u00e9s d'un navegador web) i retorna la p\u00e0gina web sol\u00b7licitada (escrita en llenguatge HTML i podent contenir codi Javascript encastat) perqu\u00e8 aquesta sigua interpretada i visualitzada pel navegador de qui va realitzar la sol\u00b7licitud (l'usuari). Qu\u00e8 \u00e9s un servidor d'aplicacions? Un servidor d'aplicacions \u00e9s un servidor que permet l'execuci\u00f3 d'aplicacions web. Exemples Apache Apache \u00e9s un dels servidors web m\u00e9s coneguts. \u00c9s programari lliure i multiplataforma, encara que aproximadament el 90% dels servidors Apache s'executen actualment en entorns Linux ja que \u00e9s el servidor preferit per a aquesta plataforma. \u00c9s molt modular el que permet incorporar caracter\u00edstiques un cop instal\u00b7lat i posat en marxa. Aix\u00f2 li fa tamb\u00e9 molt flexible i pot donar servei a webs escrites en els llenguatges de programaci\u00f3 web m\u00e9s estesos (com PHP, Python, ASP,...) A trav\u00e9s del m\u00f2dul corresponent. Apache Tomcat Apache Tomcat \u00e9s un servidor d'aplicacions que funciona com a contenidor de Servlets de Java. Actualment \u00e9s capa\u00e7 d'implementar diverses especificacions de Java EE com Servlets i JSP (Java Server Pages) i m\u00e9s proporciona un servidor web pur perqu\u00e8 es fa\u00e7a servir en combinaci\u00f3 amb l'entorn Java. WSGI ( Web Server Gateway Interface ) WSGI \u00e9s una interf\u00edcie que defineix com es comunica un servidor web amb aplicacions web o frameworks escrits en Python. Llenguatges PHP PHP (PHP Hypertext Preprocessor) \u00e9s un llenguatge de programaci\u00f3 de costat servidor dissenyat principalment per al desenvolupament web. PHP s'utilitza com a llenguatge de script embegut en p\u00e0gines HTML i funciona, normalment, com un m\u00f2dul del servidor web (per exemple, a Apache). El servidor web combina els resultats d'executar els scripts PHP amb l'HTML al qual va encastat i genera la p\u00e0gina web resultant per al navegador. Actualment PHP funciona pr\u00e0cticament amb qualsevol servidor web i en qualsevol Sistema Operatiu existents, i gaireb\u00e9 amb qualsevol SGBD en cas que necessitem utilitzar una base de dades. Tot i aix\u00f2, el m\u00e9s habitual \u00e9s veure-ho formant el que es coneix com una arquitectura LAMP (Linux, Apache, MySQL i PHP), \u00e9s a dir, funcionant sobre un sistema operatiu Linux, executant-com un m\u00f2dul del servidor web Apache i utilitzant a MySQL com SGBD per emmagatzemar la informaci\u00f3 en cas que es requereixi una base de dades. El llenguatge PHP va ser dissenyat per Rasmus Lerdorf i ara es mant\u00e9 per una comunitat de desenvolupadors, a m\u00e9s \u00e9s de codi obert. A continuaci\u00f3, un fragment d'una p\u00e0gina web din\u00e0mica escrita amb PHP on es pot apreciar com s'incrusta el codi juntament amb l'HTML de la p\u00e0gina: JSP / Servlets JavaServer Pages (tamb\u00e9 conegut com JSP) \u00e9s una tecnologia creada per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques del costat servidor. Igual que PHP, el seu codi s'escriu encastat juntament amb l'HTML de la p\u00e0gina web i \u00e9s el servidor d'aplicacions, en aquest cas, qui ha de processar-per generar la p\u00e0gina web resultant, en HTML. D'altra banda, Java Servlets \u00e9s una tecnologia que tamb\u00e9 es pot utilitzar per crear contingut web din\u00e0mic per\u00f2 que a m\u00e9s est\u00e9n la seva funcionalitat a la possibilitat de connectar aquestes webs din\u00e0miques amb un altre contingut accessible a trav\u00e9s d'Internet. De vegades s'utilitza juntament amb JSP per crear aplicacions web m\u00e9s complexes. Totes dues s\u00f3n tecnologies desenvolupades per Sun Microsystems i propietat ara d'Oracle, despr\u00e9s d'adquirir aquesta \u00faltima a la primera fa ja alguns anys. Python El llenguatge Python va ser dissenyat per Guido van Rossum i ara es mant\u00e9 gr\u00e0cies a una comunitat de desenvolupadors, i \u00e9s codi obert. Exemple de codi escrit amb Python. En aquest cas utilitzant el framework Django per al desenvolupament d'aplicacions web: < h1 > Mis pel\u00edculas < /h1> <a href=\"#\">+</ a > { % if lista_peliculas %} <ul> {% for pelicula in lista_peliculas %} < li >< a href = \"{% url 'pelicula' pelicula.id %}\" > {{ pelicula . titulo }} < /a></ li > { % endfor %} </ul> {% else %} < p > No hay pel\u00edculas disponibles < /p> {% endif %} Separada del controlador: from django.shortcuts import render . . . def index ( request ): lista_peliculas = Pelicula . objects . all () context = { 'lista_peliculas' : lista_peliculas } return render ( request , 'mispeliculas/index.html' , context ) ASP.NET ASP.NET \u00e9s una tecnologia, creada per Microsoft, per al desenvolupament de lloc web din\u00e0mics, aplicacions i serveis web. \u00c9s la tecnologia successora del que abans es coneixia com ASP, l'antiga tecnologia de Microsoft per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques. Com que funciona sobre la plataforma .NET de Microsoft, permet que es pugui desenvolupar en qualsevol dels llenguatges de programaci\u00f3 d'aquesta plataforma, Visual Basic .NET o C#. El m\u00e9s habitual \u00e9s veure-ho funcionar juntament amb el lloc web de Microsoft, IIS (Internet Information Server). A continuaci\u00f3, un exemple de p\u00e0gina web din\u00e0mica amb ASP.NET (desenvolupada en llenguatge C #) programant l'acci\u00f3 que passa en pr\u00e9mer un bot\u00f3 (apareix el text d'un formulari a la part final del web): protected void Button1_Click(object sender, EventArgs e) { string buf = TextBox1.Text; changed_text.InnerHtml = buf.ToUpper(); } < %@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\" Inherits=\"firstexample._Default\" %> <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> < html xmlns = \"http://www.w3.org/1999/xhtml\" > < head runat = \"server\" > < title > Untitled Page </ title > </ head > < body > < form id = \"form1\" runat = \"server\" > < div > < asp:TextBox ID = \"TextBox1\" runat = \"server\" style = \"width:224px\" > </ asp:TextBox > < asp:Button ID = \"Button1\" runat = \"server\" Text = \"Enter...\" style = \"width:85px\" onclick = \"Button1_Click\" /> < hr /> < h3 > Results: </ h3 > < span runat = \"server\" id = \"changed_text\" /> </ div > </ form > </ body > </ html > Preparant l'entorn de desenvolupament Per a poder provar els nostres llocs web necessitarem instal\u00b7lar una s\u00e8rie d'eines com s\u00f3n: el servidor web Apache, el m\u00f2dul PHP per a aquest servidor, el SGBD MySql, un front-end per al SGBD (PHPMyAdmin), etc. Per simplificar les coses optarem per instal\u00b7lar-ho mitjan\u00e7ant XAMPP, un paquet de programari lliure que cont\u00e9 el servidor HTTP Apache, la base de dades de MySQL i eines necess\u00e0ries per utilitzar el PHP i el llenguatge de programaci\u00f3 Perl. Pr\u00e0ctica 1: Instal\u00b7laci\u00f3 de XAMPP Descarreguem el paquet XAMPP per a la nostra m\u00e0quina (https://www.apachefriends.org/). Li donem permisos d'execuci\u00f3 a l'arxiu descarregat: sudo chmod +x xampp-linux-x64-7.3.9-0-installer.run Executem l'assistent d'instal\u00b7laci\u00f3 sudo ./xampp-linux-x64-7.3.9-0-installer.run En l'assistent d'instal\u00b7laci\u00f3, deixarem les opcions per defecte (excepte la qual ens parla de bitnami que la desmarcarem). Una vegada finalitzada la instal\u00b7laci\u00f3, el nostre XAMPP es trobar\u00e0 en el directori /opt/lampp Ara ja podem arrancar els serveis amb el seg\u00fcent comando: sudo /opt/lampp/lampp start Quan els arranquem, si obrim el navegador i ens anem a la url http://localhost, ens hauria d'apar\u00e8ixer la p\u00e0gina de benvinguda de XAMPP. Per a parar els serveis podem fer a\u00e7\u00f2: sudo /opt/lampp/xampp stop En qualsevol cas, \u00e9s molt m\u00e9s c\u00f2mode treballar amb el panell de control de XAMPP que podrem executar amb la seg\u00fcent ordre: sudo /opt/lampp/manager-linux-x64.run Veurem que s'inicia l'aplicaci\u00f3 que ens permet controlar els serveis de XAMPP. Eines de desevolupament Per a programar en llenguatges encastats com PHP, ASP o Phython \u00e9s suficient amb un editor de text pla. No obstant sempre \u00e9s recomanable treballar en un entorn integrat de desenvolupament o IDE (acr\u00f2nim en angl\u00e8s de Integrated development environment ). Un IDE \u00e9s una eina inform\u00e0tica per al desenvolupament de programari de manera c\u00f2moda i r\u00e0pida. Aix\u00ed doncs \u00e9s un entorn de desenvolupament que agrupa diferents funcions en un sol programa, habitualment: editor de codi, compilador, depurador i un programa de disseny d'interf\u00edcie gr\u00e0fica. El principal avantatge \u00e9s que facilita la tasca del programador mentre que l'inconvenient m\u00e9s important \u00e9s que pot provocar mals h\u00e0bits a l'hora de programar o provocar errors que a priori comen\u00e7ant de zero no es produirien. Alguns dels IDE m\u00e9s emprats per al desenvolupament web s\u00f3n: Eclipse Netbeans Atom Sublime PHPStorm Brackets Durant les activitats anteriors has preparat el teu propi entorn de desenvolupament sobre una m\u00e0quina virtual (o una real) tal com s'ha explicat en les anotacions. Despr\u00e9s, has de crear un projecte php utilitzant PHPStorm i visualitzar la p\u00e0gina principal a trav\u00e9s del teu servidor XAMPP. Al llarg del curs, crearem els nostres projectes utilitzant l'IDE PHPStorm. Aquesta eina \u00e9s de pagament, per\u00f2 podem utilitzar-la de forma gratu\u00efta per a projectes OpenSource i amb finalitats educatives. En aqueixos casos caldr\u00e0 sol\u00b7licitar la llic\u00e8ncia corresponent al fabricant del programari. Una vegada obtinguda la llic\u00e8ncia educativa pel professor, ser\u00e0 renovable anualment i podran utilitzar-la tots els alumnes del curs. \u00c9s una eina molt completa que ens permetr\u00e0 la integraci\u00f3 amb moltes de les funcionalitats que emprarem. Instal\u00b7lar PHPStorm Per a instal\u00b7lar l'IDE PHPStorm seguirem els seg\u00fcents passos: Executarem sudo snap install phpstorm --classic Ens demanar\u00e0 si volem importar dades d'una instal\u00b7laci\u00f3 anterior, al que contestarem, \u00f2bviament, que no. Ens demanar\u00e0 que acceptem la pol\u00edtica de privadesa. En executar l'aplicaci\u00f3 per primera vegada ens demanar\u00e0 les dades de llic\u00e8ncia. Cada alumne s'haur\u00e0 de registrar utilitzant l'enlla\u00e7 que us passar\u00e0 el professor en classe. en pr\u00e9mer l'enlla\u00e7 ens redirigir\u00e0 a la p\u00e0gina web de jetbrains perqu\u00e8 ens registrem. Una vegada registrats, podrem accedir a l'aplicaci\u00f3 amb el nostre compte o amb el codi d'activaci\u00f3 que ens proporcionen. Finalment, indicarem la configuraci\u00f3 inicial. Integrant l'executable de PHP PHPStorm disposa d'ajuda intel\u00b7ligent (IntelliJ IDEA). Perqu\u00e8 aquesta ajuda es corresponga amb la versi\u00f3 de php que tenim en el nostre XAMPP haurem de registrar l'executable de PHP de XAMPP en el nostre PHPStorm. Per a a\u00e7\u00f2 seguirem els seg\u00fcents passos: En la pantalla d'inici anem a Configure \u2013 Settings . En la llista de categories de l'esquerra anem a Language & Frameworks - PHP . Necessitem indicar quin \u00e9s el nostre int\u00e8rpret. ja que la llista est\u00e0 buida anem a configurar un de la seg\u00fcent forma: Fem clic en el bot\u00f3 ... de la llista d'int\u00e8rprets Premem el bot\u00f3 + de la cantonada superior esquerra per a afegir-ne un. Li posem el nom PHP de XAMPP. Indiquem instal\u00b7lat on nostre est\u00e0 XAMPP: /opt/lampp/bin/php Immediatament ens indicar\u00e0 la versi\u00f3 de l'int\u00e8rpret que tenim instal\u00b7lat Premem OK i seleccionem el nou interprete en la llista d'int\u00e8rprets. Finalment, seleccionem en l'opci\u00f3 PHP language level aquell que es corresponga amb l'int\u00e8rpret que acabem de configurar. Ara el nostre PHPStorm far\u00e0 \u00fas del PHP de XAMPP i utilitzar\u00e0 la versi\u00f3 de PHP que tenim instal\u00b7lada quan ens oferisca les ajudes. Primer projecte amb PHPStorm Per a comen\u00e7ar a treballar amb PHPStorm anem a crear el nostre primer projecte PHP buit. Tingueu en compte que el projecte heu de crear-ho en el directori /opt/lampp/htdocs i que necessitem tenir permisos d'escriptura en aquest directori. Compte! Pot ser que ho h\u00e0gem instal\u00b7lat com root , mentre que quan executem PHPStorm ho fem amb l'usuari dwes , per tant, l'usuari dwes necessita poder escriure en aquest directori. Per a assegurar-nos que tenim permisos, anirem amb una finestra de terminal al directori /opt/lampp i executarem la seg\u00fcent ordre: ls \u2013la htdocs Aquesta ordre ens dir\u00e0 qui \u00e9s el propietari de la carpeta i quins permisos t\u00e9. En el cas que el propietari siga root executarem la seguent ordre: sudo chown -hR dwes htdocs/ A\u00e7\u00f2 canviar\u00e0 el propietari a l'usuari dwes , amb el que tindrem perm\u00eds d'escriptura en aquest directori des de PHPStorm. Treballarem tenint els projectes en la mateixa carpeta. Pr\u00e0ctica 2. Instal\u00b7laci\u00f3 de PHPStorm Seguint les instruccions anteriors instal\u00b7la i configura PHP Storm. Creaci\u00f3 de projectes i comprovaci\u00f3 de la instal\u00b7laci\u00f3 de PHP Seguirem els passos que s'indiquen a continuaci\u00f3: Arrancar XAMPP Iniciar el m\u00f2dul Apache Executar PHPStorm Crear un projecte buit amb Create New > Project PHP Empty Project Posar al projecte el nom practica1 i situar-lo en el directori /opt/lampp/htdocs . Amb a\u00e7\u00f2 es crea un directori de nom practica1 dintre de /opt/lampp/htdocs . En la finestra de l'esquerra (explorador de projectes) apareix el projecte creat. Dins d'ell crearem un nou fitxer PHP prement bot\u00f3 dret sobre el nom i seleccionant New > PHP File . Li posem de nom index.php . En el fitxer creat introdu\u00efm les seg\u00fcents l\u00ednies de codi: <! doctype html > < html lang = \"es\" > < head > < meta charset = \"utf-8\" > < title > Desenvolupament web en entorn servidor </ title > < meta name = \"description\" content = \"PHP, PHPStorm\" > < meta name = \"author\" content = \"Homer Simpson\" > </ head > < body > <? php phpinfo (); ?> </body> </html> Canviem l'autor del document al nostre nom. Obrim el navegador i teclegem en la barra d'adreces la url: http://localhost/practica1 Apareixer\u00e0 una p\u00e0gina similar a la de la seg\u00fcent imatge: Pr\u00e0ctica 3: Prova d'Apache i PHP L'objectiu d'aquesta pr\u00e0ctica \u00e9s aprendre el maneig b\u00e0sic de l'entorn de desenvolupament PHPStorm creant una primera p\u00e0gina PHP que alhora servir\u00e0 per a comprovar la correcta instal\u00b7laci\u00f3 de XAMPP. Seguint les instruccions anterior crea projecte i prova'l. Eines per a la depuraci\u00f3 de codi En els entorns de desevolupament \u00e9s necessari disposar de ferramentes que ens permenten depurar les nostres aplicacions. Ja siga per arreglar errors com per millorar l'execuci\u00f3 del codi. Els entorns de desevolupament d'aplicacions d'escriptori solen disposar dels seus propis sistemes de depuraci\u00f3, en el cas dels llenguatges d'entorn servidor alguns ecosistemes com el de .Net de Microsoft l'inclouen. Per a PHP hi ha diverses ferramentes com XDebug o DBG. Instal\u00b7laci\u00f3 d'XDEBUG 3.0 XDebug 3.0 Recentment s'ha publicat XDebug 3.0, versi\u00f3 que cobreix aquest document. Si busqueu informaci\u00f3, tingau en compte en quina versi\u00f3 treballeu. A continuaci\u00f3, explicarem com instal\u00b7lar el m\u00f2dul XDebug 3 en un entorn basat en XAMPP. Abans de res comprovarem que no el tenim instal\u00b7lat, per a aix\u00f2 seguirem els seg\u00fcents passos: Obrim la p\u00e0gina de benvinguda de XAMPP escrivint al navegador la URL http://localhost . A la part superior de la p\u00e0gina tenim una s\u00e8rie d'enlla\u00e7os, entre els que es troba un que diu phpinfo . Feu clic en aquest enlla\u00e7. Se'ns mostrar\u00e0 la p\u00e0gina de configuraci\u00f3 del nostre m\u00f2dul php. Anem a seleccionar tots els continguts d'aquesta p\u00e0gina i els anem a copiar. Obrirem al navegador la seg\u00fcent URL: http://xdebug.org/wizard.php . En aquesta p\u00e0gina podrem comprovar quins m\u00f2duls tenim instal\u00b7lats en nostre m\u00f2dul PHP. Per a aix\u00f2, enganxarem els continguts que hem copiat pr\u00e8viament a la caixa de text que apareix i premerem Analyse mi phpinfo() output . Ens apareixeran un resultats semblants a aquests: Com es pot observar, l'extensi\u00f3 XDebug no est\u00e0 instal\u00b7lada. Una altra informaci\u00f3 important que ens d\u00f3na \u00e9s que el nostre fitxer de configuraci\u00f3 del PHP el podem trobar en /opt/lampp/etc/php.ini i les extensions les tenim en /opt/lampp/lib/php/extensions/no-debug-non-zts-20180731 \u00c9s important que recordem aquestes dades. Per instal\u00b7lar l'extensi\u00f3 XDebug seguirem les instruccions que ens indica la p\u00e0gina anterior per\u00f2 compte perqu\u00e8 cal fer algunes modificacions: Important Els car\u00e0cters # representen valors que depenen de cada instal\u00b7laci\u00f3, aix\u00ed que cal tindre-ho en compte en executar-ho. Descarregueu la darrera versi\u00f3 d'Xdebug Instal\u00b7leu els requisits previs per a la compilaci\u00f3 d'extensions PHP.\\ Instal\u00b7leu-lo amb el sistema Ubuntu amb: apt-get install php-dev autoconf automake Desempaqueteu el fitxer descarregat amb tar -xvzf xdebug-#.#.#.tgz Executar: cd xdebug-#.#.# Executar: /opt/lampp/bin/phpize (hem canviat la ruta perqu\u00e8 execute el phpize de XAMPP). Com a part de la seva eixida hauria de mostrar: Configuring for: ... Zend Module Api No: ######## Zend Extension Api No: ######### Si no \u00e9s aix\u00ed, est\u00e0s utilitzant phpize incorrecta. Seguiu aquesta entrada de FAQ i passeu al pas seg\u00fcent. Executar: ./configure --with-php-config=/opt/lampp/bin/php-config (hem afegit la ruta del php-config de XAMPP). Compilem les fonts: make Executar: sudo cp modules/xdebug.so /opt/lampp/lib/php/extensions/no-debug-non-zts-######## Edita /opt/lampp/etc/php.ini i afegeix les seg\u00fcents l\u00ednies al final [xdebug] zend_extension=xdebug Reinicieu el servidor web Repeteix els passos del 1 al 5 inicials per comprovar que XDebug s\u00ed est\u00e0 instal\u00b7lat. Despr\u00e9s caldr\u00e0 configurar PHPStorm per a connectar-lo a XDebug Integraci\u00f3 amb PHPStorm i instal\u00b7lar una extensi\u00f3 de Firefox Xdebug Helper o Chrome. Pr\u00e0ctica 4. Instal\u00b7laci\u00f2 d'XDebug Seguint les instruccions anteriors instal\u00b7la i configura XDEBUG i connecta'l a PHP Storm.","title":"1.- Introducci\u00f3 a la programaci\u00f3 Web"},{"location":"01-intro/#introduccio-a-la-programacio-web","text":"Objectius Seleccionar les arquitectures i tecnologies de programaci\u00f3 web en entorn servidor, analitzant-ne les capacitats i caracter\u00edstiques pr\u00f2pies. Introduir els principals llenguatges i frameworks per al desenvolupament en l'entorn servidor. Caracteritzar i diferenciar els models d'execuci\u00f3 de codi en el servidor i en el client web. Identificar les principals tecnologies associades. Instal\u00b7lar i configurar l'entorn de treball que emprarem per al desenvolupament web. Visualitzar mitjan\u00e7ant el navegador una p\u00e0gina web html amb codi PHP encastat.","title":"Introducci\u00f3 a la programaci\u00f3 web"},{"location":"01-intro/#arquitectura-duna-aplicacio-web","text":"A difer\u00e8ncia de les aplicacions d'escriptori, que utilitzen els recursos d'un \u00fanic ordinador les aplicacions web s\u00f3n distribu\u00efdes, intervenen com a m\u00ednin dos equipos diferents: el client i el servidor. La comunicaci\u00f3 \u00e9s du a terme mitjan\u00e7ant un protocol, en el nostre cas el protocol HTTP, base de la WWW.","title":"Arquitectura d'una aplicaci\u00f3 web"},{"location":"01-intro/#elements-navegador-servidor-protocol-http-i-html","text":"El protocol de transfer\u00e8ncia d'hipertext (HTTP) \u00e9s un protocol client-servidor molt senzill que articula els intercanvis d'informaci\u00f3 entre els clients web (navegadors) i els servidors HTTP. HTTP es basa en operacions senzilles de sol\u00b7licitud/resposta. Quan un client estableix una connexi\u00f3 amb un servidor i envia un missatge amb les dades de la sol\u00b7licitud, el servidor respon amb un missatge similar que cont\u00e9 l'estat de l'operaci\u00f3 i el seu resultat de la sol\u00b7licitud. Totes les operacions poden adjuntar un objecte o recurs sobre el qual actuen; cada objecte web (document HTML, arxiu multim\u00e8dia o aplicaci\u00f3 CGI) \u00e9s conegut pel seu localitzador uniforme de recursos (URL, Uniform Resource Locator ). Els recursos poden ser arxius, el resultat de l'execuci\u00f3 d'un programa, una consulta a una base de dades, la traducci\u00f3 autom\u00e0tica d'un document, etc. HTTP \u00e9s un protocol sense estat , \u00e9s a dir, no guarda cap informaci\u00f3 sobre connexions anteriors. El desenvolupament d'aplicacions web freq\u00fcentment necessita mantenir estat. Per aix\u00f2 s'utilitzen les galetes ( cookies ), \u00e9s a dir, la informaci\u00f3 que un servidor pot emmagatzemar en el sistema client. Aix\u00f2 permet que les aplicacions web institueixin la noci\u00f3 de \"sessi\u00f3\", i, alhora, permet rastrejar usuaris, ja que les galetes es poden emmagatzemar en el client durant un temps indeterminat. Amb la intenci\u00f3 de con\u00e8ixer amb m\u00e9s profunditat el protocol HTTP podem avaluar en qu\u00e8 consisteix una transacci\u00f3 HTTP. Cada vegada que un client fa una petici\u00f3 a un servidor, s'executen un seguit d'accions: Un usuari accedeix a una adre\u00e7a d'Internet (URL) seleccionant un enlla\u00e7 d'un document HTML o introduint-la directament a la barra de navegaci\u00f3 d'un navegador web des de la perspectiva del client web. El client web descodifica l'adre\u00e7a d'Internet (URL) separant-ne les diferents parts. \u00c9s aix\u00ed com s'identifiquen el protocol d'acc\u00e9s, el node expressat amb el nom de domini o la seua adre\u00e7a IP, el possible port opcional (el valor per defecte \u00e9s el 80) i l'objecte del servidor requerit. S'obre una connexi\u00f3 TCP/IP amb el servidor cridant el port TCP corresponent. Es fa la petici\u00f3. En conseq\u00fc\u00e8ncia, s'envien l'ordre necess\u00e0ria (GET, POST, HEAD, etc.), l'adre\u00e7a de l'objecte requerit (el contingut de l'adre\u00e7a d'Internet del servidor), la versi\u00f3 del protocol HTTP utilitzada (en la major part de les ocasions \u00e9s HTTP/1.0) i un conjunt variable d'informaci\u00f3 que inclou dades sobre les capacitats del navegador web, dades opcionals per al servidor, etc. El servidor localitza el recurs sol\u00b7licitat i torna la resposta al client. Aquesta resposta consisteix en un codi d'estat i el tipus de dada amb extensions multiprop\u00f2sit de correu d'Internet (MIME, Multipurpose Internet Mail Extension) de la informaci\u00f3 de tornada, seguit de la mateixa informaci\u00f3. El client formata i mostra el recurs rebut. Es tanca la connexi\u00f3 TCP. Aquest proc\u00e9s es repeteix en cada acc\u00e9s que es fa\u00e7a al servidor HTTP. Per exemple, si es recull un document HTML que cont\u00e9 quatre imatges, el proc\u00e9s de transici\u00f3 mostrat amb anterioritat es repeteix cinc vegades, \u00e9s a dir, una pel document HTML i quatre per les imatges. Si el recurs sol\u00b7licitat \u00e9s un programa (CGI, ASP.NET, PHP, etc.) el servidor HTTP redirigir\u00e0 la petici\u00f3 a la llibreria o int\u00e8rpret adequat que executar\u00e0 el programa i tornar\u00e0 el control al servidor web.","title":"Elements: navegador, servidor, protocol HTTP i HTML"},{"location":"01-intro/#el-model-clientservidor","text":"El model client-servidor \u00e9s aquell on tots els clients estan connectats a un servidor on es centralitzen els diferents recursos. Aquests recursos estan a disposici\u00f3 dels clients cada cop que els sol\u00b7liciten. Aix\u00f2 fa que totes les gestions que es realitzen es concentren en el servidor, que disposa dels requeriments dels clients amb prioritat, els arxius que s\u00f3n d'\u00fas p\u00fablic i els restringits, els arxius de nom\u00e9s lectura, els que poden ser modificats, etc. En el model client/servidor, el dispositiu que sol\u00b7licita informaci\u00f3 es denomina client i el dispositiu que respon la sol\u00b7licitud es denomina servidor. Els processos de client i servidor es consideren una part de la capa d'aplicaci\u00f3. El client comen\u00e7a l'intercanvi sol\u00b7licitant les dades al servidor, que respon enviant un o m\u00e9s blocs de dades al client. Els protocols de capa d'aplicaci\u00f3 descriuen el format de les sol\u00b7licituds i respostes entre clients i servidor. A m\u00e9s de la transfer\u00e8ncia real de dades, aquest intercanvi pot requerir informaci\u00f3 addicional, com l'autentificaci\u00f3 de l'usuari i la identificaci\u00f3 d'un arxiu de dades per transferir. Encara que les dades generalment es descriuen com un flux del servidor al client, algunes dades sempre flueixen del client al servidor. El flux de dades pot ser el mateix en les dues direccions o fins i tot ser major en la direcci\u00f3 que va del client al servidor. Per exemple, un client pot transferir un arxiu al servidor amb finalitats d'emmagatzemament. La transfer\u00e8ncia de dades d'un client a un servidor es coneix com a pujada i la de les dades d'un servidor a un client, baixada.","title":"El model client/servidor"},{"location":"01-intro/#pagines-web-estatiques-i-dinamiques","text":"","title":"P\u00e0gines web est\u00e0tiques i din\u00e0miques"},{"location":"01-intro/#pagines-web-estatiques","text":"Les p\u00e0gines web est\u00e0tiques s\u00f3n aquelles on el seu contingut no varia per la qual cosa mostraran la mateixa informaci\u00f3 cada vegada que es carreguen. S\u00f3n les p\u00e0gines creades en el llenguatge HTML. Nom\u00e9s canvien si el programador web les modifica.","title":"P\u00e0gines web est\u00e0tiques"},{"location":"01-intro/#pagines-web-dinamiques","text":"Les p\u00e0gines web din\u00e0miques s\u00f3n p\u00e0gines el contingut de les quals varia a partir d'informaci\u00f3 continguda en una BBDD. El contingut mostrat pot canviar segons l'usuari connectat, el navegador que s'utiltze o accions anteriors dels usuaris, etc. Aquest tipus de p\u00e0gines s'han de realitzar mitjan\u00e7at un llenguatge de programaci\u00f3.","title":"P\u00e0gines web din\u00e0miques"},{"location":"01-intro/#execucio-de-codi-en-el-client-i-en-el-servidor","text":"En el seg\u00fcent gr\u00e0fic es mostra un escenari on podem trobar codi que s'executa en el servidor (PHP) i en el client (javascript). # 2. Tecnologies per a programaci\u00f3 web del costat del servidor","title":"Execuci\u00f3 de codi en el client i en el servidor"},{"location":"01-intro/#model-de-desenvolupament-en-3-capes","text":"Des d'un punt de vista de desenvolupament una aproximaci\u00f3 m\u00e9s detallada al model client-servidor \u00e9s el que es coneix com a model en 3 capes . \u00c9s un model on es mostra m\u00e9s en detall com es distribueix el programari que participa en qualsevol desenvolupament web. Segueix estant present l'arquitectura client-servidor (tot es basa en ella) per\u00f2 apareixen m\u00e9s detalls com el programari utilitzat en cada un dels dos actors i com interactuen les diferents tecnologies o aplicacions. Per comprendre millor que \u00e9s el model de desenvolupament de 3 capes podem tirar un ull al seg\u00fcent esquema on es mostra cadascuna d'aquestes capes i que s'encarrega cadascuna d'elles: Capa de presentaci\u00f3: \u00c9s la capa on l'aplicaci\u00f3 es mostra a l'usuari. B\u00e0sicament \u00e9s la GUI ( Graphical User Interface, interf\u00edcie gr\u00e0fica d'usuari ). En el cas d'una aplicaci\u00f3 web seria el codi HTML que es carrega directament al navegador web. En qualsevol cas, s'executa directament en l'equip del client. Capa de negoci: \u00c9s la capa interm\u00e8dia on es porta a terme tota la l\u00f2gica de l'aplicaci\u00f3. Sempre s'executar\u00e0 en el costat servidor. Aquesta capa, despr\u00e9s de realitzar tots els c\u00e0lculs i / o operacions sobre les dades, genera el codi HTML que ser\u00e0 presentat a l'usuari en la capa seg\u00fcent. Capa de dades: \u00c9s la capa que emmagatzema les dades. B\u00e0sicament, en condicions normals, fa refer\u00e8ncia al propi SGBD que \u00e9s l'encarregat d'emmagatzemar les dades. Depenent de l'arquitectura de l'aplicaci\u00f3, aquesta capa i la de negoci es poden trobar f\u00edsicament en el mateix equip, encara que tamb\u00e9 \u00e9s possible que s'hagin de separar per q\u00fcestions de rendiment. La capa de dades serveix totes la informaci\u00f3 necess\u00e0ria a la capa de negoci per dur a terme les seves operacions. Si ens imaginem una botiga online, la capa de dades emmagatzema tota la informaci\u00f3 en una base de dades (usuaris, comandes, articles, ofertes,...), La capa de negoci ha d'accedir a aquesta informaci\u00f3 i, despr\u00e9s processar una comanda, per exemple, ha de presentar el resultat final a l'usuari en el navegador, que \u00e9s la capa de presentaci\u00f3. I si ens centrem en un cas concret amb programari i tecnologies ja definits, un model de 3 capes podria ser el seg\u00fcent: Navegador web: En aquest cas, Mozilla Firefox, Internet Explorer o Google Chrome podrien ser qualsevol de les aplicacions que ocuparien aquesta capa Apache + PHP / IIS + ASP: Un servidor web acompanyat del seu corresponent llenguatge de programaci\u00f3 web permeten desenvolupar la part que ocupa la capa de negoci. Tamb\u00e9 podr\u00edem col\u00b7locar la combinaci\u00f3 Apache Tomcat + Servlets MySQL / PostgreSQL: Finalment a la capa de dades podem posar qualsevol SGBD, com poden ser MySQL o PostgreSQL. L'avantatge principal d'aquest model \u00e9s que el desenvolupament es pot dur a terme en diversos nivells i, en cas que sobrevinga algun canvi, nom\u00e9s afectar\u00e0 el nivell requerit sense haver de revisar entre el codi font d'altres m\u00f2duls, at\u00e8s que s'haur\u00e0 redu\u00eft el acoblament inform\u00e0tic fins a una interf\u00edcie de pas de missatges. :::","title":"Model de desenvolupament en 3 capes."},{"location":"01-intro/#front-end-back-end-full-stack","text":"Tamb\u00e9 tenint en compte en quin costat se situen les tecnologies i per a qu\u00e8 s'utilitzen aquestes, actualment es parla molt de 3 perfils diferenciats en l'\u00e0mbit del desenvolupament web: Front-end: \u00c9s la part del desenvolupament que s'encarrega del disseny i maquetaci\u00f3 de l'aplicaci\u00f3 web utilitzant tecnologies com HTML, CSS i Javascript (i els seus frameworks). En aquest cas s'ha de preocupar tamb\u00e9 de la correcta presentaci\u00f3 en qualsevol tipus de dispositiu i fins i tot del posicionament en cercadors Back-end: \u00c9s la part del desenvolupament que s'encarrega del costat servidor utilitzant tecnologies com PHP, JSP i Python. Tamb\u00e9 s'encarrega de l'administraci\u00f3 del servidor d'aplicacions i la base de dades. Full stack: En un perfil que engloba els dos anteriors. En aquest cas el desenvolupador potser no \u00e9s un expert de cap tecnologia concreta per\u00f2 t\u00e9 amplis coneixements de tot el conjunt i \u00e9s capa\u00e7 de col\u00b7laborar en qualsevol de les parts.","title":"Front-end, Back-end, Full stack"},{"location":"01-intro/#servidors-web-i-servidors-daplicacions","text":"Aix\u00ed com les aplicacions d'escriptori s'executen directament sobre el sistema operatiu, les aplicacions web necessiten d'una eina addicional que permeti desplegar-les per a la seva posada en marxa. Parlem de servidors web i servidors d'aplicacions , respectivament.","title":"Servidors web i servidors d'aplicacions"},{"location":"01-intro/#que-es-un-servidor-web","text":"Un servidor web \u00e9s una aplicaci\u00f3 que rep una petici\u00f3 HTTP (normalment a trav\u00e9s d'un navegador web) i retorna la p\u00e0gina web sol\u00b7licitada (escrita en llenguatge HTML i podent contenir codi Javascript encastat) perqu\u00e8 aquesta sigua interpretada i visualitzada pel navegador de qui va realitzar la sol\u00b7licitud (l'usuari).","title":"Qu\u00e8 \u00e9s un servidor web?"},{"location":"01-intro/#que-es-un-servidor-daplicacions","text":"Un servidor d'aplicacions \u00e9s un servidor que permet l'execuci\u00f3 d'aplicacions web.","title":"Qu\u00e8 \u00e9s un servidor d'aplicacions?"},{"location":"01-intro/#exemples","text":"","title":"Exemples"},{"location":"01-intro/#llenguatges","text":"","title":"Llenguatges"},{"location":"01-intro/#php","text":"PHP (PHP Hypertext Preprocessor) \u00e9s un llenguatge de programaci\u00f3 de costat servidor dissenyat principalment per al desenvolupament web. PHP s'utilitza com a llenguatge de script embegut en p\u00e0gines HTML i funciona, normalment, com un m\u00f2dul del servidor web (per exemple, a Apache). El servidor web combina els resultats d'executar els scripts PHP amb l'HTML al qual va encastat i genera la p\u00e0gina web resultant per al navegador. Actualment PHP funciona pr\u00e0cticament amb qualsevol servidor web i en qualsevol Sistema Operatiu existents, i gaireb\u00e9 amb qualsevol SGBD en cas que necessitem utilitzar una base de dades. Tot i aix\u00f2, el m\u00e9s habitual \u00e9s veure-ho formant el que es coneix com una arquitectura LAMP (Linux, Apache, MySQL i PHP), \u00e9s a dir, funcionant sobre un sistema operatiu Linux, executant-com un m\u00f2dul del servidor web Apache i utilitzant a MySQL com SGBD per emmagatzemar la informaci\u00f3 en cas que es requereixi una base de dades. El llenguatge PHP va ser dissenyat per Rasmus Lerdorf i ara es mant\u00e9 per una comunitat de desenvolupadors, a m\u00e9s \u00e9s de codi obert. A continuaci\u00f3, un fragment d'una p\u00e0gina web din\u00e0mica escrita amb PHP on es pot apreciar com s'incrusta el codi juntament amb l'HTML de la p\u00e0gina:","title":"PHP"},{"location":"01-intro/#jsp-servlets","text":"JavaServer Pages (tamb\u00e9 conegut com JSP) \u00e9s una tecnologia creada per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques del costat servidor. Igual que PHP, el seu codi s'escriu encastat juntament amb l'HTML de la p\u00e0gina web i \u00e9s el servidor d'aplicacions, en aquest cas, qui ha de processar-per generar la p\u00e0gina web resultant, en HTML. D'altra banda, Java Servlets \u00e9s una tecnologia que tamb\u00e9 es pot utilitzar per crear contingut web din\u00e0mic per\u00f2 que a m\u00e9s est\u00e9n la seva funcionalitat a la possibilitat de connectar aquestes webs din\u00e0miques amb un altre contingut accessible a trav\u00e9s d'Internet. De vegades s'utilitza juntament amb JSP per crear aplicacions web m\u00e9s complexes. Totes dues s\u00f3n tecnologies desenvolupades per Sun Microsystems i propietat ara d'Oracle, despr\u00e9s d'adquirir aquesta \u00faltima a la primera fa ja alguns anys.","title":"JSP / Servlets"},{"location":"01-intro/#python","text":"El llenguatge Python va ser dissenyat per Guido van Rossum i ara es mant\u00e9 gr\u00e0cies a una comunitat de desenvolupadors, i \u00e9s codi obert. Exemple de codi escrit amb Python. En aquest cas utilitzant el framework Django per al desenvolupament d'aplicacions web: < h1 > Mis pel\u00edculas < /h1> <a href=\"#\">+</ a > { % if lista_peliculas %} <ul> {% for pelicula in lista_peliculas %} < li >< a href = \"{% url 'pelicula' pelicula.id %}\" > {{ pelicula . titulo }} < /a></ li > { % endfor %} </ul> {% else %} < p > No hay pel\u00edculas disponibles < /p> {% endif %} Separada del controlador: from django.shortcuts import render . . . def index ( request ): lista_peliculas = Pelicula . objects . all () context = { 'lista_peliculas' : lista_peliculas } return render ( request , 'mispeliculas/index.html' , context )","title":"Python"},{"location":"01-intro/#aspnet","text":"ASP.NET \u00e9s una tecnologia, creada per Microsoft, per al desenvolupament de lloc web din\u00e0mics, aplicacions i serveis web. \u00c9s la tecnologia successora del que abans es coneixia com ASP, l'antiga tecnologia de Microsoft per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques. Com que funciona sobre la plataforma .NET de Microsoft, permet que es pugui desenvolupar en qualsevol dels llenguatges de programaci\u00f3 d'aquesta plataforma, Visual Basic .NET o C#. El m\u00e9s habitual \u00e9s veure-ho funcionar juntament amb el lloc web de Microsoft, IIS (Internet Information Server). A continuaci\u00f3, un exemple de p\u00e0gina web din\u00e0mica amb ASP.NET (desenvolupada en llenguatge C #) programant l'acci\u00f3 que passa en pr\u00e9mer un bot\u00f3 (apareix el text d'un formulari a la part final del web): protected void Button1_Click(object sender, EventArgs e) { string buf = TextBox1.Text; changed_text.InnerHtml = buf.ToUpper(); } < %@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\" Inherits=\"firstexample._Default\" %> <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> < html xmlns = \"http://www.w3.org/1999/xhtml\" > < head runat = \"server\" > < title > Untitled Page </ title > </ head > < body > < form id = \"form1\" runat = \"server\" > < div > < asp:TextBox ID = \"TextBox1\" runat = \"server\" style = \"width:224px\" > </ asp:TextBox > < asp:Button ID = \"Button1\" runat = \"server\" Text = \"Enter...\" style = \"width:85px\" onclick = \"Button1_Click\" /> < hr /> < h3 > Results: </ h3 > < span runat = \"server\" id = \"changed_text\" /> </ div > </ form > </ body > </ html >","title":"ASP.NET"},{"location":"01-intro/#preparant-lentorn-de-desenvolupament","text":"Per a poder provar els nostres llocs web necessitarem instal\u00b7lar una s\u00e8rie d'eines com s\u00f3n: el servidor web Apache, el m\u00f2dul PHP per a aquest servidor, el SGBD MySql, un front-end per al SGBD (PHPMyAdmin), etc. Per simplificar les coses optarem per instal\u00b7lar-ho mitjan\u00e7ant XAMPP, un paquet de programari lliure que cont\u00e9 el servidor HTTP Apache, la base de dades de MySQL i eines necess\u00e0ries per utilitzar el PHP i el llenguatge de programaci\u00f3 Perl. Pr\u00e0ctica 1: Instal\u00b7laci\u00f3 de XAMPP Descarreguem el paquet XAMPP per a la nostra m\u00e0quina (https://www.apachefriends.org/). Li donem permisos d'execuci\u00f3 a l'arxiu descarregat: sudo chmod +x xampp-linux-x64-7.3.9-0-installer.run Executem l'assistent d'instal\u00b7laci\u00f3 sudo ./xampp-linux-x64-7.3.9-0-installer.run En l'assistent d'instal\u00b7laci\u00f3, deixarem les opcions per defecte (excepte la qual ens parla de bitnami que la desmarcarem). Una vegada finalitzada la instal\u00b7laci\u00f3, el nostre XAMPP es trobar\u00e0 en el directori /opt/lampp Ara ja podem arrancar els serveis amb el seg\u00fcent comando: sudo /opt/lampp/lampp start Quan els arranquem, si obrim el navegador i ens anem a la url http://localhost, ens hauria d'apar\u00e8ixer la p\u00e0gina de benvinguda de XAMPP. Per a parar els serveis podem fer a\u00e7\u00f2: sudo /opt/lampp/xampp stop En qualsevol cas, \u00e9s molt m\u00e9s c\u00f2mode treballar amb el panell de control de XAMPP que podrem executar amb la seg\u00fcent ordre: sudo /opt/lampp/manager-linux-x64.run Veurem que s'inicia l'aplicaci\u00f3 que ens permet controlar els serveis de XAMPP.","title":"Preparant l'entorn de desenvolupament"},{"location":"01-intro/#eines-de-desevolupament","text":"Per a programar en llenguatges encastats com PHP, ASP o Phython \u00e9s suficient amb un editor de text pla. No obstant sempre \u00e9s recomanable treballar en un entorn integrat de desenvolupament o IDE (acr\u00f2nim en angl\u00e8s de Integrated development environment ). Un IDE \u00e9s una eina inform\u00e0tica per al desenvolupament de programari de manera c\u00f2moda i r\u00e0pida. Aix\u00ed doncs \u00e9s un entorn de desenvolupament que agrupa diferents funcions en un sol programa, habitualment: editor de codi, compilador, depurador i un programa de disseny d'interf\u00edcie gr\u00e0fica. El principal avantatge \u00e9s que facilita la tasca del programador mentre que l'inconvenient m\u00e9s important \u00e9s que pot provocar mals h\u00e0bits a l'hora de programar o provocar errors que a priori comen\u00e7ant de zero no es produirien. Alguns dels IDE m\u00e9s emprats per al desenvolupament web s\u00f3n: Eclipse Netbeans Atom Sublime PHPStorm Brackets Durant les activitats anteriors has preparat el teu propi entorn de desenvolupament sobre una m\u00e0quina virtual (o una real) tal com s'ha explicat en les anotacions. Despr\u00e9s, has de crear un projecte php utilitzant PHPStorm i visualitzar la p\u00e0gina principal a trav\u00e9s del teu servidor XAMPP. Al llarg del curs, crearem els nostres projectes utilitzant l'IDE PHPStorm. Aquesta eina \u00e9s de pagament, per\u00f2 podem utilitzar-la de forma gratu\u00efta per a projectes OpenSource i amb finalitats educatives. En aqueixos casos caldr\u00e0 sol\u00b7licitar la llic\u00e8ncia corresponent al fabricant del programari. Una vegada obtinguda la llic\u00e8ncia educativa pel professor, ser\u00e0 renovable anualment i podran utilitzar-la tots els alumnes del curs. \u00c9s una eina molt completa que ens permetr\u00e0 la integraci\u00f3 amb moltes de les funcionalitats que emprarem.","title":"Eines de desevolupament"},{"location":"01-intro/#installar-phpstorm","text":"Per a instal\u00b7lar l'IDE PHPStorm seguirem els seg\u00fcents passos: Executarem sudo snap install phpstorm --classic Ens demanar\u00e0 si volem importar dades d'una instal\u00b7laci\u00f3 anterior, al que contestarem, \u00f2bviament, que no. Ens demanar\u00e0 que acceptem la pol\u00edtica de privadesa. En executar l'aplicaci\u00f3 per primera vegada ens demanar\u00e0 les dades de llic\u00e8ncia. Cada alumne s'haur\u00e0 de registrar utilitzant l'enlla\u00e7 que us passar\u00e0 el professor en classe. en pr\u00e9mer l'enlla\u00e7 ens redirigir\u00e0 a la p\u00e0gina web de jetbrains perqu\u00e8 ens registrem. Una vegada registrats, podrem accedir a l'aplicaci\u00f3 amb el nostre compte o amb el codi d'activaci\u00f3 que ens proporcionen. Finalment, indicarem la configuraci\u00f3 inicial.","title":"Instal\u00b7lar PHPStorm"},{"location":"01-intro/#creacio-de-projectes-i-comprovacio-de-la-installacio-de-php","text":"Seguirem els passos que s'indiquen a continuaci\u00f3: Arrancar XAMPP Iniciar el m\u00f2dul Apache Executar PHPStorm Crear un projecte buit amb Create New > Project PHP Empty Project Posar al projecte el nom practica1 i situar-lo en el directori /opt/lampp/htdocs . Amb a\u00e7\u00f2 es crea un directori de nom practica1 dintre de /opt/lampp/htdocs . En la finestra de l'esquerra (explorador de projectes) apareix el projecte creat. Dins d'ell crearem un nou fitxer PHP prement bot\u00f3 dret sobre el nom i seleccionant New > PHP File . Li posem de nom index.php . En el fitxer creat introdu\u00efm les seg\u00fcents l\u00ednies de codi: <! doctype html > < html lang = \"es\" > < head > < meta charset = \"utf-8\" > < title > Desenvolupament web en entorn servidor </ title > < meta name = \"description\" content = \"PHP, PHPStorm\" > < meta name = \"author\" content = \"Homer Simpson\" > </ head > < body > <? php phpinfo (); ?> </body> </html> Canviem l'autor del document al nostre nom. Obrim el navegador i teclegem en la barra d'adreces la url: http://localhost/practica1 Apareixer\u00e0 una p\u00e0gina similar a la de la seg\u00fcent imatge: Pr\u00e0ctica 3: Prova d'Apache i PHP L'objectiu d'aquesta pr\u00e0ctica \u00e9s aprendre el maneig b\u00e0sic de l'entorn de desenvolupament PHPStorm creant una primera p\u00e0gina PHP que alhora servir\u00e0 per a comprovar la correcta instal\u00b7laci\u00f3 de XAMPP. Seguint les instruccions anterior crea projecte i prova'l.","title":"Creaci\u00f3 de projectes i comprovaci\u00f3 de la instal\u00b7laci\u00f3 de PHP"},{"location":"01-intro/#eines-per-a-la-depuracio-de-codi","text":"En els entorns de desevolupament \u00e9s necessari disposar de ferramentes que ens permenten depurar les nostres aplicacions. Ja siga per arreglar errors com per millorar l'execuci\u00f3 del codi. Els entorns de desevolupament d'aplicacions d'escriptori solen disposar dels seus propis sistemes de depuraci\u00f3, en el cas dels llenguatges d'entorn servidor alguns ecosistemes com el de .Net de Microsoft l'inclouen. Per a PHP hi ha diverses ferramentes com XDebug o DBG.","title":"Eines per a la depuraci\u00f3 de codi"},{"location":"01-intro/#installacio-dxdebug-30","text":"XDebug 3.0 Recentment s'ha publicat XDebug 3.0, versi\u00f3 que cobreix aquest document. Si busqueu informaci\u00f3, tingau en compte en quina versi\u00f3 treballeu. A continuaci\u00f3, explicarem com instal\u00b7lar el m\u00f2dul XDebug 3 en un entorn basat en XAMPP. Abans de res comprovarem que no el tenim instal\u00b7lat, per a aix\u00f2 seguirem els seg\u00fcents passos: Obrim la p\u00e0gina de benvinguda de XAMPP escrivint al navegador la URL http://localhost . A la part superior de la p\u00e0gina tenim una s\u00e8rie d'enlla\u00e7os, entre els que es troba un que diu phpinfo . Feu clic en aquest enlla\u00e7. Se'ns mostrar\u00e0 la p\u00e0gina de configuraci\u00f3 del nostre m\u00f2dul php. Anem a seleccionar tots els continguts d'aquesta p\u00e0gina i els anem a copiar. Obrirem al navegador la seg\u00fcent URL: http://xdebug.org/wizard.php . En aquesta p\u00e0gina podrem comprovar quins m\u00f2duls tenim instal\u00b7lats en nostre m\u00f2dul PHP. Per a aix\u00f2, enganxarem els continguts que hem copiat pr\u00e8viament a la caixa de text que apareix i premerem Analyse mi phpinfo() output . Ens apareixeran un resultats semblants a aquests: Com es pot observar, l'extensi\u00f3 XDebug no est\u00e0 instal\u00b7lada. Una altra informaci\u00f3 important que ens d\u00f3na \u00e9s que el nostre fitxer de configuraci\u00f3 del PHP el podem trobar en /opt/lampp/etc/php.ini i les extensions les tenim en /opt/lampp/lib/php/extensions/no-debug-non-zts-20180731 \u00c9s important que recordem aquestes dades. Per instal\u00b7lar l'extensi\u00f3 XDebug seguirem les instruccions que ens indica la p\u00e0gina anterior per\u00f2 compte perqu\u00e8 cal fer algunes modificacions: Important Els car\u00e0cters # representen valors que depenen de cada instal\u00b7laci\u00f3, aix\u00ed que cal tindre-ho en compte en executar-ho. Descarregueu la darrera versi\u00f3 d'Xdebug Instal\u00b7leu els requisits previs per a la compilaci\u00f3 d'extensions PHP.\\ Instal\u00b7leu-lo amb el sistema Ubuntu amb: apt-get install php-dev autoconf automake Desempaqueteu el fitxer descarregat amb tar -xvzf xdebug-#.#.#.tgz Executar: cd xdebug-#.#.# Executar: /opt/lampp/bin/phpize (hem canviat la ruta perqu\u00e8 execute el phpize de XAMPP). Com a part de la seva eixida hauria de mostrar: Configuring for: ... Zend Module Api No: ######## Zend Extension Api No: ######### Si no \u00e9s aix\u00ed, est\u00e0s utilitzant phpize incorrecta. Seguiu aquesta entrada de FAQ i passeu al pas seg\u00fcent. Executar: ./configure --with-php-config=/opt/lampp/bin/php-config (hem afegit la ruta del php-config de XAMPP). Compilem les fonts: make Executar: sudo cp modules/xdebug.so /opt/lampp/lib/php/extensions/no-debug-non-zts-######## Edita /opt/lampp/etc/php.ini i afegeix les seg\u00fcents l\u00ednies al final [xdebug] zend_extension=xdebug Reinicieu el servidor web Repeteix els passos del 1 al 5 inicials per comprovar que XDebug s\u00ed est\u00e0 instal\u00b7lat. Despr\u00e9s caldr\u00e0 configurar PHPStorm per a connectar-lo a XDebug Integraci\u00f3 amb PHPStorm i instal\u00b7lar una extensi\u00f3 de Firefox Xdebug Helper o Chrome. Pr\u00e0ctica 4. Instal\u00b7laci\u00f2 d'XDebug Seguint les instruccions anteriors instal\u00b7la i configura XDEBUG i connecta'l a PHP Storm.","title":"Instal\u00b7laci\u00f3 d'XDEBUG 3.0"},{"location":"02-phpbasics/","text":"El llenguatge PHP Objectius Con\u00e8ixer la sintaxi b\u00e0sica de PHP i les noves caracter\u00edstiques de PHP 7. Entendre com s'integren PHP i HTML. Descriure els tipus de dades existents en PHP. Fer servir les estructures de control b\u00e0siques. Aprendre a utilitzar els arrays associatius. Con\u00e8ixer els mecanismes de pas de par\u00e0metres a un script. Processar i validar formularis Incloure fixters Introducci\u00f3 Acr\u00f2nim de Personal Home Page Llenguatge de prop\u00f2sit general, encara que el seu fort \u00e9s el desenvolupament web. Sintaxi similar a C / Java El codi s'executa en el servidor (en Apache mitjan\u00e7ant mod_php ) El client rep el resultat generat despr\u00e9s d'interpretar el codi al servidor. El codi s'emmagatzema en arxiu amb extensi\u00f3 .php. L'\u00faltima versi\u00f3 \u00e9s la 8.0, de novembre de 2020 (i en breu tindrem la versi\u00f3 8.1). La versi\u00f3 7.0 va sortir al desembre de 2015. A m\u00e9s de nombroses noves funcionalitats que anirem veient durant el curs, t\u00e9 m\u00e9s de dues vegades millor rendiment que PHP5. PHP 7.4 Nosaltres farem \u00fas de la versi\u00f3 7.4 de PHP La seva documentaci\u00f3 \u00e9s extensa i est\u00e0 tradu\u00efda: https://www.php.net/manual/es/. Funcionament i estructura b\u00e0sica El nostre primer codi PHP El codi PHP sempre va entre els simbolos <?php i ?> . Les instruccions PHP acaben sempre amb ; . Per a generar codi HTML des de PHP podem utilitzar el m\u00e8tode echo passant-li el text del codi que volem generar. El codi pot anar entre les etiquetes d'HTML. < html > < head ></ head > < body > < h1 > <?php echo \"Hola m\u00f3n\" ?> </ h1 > < body > Tamb\u00e9 podem utilitzar l'etiqueta <?= fa el echo al mateix temps. < html > < head ></ head > < body > < h1 > <? = \"Hola m\u00f3n\" ?> </ h1 > < body > Comentaris De bloc entre /* i */ . De linea, comen\u00e7ant per // o per # . Codi incrustat El documents que contenen codi PHP s'han d'anomenar amb l'extensi\u00f3 .php Variables i tipus de dades Una de les caracter\u00edstiques de php \u00e9s que \u00e9s un llenguatge no fortament tipat . De fet no cal declarar la variable ni indicar el tipus de dades si la declare. Encara que si volem codi de qualitat ho hauriem de fer. Declaraci\u00f3 Els noms de les variables sempre comencen per $ Despr\u00e9s del $ els noms de les variables han d'anar seguits per una lletra o el car\u00e0cter _ i poden contenir tamb\u00e9 n\u00fameros. No \u00e9s necessari declarar una variable ni especificar-li un tipus (sencer, cadena,...) concret. Per crear una variable que continga el text a generar i mostrar-la: < html > < head ></ head > < body > < h1 > <?php $salutacio = \"Hola m\u00f3n\" ; echo $salutacio ; ?> </ h1 > < body > Tipus de les variables El tipus de la variable es decideix en funci\u00f3 del context en qu\u00e8 s'utilitze. En assignar-li el valor 7, la variable \u00e9s de tipus \u201csencer\u201d $la_meua_variable = 7 ; // ara \u00e9s un n\u00famero $la_meua_variable = \"set\" ; // ara \u00e9s cadena Si li canviem el contingut passa a ser de tipus \u201ccadena\u201d Variable no inicialitzades Si s'intenta utilitzar una variable abans d'assignar-li un valor, es genera un error de tipus E_NOTICE per\u00f2 no s'interromp l'execuci\u00f3 de l'script. L'eixida mostrar\u00e0 un av\u00eds cada volta que s'intente. Tipus de dades en PHP boole\u00e0 ( boolean ). Els seus possibles valors s\u00f3n true i false. A m\u00e9s, qualsevol nombre enter es considera com true, excepte el 0 que \u00e9s false. sencer ( integer ). Qualsevol nombre sense decimals. Es poden representar en format decimal, octal (comen\u00e7ant per un 0), o hexadecimal (comen\u00e7ant per 0x). real ( float ). Qualsevol nombre amb decimals. Es poden representar tamb\u00e9 en notaci\u00f3 cient\u00edfica. cadena ( string ). Conjunts de car\u00e0cters delimitats per cometes simples o dobles. vector ( array ). Conjunt de variables del mateix tipus ordenades. Objecte ( object ). Utilitzat per les inst\u00e0ncies de classes. null . \u00c9s un tipus de dades especial, que s'usa per a indicar que la variable no t\u00e9 valor. ( http://php.net/manual/es/language.types.null.php ) \u00c0mbit de les variables L'\u00e0mbit d'una variable \u00e9s la part del codi en que \u00e9s visible. Una variable declarada en un fitxer de PHP est\u00e0 disponible en eixe fitxer i en els que l'incloguen. Les funcions definixen un \u00e0mbit local, separat de la resta del codi. Es poden definir variables globlals amb la paraula reservada global , encara que no s\u00f3n aconsellables. Variables predefinides S\u00f3n variables internes predefinides de PHP que poden usar-se des de qualsevol \u00e0mbit. Tomem forma d'arrays associatius que contenen un conjunt de valors. $_SERVER . Cont\u00e9 informaci\u00f3 sobre l'entorn del servidor web i d'execuci\u00f3. $_GET, $_POST i $_COOKIE contenen les variables que s'han passat al script actual utilitzant, respectivament, els m\u00e8todes GET (par\u00e0metres en la URL), HTTP POST i Cookies HTTP $_REQUEST junta en un solament el contingut dels tres *arrays anteriors, $_GET, $_POST i $_COOKIE. $_ENV cont\u00e9 les variables que es puguen haver passat a PHP des de l'entorn en qu\u00e8 s'executa. $_FILES cont\u00e9 els fitxers que es puguen haver pujat al servidor utilitzant el m\u00e8tode POST. $_SESSION cont\u00e9 les variables de sessi\u00f3 disponibles per al gui\u00f3 actual. http://es.php.net/manual/es/language.variables.superglobals.php Constants Per a definir constants s'utilitza define() , que reb el nom de la constant i el valor que li volem donar define ( \"LIMITE\" , 1000 ); \u00c9s habitual utilitzar identificadors en majuscules per a les constants. Operadors Arim\u00e8tics Exemple Nom Resultat +$a Identidat Conversi\u00f3 de $a a int o float segons el cas. -$a Negaci\u00f3 Oposat de $a . $a + $b Suma Suma de $a i $b . $a - $b Resta Difer\u00e8ncia de $a i $b . $a * $b Multiplicaci\u00f3 Producte de $a i $b . $a / $b Divisi\u00f3 Quocient de $a i $b . $a % $b M\u00f3dul / Residu Residu de $a dividit per $b . $a ** $b Pot\u00e8ncia Resultat de $a elevat a $b . PHP >= 5.6. En el caso de cadenas , si queremos concatenarlas, se utiliza el operador . : $x = 33 ; $y = 11 ; $z = $x + $y ; echo \"La suma de 33 y 11 es \" . 44. \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . ( 33 + 11 ) . \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . $z . \"<br />\" ; Realment en lloc de concatenar cadenas con variables, podem imprimir-les directament ja que s'expandeixen autom\u00e0ticament: echo \"La suma de $x y $y es $z <br />\" ; En ocasions, necesitem envoltar el nom de la variable entre claus per poder un m\u00e9s text al resultat: $color = \"rojo\" ; echo \"El plural de $color el ${ color } s\" ; ?> M\u00e9s endavant estudiarem algunes funcions per al tractament de cadenes. Comparaci\u00f3 Exemple Nom Resultat $a == $b Igual true si $a \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a === $b Id\u00e8ntic, Comparaci\u00f3 estricta true si $a \u00e9s igual a $b , i s\u00f3n del mateix tipus de dada. $a != $b , $a <> $b Diferent true si $a no \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a !== $b No id\u00e8ntic true si $a no \u00e9s igual a $b , o si no s\u00f3n del mateix tipus. $a < $b Menor que true si $a \u00e9s estrictament menor que $b . $a > $b Major que true si $a \u00e9s estrictament major que $b . $a <= $b Menor o igual que true si $a \u00e9s menor o igual que $b . $a >= $b Major o igual que true si $a \u00e9s major o igual que $b . $a <=> $b Nau espacial Torna -1 , 0 o 1 quan $a \u00e9s respectivamente menor, igual, o major que $b . PHP >= 7. $a ?? $b ?? $c Fusi\u00f3n de null El primer operano d'esquerra a dreta que existisca i no siga null . null si no hi ha valors definits i no s\u00f3n null . PHP >= 7. L\u00f2gics Exemple Nom Resultat $a and $b , $a && $b And (i) true si tant $a com $b s\u00f3n true . $a or $b , $a || $b Or (o inclusiu) true si qualsevol de $a o $b \u00e9s true . $a xor $b Xor (o exclusiu) true si $a o $b \u00e9s true , pero no ambd\u00f3s. !$a Not (no) true si $a no \u00e9s true . Assignaci\u00f3 Exemple Nom Resultat $a = $b Assignaci\u00f3 Assigna a $a el valor de $b $a += $b Assignaci\u00f3 de la suma Le suma a $a el valor de $b . Equivalent a $a = $a + $b $a -= $b Assignaci\u00f3 de la resta Le resta a $a el valor de $b . Equivalent a $a = $a - $b $a *= $b Assignaci\u00f3 del producte Assigna a $a el producto de $a por $b . Equivalent a $a = $a * $b $a /= $b Assignaci\u00f3 de la divisi\u00f3 Assigna a $a el quocient de $a entre $b . Equivalent a $a = $a / $b $a %= $b Assignaci\u00f3 del residu Assigna a $a el residu de dividir $a entre $b . Equivalent a $a = $a % $b $a .= $b Concatenaci\u00f3 Concatena a $a la cadena $b . Equivalent a $a = $a . $b $a++ Increment Incrementa $a en una unitat. Equivalent a $a = $a + 1 $a-- Decrement Decrementa $a en una unitat. Equivalent a $a = $a - 1 Prioridad de los operadores Recorda la prioritat. Primer els par\u00e8ntesis, despr\u00e9s la negaci\u00f3 ( ! ), productes/divisions, sumes/restes, comparacions, l\u00f2gics i finalment es realitza l'assignaci\u00f3. M\u00e9s informaci\u00f3 a https://www.php.net/manual/es/language.operators.precedence.php Autoevaluaci\u00f3n Si $a=5 i $b=4 , esbrina el valor de $c si $c = $a*2 > $b+5 && !($b<>4) Operador ternari Funciona com un condicional condici\u00f3 ? valor si true : valor si false i que es pot simplificar ** condici\u00f3 https://www.php.net/manual/es/language.operators.php Farem alguns exercicis : Exercisi 2.0 Conceptes b\u00e0sics Estructures de control de flux Les instruccions de control de flux en PHP funcionen exactament igual que en altres llenguatges de programaci\u00f3. Les m\u00e9s habituals s\u00f3n: Condicionals: if, if else, switch Bucles: while, do while, for seguint les estructures: if ( condici\u00f3 ) { // instruccions } else { // instruccions } switch ( $variable ) { case valor : //instruccio1 break ; case valor : //instruccio1 break ; default : //instruccio1 } while ( condici\u00f3 ) { //instruccions } do { //instruccions } while ( condici\u00f3 ); for ( $i = 1 ; $i < 10 ; $i ++ ){ //instruccions } http://php.net/manual/es/language.control-structures.php Expansi\u00f3 de variables Podem introduir una variable dins d'un text sempre que usem les cometes dobles per a delimitar el text. A\u00e7\u00f2 far\u00e0 que el contingut de la variable s'expandisca i es concatene amb el text existent en la cadena. echo \"<p>M\u00f2dul: $module </p>\" A voltes, \u00e9s necessari envoltar-la entre claus echo \"<p>M\u00f2dul: { $module } DAW</p>\" Si no pos\u00e0rem les claus l'int\u00e8rpret cercaria una variable que es cride $moduleDAW Maneig de cadenes de text Podem utilitzar tant cometes simples com a cometes dobles. Per a concatenar cadenes utilitzarem l'operador punt (.) $fullName = $name.' '.$surname; Funcions de cadena Maneig de dates Funci\u00f3 time() En PHP les dates s'emmagatzemen com a n\u00fameros enters. La funci\u00f3 time() retorna el nombre de segons transcorreguts des de l'1 de gener de 1970 (instant conegut com a \u00e8poca Unix). A aquesta forma d'expressar data i hora se li denomina timestamp . Funci\u00f3 date() date ( string $format [, int $timestamp = time ()]) : string La funci\u00f3 date retorna una cadena formatada segons els codi de format. Si no li passem la variable timestamp ens retorna la cadena formatada per a la data i l'hora actual. Els codis de format m\u00e9s habituals per a la funci\u00f3 date s\u00f3n: CODI DESCRIPCI\u00d3 a am o pm A AM o PM d Dia del mes amb zeros D Abreviatura del dia de la setmana (en angl\u00e8s) F Nom del mes (en angl\u00e8s) h Hora en format 1-12 H Hora en format 0-23 i Minuts j Dia del mes sense zeros l Dia de la setmana m N\u00famero de mes (1-12) M Abreviatura del mes (en angl\u00e8s) s Segons y Any amb 2 d\u00edgits Y Any amb 4 d\u00edgits z Dia de l'any (1-365) La informaci\u00f3 completa la pots trobar en el manual oficial de PHP: date Suposant que hui \u00e9s 15 de setembre de 2019 i les 19 hores 20 minuts i 23 segons et mostrem alguns exemples: date ( \"d-m-Y\" ); // 15-09-2019 date ( \"H:i:s\" ); // 19:20:23 date ( \"Y\" ); // 2019 date ( \"YmdHis\" ); // 20190915192023 date ( \"d/m/y H:i a\" ); // 15/09/19 19:20 pm date ( \"d-m-Y H:i\" , time ()); // Moment actual Funci\u00f3 mktime(hora, min, seg, mes, dia, any) La funci\u00f3 mktime permet obtenir la marca de temps Unix ( timestamp ) d'una data. Per exemple: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); echo date ( 'd-m-Y' , $data ); // mostrar\u00e0 01-01-2020 M\u00e9s informaci\u00f3 en https://www.php.net/manual/es/function.mktime.php Un altra forma de crear dates \u00e9s mitjan\u00e7ant la funci\u00f3 strtotime() on podem indicar les dates mitjan\u00e7ant una cadena de text. Per exemple: // posarem la data en el format any-mes-dia per a evitar confusions. $date = strtotime ( \"2020-01-01\" ); Operar amb dates Com hem dit al principi les dates s'emmagatzem com a enters on cada unitat representa un segon. Aix\u00ed podem sumar i restar dates ( timestamp ) per a afegir, llevar o calcular difer\u00e8ncies entre ells. Per exemple, per poder determinar els dies que falten per a l'1 de gener de 2020 far\u00edem: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); // timestamp que representa l'1 de gener de 2020 $diferencia = $data - time (); // restem a l'1 de gener de 2020 el temps actual, // el resultat estar\u00e0 en segons. $diferenciaEnDies = ((( $diferencia / 60 ) / 60 ) / 24 ); /* dividim els segons entre 60 i obtenim els minuts, els dividim entre 60 i obtenim les hores, els dividim entre 24 i obtenim els dies */ Validar dates En la funci\u00f3 checkdate podem validar una data. checkdate ( int $month , int $day , int $year ) : bool La funci\u00f3 torna true si la data es v\u00e0lida, si no, torna false . Classe DateTime PHP disposa tamb\u00e9 de la classe DateTime per a representar les dates, la veurem m\u00e9s avant. Activitat 3: Treballar amb dates Crea un fitxer anomenat dates.php i realitza les seg\u00fcents tasques: Mostra la data i hora actuals amb el format: dd/mm/yyyy hh:mm:ss Mostra el nom de la zona hor\u00e0ria que s'utilitza per defecte. Mostra la data de que ser\u00e0 d\u2019ac\u00ed 45 dies. Mostra el nombre de dies que han passat des de l'1 de gener. Mostra la data i hora actuals de Nova York. Mostra el dia de la setmana que era l'1 de gener d'enguany. En acabar penja el document a Aules. Activitat 4 200dadesPersonals.php : Escriu un programa que emmagatzeme en variables teu nom, primer cognom, segon cognom, email, any de naixement i tel\u00e8fon. Despr\u00e9s mostra'ls per pantalla dins d'una taula. Nom Bruce Cognoms Wayne Email batman@dccomics.com Any de naixement 1939 Tel\u00e8fon 555666777 206anyos.php : Despr\u00e9s de llegir l'edat d'una persona, mostrar l'edat que tindr\u00e0 d'aqu\u00ed a 10 anys i fa 10 anys. A m\u00e9s, mostra quin any ser\u00e0 en cada un dels casos. Finalment, mostra l'any de jubilaci\u00f3 suposant que treballar\u00e0s fins als 65 anys. Tip: $anyoActual = date(\"Y\") ; Maneig d'arrays Un array \u00e9s un tipus de dades que ens permet emmagatzemar diversos valors. Per tal d'accedir a un valor utilitzarem una clau . Les claus poden ser nombres o textos ( arrays associatius ). Si no indiquem cap clau, a cada element se li associar\u00e0 una clau num\u00e8rica correlativa. Array indexat Crear array Podem crear un array buit de dues formes: $noms = array (); $noms = []; Si volem assignar valors al array en el moment de crear-ho: $noms = array ( 'Sandra' , 'Pedro' , 'Andrea' ); $noms = [ 'Sandra' , 'Pedro' , 'Andrea' ]; Mostrar el contingut d'un array Si intentem mostrar el contingut d'un array amb echo no obtindrem les dades que hi ha dins del array. En lloc d'a\u00e7\u00f2 podem utilitzar la funci\u00f3 print_r: print_r ( $noms ); Per\u00f2 si necessitem donar-li format als continguts del array, haurem de rec\u00f3rrer-ho amb un bucle i anar mostrant element a element. Afegint elements al array Podem afegir elements al array utilitzant claud\u00e0tors buits. La clau d'aquests elements ser\u00e0 el seg\u00fcent \u00edndex num\u00e8ric disponible. $noms [] = 'Raul' ; $noms [] = 'Marta' ; Accedir als elements del array Accedirem als elements del array indicant la clau de l'element entre claud\u00e0tors: echo $noms [ 2 ]; Tamb\u00e9 podem modificar el seu valor: $noms [ 0 ] = 'Sara' ; Rec\u00f3rrer arrays Arrays associatius Si el array cont\u00e9 dades diverses i/o ens interessa accedir a ells amb claus m\u00e9s espec\u00edfiques que un simple \u00edndex num\u00e8ric podem utilitzar arrays associatius: $alumne = array ( 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ); $alumne = [ 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ]; $alumne [ 'nom' ] = 'Ver\u00f3nica' ; echo $alumne [ 'nom' ]; Rec\u00f3rrer arrays associatius Rec\u00f3rrer claus i valors Arrays multidimensionals Imagina que volem tenir un array els elements del qual s\u00f3n noms d'esports. Volem dividir-los en esports d'hivern i esports d'estiu. Podem crear un array esports que continga dos elements que al seu torn tamb\u00e9 seran arrays. $esports = [ 'hivern' => [ 'esqu\u00ed de fons' , 'hoquei sobre gel' ], 'estiu' => [ 'nataci\u00f3' , 'voley platja' ] ]; Per a accedir al primer esport d'hivern: echo $esports [ 'hivern' ][ 0 ]; Funcions d'arrays Podem obtenir la mida de l'array mitjan\u00e7ant la funci\u00f3 count(array) . Per rec\u00f3rrer l'array farem \u00fas d'un bucle for : $tam = count($fruites); // mida de l'array for ($i=0; $i < count ($ fruites ); $ i ++) { echo \" Element $ i: $ fruites [$ i ] < br /> \"; } Les operacions m\u00e9s importants que podem realitzar amb arrays s\u00f3n: print_r($ array) : mostra el contingut de tot el $array $elem = array_pop($array) : elimina l'\u00faltim $element array_push ($ array, $ elem) : afegeix un $element al final. $bool = in_array($elem, $array) : esbrina si $elem est\u00e0 en el $array PHP $fruits = [ \"orange\" , \"pear\" , \"apple\" ]; array_push ( $fruites , \"pinapple\" ); print_r ( $fruits ); $lastFruit = array_pop ( $fruits ); if ( in_array ( \"pineapple\" , $fruits )) { echo \"<p> Pineapple left </ p>\" ; } else { echo \"<p> No pineapple left </ p>\" ; } print_r ( $fruites ); ?> Consola Array ( [0] => orange [1] => pear [2] => apple [3] => pinapple ) <p>No pineapple left</ p> Array ( [0] => orange [1] => pear [2] => apple ) $claus = array_keys($array) : torna les claus de l' $ array associatiu. $tam = count ($array) : retorna la mida de $ array . sort($array) : ordena els elements de l' $ array . isset($array[element]) : indica si existeix / t\u00e9 valor element dins del array. unset($array[element]) : elimina l'element de l'array (deixa un buit). PHP $capitals = array ( \"Italy\" => \"Rome\" , \"France\" => \"Paris\" , \"Portugal\" => \"Lisbon\" ); $countries = array_keys ( $capitals ); print_r ( $countries ); sort ( $countries ); print_r ( $countries ); unset ( $capitals [ \"France\" ]); print_r ( $capitals ); Consola Array ( [0] => Italy [1] => France [2] => Portugal ) Array ( [0] => France [1] => Italy [2] => Portugal ) Array ( [Italy] => Rome [Portugal] => Lisbon ) Existeixen molt\u00edssimes m\u00e9s funcions per treballar amb arrays. Tota la informaci\u00f3 en el documentaci\u00f3 oficial . Articles per aprofundir en les operacions amb arrays Un article molt complet (en angl\u00e8s) de Com treballar amb arrays en PHP de la manera correcta . Un altre article recomanable (en angl\u00e8s) \u00e9s Com ordenar arrays en PHP . Altres recursos: https://www.studytonight.com/php/indexed-array https://aprende-web.net/php/php6_1.php Funcions Funcions predefinides Algunes de les funcions predefinides en PHP s\u00f3n les seg\u00fcents, per\u00f2 hi ha molt\u00edssimes m\u00e9s vinculades als diferents m\u00f2duls que podem instal\u00b7lar. is_null($var) determina si una variable \u00e9s nula o no. isset($var) determina si una variable estan definida i no \u00e9s NULL. unset($var) destrueix les variables especificades. empty($var) torna true si no existeix o \u00e9s FALSE is_int($var) , is_float() , is_bool() , is_array() var_dump($var) , mostra informaci\u00f3 de la variable. Funcions definides per l'usuari Per a crear les teues pr\u00f2pies funcions, haur\u00e0s d'usar la paraula function : function suma ( $a , $b ) { return $a + $b ; } Per tal d'invocar la funci\u00f3: $resultat = suma ( 5 , 7 ); Si una funci\u00f3 no t\u00e9 una sent\u00e8ncia return , retorna null en finalitzar. Command-query separation S\u00ed b\u00e9 \u00e9s un principi de la programaci\u00f3 orientada a objectes \u00e9s \u00fatil usar-lo tamb\u00e9 quan definim funcions. El principi afirma que cada m\u00e8tode ha de ser un comandament que realitza una acci\u00f3 o una consulta que retorna dades al que la crida, pero no ambdues coses. Valors per defecte en els par\u00e0metres Podem indicar valors per defecte per als par\u00e0metres. Si quan cridem a la funci\u00f3 no indiquem el valor d'un par\u00e0metre es prendr\u00e0 el valor per defecte indicat. function preuAmbIva ( $preu , $iva = 0.21 ){ return $preu * ( 1 + $iva ); } $preu = 10 ; $pIva = preuAmbIva ( $preu ); Pot haver-hi m\u00e9s d'un par\u00e0metre amb valor per defecte, per\u00f2 sempre han d'estar al final. Pas de par\u00e0metres per refer\u00e8ncia Per defecte els par\u00e0metres es passen per valor. Per a passar un par\u00e0metre per refer\u00e8ncia afegirem el s\u00edmbol & davant del seu nom. function preuAmbIva ( & $preu , $iva = 0.18 ){ $preu *= ( 1 + $iva ); } Declaracions de tipus (Type Hinting) Les funcions obliguen a que els par\u00e0metres siguen de cert tipus. Si el valor donat \u00e9s d'un tipus incorrecte, es generar\u00e0 un error. Per aix\u00f2 s'ha d'anteposar-se el nom del tipus al nom del par\u00e0metre. Es pot fer que una declaraci\u00f3 accepte valors NULL si el valor predeterminat del par\u00e0metre s'estableix a NULL. Tipus v\u00e0lids Type Description Version Class/interface name The value must be an instanceof the given class or interface. self The value must be an instanceof the same class as the one in which the type declaration is used. Can only be used in classes. parent The value must be an instanceof the parent of the class in which the type declaration is used. Can only be used in classes. array The value must be an array. callable The value must be a valid callable. Cannot be used as a class property type declaration. bool The value must be a boolean value. float The value must be a floating point number. int The value must be an integer. string The value must be a string. iterable The value must be either an array or an instanceof Traversable. PHP 7.1.0 object The value must be an object. PHP 7.2.0 mixed The value can be any value. PHP 8.0.0 Exemple function suma ( int a , int b ) : int { return $a + $b ; } $resultado = suma ( 3 , 5 ); Funcions com a par\u00e0metres En PHP \u00e9s possible passar funcions com a par\u00e0metres a altres funcions. Nom\u00e9s cal passar el nom de la funci\u00f3 entre cometes. Exemple: function calculator ( $operation , $numA , $numB ){ return $operation ( $numA , $numB ); } function sumar ( $a , $b ) { return $a + $b ; } function restar ( $a , $b ) { return $a - $b ; } $a = 4 ; $b = 6 ; echo calculator ( 'sumar' , $a , $b ); echo calculator ( 'restar' , $a , $b ); Funcions an\u00f2nimes ( closures ) Estan implementades usant la classe Closure Permeten la creaci\u00f3 de funcions que no tenen un nom espec\u00edfic Podem assignar la funci\u00f3 a una variable o passar-la com a par\u00e0metre a una altra funci\u00f3. Exemple Sense par\u00e0metres: $anonima = function () { echo \"Hola\" ; }; $anonima (); Amb par\u00e0metres: $anonima = function ( $nom ) { echo \"Hola { $nom } \" ; }; $anonima ( 'Vicent' ); Usar variables de l'\u00e0mbit superior Una funci\u00f3 an\u00f2nima pot usar variables de l'\u00e0mbit superior mitjan\u00e7ant la paraula reservada use : function saluda ( callable $fnSaluda ) { $fnSaluda ( 'Vicent' ); } $salutacio = 'Hola' ; $anonima = function ( $nom ) use ( $salutacio ) { echo \" { $salutacio } { $nom } \" ; }; saluda ( $anonima ); Llibreries Podem fer llibreries de funcions guardant-les en un fitxer que despr\u00e8s importem des d'on les utilitzem. Ho podem fer amb include, o utilitzant composer per a fer-ho. Noves caracter\u00edsques PHP 7 Spaceship operator (<==>) Compara dues expressions $a i $b i torna -1 si $a \u00e9s menor que $b, 0 si s\u00f3n iguals i 1 si $b \u00e9s major que $a. Exemple: // Integers echo 1 <=> 1 ; // 0 echo 1 <=> 2 ; // -1 echo 2 <=> 1 ; // 1 Operador de fusi\u00f3 de null ?? Torna el primer operand si existeix i no \u00e9s NULL o el segon operand. Exemple: // Fetches the value of $_GET['user'] and returns 'nobody' // if it does not exist. $username = $_GET [ 'user' ] ?? 'nobody' ; // This is equivalent to: $username = isset ( $_GET [ 'user' ]) ? $_GET [ 'user' ] : 'nobody' ; M\u00e9s recursos: Noves caracter\u00edstiques PHP 7.0 Noves caracter\u00edstiques PHP 7.1 Noves caracter\u00edstiques PHP 7.2 Noves caracter\u00edstiques PHP 7.3 Noves caracter\u00edstiques PHP 7.4 Noves caracter\u00edstiques PHP 8.0 Processament de formularis Qu\u00e8 \u00e9s una petici\u00f3 HTTP? Una petici\u00f3 HTTP \u00e9s una sol\u00b7licitud d'un recurs a un servidor. La petici\u00f3 es realitza a trav\u00e9s d'una URL. Amb la petici\u00f3 s'envien tamb\u00e9 par\u00e0metres. Hi ha diferents m\u00e8todes (METHOD) per a realitzar una petici\u00f3 (GET, POST, PUT, DELETE, PATCH, etc.). Els m\u00e9s habituals s\u00f3n GET i POST. La resta s\u00f3n m\u00e9s utilitzats en les RESTful API. M\u00e8tode GET El m\u00e8todo de sol\u00b7licitud GET t\u00e9 les seg\u00fcents caracter\u00edstiques: S'utilitza per a sol\u00b7licitar dades d'un recurs. Mostren els par\u00e0metres que s'envien en la url. Es poden utilitzar directament en enlla\u00e7os. El resultat es pot emmagatzemar en cache. Romanen en l'historial del navegador. La grand\u00e0ria dels par\u00e0metres est\u00e0 limitat a 2048 car\u00e0cters. Exemple de petici\u00f3 GET Inspecci\u00f3 de la petici\u00f3 Inspecci\u00f3 de la petici\u00f3 Accedir a les dades de la petici\u00f3 GET Per a accedir a les dades usem la variable superglobal $_GET . $_GET \u00e9s un array associatiu les claus del qual coincidiran amb els noms que li hem donat als par\u00e0metres. Per a accedir als par\u00e0metres de la petici\u00f3 anterior: echo $_GET [ 'nom' ] . ' ' . $_GET [ 'cognom' ]; // Homer Simpson M\u00e8tode POST El m\u00e8tode POST t\u00e9 les seg\u00fcents caracter\u00edstiques: S'utilitza per a enviar dades a un recurs. Els par\u00e0metres van en el cos de la petici\u00f3, no s\u00f3n visibles per a l'usuari. La petici\u00f3 no es guarda en cache. No es pot utilitzar en un enlla\u00e7. No roman en l'historial. No tenim la limitaci\u00f3 de grand\u00e0ria dels par\u00e0metres. Es solen utilitzar en els formularis. Evitar el CSRF En tota p\u00e0gina que reba par\u00e0metres POST has de comprovar el HTTP referer del navegador, i que aquest siga de dins de la teua web. En PHP el referer que envia el navegador s'emmagatzema en $_SERVER['HTTP_REFERER'] . \u00c9s a dir, sols processarem peticions que vinguen del teu lloc web. M\u00e9s informaci\u00f3 En el seg\u00fcent enlla\u00e7 trobareu m\u00e9s informaci\u00f3 relativa als atacs CSRF CSRF: explicaci\u00f3n del ataque Cross Site Request Forgery Seria tal com: if ( parse_url ( $_SERVER [ 'HTTP_REFERER' ], PHP_URL_HOST ) != $_SERVER [ 'HTTP_HOST' ]) die ( 'Anti-CSRF' ); Important Amb aquest codi estem obligant que el navegador envie un referer si o s\u00ed. Per tant nom\u00e9s ha d'utilitzar-se en p\u00e0gines a les quals el navegador accedisca des d'una altra p\u00e0gina de la nostra web. \u00d2bviament no podem col\u00b7locar-ho en la primera p\u00e0gina a la qual s'accedeix a la nostra web ( index.php o similar), ja que si l'usuari a escrit l'adre\u00e7a a m\u00e0 en la barra del navegador no s'enviar\u00e0 referer cap i saltar\u00e0 el sistema. Definici\u00f3 de formularis Com hem dit abans el m\u00e8tode POST s'empra en els formularis. El formulari seg\u00fcent enviar\u00e0 les dades a la p\u00e0gina index.php (atribut action de l'element form ). Utilitza el m\u00e8tode post indicat en l'atribut method : < form action = \"index.php\" method = \"post\" > < label for = \"nom\" > Nom </ label > < input type = \"text\" name = \"nom\" value = \"\" > < br /> < label for = \"cognom\" > Cognom </ label > < input type = \"text\" name = \"cognom\" value = \"\" > < br /> < input type = \"submit\" value = \"Enviar\" > </ form > Inspecci\u00f3 de la petici\u00f3: Headers Inspecci\u00f3 de la petici\u00f3: Param\u00e8tres Accedir a les dades de la petici\u00f3 POST Usem la variable superglobal $_POST . Funciona igual que $_GET , per\u00f2 amb els noms (atribut name ) que li hem donat als camps del formulari. En depuraci\u00f3 podem mostar totes les dades rebudes: var_dump ( $_POST ); print_r ( $_POST ) Per a mostrar les dades individualment: echo $_POST [ 'nom' ]; echo $_POST [ 'cognom' ]; Accedir a par\u00e0metres no existents Errors del tipus Notice: Undefined index: nom in /home/ubuntu/index.php on line 6 ens indiquen que la clau nom no existeix en l'array $_POST . La variable supergloblal $_POST est\u00e0 buida si no s'ha enviat el formulari. Per a evitar aquest tipus d'errors \u00e9s important verificar que s'haja enviat el formulari pr\u00e8viament: if ( $_SERVER [ 'REQUEST_METHOD' ] === 'POST' ) { } Validaci\u00f3 de formularis Hem de comprovar que les dades que envia el formulari s\u00f3n correctes. Les validacions a realitzar s\u00f3n les seg\u00fcents: Els camps requerits no han de quedar buits. Ni contenir espais en blanc a l'inici i al final. Els camps email i data han de tenir el format esperat. Tots els camps s'han de filtrar amb htmlspecialchars per a evitar atacs de Cross-site Scripting (XSS). Aquest article sobre Cross-site Scripting \u00e9s molt il\u00b7lustratiu: PHP Form Validation Valors buits Els camps requerits no deurien quedar-se buits. Per a verificar que un valor no queda buit podem utilitzar la funci\u00f3 empty() de PHP. Espais en blanc Hem d'eliminar els espais en blanc del principi i final dels camps. S'utilitza la funci\u00f3 trim Escapar l'entrada Sempre hem de filtrar l'entrada amb htmlspecialchars abans de mostrar el camp amb echo o similar. Ac\u00f2 convertir\u00e0 qualsevol car\u00e0cter especial d'html en la entitat corresponent, aix\u00ed no interferir\u00e0 en el el programa. Comprovar l'email Per a verificar si un email \u00e9s correcte podem utilitzar la funci\u00f3 filter_var filter_var ( $email , FILTER_VALIDATE_EMAIL ) o la funci\u00f3 filter_input quan obtenin les dades directament d'una variable extern. // suposem que rebem les dades d'un formulari que t\u00e9 un quadre de text de nom 'email' $email = filter_input ( INPUT_POST , 'email' , FILTER_VALIDATE_EMAIL ) filter_input filter_input ( int $type , string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options ]]) : mixed La funci\u00f3 filter_input agafa una variable externa ( $_GET , $_POST , etc) concreta pel seu nom i aplica el filtre indicat. Els filtres poden sanejar o validar les variables externes. Per exemple, si volem agafar el valor del par\u00e0metre nom del querystring ( http://localhost/index.php?nom=<h1>Homer</h1> ) usarem el tipus INPUT_GET . El filtre FILTER_SANITIZE_STRING elimina etiquetes, i opcionalment elimina o codifica caracters especials. $nom = filter_input ( INPUT_GET , 'nom' , FILTER_SANITIZE_STRING ) . // $nom = Homer M\u00e9s informaci\u00f3 en: filter_var filter_input Comprovar la data Per a comprovar la data hem de crear una funci\u00f3 a aquest efecte. Podem utilitzar el m\u00e8tode est\u00e0tic createFromFormat de la classe DateTime M\u00e9s informaci\u00f3: http://php.net/manual/es/datetime.createfromformat.php Exemple $data1 = \"2001-05-02\" ; // Data \u00e9s de tipus string // DateTime::createFromFormat converteix una cadena de text a on objecte DateTime // ens tornar\u00e0 una inst\u00e0ncia de DateTime o FALSE en cas d'error. $dt1 = DateTime :: createFromFormat ( 'Y-m-d' , $data1 ); if ( $dt1 === false ) { echo \"La data d'inici \u00e9s incorrecta\" ; } https://www.php.net/manual/es/function.strtotime.php Tamb\u00e9 \u00e9s habitual trobar els controls de data separats en 3 elements input. Un per a l\u2019any, l\u2019altre per a mes i l\u2019altre per al dia. Bones pr\u00e0ctiques en l\u2019obtenci\u00f3 de dades des de l\u2019exterior Cal seguir les seg\u00fcents bones pr\u00e0ctiques: No confieu mai (mai) en l\u2019entrada des de l\u2019exterior del vostre PHP. Sanegeu i valideu l\u2019entrada de dades sempre. Les funcions filter_var() i filter_input() poden sanejar el text i validar els formats de text (per exemple, adreces de correu electr\u00f2nic, enters). Recordeu que l\u2019entrada de dades no es limita a formularis enviats per l\u2019usuari. Els fitxers carregats i descarregats, els valors de sessi\u00f3, les dades de galetes i les dades de serveis web de tercers tamb\u00e9 s\u00f3n dades que venen de l'exterior. A mode de resum pod\u00edem resumir la gesti\u00f3 de formularis en el seg\u00fcent diagrama de flux. En els seg\u00fcents recursos trobar\u00e0s informaci\u00f3 addicional sobre els controls de formularis en HTML5: Formularios en HTML en MDN web docs. Formularios en HTML5 en MDN web docs. HTML Forms en W3CSchools. Sent\u00e8ncies per a incloure Fitxers Les sent\u00e8ncies include() i include_once() i require() i require_once() inclouen i avaluen el fitxeru especificat. include_once() i require_once() a m\u00e9s verifique que el fitxer no haja sigut incl\u00f2s abans i \u00e9s preferible a include . Cal ser cur\u00f2s amb el path de l'arxiu a incloure. La difer\u00e8ncia entre require i include \u00e9s el tractament de l'error quan el fitxer no existeix. Mentre include mostra un av\u00eds, require mostra una error fatal que para l'execuci\u00f3 de l'script. \u00c0mbit de les variables Com s'observa en l'exemple seg\u00fcent, les variables creades abans de cridar l'include, estaran disponibles en el fitxer incl\u00f2s. \u00c9s a dir, com si tot fora un \u00fanic document. fruits.php <? php $color = 'green' ; $fruit = 'apple' ; include 'fruit.view.php' fruits.view.php < html > < head > < title > Fruites </ title > </ head > < body > < h3 > <? = \"A $color $fruit \" ?> </ h3 > </ body > </ html > Rutes En l'exemple anterior include \"fruit.view.php\" la ruta s'especifica de forma relativa, \u00e9s a dir, la ruta es calcular\u00e0 a partir de l'execuci\u00f3 del fitxer principal. A mesura que les aplicacions van creixent aquest tipus de rutes acaben sent un mal de cap. Per aix\u00f2 \u00e9s recomanable escriure les inclusions de forma relativa per\u00f2 fixant pr\u00e8viament el directori actual. require __DIR__ . '/fruits.view.php'; Pujada de fitxers Per a pujar fitxers PHP implementa un mecanisme senzill a trav\u00e9s de la variable superglobal $_FILES . En Pujada d'arxius disposeu de tota la informaci\u00f3 necess\u00e0ria per a gestionar la pujada d'arxius. Formulari Per poder utilitzar el tipus file en l'element input cal que el formulari incloga l'atribut enctype amb el valor multipart/form-data . El valor de l'atribut name de l'element input ser\u00e0 l'\u00edndex de l'array associatiu $_FILES que ens permetr\u00e0 obtenir tota la informaci\u00f3 del proc\u00e9s de pujada del fitxer. En el seg\u00fcent exemple: < form action = \"upload.php\" enctype = \"multipart/form-data\" method = \"POST\" > < input type = \"hidden\" name = \"MAX_FILE_SIZE\" value = \"10240\" > < input type = \"file\" name = \"image\" /> < input type = \"submit\" value = \"Upload\" /> </ form > Emprarem $_FILES['image'] per obtenir les dades de l'arxiu penjat. Variable superglobal $_FILES Cada element en $_FILES \u00e9s un array que aporta informaci\u00f3 sobre el fitxer pujat. Les claus m\u00e9s importants s\u00f3n: name . El nom original del fitxer pujat. No \u00e9s massa \u00fatil perqu\u00e8 el sistema original pot tindre convencions diferents i pot generar col\u00b7lisions si l'utilitzem per a emmagatzemar-lo en la seua ubicaci\u00f3 definitiva. type . El tipus MIME del fitxer dedu\u00eft pel navegador. size . La grand\u00e0ria en bytes del fitxer. Si el fitxer \u00e9s massa gran el valor enviat ser\u00e0 0. tmp_name . El nom temporal del fitxer en el servidor on s'ha emmagatzemat el fitxer pujat. Moure el fitxer Com que el fitxer pujat es guarda en una carpeta temporal hem d'emprar la funci\u00f3 move_uploaded_file per a guardar-lo en la ubicaci\u00f3 definitiva. La funci\u00f3 is_uploaded_file ens permet a assegurar-nos que el fitxer ha estat pujat usant HTTP POST i no es tracta d'un fitxer malici\u00f3s. move_uploaded_file ja fa eixa comprovaci\u00f3 en executar-se. Gesti\u00f3 d'errors PHP torna un codi d'error en $_FILES . El codi es pot trabar en la clau error . Per exemple: $_FILES['image']['error'] . Els missates d'error m\u00e9s importants s\u00f3n: UPLOAD_ERR_OK : La pujada ha sigut correcta. UPLOAD_ERR_INI_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en la directiva upload_max_filesize . UPLOAD_ERR_FORM_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en el formulari en max_file_size . UPLOAD_ERR_NO_FILE : No s'ha enviat cap fitxer. En Explicaci\u00f3 dels missatges d'error teniu m\u00e9s informaci\u00f3. Activitats Cadenes 221Cadenes.php : Copia el contingut de la p\u00e0gina index.php , activa la directiva de tipus estricta ( declare( strict_types = 1 ); ) i mostra el seg\u00fcent: Elimina els espais del principi i el final del nom si els hi haguera ( trim ). Elimina la lletra a del principi i el final del nom si els hi haguera ( trim ). Mostra la variable nom en maj\u00fascules, min\u00fascules i amb la primera lletra en maj\u00fascula i les altres en min\u00fascules ( strtoupper , strtolower , ucfirst ). Mostra el codi ascii de la primera lletra del nom ( ord ). Mostra la longitud del nom ( strlen ). Mostra el nombre de vegades que apareix la lletra a (maj\u00fascula o min\u00fascula, substr_count ). Mostra la posici\u00f3 de la primera a existent en el nom, siga maj\u00fascula o min\u00fascula ( strpos ). Si no hi ha cap mostrar\u00e0 -1. El mateix, per\u00f2 amb l''\u00faltima a. Mostra el nom substituint la lletr o pel n\u00famero zero, siga maj\u00fascula o min\u00fascula ( str_replace ). Indica si el nom comen\u00e7a per al o no. 222Cadenes.php : En el mateix document cadenes.php i a partir d'una variable que continga una url: $url = 'http://username:password@hostname:9090/path?arg=value#anchor' ; Utilitza la funci\u00f3 parse_url per a extraure de la url les seg\u00fcents parts: 1. El protocol utilitzat (en l'exemple \"http\"). 2. El nom d'usuari (en l'exemple \"username\"). 3. El path de la url (en l'exemple \"/path\"). 4. El querystring de la url (en l'exemple \"arg=value\"). Arrays indexats 231Arrays.php : Crea una p\u00e0gina, copia el contingut de la p\u00e0gina index.php i resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array amb els noms de diversos alumnes de la classe incloent el teu. Mostra el nombre d'elements que t\u00e9 l'array ( count ). Crea una cadena de text que continga els noms dels alumnes existents en l'array separats per un espai i mostra-la ( implode ). Mostra l'array en un ordre aleatori diferent al que ho vas crear ( shuffle ). Mostra l'array ordenat alfab\u00e8ticament ( sort ). Mostra els alumnes el nom dels quals continga almenys una \u201ca\u201d ( array_filter ). Mostra l'array en l'ordre invers al que es va crear ( rsort ). Mostra la posici\u00f3 que t\u00e9 el teu nom en l'array ( array_search ). 232Ciutats.php : Segons l'INE les 7 ciutats m\u00e9s grans d\u2019Espanya (per habitants) el 2018 van ser les seg\u00fcents: Madrid, MAD, 3.223.334 Sevilla, AN , 688.711 Murcia, MU, 447.182 M\u00e1laga, AN, 571.026 Zaragoza, AR, 666.880 Val\u00e8ncia, CV, 791.413 Barcelona, CAT, 1.620.343 Copia index.php i crea un nou document cituats.php . Defineix un array que continga aquesta informaci\u00f3 sobre ciutats i habitants. Imprimeix una taula d'ubicacions i habitants que incloga la poblaci\u00f3 total de les 7 ciutats. Opcional: Modifica la soluci\u00f3 de l\u2019anterior exercici perqu\u00e8 mostre les ciutats ordenades per habitants. Despr\u00e9s mostra-les per ordre alfab\u00e8tic. Arrays multidimensionals 233Alumnes.php : Resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array d'alumnes on cada element siga un altre array que continga nom i edat de l'alumne. Crea una taula HTML en la qual es mostren totes les dades dels alumnes. Utilitza la funci\u00f3 array_column per a obtenir un array indexat que continga \u00fanicament els noms dels alumnes i mostra\u2019ls per pantalla. Crea un array amb 10 n\u00fameros i utilitza la funci\u00f3 array_sum per a obtenir la suma dels 10 nombres. Sense usar bucles for calcula la mitjana d'edat de l'alumnat. 234CiutatsOpcional.php : Modifica la soluci\u00f3 del exercici ciutats.php perqu\u00e8 la taula continga tamb\u00e9 la columna del total d\u2019habitants de la comunitat aut\u00f2noma de les ciutats de la llista i el percentatge sobre els habitants de la comunitat aut\u00f2noma que representa. Per exemple: Ciutat Habitants Habitats CA % sobre CA Val\u00e8ncia 791.413 5.003.769 15.81% Pista: Caldr\u00e0 modificar l'array $ciutats i convertir-lo en multidimensional. Les dades de comunitats aut\u00f2nomes hauran d'estar en un altre array. Dades: Municipis de Espa\u00f1a Funcions 241funcions.php : Escriu una funci\u00f3 per retornar una etiqueta HTML <img /> . La funci\u00f3 hauria d\u2019acceptar com a argument obligatori l\u2019URL de la imatge i arguments opcionals per a un text alternatiu, al\u00e7ada i amplada. 242funcions.php : Copieu la funci\u00f3 de l\u2019exercici anterior i modifiqueu-la de manera que nom\u00e9s es passe el nom de fitxer a la funci\u00f3 en lloc de l\u2019URL completa. Dins de la funci\u00f3, farem \u00fas d\u2019una variable global per fer l\u2019URL completa. Per exemple, si passem photo.png a la funci\u00f3, i la variable global cont\u00e9 /images , llavors l\u2019atribut src de l'etiqueta retornada ser\u00e0 /images/photo.png . Una funci\u00f3 com aquesta \u00e9s una forma senzilla de mantenir correctes les vostres etiquetes d\u2019imatges, fins i tot si les imatges es mouen a un nou cam\u00ed o servidor. Nom\u00e9s cal canviar la variable global, per exemple, de /images a http://images.example.com/. 243funciocolors.php : Els colors web com #ffffff i #cc3399 es realitzen concatenant els valors hexadecimals de color per a vermell, verd i blau. Escriu una funci\u00f3 que accepte 3 arguments: roig, verd i blau, i que retorne un string que cont\u00e9 el color adequat per utilitzar-lo en una p\u00e0gina web. Per exemple, si els arguments s\u00f3n 255, 0, i 255, llavors la cadena retornada hauria de ser #FF00FF. Pot resultar \u00fatil utilitzeu la funci\u00f3 dechex() integrada, que es troba documentada a http://www.php.net/ Assegureu-vos que els par\u00e0metres reben valors enters i que s\u00f3n colors v\u00e0lids. Implementa 3 exemples d\u2019\u00fas. 244funcionsSQL.php : Crea una funci\u00f3 anomenada insert que ens genere una sent\u00e8ncia INSERT INTO en SQL. Per a a\u00e7\u00f2 la funci\u00f3 rebr\u00e0 dos par\u00e0metres: 1. El nom de la taula 2. Un array associatiu que contindr\u00e0 els noms i valors dels camps de la taula. La sent\u00e8ncia resultant tindr\u00e0 la seg\u00fcent forma: \u201cINSERT INTO nom_taula (nom dels camps separats per comes) VALUES (noms dels camps separats per comes amb el car\u00e0cter \u201c:\u201d davant) De moment, no farem res amb els valors dels camps. Ajuda: utilitza les funcions sprintf , implode i array_keys 245funcionsSQL2.php : A partir de l'exercici anterior crea una altra funci\u00f3 que reba els mateixos par\u00e0metres m\u00e9s un par\u00e0metre boole\u00e0 per a indicar si volem generar la query amb els noms dels camps o no. El par\u00e0metre tindr\u00e0 el valor true per defecte. Si el seu valor \u00e9s true generar\u00e0 la consulta igual que en l'exercici anterior, per\u00f2 si \u00e9s false la generar\u00e0 aix\u00ed: INSERT INTO nom_taula VALUES ( valors dels camps separats per comes amb el car\u00e0cter \u2018 : \u2019 davant ) 246funcionsSQLReferencia.php : Repeteix l'exercici anterior amb els seg\u00fcents canvis: La cadena resultant es passar\u00e0 per refer\u00e8ncia. Passarem la cadena de la seg\u00fcent forma: INSERT INTO taula ( camps ) VALUES ( valors ) Dins de la funci\u00f3 substituirem el seg\u00fcent: El text taula pel nom de la taula. El text camps pels noms dels camps separats per comes El text valors pels noms dels camps separats per comes i el car\u00e0cter \u2018:\u2019 davant. Formularis 261ExempleGet.php : Crea una p\u00e0gina que reba com a par\u00e0metre un nom i mostre el text \u2018Benvingut [nom]!!!\u2019 sent [nom] el nom has passat com a par\u00e0metre. 262Formulari.php : Crea un formulari que tinga els seg\u00fcents camps: firstname lastname phone email En l'atribut action del formulari posarem el seg\u00fcent: < form action = \"262Formulari.php\" ... /> A\u00e7\u00f2 far\u00e0 que siga la pr\u00f2pia p\u00e0gina del formulari la que processe les dades del mateix. En pr\u00e9mer Enviar han d'apar\u00e8ixer sota el formulari les dades que s'han introdu\u00eft en el mateix en format de taula. 263FormulariReparat.php : Soluciona el problema dels par\u00e0metres no enviats de l'exercici anterior. 264FormulariValidat.php : Modifica l'exercici anterior realitzant les seg\u00fcents validacions: Tots els camps s\u00f3n obligatoris. firstname , no pot superar els 25 caracters. lastname , no pot superar els 50 caracters. phone , ha de contenir 9 digits (expressi\u00f3 regular: ^\\d{9}$ ). email , ha de ser una adre\u00e7a electr\u00f2nica correcta. S'avaluaran tots els camps i si hi ha error/s caldr\u00e0 mostrar-lo/s. Si no hi ha errors es mostraran les dades introdu\u00efdes per l'usuari. 265FormulariOpcions.php : Modifica l'exercici anterior afegint els seg\u00fcents camps al formulari: genre : ser\u00e0 un radio button i podr\u00e0 ser home , dona i no binari . hobbies : ser\u00e0 un checkbox amb aficions de la que podr\u00e0s triar-ne m\u00e9s d'una: Lectura Programaci\u00f3 Ciclisme Running ... contact-time : ser\u00e0 una llista de les millores hores per a contactar: Primera hora (08:00 a 10:00) Abans de dinar (12:00 a 13:00) Despr\u00e9s de dinar (14:00 a 16:00) Per la nit (20:00 a 22:00) En els tres casos s\u00f3n obligatoris, s'ha de mantindre el valor en cas de ser correcte . 266FormulariArray : Modifica l'exercici anterior de forma que el contingut dels camps de selecci\u00f3 es genere din\u00e0micament des d'arrays associatius. A m\u00e9s, els valors rebuts s'haurien de validar contra l' array i mostrar-se fent \u00e9s d'ell. Inclusi\u00f3 de fitxers 271Formulari.php : Basant-te en l'activitat 264FormulariValidat.php modifica les validacions perqu\u00e8 es facen mitjan\u00e7ant funcions. Les funcions es guardaran en el fitxer helpers.php i s'hauran d'incloure en fitxer 271Formulari.php . 272Formulari.php : Basant-te en l'activitat 271Formulari.php separa la part de codi de la presentaci\u00f3 de forma que tota la l\u00f2gica estiga en un fitxer i la part de presentaci\u00f3 en altre fitxer 271Formulari.view.php . Pujada de fitxers 281FormularImatge.php : Modifica l'activitat 272Formulari.php afegint un camp de tipus FILE per a pujar una imatge al servidor. Es guardar\u00e0 en la carpeta uploads i es mostrar\u00e0 amb la resta de dades. 282FormulariImage.php : Modifica l'activitat anterior de forma que es controle el seg\u00fcent: Les imatges sols podran ser jpg . No podran superar 1MB de grand\u00e0ria Es guardaran en un nom aleatori \u00fanic. Cr\u00e8dits Aitor Medrano. (setembre de 2021) Desarrollo Web en Entorno Servidor disponible en: https://aitor-medrano.github.io/dwes2122/index.html","title":"2.- El llenguatge PHP"},{"location":"02-phpbasics/#el-llenguatge-php","text":"Objectius Con\u00e8ixer la sintaxi b\u00e0sica de PHP i les noves caracter\u00edstiques de PHP 7. Entendre com s'integren PHP i HTML. Descriure els tipus de dades existents en PHP. Fer servir les estructures de control b\u00e0siques. Aprendre a utilitzar els arrays associatius. Con\u00e8ixer els mecanismes de pas de par\u00e0metres a un script. Processar i validar formularis Incloure fixters","title":"El llenguatge PHP"},{"location":"02-phpbasics/#introduccio","text":"Acr\u00f2nim de Personal Home Page Llenguatge de prop\u00f2sit general, encara que el seu fort \u00e9s el desenvolupament web. Sintaxi similar a C / Java El codi s'executa en el servidor (en Apache mitjan\u00e7ant mod_php ) El client rep el resultat generat despr\u00e9s d'interpretar el codi al servidor. El codi s'emmagatzema en arxiu amb extensi\u00f3 .php. L'\u00faltima versi\u00f3 \u00e9s la 8.0, de novembre de 2020 (i en breu tindrem la versi\u00f3 8.1). La versi\u00f3 7.0 va sortir al desembre de 2015. A m\u00e9s de nombroses noves funcionalitats que anirem veient durant el curs, t\u00e9 m\u00e9s de dues vegades millor rendiment que PHP5. PHP 7.4 Nosaltres farem \u00fas de la versi\u00f3 7.4 de PHP La seva documentaci\u00f3 \u00e9s extensa i est\u00e0 tradu\u00efda: https://www.php.net/manual/es/.","title":"Introducci\u00f3"},{"location":"02-phpbasics/#funcionament-i-estructura-basica","text":"","title":"Funcionament i estructura b\u00e0sica"},{"location":"02-phpbasics/#el-nostre-primer-codi-php","text":"El codi PHP sempre va entre els simbolos <?php i ?> . Les instruccions PHP acaben sempre amb ; . Per a generar codi HTML des de PHP podem utilitzar el m\u00e8tode echo passant-li el text del codi que volem generar. El codi pot anar entre les etiquetes d'HTML. < html > < head ></ head > < body > < h1 > <?php echo \"Hola m\u00f3n\" ?> </ h1 > < body > Tamb\u00e9 podem utilitzar l'etiqueta <?= fa el echo al mateix temps. < html > < head ></ head > < body > < h1 > <? = \"Hola m\u00f3n\" ?> </ h1 > < body >","title":"El nostre primer codi PHP"},{"location":"02-phpbasics/#comentaris","text":"De bloc entre /* i */ . De linea, comen\u00e7ant per // o per # .","title":"Comentaris"},{"location":"02-phpbasics/#codi-incrustat","text":"El documents que contenen codi PHP s'han d'anomenar amb l'extensi\u00f3 .php","title":"Codi incrustat"},{"location":"02-phpbasics/#variables-i-tipus-de-dades","text":"Una de les caracter\u00edstiques de php \u00e9s que \u00e9s un llenguatge no fortament tipat . De fet no cal declarar la variable ni indicar el tipus de dades si la declare. Encara que si volem codi de qualitat ho hauriem de fer.","title":"Variables i tipus de dades"},{"location":"02-phpbasics/#constants","text":"Per a definir constants s'utilitza define() , que reb el nom de la constant i el valor que li volem donar define ( \"LIMITE\" , 1000 ); \u00c9s habitual utilitzar identificadors en majuscules per a les constants.","title":"Constants"},{"location":"02-phpbasics/#operadors","text":"","title":"Operadors"},{"location":"02-phpbasics/#arimetics","text":"Exemple Nom Resultat +$a Identidat Conversi\u00f3 de $a a int o float segons el cas. -$a Negaci\u00f3 Oposat de $a . $a + $b Suma Suma de $a i $b . $a - $b Resta Difer\u00e8ncia de $a i $b . $a * $b Multiplicaci\u00f3 Producte de $a i $b . $a / $b Divisi\u00f3 Quocient de $a i $b . $a % $b M\u00f3dul / Residu Residu de $a dividit per $b . $a ** $b Pot\u00e8ncia Resultat de $a elevat a $b . PHP >= 5.6. En el caso de cadenas , si queremos concatenarlas, se utiliza el operador . : $x = 33 ; $y = 11 ; $z = $x + $y ; echo \"La suma de 33 y 11 es \" . 44. \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . ( 33 + 11 ) . \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . $z . \"<br />\" ; Realment en lloc de concatenar cadenas con variables, podem imprimir-les directament ja que s'expandeixen autom\u00e0ticament: echo \"La suma de $x y $y es $z <br />\" ; En ocasions, necesitem envoltar el nom de la variable entre claus per poder un m\u00e9s text al resultat: $color = \"rojo\" ; echo \"El plural de $color el ${ color } s\" ; ?> M\u00e9s endavant estudiarem algunes funcions per al tractament de cadenes.","title":"Arim\u00e8tics"},{"location":"02-phpbasics/#comparacio","text":"Exemple Nom Resultat $a == $b Igual true si $a \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a === $b Id\u00e8ntic, Comparaci\u00f3 estricta true si $a \u00e9s igual a $b , i s\u00f3n del mateix tipus de dada. $a != $b , $a <> $b Diferent true si $a no \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a !== $b No id\u00e8ntic true si $a no \u00e9s igual a $b , o si no s\u00f3n del mateix tipus. $a < $b Menor que true si $a \u00e9s estrictament menor que $b . $a > $b Major que true si $a \u00e9s estrictament major que $b . $a <= $b Menor o igual que true si $a \u00e9s menor o igual que $b . $a >= $b Major o igual que true si $a \u00e9s major o igual que $b . $a <=> $b Nau espacial Torna -1 , 0 o 1 quan $a \u00e9s respectivamente menor, igual, o major que $b . PHP >= 7. $a ?? $b ?? $c Fusi\u00f3n de null El primer operano d'esquerra a dreta que existisca i no siga null . null si no hi ha valors definits i no s\u00f3n null . PHP >= 7.","title":"Comparaci\u00f3"},{"location":"02-phpbasics/#logics","text":"Exemple Nom Resultat $a and $b , $a && $b And (i) true si tant $a com $b s\u00f3n true . $a or $b , $a || $b Or (o inclusiu) true si qualsevol de $a o $b \u00e9s true . $a xor $b Xor (o exclusiu) true si $a o $b \u00e9s true , pero no ambd\u00f3s. !$a Not (no) true si $a no \u00e9s true .","title":"L\u00f2gics"},{"location":"02-phpbasics/#assignacio","text":"Exemple Nom Resultat $a = $b Assignaci\u00f3 Assigna a $a el valor de $b $a += $b Assignaci\u00f3 de la suma Le suma a $a el valor de $b . Equivalent a $a = $a + $b $a -= $b Assignaci\u00f3 de la resta Le resta a $a el valor de $b . Equivalent a $a = $a - $b $a *= $b Assignaci\u00f3 del producte Assigna a $a el producto de $a por $b . Equivalent a $a = $a * $b $a /= $b Assignaci\u00f3 de la divisi\u00f3 Assigna a $a el quocient de $a entre $b . Equivalent a $a = $a / $b $a %= $b Assignaci\u00f3 del residu Assigna a $a el residu de dividir $a entre $b . Equivalent a $a = $a % $b $a .= $b Concatenaci\u00f3 Concatena a $a la cadena $b . Equivalent a $a = $a . $b $a++ Increment Incrementa $a en una unitat. Equivalent a $a = $a + 1 $a-- Decrement Decrementa $a en una unitat. Equivalent a $a = $a - 1 Prioridad de los operadores Recorda la prioritat. Primer els par\u00e8ntesis, despr\u00e9s la negaci\u00f3 ( ! ), productes/divisions, sumes/restes, comparacions, l\u00f2gics i finalment es realitza l'assignaci\u00f3. M\u00e9s informaci\u00f3 a https://www.php.net/manual/es/language.operators.precedence.php Autoevaluaci\u00f3n Si $a=5 i $b=4 , esbrina el valor de $c si $c = $a*2 > $b+5 && !($b<>4)","title":"Assignaci\u00f3"},{"location":"02-phpbasics/#estructures-de-control-de-flux","text":"Les instruccions de control de flux en PHP funcionen exactament igual que en altres llenguatges de programaci\u00f3. Les m\u00e9s habituals s\u00f3n: Condicionals: if, if else, switch Bucles: while, do while, for seguint les estructures: if ( condici\u00f3 ) { // instruccions } else { // instruccions } switch ( $variable ) { case valor : //instruccio1 break ; case valor : //instruccio1 break ; default : //instruccio1 } while ( condici\u00f3 ) { //instruccions } do { //instruccions } while ( condici\u00f3 ); for ( $i = 1 ; $i < 10 ; $i ++ ){ //instruccions } http://php.net/manual/es/language.control-structures.php","title":"Estructures de control de flux"},{"location":"02-phpbasics/#maneig-de-cadenes-de-text","text":"Podem utilitzar tant cometes simples com a cometes dobles. Per a concatenar cadenes utilitzarem l'operador punt (.) $fullName = $name.' '.$surname; Funcions de cadena","title":"Maneig de cadenes de text"},{"location":"02-phpbasics/#maneig-de-dates","text":"","title":"Maneig de dates"},{"location":"02-phpbasics/#funcio-time","text":"En PHP les dates s'emmagatzemen com a n\u00fameros enters. La funci\u00f3 time() retorna el nombre de segons transcorreguts des de l'1 de gener de 1970 (instant conegut com a \u00e8poca Unix). A aquesta forma d'expressar data i hora se li denomina timestamp .","title":"Funci\u00f3 time()"},{"location":"02-phpbasics/#funcio-date","text":"date ( string $format [, int $timestamp = time ()]) : string La funci\u00f3 date retorna una cadena formatada segons els codi de format. Si no li passem la variable timestamp ens retorna la cadena formatada per a la data i l'hora actual. Els codis de format m\u00e9s habituals per a la funci\u00f3 date s\u00f3n: CODI DESCRIPCI\u00d3 a am o pm A AM o PM d Dia del mes amb zeros D Abreviatura del dia de la setmana (en angl\u00e8s) F Nom del mes (en angl\u00e8s) h Hora en format 1-12 H Hora en format 0-23 i Minuts j Dia del mes sense zeros l Dia de la setmana m N\u00famero de mes (1-12) M Abreviatura del mes (en angl\u00e8s) s Segons y Any amb 2 d\u00edgits Y Any amb 4 d\u00edgits z Dia de l'any (1-365) La informaci\u00f3 completa la pots trobar en el manual oficial de PHP: date Suposant que hui \u00e9s 15 de setembre de 2019 i les 19 hores 20 minuts i 23 segons et mostrem alguns exemples: date ( \"d-m-Y\" ); // 15-09-2019 date ( \"H:i:s\" ); // 19:20:23 date ( \"Y\" ); // 2019 date ( \"YmdHis\" ); // 20190915192023 date ( \"d/m/y H:i a\" ); // 15/09/19 19:20 pm date ( \"d-m-Y H:i\" , time ()); // Moment actual","title":"Funci\u00f3 date()"},{"location":"02-phpbasics/#funcio-mktimehora-min-seg-mes-dia-any","text":"La funci\u00f3 mktime permet obtenir la marca de temps Unix ( timestamp ) d'una data. Per exemple: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); echo date ( 'd-m-Y' , $data ); // mostrar\u00e0 01-01-2020 M\u00e9s informaci\u00f3 en https://www.php.net/manual/es/function.mktime.php Un altra forma de crear dates \u00e9s mitjan\u00e7ant la funci\u00f3 strtotime() on podem indicar les dates mitjan\u00e7ant una cadena de text. Per exemple: // posarem la data en el format any-mes-dia per a evitar confusions. $date = strtotime ( \"2020-01-01\" );","title":"Funci\u00f3 mktime(hora, min, seg, mes, dia, any)"},{"location":"02-phpbasics/#operar-amb-dates","text":"Com hem dit al principi les dates s'emmagatzem com a enters on cada unitat representa un segon. Aix\u00ed podem sumar i restar dates ( timestamp ) per a afegir, llevar o calcular difer\u00e8ncies entre ells. Per exemple, per poder determinar els dies que falten per a l'1 de gener de 2020 far\u00edem: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); // timestamp que representa l'1 de gener de 2020 $diferencia = $data - time (); // restem a l'1 de gener de 2020 el temps actual, // el resultat estar\u00e0 en segons. $diferenciaEnDies = ((( $diferencia / 60 ) / 60 ) / 24 ); /* dividim els segons entre 60 i obtenim els minuts, els dividim entre 60 i obtenim les hores, els dividim entre 24 i obtenim els dies */","title":"Operar amb dates"},{"location":"02-phpbasics/#validar-dates","text":"En la funci\u00f3 checkdate podem validar una data. checkdate ( int $month , int $day , int $year ) : bool La funci\u00f3 torna true si la data es v\u00e0lida, si no, torna false .","title":"Validar dates"},{"location":"02-phpbasics/#classe-datetime","text":"PHP disposa tamb\u00e9 de la classe DateTime per a representar les dates, la veurem m\u00e9s avant. Activitat 3: Treballar amb dates Crea un fitxer anomenat dates.php i realitza les seg\u00fcents tasques: Mostra la data i hora actuals amb el format: dd/mm/yyyy hh:mm:ss Mostra el nom de la zona hor\u00e0ria que s'utilitza per defecte. Mostra la data de que ser\u00e0 d\u2019ac\u00ed 45 dies. Mostra el nombre de dies que han passat des de l'1 de gener. Mostra la data i hora actuals de Nova York. Mostra el dia de la setmana que era l'1 de gener d'enguany. En acabar penja el document a Aules. Activitat 4 200dadesPersonals.php : Escriu un programa que emmagatzeme en variables teu nom, primer cognom, segon cognom, email, any de naixement i tel\u00e8fon. Despr\u00e9s mostra'ls per pantalla dins d'una taula. Nom Bruce Cognoms Wayne Email batman@dccomics.com Any de naixement 1939 Tel\u00e8fon 555666777 206anyos.php : Despr\u00e9s de llegir l'edat d'una persona, mostrar l'edat que tindr\u00e0 d'aqu\u00ed a 10 anys i fa 10 anys. A m\u00e9s, mostra quin any ser\u00e0 en cada un dels casos. Finalment, mostra l'any de jubilaci\u00f3 suposant que treballar\u00e0s fins als 65 anys. Tip: $anyoActual = date(\"Y\") ;","title":"Classe DateTime"},{"location":"02-phpbasics/#maneig-darrays","text":"Un array \u00e9s un tipus de dades que ens permet emmagatzemar diversos valors. Per tal d'accedir a un valor utilitzarem una clau . Les claus poden ser nombres o textos ( arrays associatius ). Si no indiquem cap clau, a cada element se li associar\u00e0 una clau num\u00e8rica correlativa.","title":"Maneig d'arrays"},{"location":"02-phpbasics/#array-indexat","text":"","title":"Array indexat"},{"location":"02-phpbasics/#arrays-associatius","text":"Si el array cont\u00e9 dades diverses i/o ens interessa accedir a ells amb claus m\u00e9s espec\u00edfiques que un simple \u00edndex num\u00e8ric podem utilitzar arrays associatius: $alumne = array ( 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ); $alumne = [ 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ]; $alumne [ 'nom' ] = 'Ver\u00f3nica' ; echo $alumne [ 'nom' ];","title":"Arrays associatius"},{"location":"02-phpbasics/#arrays-multidimensionals","text":"Imagina que volem tenir un array els elements del qual s\u00f3n noms d'esports. Volem dividir-los en esports d'hivern i esports d'estiu. Podem crear un array esports que continga dos elements que al seu torn tamb\u00e9 seran arrays. $esports = [ 'hivern' => [ 'esqu\u00ed de fons' , 'hoquei sobre gel' ], 'estiu' => [ 'nataci\u00f3' , 'voley platja' ] ]; Per a accedir al primer esport d'hivern: echo $esports [ 'hivern' ][ 0 ];","title":"Arrays multidimensionals"},{"location":"02-phpbasics/#funcions-darrays","text":"Podem obtenir la mida de l'array mitjan\u00e7ant la funci\u00f3 count(array) . Per rec\u00f3rrer l'array farem \u00fas d'un bucle for : $tam = count($fruites); // mida de l'array for ($i=0; $i < count ($ fruites ); $ i ++) { echo \" Element $ i: $ fruites [$ i ] < br /> \"; } Les operacions m\u00e9s importants que podem realitzar amb arrays s\u00f3n: print_r($ array) : mostra el contingut de tot el $array $elem = array_pop($array) : elimina l'\u00faltim $element array_push ($ array, $ elem) : afegeix un $element al final. $bool = in_array($elem, $array) : esbrina si $elem est\u00e0 en el $array PHP $fruits = [ \"orange\" , \"pear\" , \"apple\" ]; array_push ( $fruites , \"pinapple\" ); print_r ( $fruits ); $lastFruit = array_pop ( $fruits ); if ( in_array ( \"pineapple\" , $fruits )) { echo \"<p> Pineapple left </ p>\" ; } else { echo \"<p> No pineapple left </ p>\" ; } print_r ( $fruites ); ?> Consola Array ( [0] => orange [1] => pear [2] => apple [3] => pinapple ) <p>No pineapple left</ p> Array ( [0] => orange [1] => pear [2] => apple ) $claus = array_keys($array) : torna les claus de l' $ array associatiu. $tam = count ($array) : retorna la mida de $ array . sort($array) : ordena els elements de l' $ array . isset($array[element]) : indica si existeix / t\u00e9 valor element dins del array. unset($array[element]) : elimina l'element de l'array (deixa un buit). PHP $capitals = array ( \"Italy\" => \"Rome\" , \"France\" => \"Paris\" , \"Portugal\" => \"Lisbon\" ); $countries = array_keys ( $capitals ); print_r ( $countries ); sort ( $countries ); print_r ( $countries ); unset ( $capitals [ \"France\" ]); print_r ( $capitals ); Consola Array ( [0] => Italy [1] => France [2] => Portugal ) Array ( [0] => France [1] => Italy [2] => Portugal ) Array ( [Italy] => Rome [Portugal] => Lisbon ) Existeixen molt\u00edssimes m\u00e9s funcions per treballar amb arrays. Tota la informaci\u00f3 en el documentaci\u00f3 oficial . Articles per aprofundir en les operacions amb arrays Un article molt complet (en angl\u00e8s) de Com treballar amb arrays en PHP de la manera correcta . Un altre article recomanable (en angl\u00e8s) \u00e9s Com ordenar arrays en PHP . Altres recursos: https://www.studytonight.com/php/indexed-array https://aprende-web.net/php/php6_1.php","title":"Funcions d'arrays"},{"location":"02-phpbasics/#funcions","text":"","title":"Funcions"},{"location":"02-phpbasics/#funcions-predefinides","text":"Algunes de les funcions predefinides en PHP s\u00f3n les seg\u00fcents, per\u00f2 hi ha molt\u00edssimes m\u00e9s vinculades als diferents m\u00f2duls que podem instal\u00b7lar. is_null($var) determina si una variable \u00e9s nula o no. isset($var) determina si una variable estan definida i no \u00e9s NULL. unset($var) destrueix les variables especificades. empty($var) torna true si no existeix o \u00e9s FALSE is_int($var) , is_float() , is_bool() , is_array() var_dump($var) , mostra informaci\u00f3 de la variable.","title":"Funcions predefinides"},{"location":"02-phpbasics/#funcions-definides-per-lusuari","text":"Per a crear les teues pr\u00f2pies funcions, haur\u00e0s d'usar la paraula function : function suma ( $a , $b ) { return $a + $b ; } Per tal d'invocar la funci\u00f3: $resultat = suma ( 5 , 7 ); Si una funci\u00f3 no t\u00e9 una sent\u00e8ncia return , retorna null en finalitzar. Command-query separation S\u00ed b\u00e9 \u00e9s un principi de la programaci\u00f3 orientada a objectes \u00e9s \u00fatil usar-lo tamb\u00e9 quan definim funcions. El principi afirma que cada m\u00e8tode ha de ser un comandament que realitza una acci\u00f3 o una consulta que retorna dades al que la crida, pero no ambdues coses.","title":"Funcions definides per l'usuari"},{"location":"02-phpbasics/#valors-per-defecte-en-els-parametres","text":"Podem indicar valors per defecte per als par\u00e0metres. Si quan cridem a la funci\u00f3 no indiquem el valor d'un par\u00e0metre es prendr\u00e0 el valor per defecte indicat. function preuAmbIva ( $preu , $iva = 0.21 ){ return $preu * ( 1 + $iva ); } $preu = 10 ; $pIva = preuAmbIva ( $preu ); Pot haver-hi m\u00e9s d'un par\u00e0metre amb valor per defecte, per\u00f2 sempre han d'estar al final.","title":"Valors per defecte en els par\u00e0metres"},{"location":"02-phpbasics/#pas-de-parametres-per-referencia","text":"Per defecte els par\u00e0metres es passen per valor. Per a passar un par\u00e0metre per refer\u00e8ncia afegirem el s\u00edmbol & davant del seu nom. function preuAmbIva ( & $preu , $iva = 0.18 ){ $preu *= ( 1 + $iva ); }","title":"Pas de par\u00e0metres per refer\u00e8ncia"},{"location":"02-phpbasics/#noves-caracterisques-php-7","text":"","title":"Noves caracter\u00edsques PHP 7"},{"location":"02-phpbasics/#spaceship-operator","text":"Compara dues expressions $a i $b i torna -1 si $a \u00e9s menor que $b, 0 si s\u00f3n iguals i 1 si $b \u00e9s major que $a. Exemple: // Integers echo 1 <=> 1 ; // 0 echo 1 <=> 2 ; // -1 echo 2 <=> 1 ; // 1","title":"Spaceship operator  (&lt;==&gt;)"},{"location":"02-phpbasics/#operador-de-fusio-de-null","text":"Torna el primer operand si existeix i no \u00e9s NULL o el segon operand. Exemple: // Fetches the value of $_GET['user'] and returns 'nobody' // if it does not exist. $username = $_GET [ 'user' ] ?? 'nobody' ; // This is equivalent to: $username = isset ( $_GET [ 'user' ]) ? $_GET [ 'user' ] : 'nobody' ; M\u00e9s recursos: Noves caracter\u00edstiques PHP 7.0 Noves caracter\u00edstiques PHP 7.1 Noves caracter\u00edstiques PHP 7.2 Noves caracter\u00edstiques PHP 7.3 Noves caracter\u00edstiques PHP 7.4 Noves caracter\u00edstiques PHP 8.0","title":"Operador de fusi\u00f3 de null ??"},{"location":"02-phpbasics/#processament-de-formularis","text":"","title":"Processament de formularis"},{"location":"02-phpbasics/#que-es-una-peticio-http","text":"Una petici\u00f3 HTTP \u00e9s una sol\u00b7licitud d'un recurs a un servidor. La petici\u00f3 es realitza a trav\u00e9s d'una URL. Amb la petici\u00f3 s'envien tamb\u00e9 par\u00e0metres. Hi ha diferents m\u00e8todes (METHOD) per a realitzar una petici\u00f3 (GET, POST, PUT, DELETE, PATCH, etc.). Els m\u00e9s habituals s\u00f3n GET i POST. La resta s\u00f3n m\u00e9s utilitzats en les RESTful API.","title":"Qu\u00e8 \u00e9s una petici\u00f3 HTTP?"},{"location":"02-phpbasics/#metode-get","text":"El m\u00e8todo de sol\u00b7licitud GET t\u00e9 les seg\u00fcents caracter\u00edstiques: S'utilitza per a sol\u00b7licitar dades d'un recurs. Mostren els par\u00e0metres que s'envien en la url. Es poden utilitzar directament en enlla\u00e7os. El resultat es pot emmagatzemar en cache. Romanen en l'historial del navegador. La grand\u00e0ria dels par\u00e0metres est\u00e0 limitat a 2048 car\u00e0cters. Exemple de petici\u00f3 GET Inspecci\u00f3 de la petici\u00f3 Inspecci\u00f3 de la petici\u00f3","title":"M\u00e8tode GET"},{"location":"02-phpbasics/#definicio-de-formularis","text":"Com hem dit abans el m\u00e8tode POST s'empra en els formularis. El formulari seg\u00fcent enviar\u00e0 les dades a la p\u00e0gina index.php (atribut action de l'element form ). Utilitza el m\u00e8tode post indicat en l'atribut method : < form action = \"index.php\" method = \"post\" > < label for = \"nom\" > Nom </ label > < input type = \"text\" name = \"nom\" value = \"\" > < br /> < label for = \"cognom\" > Cognom </ label > < input type = \"text\" name = \"cognom\" value = \"\" > < br /> < input type = \"submit\" value = \"Enviar\" > </ form > Inspecci\u00f3 de la petici\u00f3: Headers Inspecci\u00f3 de la petici\u00f3: Param\u00e8tres","title":"Definici\u00f3 de formularis"},{"location":"02-phpbasics/#accedir-a-les-dades-de-la-peticio-post","text":"Usem la variable superglobal $_POST . Funciona igual que $_GET , per\u00f2 amb els noms (atribut name ) que li hem donat als camps del formulari. En depuraci\u00f3 podem mostar totes les dades rebudes: var_dump ( $_POST ); print_r ( $_POST ) Per a mostrar les dades individualment: echo $_POST [ 'nom' ]; echo $_POST [ 'cognom' ];","title":"Accedir a les dades de la petici\u00f3 POST"},{"location":"02-phpbasics/#validacio-de-formularis","text":"Hem de comprovar que les dades que envia el formulari s\u00f3n correctes. Les validacions a realitzar s\u00f3n les seg\u00fcents: Els camps requerits no han de quedar buits. Ni contenir espais en blanc a l'inici i al final. Els camps email i data han de tenir el format esperat. Tots els camps s'han de filtrar amb htmlspecialchars per a evitar atacs de Cross-site Scripting (XSS). Aquest article sobre Cross-site Scripting \u00e9s molt il\u00b7lustratiu: PHP Form Validation","title":"Validaci\u00f3 de formularis"},{"location":"02-phpbasics/#comprovar-la-data","text":"Per a comprovar la data hem de crear una funci\u00f3 a aquest efecte. Podem utilitzar el m\u00e8tode est\u00e0tic createFromFormat de la classe DateTime M\u00e9s informaci\u00f3: http://php.net/manual/es/datetime.createfromformat.php","title":"Comprovar la data"},{"location":"02-phpbasics/#bones-practiques-en-lobtencio-de-dades-des-de-lexterior","text":"Cal seguir les seg\u00fcents bones pr\u00e0ctiques: No confieu mai (mai) en l\u2019entrada des de l\u2019exterior del vostre PHP. Sanegeu i valideu l\u2019entrada de dades sempre. Les funcions filter_var() i filter_input() poden sanejar el text i validar els formats de text (per exemple, adreces de correu electr\u00f2nic, enters). Recordeu que l\u2019entrada de dades no es limita a formularis enviats per l\u2019usuari. Els fitxers carregats i descarregats, els valors de sessi\u00f3, les dades de galetes i les dades de serveis web de tercers tamb\u00e9 s\u00f3n dades que venen de l'exterior. A mode de resum pod\u00edem resumir la gesti\u00f3 de formularis en el seg\u00fcent diagrama de flux. En els seg\u00fcents recursos trobar\u00e0s informaci\u00f3 addicional sobre els controls de formularis en HTML5: Formularios en HTML en MDN web docs. Formularios en HTML5 en MDN web docs. HTML Forms en W3CSchools.","title":"Bones pr\u00e0ctiques en l\u2019obtenci\u00f3 de dades des de l\u2019exterior"},{"location":"02-phpbasics/#sentencies-per-a-incloure-fitxers","text":"Les sent\u00e8ncies include() i include_once() i require() i require_once() inclouen i avaluen el fitxeru especificat. include_once() i require_once() a m\u00e9s verifique que el fitxer no haja sigut incl\u00f2s abans i \u00e9s preferible a include . Cal ser cur\u00f2s amb el path de l'arxiu a incloure. La difer\u00e8ncia entre require i include \u00e9s el tractament de l'error quan el fitxer no existeix. Mentre include mostra un av\u00eds, require mostra una error fatal que para l'execuci\u00f3 de l'script.","title":"Sent\u00e8ncies per a incloure Fitxers"},{"location":"02-phpbasics/#ambit-de-les-variables_1","text":"Com s'observa en l'exemple seg\u00fcent, les variables creades abans de cridar l'include, estaran disponibles en el fitxer incl\u00f2s. \u00c9s a dir, com si tot fora un \u00fanic document. fruits.php <? php $color = 'green' ; $fruit = 'apple' ; include 'fruit.view.php' fruits.view.php < html > < head > < title > Fruites </ title > </ head > < body > < h3 > <? = \"A $color $fruit \" ?> </ h3 > </ body > </ html >","title":"\u00c0mbit de les variables"},{"location":"02-phpbasics/#rutes","text":"En l'exemple anterior include \"fruit.view.php\" la ruta s'especifica de forma relativa, \u00e9s a dir, la ruta es calcular\u00e0 a partir de l'execuci\u00f3 del fitxer principal. A mesura que les aplicacions van creixent aquest tipus de rutes acaben sent un mal de cap. Per aix\u00f2 \u00e9s recomanable escriure les inclusions de forma relativa per\u00f2 fixant pr\u00e8viament el directori actual. require __DIR__ . '/fruits.view.php';","title":"Rutes"},{"location":"02-phpbasics/#pujada-de-fitxers","text":"Per a pujar fitxers PHP implementa un mecanisme senzill a trav\u00e9s de la variable superglobal $_FILES . En Pujada d'arxius disposeu de tota la informaci\u00f3 necess\u00e0ria per a gestionar la pujada d'arxius.","title":"Pujada de fitxers"},{"location":"02-phpbasics/#formulari","text":"Per poder utilitzar el tipus file en l'element input cal que el formulari incloga l'atribut enctype amb el valor multipart/form-data . El valor de l'atribut name de l'element input ser\u00e0 l'\u00edndex de l'array associatiu $_FILES que ens permetr\u00e0 obtenir tota la informaci\u00f3 del proc\u00e9s de pujada del fitxer. En el seg\u00fcent exemple: < form action = \"upload.php\" enctype = \"multipart/form-data\" method = \"POST\" > < input type = \"hidden\" name = \"MAX_FILE_SIZE\" value = \"10240\" > < input type = \"file\" name = \"image\" /> < input type = \"submit\" value = \"Upload\" /> </ form > Emprarem $_FILES['image'] per obtenir les dades de l'arxiu penjat.","title":"Formulari"},{"location":"02-phpbasics/#variable-superglobal-_files","text":"Cada element en $_FILES \u00e9s un array que aporta informaci\u00f3 sobre el fitxer pujat. Les claus m\u00e9s importants s\u00f3n: name . El nom original del fitxer pujat. No \u00e9s massa \u00fatil perqu\u00e8 el sistema original pot tindre convencions diferents i pot generar col\u00b7lisions si l'utilitzem per a emmagatzemar-lo en la seua ubicaci\u00f3 definitiva. type . El tipus MIME del fitxer dedu\u00eft pel navegador. size . La grand\u00e0ria en bytes del fitxer. Si el fitxer \u00e9s massa gran el valor enviat ser\u00e0 0. tmp_name . El nom temporal del fitxer en el servidor on s'ha emmagatzemat el fitxer pujat.","title":"Variable superglobal $_FILES"},{"location":"02-phpbasics/#moure-el-fitxer","text":"Com que el fitxer pujat es guarda en una carpeta temporal hem d'emprar la funci\u00f3 move_uploaded_file per a guardar-lo en la ubicaci\u00f3 definitiva. La funci\u00f3 is_uploaded_file ens permet a assegurar-nos que el fitxer ha estat pujat usant HTTP POST i no es tracta d'un fitxer malici\u00f3s. move_uploaded_file ja fa eixa comprovaci\u00f3 en executar-se.","title":"Moure el fitxer"},{"location":"02-phpbasics/#gestio-derrors","text":"PHP torna un codi d'error en $_FILES . El codi es pot trabar en la clau error . Per exemple: $_FILES['image']['error'] . Els missates d'error m\u00e9s importants s\u00f3n: UPLOAD_ERR_OK : La pujada ha sigut correcta. UPLOAD_ERR_INI_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en la directiva upload_max_filesize . UPLOAD_ERR_FORM_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en el formulari en max_file_size . UPLOAD_ERR_NO_FILE : No s'ha enviat cap fitxer. En Explicaci\u00f3 dels missatges d'error teniu m\u00e9s informaci\u00f3.","title":"Gesti\u00f3 d'errors"},{"location":"02-phpbasics/#activitats","text":"","title":"Activitats"},{"location":"02-phpbasics/#cadenes","text":"221Cadenes.php : Copia el contingut de la p\u00e0gina index.php , activa la directiva de tipus estricta ( declare( strict_types = 1 ); ) i mostra el seg\u00fcent: Elimina els espais del principi i el final del nom si els hi haguera ( trim ). Elimina la lletra a del principi i el final del nom si els hi haguera ( trim ). Mostra la variable nom en maj\u00fascules, min\u00fascules i amb la primera lletra en maj\u00fascula i les altres en min\u00fascules ( strtoupper , strtolower , ucfirst ). Mostra el codi ascii de la primera lletra del nom ( ord ). Mostra la longitud del nom ( strlen ). Mostra el nombre de vegades que apareix la lletra a (maj\u00fascula o min\u00fascula, substr_count ). Mostra la posici\u00f3 de la primera a existent en el nom, siga maj\u00fascula o min\u00fascula ( strpos ). Si no hi ha cap mostrar\u00e0 -1. El mateix, per\u00f2 amb l''\u00faltima a. Mostra el nom substituint la lletr o pel n\u00famero zero, siga maj\u00fascula o min\u00fascula ( str_replace ). Indica si el nom comen\u00e7a per al o no. 222Cadenes.php : En el mateix document cadenes.php i a partir d'una variable que continga una url: $url = 'http://username:password@hostname:9090/path?arg=value#anchor' ; Utilitza la funci\u00f3 parse_url per a extraure de la url les seg\u00fcents parts: 1. El protocol utilitzat (en l'exemple \"http\"). 2. El nom d'usuari (en l'exemple \"username\"). 3. El path de la url (en l'exemple \"/path\"). 4. El querystring de la url (en l'exemple \"arg=value\").","title":"Cadenes"},{"location":"02-phpbasics/#arrays-indexats","text":"231Arrays.php : Crea una p\u00e0gina, copia el contingut de la p\u00e0gina index.php i resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array amb els noms de diversos alumnes de la classe incloent el teu. Mostra el nombre d'elements que t\u00e9 l'array ( count ). Crea una cadena de text que continga els noms dels alumnes existents en l'array separats per un espai i mostra-la ( implode ). Mostra l'array en un ordre aleatori diferent al que ho vas crear ( shuffle ). Mostra l'array ordenat alfab\u00e8ticament ( sort ). Mostra els alumnes el nom dels quals continga almenys una \u201ca\u201d ( array_filter ). Mostra l'array en l'ordre invers al que es va crear ( rsort ). Mostra la posici\u00f3 que t\u00e9 el teu nom en l'array ( array_search ). 232Ciutats.php : Segons l'INE les 7 ciutats m\u00e9s grans d\u2019Espanya (per habitants) el 2018 van ser les seg\u00fcents: Madrid, MAD, 3.223.334 Sevilla, AN , 688.711 Murcia, MU, 447.182 M\u00e1laga, AN, 571.026 Zaragoza, AR, 666.880 Val\u00e8ncia, CV, 791.413 Barcelona, CAT, 1.620.343 Copia index.php i crea un nou document cituats.php . Defineix un array que continga aquesta informaci\u00f3 sobre ciutats i habitants. Imprimeix una taula d'ubicacions i habitants que incloga la poblaci\u00f3 total de les 7 ciutats. Opcional: Modifica la soluci\u00f3 de l\u2019anterior exercici perqu\u00e8 mostre les ciutats ordenades per habitants. Despr\u00e9s mostra-les per ordre alfab\u00e8tic.","title":"Arrays indexats"},{"location":"02-phpbasics/#arrays-multidimensionals_1","text":"233Alumnes.php : Resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array d'alumnes on cada element siga un altre array que continga nom i edat de l'alumne. Crea una taula HTML en la qual es mostren totes les dades dels alumnes. Utilitza la funci\u00f3 array_column per a obtenir un array indexat que continga \u00fanicament els noms dels alumnes i mostra\u2019ls per pantalla. Crea un array amb 10 n\u00fameros i utilitza la funci\u00f3 array_sum per a obtenir la suma dels 10 nombres. Sense usar bucles for calcula la mitjana d'edat de l'alumnat. 234CiutatsOpcional.php : Modifica la soluci\u00f3 del exercici ciutats.php perqu\u00e8 la taula continga tamb\u00e9 la columna del total d\u2019habitants de la comunitat aut\u00f2noma de les ciutats de la llista i el percentatge sobre els habitants de la comunitat aut\u00f2noma que representa. Per exemple: Ciutat Habitants Habitats CA % sobre CA Val\u00e8ncia 791.413 5.003.769 15.81% Pista: Caldr\u00e0 modificar l'array $ciutats i convertir-lo en multidimensional. Les dades de comunitats aut\u00f2nomes hauran d'estar en un altre array. Dades: Municipis de Espa\u00f1a","title":"Arrays multidimensionals"},{"location":"02-phpbasics/#funcions_1","text":"241funcions.php : Escriu una funci\u00f3 per retornar una etiqueta HTML <img /> . La funci\u00f3 hauria d\u2019acceptar com a argument obligatori l\u2019URL de la imatge i arguments opcionals per a un text alternatiu, al\u00e7ada i amplada. 242funcions.php : Copieu la funci\u00f3 de l\u2019exercici anterior i modifiqueu-la de manera que nom\u00e9s es passe el nom de fitxer a la funci\u00f3 en lloc de l\u2019URL completa. Dins de la funci\u00f3, farem \u00fas d\u2019una variable global per fer l\u2019URL completa. Per exemple, si passem photo.png a la funci\u00f3, i la variable global cont\u00e9 /images , llavors l\u2019atribut src de l'etiqueta retornada ser\u00e0 /images/photo.png . Una funci\u00f3 com aquesta \u00e9s una forma senzilla de mantenir correctes les vostres etiquetes d\u2019imatges, fins i tot si les imatges es mouen a un nou cam\u00ed o servidor. Nom\u00e9s cal canviar la variable global, per exemple, de /images a http://images.example.com/. 243funciocolors.php : Els colors web com #ffffff i #cc3399 es realitzen concatenant els valors hexadecimals de color per a vermell, verd i blau. Escriu una funci\u00f3 que accepte 3 arguments: roig, verd i blau, i que retorne un string que cont\u00e9 el color adequat per utilitzar-lo en una p\u00e0gina web. Per exemple, si els arguments s\u00f3n 255, 0, i 255, llavors la cadena retornada hauria de ser #FF00FF. Pot resultar \u00fatil utilitzeu la funci\u00f3 dechex() integrada, que es troba documentada a http://www.php.net/ Assegureu-vos que els par\u00e0metres reben valors enters i que s\u00f3n colors v\u00e0lids. Implementa 3 exemples d\u2019\u00fas. 244funcionsSQL.php : Crea una funci\u00f3 anomenada insert que ens genere una sent\u00e8ncia INSERT INTO en SQL. Per a a\u00e7\u00f2 la funci\u00f3 rebr\u00e0 dos par\u00e0metres: 1. El nom de la taula 2. Un array associatiu que contindr\u00e0 els noms i valors dels camps de la taula. La sent\u00e8ncia resultant tindr\u00e0 la seg\u00fcent forma: \u201cINSERT INTO nom_taula (nom dels camps separats per comes) VALUES (noms dels camps separats per comes amb el car\u00e0cter \u201c:\u201d davant) De moment, no farem res amb els valors dels camps. Ajuda: utilitza les funcions sprintf , implode i array_keys 245funcionsSQL2.php : A partir de l'exercici anterior crea una altra funci\u00f3 que reba els mateixos par\u00e0metres m\u00e9s un par\u00e0metre boole\u00e0 per a indicar si volem generar la query amb els noms dels camps o no. El par\u00e0metre tindr\u00e0 el valor true per defecte. Si el seu valor \u00e9s true generar\u00e0 la consulta igual que en l'exercici anterior, per\u00f2 si \u00e9s false la generar\u00e0 aix\u00ed: INSERT INTO nom_taula VALUES ( valors dels camps separats per comes amb el car\u00e0cter \u2018 : \u2019 davant ) 246funcionsSQLReferencia.php : Repeteix l'exercici anterior amb els seg\u00fcents canvis: La cadena resultant es passar\u00e0 per refer\u00e8ncia. Passarem la cadena de la seg\u00fcent forma: INSERT INTO taula ( camps ) VALUES ( valors ) Dins de la funci\u00f3 substituirem el seg\u00fcent: El text taula pel nom de la taula. El text camps pels noms dels camps separats per comes El text valors pels noms dels camps separats per comes i el car\u00e0cter \u2018:\u2019 davant.","title":"Funcions"},{"location":"02-phpbasics/#formularis","text":"261ExempleGet.php : Crea una p\u00e0gina que reba com a par\u00e0metre un nom i mostre el text \u2018Benvingut [nom]!!!\u2019 sent [nom] el nom has passat com a par\u00e0metre. 262Formulari.php : Crea un formulari que tinga els seg\u00fcents camps: firstname lastname phone email En l'atribut action del formulari posarem el seg\u00fcent: < form action = \"262Formulari.php\" ... /> A\u00e7\u00f2 far\u00e0 que siga la pr\u00f2pia p\u00e0gina del formulari la que processe les dades del mateix. En pr\u00e9mer Enviar han d'apar\u00e8ixer sota el formulari les dades que s'han introdu\u00eft en el mateix en format de taula. 263FormulariReparat.php : Soluciona el problema dels par\u00e0metres no enviats de l'exercici anterior. 264FormulariValidat.php : Modifica l'exercici anterior realitzant les seg\u00fcents validacions: Tots els camps s\u00f3n obligatoris. firstname , no pot superar els 25 caracters. lastname , no pot superar els 50 caracters. phone , ha de contenir 9 digits (expressi\u00f3 regular: ^\\d{9}$ ). email , ha de ser una adre\u00e7a electr\u00f2nica correcta. S'avaluaran tots els camps i si hi ha error/s caldr\u00e0 mostrar-lo/s. Si no hi ha errors es mostraran les dades introdu\u00efdes per l'usuari. 265FormulariOpcions.php : Modifica l'exercici anterior afegint els seg\u00fcents camps al formulari: genre : ser\u00e0 un radio button i podr\u00e0 ser home , dona i no binari . hobbies : ser\u00e0 un checkbox amb aficions de la que podr\u00e0s triar-ne m\u00e9s d'una: Lectura Programaci\u00f3 Ciclisme Running ... contact-time : ser\u00e0 una llista de les millores hores per a contactar: Primera hora (08:00 a 10:00) Abans de dinar (12:00 a 13:00) Despr\u00e9s de dinar (14:00 a 16:00) Per la nit (20:00 a 22:00) En els tres casos s\u00f3n obligatoris, s'ha de mantindre el valor en cas de ser correcte . 266FormulariArray : Modifica l'exercici anterior de forma que el contingut dels camps de selecci\u00f3 es genere din\u00e0micament des d'arrays associatius. A m\u00e9s, els valors rebuts s'haurien de validar contra l' array i mostrar-se fent \u00e9s d'ell.","title":"Formularis"},{"location":"02-phpbasics/#inclusio-de-fitxers","text":"271Formulari.php : Basant-te en l'activitat 264FormulariValidat.php modifica les validacions perqu\u00e8 es facen mitjan\u00e7ant funcions. Les funcions es guardaran en el fitxer helpers.php i s'hauran d'incloure en fitxer 271Formulari.php . 272Formulari.php : Basant-te en l'activitat 271Formulari.php separa la part de codi de la presentaci\u00f3 de forma que tota la l\u00f2gica estiga en un fitxer i la part de presentaci\u00f3 en altre fitxer 271Formulari.view.php .","title":"Inclusi\u00f3 de fitxers"},{"location":"02-phpbasics/#pujada-de-fitxers_1","text":"281FormularImatge.php : Modifica l'activitat 272Formulari.php afegint un camp de tipus FILE per a pujar una imatge al servidor. Es guardar\u00e0 en la carpeta uploads i es mostrar\u00e0 amb la resta de dades. 282FormulariImage.php : Modifica l'activitat anterior de forma que es controle el seg\u00fcent: Les imatges sols podran ser jpg . No podran superar 1MB de grand\u00e0ria Es guardaran en un nom aleatori \u00fanic.","title":"Pujada de fitxers"},{"location":"02-phpbasics/#credits","text":"Aitor Medrano. (setembre de 2021) Desarrollo Web en Entorno Servidor disponible en: https://aitor-medrano.github.io/dwes2122/index.html","title":"Cr\u00e8dits"},{"location":"01-intro/00_index/","text":"Introducci\u00f3 a la programaci\u00f3 web Objectius Seleccionar les arquitectures i tecnologies de programaci\u00f3 web en entorn servidor, analitzant-ne les capacitats i caracter\u00edstiques pr\u00f2pies. Introduir els principals llenguatges i frameworks per al desenvolupament en l'entorn servidor. Caracteritzar i diferenciar els models d'execuci\u00f3 de codi en el servidor i en el client web. Identificar les principals tecnologies associades. Instal\u00b7lar i configurar l'entorn de treball que emprarem per al desenvolupament web. Visualitzar mitjan\u00e7ant el navegador una p\u00e0gina web html amb codi PHP encastat. Continguts Arquitectura d'una aplicaci\u00f3 web Elements: navegador, servidor, protocol HTTP i HTML El model client/servidor P\u00e0gines web est\u00e0tiques i din\u00e0miques Execuci\u00f3 de codi en el servidor i en el client Tecnologies per a programaci\u00f3 web del costat del servidor Arquitectures i plataformes Servidors web vs Servidors d'Aplicacions Integraci\u00f3 amb el servidor web Llenguatges Codi embegut en el llenguatge de marques Eines de programaci\u00f3 Programaci\u00f3 web amb PHP Preparant l'entorn de desenvolupament Instal\u00b7laci\u00f3 de XAMPP Configuraci\u00f3 b\u00e0sica d'Apache Configuraci\u00f3 b\u00e0sica del m\u00f2dul de PHP Instal\u00b7laci\u00f3 de l'IDE PhpStorm \u00das b\u00e0sic de l'eina Depuraci\u00f3 Eines per a depuraci\u00f3 de codi php Instal\u00b7laci\u00f3 i configuraci\u00f3 de XDebug","title":"Introducci\u00f3"},{"location":"01-intro/00_index/#introduccio-a-la-programacio-web","text":"","title":"Introducci\u00f3 a la programaci\u00f3 web"},{"location":"01-intro/00_index/#objectius","text":"Seleccionar les arquitectures i tecnologies de programaci\u00f3 web en entorn servidor, analitzant-ne les capacitats i caracter\u00edstiques pr\u00f2pies. Introduir els principals llenguatges i frameworks per al desenvolupament en l'entorn servidor. Caracteritzar i diferenciar els models d'execuci\u00f3 de codi en el servidor i en el client web. Identificar les principals tecnologies associades. Instal\u00b7lar i configurar l'entorn de treball que emprarem per al desenvolupament web. Visualitzar mitjan\u00e7ant el navegador una p\u00e0gina web html amb codi PHP encastat.","title":"Objectius"},{"location":"01-intro/00_index/#continguts","text":"Arquitectura d'una aplicaci\u00f3 web Elements: navegador, servidor, protocol HTTP i HTML El model client/servidor P\u00e0gines web est\u00e0tiques i din\u00e0miques Execuci\u00f3 de codi en el servidor i en el client Tecnologies per a programaci\u00f3 web del costat del servidor Arquitectures i plataformes Servidors web vs Servidors d'Aplicacions Integraci\u00f3 amb el servidor web Llenguatges Codi embegut en el llenguatge de marques Eines de programaci\u00f3 Programaci\u00f3 web amb PHP Preparant l'entorn de desenvolupament Instal\u00b7laci\u00f3 de XAMPP Configuraci\u00f3 b\u00e0sica d'Apache Configuraci\u00f3 b\u00e0sica del m\u00f2dul de PHP Instal\u00b7laci\u00f3 de l'IDE PhpStorm \u00das b\u00e0sic de l'eina Depuraci\u00f3 Eines per a depuraci\u00f3 de codi php Instal\u00b7laci\u00f3 i configuraci\u00f3 de XDebug","title":"Continguts"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/","text":"Arquitectura d'una aplicaci\u00f3 web A difer\u00e8ncia de les aplicacions d'escriptori, que utilitzen els recursos d'un \u00fanic ordinador les aplicacions web s\u00f3n distribu\u00efdes, intervenen com a m\u00ednin dos equipos diferents: el client i el servidor. La comunicaci\u00f3 \u00e9s du a terme mitjan\u00e7ant un protocol, en el nostre cas el protocol HTTP, base de la WWW. Elements: navegador, servidor, protocol HTTP i HTML El protocol de transfer\u00e8ncia d'hipertext (HTTP) \u00e9s un protocol client-servidor molt senzill que articula els intercanvis d'informaci\u00f3 entre els clients web (navegadors) i els servidors HTTP. HTTP es basa en operacions senzilles de sol\u00b7licitud/resposta. Quan un client estableix una connexi\u00f3 amb un servidor i envia un missatge amb les dades de la sol\u00b7licitud, el servidor respon amb un missatge similar que cont\u00e9 l'estat de l'operaci\u00f3 i el seu resultat de la sol\u00b7licitud. Totes les operacions poden adjuntar un objecte o recurs sobre el qual actuen; cada objecte web (document HTML, arxiu multim\u00e8dia o aplicaci\u00f3 CGI) \u00e9s conegut pel seu localitzador uniforme de recursos (URL, Uniform Resource Locator ). Els recursos poden ser arxius, el resultat de l'execuci\u00f3 d'un programa, una consulta a una base de dades, la traducci\u00f3 autom\u00e0tica d'un document, etc. HTTP \u00e9s un protocol sense estat , \u00e9s a dir, no guarda cap informaci\u00f3 sobre connexions anteriors. El desenvolupament d'aplicacions web freq\u00fcentment necessita mantenir estat. Per aix\u00f2 s'utilitzen les galetes ( cookies ), \u00e9s a dir, la informaci\u00f3 que un servidor pot emmagatzemar en el sistema client. Aix\u00f2 permet que les aplicacions web institueixin la noci\u00f3 de \"sessi\u00f3\", i, alhora, permet rastrejar usuaris, ja que les galetes es poden emmagatzemar en el client durant un temps indeterminat. Amb la intenci\u00f3 de con\u00e8ixer amb m\u00e9s profunditat el protocol HTTP podem avaluar en qu\u00e8 consisteix una transacci\u00f3 HTTP. Cada vegada que un client fa una petici\u00f3 a un servidor, s'executen un seguit d'accions: Un usuari accedeix a una adre\u00e7a d'Internet (URL) seleccionant un enlla\u00e7 d'un document HTML o introduint-la directament a la barra de navegaci\u00f3 d'un navegador web des de la perspectiva del client web. El client web descodifica l'adre\u00e7a d'Internet (URL) separant-ne les diferents parts. \u00c9s aix\u00ed com s'identifiquen el protocol d'acc\u00e9s, el node expressat amb el nom de domini o la seua adre\u00e7a IP, el possible port opcional (el valor per defecte \u00e9s el 80) i l'objecte del servidor requerit. S'obre una connexi\u00f3 TCP/IP amb el servidor cridant el port TCP corresponent. Es fa la petici\u00f3. En conseq\u00fc\u00e8ncia, s'envien l'ordre necess\u00e0ria (GET, POST, HEAD, etc.), l'adre\u00e7a de l'objecte requerit (el contingut de l'adre\u00e7a d'Internet del servidor), la versi\u00f3 del protocol HTTP utilitzada (en la major part de les ocasions \u00e9s HTTP/1.0) i un conjunt variable d'informaci\u00f3 que inclou dades sobre les capacitats del navegador web, dades opcionals per al servidor, etc. El servidor localitza el recurs sol\u00b7licitat i torna la resposta al client. Aquesta resposta consisteix en un codi d'estat i el tipus de dada amb extensions multiprop\u00f2sit de correu d'Internet (MIME, Multipurpose Internet Mail Extension) de la informaci\u00f3 de tornada, seguit de la mateixa informaci\u00f3. El client formata i mostra el recurs rebut. Es tanca la connexi\u00f3 TCP. Aquest proc\u00e9s es repeteix en cada acc\u00e9s que es fa\u00e7a al servidor HTTP. Per exemple, si es recull un document HTML que cont\u00e9 quatre imatges, el proc\u00e9s de transici\u00f3 mostrat amb anterioritat es repeteix cinc vegades, \u00e9s a dir, una pel document HTML i quatre per les imatges. Si el recurs sol\u00b7licitat \u00e9s un programa (CGI, ASP.NET, PHP, etc.) el servidor HTTP redirigir\u00e0 la petici\u00f3 a la llibreria o int\u00e8rpret adequat que executar\u00e0 el programa i tornar\u00e0 el control al servidor web. Format de les URL La sintaxi general de les URL consisteix en una seq\u00fc\u00e8ncia jer\u00e0rquica de 5 components: URI = scheme:[//authority]path[?query][#fragment] on el component authoriry es deivideix en tres subcomponents: authority = [userinfo@]host[:port] El model client/servidor El model client-servidor \u00e9s aquell on tots els clients estan connectats a un servidor on es centralitzen els diferents recursos. Aquests recursos estan a disposici\u00f3 dels clients cada cop que els sol\u00b7liciten. Aix\u00f2 fa que totes les gestions que es realitzen es concentren en el servidor, que disposa dels requeriments dels clients amb prioritat, els arxius que s\u00f3n d'\u00fas p\u00fablic i els restringits, els arxius de nom\u00e9s lectura, els que poden ser modificats, etc. En el model client/servidor, el dispositiu que sol\u00b7licita informaci\u00f3 es denomina client i el dispositiu que respon la sol\u00b7licitud es denomina servidor. Els processos de client i servidor es consideren una part de la capa d'aplicaci\u00f3. El client comen\u00e7a l'intercanvi sol\u00b7licitant les dades al servidor, que respon enviant un o m\u00e9s blocs de dades al client. Els protocols de capa d'aplicaci\u00f3 descriuen el format de les sol\u00b7licituds i respostes entre clients i servidor. A m\u00e9s de la transfer\u00e8ncia real de dades, aquest intercanvi pot requerir informaci\u00f3 addicional, com l'autentificaci\u00f3 de l'usuari i la identificaci\u00f3 d'un arxiu de dades per transferir. Encara que les dades generalment es descriuen com un flux del servidor al client, algunes dades sempre flueixen del client al servidor. El flux de dades pot ser el mateix en les dues direccions o fins i tot ser major en la direcci\u00f3 que va del client al servidor. Per exemple, un client pot transferir un arxiu al servidor amb finalitats d'emmagatzemament. La transfer\u00e8ncia de dades d'un client a un servidor es coneix com a pujada i la de les dades d'un servidor a un client, baixada. P\u00e0gines web est\u00e0tiques i din\u00e0miques P\u00e0gines web est\u00e0tiques Les p\u00e0gines web est\u00e0tiques s\u00f3n aquelles on el seu contingut no varia per la qual cosa mostraran la mateixa informaci\u00f3 cada vegada que es carreguen. S\u00f3n les p\u00e0gines creades en el llenguatge HTML. Nom\u00e9s canvien si el programador web les modifica. P\u00e0gines web din\u00e0miques Les p\u00e0gines web din\u00e0miques s\u00f3n p\u00e0gines el contingut de les quals varia a partir d'informaci\u00f3 continguda en una BBDD. El contingut mostrat pot canviar segons l'usuari connectat, el navegador que s'utiltze o accions anteriors dels usuaris, etc. Aquest tipus de p\u00e0gines s'han de realitzar mitjan\u00e7at un llenguatge de programaci\u00f3. Execuci\u00f3 de codi en el client i en el servidor En el seg\u00fcent gr\u00e0fic es mostra un escenari on podem trobar codi que s'executa en el servidor (PHP) i en el client (javascript).","title":"1. Arquitectura d'una aplicaci\u00f3 web"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#arquitectura-duna-aplicacio-web","text":"A difer\u00e8ncia de les aplicacions d'escriptori, que utilitzen els recursos d'un \u00fanic ordinador les aplicacions web s\u00f3n distribu\u00efdes, intervenen com a m\u00ednin dos equipos diferents: el client i el servidor. La comunicaci\u00f3 \u00e9s du a terme mitjan\u00e7ant un protocol, en el nostre cas el protocol HTTP, base de la WWW.","title":"Arquitectura d'una aplicaci\u00f3 web"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#elements-navegador-servidor-protocol-http-i-html","text":"El protocol de transfer\u00e8ncia d'hipertext (HTTP) \u00e9s un protocol client-servidor molt senzill que articula els intercanvis d'informaci\u00f3 entre els clients web (navegadors) i els servidors HTTP. HTTP es basa en operacions senzilles de sol\u00b7licitud/resposta. Quan un client estableix una connexi\u00f3 amb un servidor i envia un missatge amb les dades de la sol\u00b7licitud, el servidor respon amb un missatge similar que cont\u00e9 l'estat de l'operaci\u00f3 i el seu resultat de la sol\u00b7licitud. Totes les operacions poden adjuntar un objecte o recurs sobre el qual actuen; cada objecte web (document HTML, arxiu multim\u00e8dia o aplicaci\u00f3 CGI) \u00e9s conegut pel seu localitzador uniforme de recursos (URL, Uniform Resource Locator ). Els recursos poden ser arxius, el resultat de l'execuci\u00f3 d'un programa, una consulta a una base de dades, la traducci\u00f3 autom\u00e0tica d'un document, etc. HTTP \u00e9s un protocol sense estat , \u00e9s a dir, no guarda cap informaci\u00f3 sobre connexions anteriors. El desenvolupament d'aplicacions web freq\u00fcentment necessita mantenir estat. Per aix\u00f2 s'utilitzen les galetes ( cookies ), \u00e9s a dir, la informaci\u00f3 que un servidor pot emmagatzemar en el sistema client. Aix\u00f2 permet que les aplicacions web institueixin la noci\u00f3 de \"sessi\u00f3\", i, alhora, permet rastrejar usuaris, ja que les galetes es poden emmagatzemar en el client durant un temps indeterminat. Amb la intenci\u00f3 de con\u00e8ixer amb m\u00e9s profunditat el protocol HTTP podem avaluar en qu\u00e8 consisteix una transacci\u00f3 HTTP. Cada vegada que un client fa una petici\u00f3 a un servidor, s'executen un seguit d'accions: Un usuari accedeix a una adre\u00e7a d'Internet (URL) seleccionant un enlla\u00e7 d'un document HTML o introduint-la directament a la barra de navegaci\u00f3 d'un navegador web des de la perspectiva del client web. El client web descodifica l'adre\u00e7a d'Internet (URL) separant-ne les diferents parts. \u00c9s aix\u00ed com s'identifiquen el protocol d'acc\u00e9s, el node expressat amb el nom de domini o la seua adre\u00e7a IP, el possible port opcional (el valor per defecte \u00e9s el 80) i l'objecte del servidor requerit. S'obre una connexi\u00f3 TCP/IP amb el servidor cridant el port TCP corresponent. Es fa la petici\u00f3. En conseq\u00fc\u00e8ncia, s'envien l'ordre necess\u00e0ria (GET, POST, HEAD, etc.), l'adre\u00e7a de l'objecte requerit (el contingut de l'adre\u00e7a d'Internet del servidor), la versi\u00f3 del protocol HTTP utilitzada (en la major part de les ocasions \u00e9s HTTP/1.0) i un conjunt variable d'informaci\u00f3 que inclou dades sobre les capacitats del navegador web, dades opcionals per al servidor, etc. El servidor localitza el recurs sol\u00b7licitat i torna la resposta al client. Aquesta resposta consisteix en un codi d'estat i el tipus de dada amb extensions multiprop\u00f2sit de correu d'Internet (MIME, Multipurpose Internet Mail Extension) de la informaci\u00f3 de tornada, seguit de la mateixa informaci\u00f3. El client formata i mostra el recurs rebut. Es tanca la connexi\u00f3 TCP. Aquest proc\u00e9s es repeteix en cada acc\u00e9s que es fa\u00e7a al servidor HTTP. Per exemple, si es recull un document HTML que cont\u00e9 quatre imatges, el proc\u00e9s de transici\u00f3 mostrat amb anterioritat es repeteix cinc vegades, \u00e9s a dir, una pel document HTML i quatre per les imatges. Si el recurs sol\u00b7licitat \u00e9s un programa (CGI, ASP.NET, PHP, etc.) el servidor HTTP redirigir\u00e0 la petici\u00f3 a la llibreria o int\u00e8rpret adequat que executar\u00e0 el programa i tornar\u00e0 el control al servidor web.","title":"Elements: navegador, servidor, protocol HTTP i HTML"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#format-de-les-url","text":"La sintaxi general de les URL consisteix en una seq\u00fc\u00e8ncia jer\u00e0rquica de 5 components: URI = scheme:[//authority]path[?query][#fragment] on el component authoriry es deivideix en tres subcomponents: authority = [userinfo@]host[:port]","title":"Format de les URL"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#el-model-clientservidor","text":"El model client-servidor \u00e9s aquell on tots els clients estan connectats a un servidor on es centralitzen els diferents recursos. Aquests recursos estan a disposici\u00f3 dels clients cada cop que els sol\u00b7liciten. Aix\u00f2 fa que totes les gestions que es realitzen es concentren en el servidor, que disposa dels requeriments dels clients amb prioritat, els arxius que s\u00f3n d'\u00fas p\u00fablic i els restringits, els arxius de nom\u00e9s lectura, els que poden ser modificats, etc. En el model client/servidor, el dispositiu que sol\u00b7licita informaci\u00f3 es denomina client i el dispositiu que respon la sol\u00b7licitud es denomina servidor. Els processos de client i servidor es consideren una part de la capa d'aplicaci\u00f3. El client comen\u00e7a l'intercanvi sol\u00b7licitant les dades al servidor, que respon enviant un o m\u00e9s blocs de dades al client. Els protocols de capa d'aplicaci\u00f3 descriuen el format de les sol\u00b7licituds i respostes entre clients i servidor. A m\u00e9s de la transfer\u00e8ncia real de dades, aquest intercanvi pot requerir informaci\u00f3 addicional, com l'autentificaci\u00f3 de l'usuari i la identificaci\u00f3 d'un arxiu de dades per transferir. Encara que les dades generalment es descriuen com un flux del servidor al client, algunes dades sempre flueixen del client al servidor. El flux de dades pot ser el mateix en les dues direccions o fins i tot ser major en la direcci\u00f3 que va del client al servidor. Per exemple, un client pot transferir un arxiu al servidor amb finalitats d'emmagatzemament. La transfer\u00e8ncia de dades d'un client a un servidor es coneix com a pujada i la de les dades d'un servidor a un client, baixada.","title":"El model client/servidor"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#pagines-web-estatiques-i-dinamiques","text":"","title":"P\u00e0gines web est\u00e0tiques i din\u00e0miques"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#pagines-web-estatiques","text":"Les p\u00e0gines web est\u00e0tiques s\u00f3n aquelles on el seu contingut no varia per la qual cosa mostraran la mateixa informaci\u00f3 cada vegada que es carreguen. S\u00f3n les p\u00e0gines creades en el llenguatge HTML. Nom\u00e9s canvien si el programador web les modifica.","title":"P\u00e0gines web est\u00e0tiques"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#pagines-web-dinamiques","text":"Les p\u00e0gines web din\u00e0miques s\u00f3n p\u00e0gines el contingut de les quals varia a partir d'informaci\u00f3 continguda en una BBDD. El contingut mostrat pot canviar segons l'usuari connectat, el navegador que s'utiltze o accions anteriors dels usuaris, etc. Aquest tipus de p\u00e0gines s'han de realitzar mitjan\u00e7at un llenguatge de programaci\u00f3.","title":"P\u00e0gines web din\u00e0miques"},{"location":"01-intro/1_arquitectura_duna_aplicaci_web/#execucio-de-codi-en-el-client-i-en-el-servidor","text":"En el seg\u00fcent gr\u00e0fic es mostra un escenari on podem trobar codi que s'executa en el servidor (PHP) i en el client (javascript).","title":"Execuci\u00f3 de codi en el client i en el servidor"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/","text":"2. Tecnologies per a programaci\u00f3 web del costat del servidor Introducci\u00f3 Des d'un punt de vista de desenvolupament una aproximaci\u00f3 m\u00e9s detallada al model client-servidor \u00e9s el que es coneix com a model en 3 capes . \u00c9s un model on es mostra m\u00e9s en detall com es distribueix el programari que participa en qualsevol desenvolupament web. Segueix estant present l'arquitectura client-servidor (tot es basa en ella) per\u00f2 apareixen m\u00e9s detalls com el programari utilitzat en cada un dels dos actors i com interactuen les diferents tecnologies o aplicacions. Per comprendre millor que \u00e9s el model de desenvolupament de 3 capes podem tirar un ull al seg\u00fcent esquema on es mostra cadascuna d'aquestes capes i que s'encarrega cadascuna d'elles: Capa de presentaci\u00f3: \u00c9s la capa on l'aplicaci\u00f3 es mostra a l'usuari. B\u00e0sicament \u00e9s la GUI ( Graphical User Interface, interf\u00edcie gr\u00e0fica d'usuari ). En el cas d'una aplicaci\u00f3 web seria el codi HTML que es carrega directament al navegador web. En qualsevol cas, s'executa directament en l'equip del client. Capa de negoci: \u00c9s la capa interm\u00e8dia on es porta a terme tota la l\u00f2gica de l'aplicaci\u00f3. Sempre s'executar\u00e0 en el costat servidor. Aquesta capa, despr\u00e9s de realitzar tots els c\u00e0lculs i / o operacions sobre les dades, genera el codi HTML que ser\u00e0 presentat a l'usuari en la capa seg\u00fcent. Capa de dades: \u00c9s la capa que emmagatzema les dades. B\u00e0sicament, en condicions normals, fa refer\u00e8ncia al propi SGBD que \u00e9s l'encarregat d'emmagatzemar les dades. Depenent de l'arquitectura de l'aplicaci\u00f3, aquesta capa i la de negoci es poden trobar f\u00edsicament en el mateix equip, encara que tamb\u00e9 \u00e9s possible que s'hagin de separar per q\u00fcestions de rendiment. La capa de dades serveix totes la informaci\u00f3 necess\u00e0ria a la capa de negoci per dur a terme les seves operacions. Si ens imaginem una botiga online, la capa de dades emmagatzema tota la informaci\u00f3 en una base de dades (usuaris, comandes, articles, ofertes,...), La capa de negoci ha d'accedir a aquesta informaci\u00f3 i, despr\u00e9s processar una comanda, per exemple, ha de presentar el resultat final a l'usuari en el navegador, que \u00e9s la capa de presentaci\u00f3. I si ens centrem en un cas concret amb programari i tecnologies ja definits, un model de 3 capes podria ser el seg\u00fcent: Navegador web: En aquest cas, Mozilla Firefox, Internet Explorer o Google Chrome podrien ser qualsevol de les aplicacions que ocuparien aquesta capa Apache + PHP / IIS + ASP: Un servidor web acompanyat del seu corresponent llenguatge de programaci\u00f3 web permeten desenvolupar la part que ocupa la capa de negoci. Tamb\u00e9 podr\u00edem col\u00b7locar la combinaci\u00f3 Apache Tomcat + Servlets MySQL / PostgreSQL: Finalment a la capa de dades podem posar qualsevol SGBD, com poden ser MySQL o PostgreSQL. L'avantatge principal d'aquest model \u00e9s que el desenvolupament es pot dur a terme en diversos nivells i, en cas que sobrevinga algun canvi, nom\u00e9s afectar\u00e0 el nivell requerit sense haver de revisar entre el codi font d'altres m\u00f2duls, at\u00e8s que s'haur\u00e0 redu\u00eft el acoblament inform\u00e0tic fins a una interf\u00edcie de pas de missatges. ::: Front-end, Back-end, Full stack Tamb\u00e9 tenint en compte en quin costat se situen les tecnologies i per a qu\u00e8 s'utilitzen aquestes, actualment es parla molt de 3 perfils diferenciats en l'\u00e0mbit del desenvolupament web: Front-end: \u00c9s la part del desenvolupament que s'encarrega del disseny i maquetaci\u00f3 de l'aplicaci\u00f3 web utilitzant tecnologies com HTML, CSS i Javascript (i els seus frameworks). En aquest cas s'ha de preocupar tamb\u00e9 de la correcta presentaci\u00f3 en qualsevol tipus de dispositiu i fins i tot del posicionament en cercadors Back-end: \u00c9s la part del desenvolupament que s'encarrega del costat servidor utilitzant tecnologies com PHP, JSP i Python. Tamb\u00e9 s'encarrega de l'administraci\u00f3 del servidor d'aplicacions i la base de dades. Full stack: En un perfil que engloba els dos anteriors. En aquest cas el desenvolupador potser no \u00e9s un expert de cap tecnologia concreta per\u00f2 t\u00e9 amplis coneixements de tot el conjunt i \u00e9s capa\u00e7 de col\u00b7laborar en qualsevol de les parts. Servidors web i servidors d'aplicacions Aix\u00ed com les aplicacions d'escriptori s'executen directament sobre el sistema operatiu, les aplicacions web necessiten d'una eina addicional que permeti desplegar-les per a la seva posada en marxa. Parlem de servidors web i servidors d'aplicacions , respectivament. Qu\u00e8 \u00e9s un servidor web? Un servidor web \u00e9s una aplicaci\u00f3 que rep una petici\u00f3 HTTP (normalment a trav\u00e9s d'un navegador web) i retorna la p\u00e0gina web sol\u00b7licitada (escrita en llenguatge HTML i podent contenir codi Javascript encastat) perqu\u00e8 aquesta sigua interpretada i visualitzada pel navegador de qui va realitzar la sol\u00b7licitud (l'usuari). Qu\u00e8 \u00e9s un servidor d'aplicacions? Un servidor d'aplicacions \u00e9s un servidor que permet l'execuci\u00f3 d'aplicacions web. Exemples Apache Apache \u00e9s un dels servidors web m\u00e9s coneguts. \u00c9s programari lliure i multiplataforma, encara que aproximadament el 90% dels servidors Apache s'executen actualment en entorns Linux ja que \u00e9s el servidor preferit per a aquesta plataforma. \u00c9s molt modular el que permet incorporar caracter\u00edstiques un cop instal\u00b7lat i posat en marxa. Aix\u00f2 li fa tamb\u00e9 molt flexible i pot donar servei a webs escrites en els llenguatges de programaci\u00f3 web m\u00e9s estesos (com PHP, Python, ASP,...) A trav\u00e9s del m\u00f2dul corresponent. Apache Tomcat Apache Tomcat \u00e9s un servidor d'aplicacions que funciona com a contenidor de Servlets de Java. Actualment \u00e9s capa\u00e7 d'implementar diverses especificacions de Java EE com Servlets i JSP (Java Server Pages) i m\u00e9s proporciona un servidor web pur perqu\u00e8 es fa\u00e7a servir en combinaci\u00f3 amb l'entorn Java. WSGI ( Web Server Gateway Interface ) WSGI \u00e9s una interf\u00edcie que defineix com es comunica un servidor web amb aplicacions web o frameworks escrits en Python.","title":"2. Tecnologies per a programaci\u00f3 web del costat del servidor"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#2-tecnologies-per-a-programacio-web-del-costat-del-servidor","text":"","title":"2. Tecnologies per a programaci\u00f3 web del costat del servidor"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#introduccio","text":"Des d'un punt de vista de desenvolupament una aproximaci\u00f3 m\u00e9s detallada al model client-servidor \u00e9s el que es coneix com a model en 3 capes . \u00c9s un model on es mostra m\u00e9s en detall com es distribueix el programari que participa en qualsevol desenvolupament web. Segueix estant present l'arquitectura client-servidor (tot es basa en ella) per\u00f2 apareixen m\u00e9s detalls com el programari utilitzat en cada un dels dos actors i com interactuen les diferents tecnologies o aplicacions. Per comprendre millor que \u00e9s el model de desenvolupament de 3 capes podem tirar un ull al seg\u00fcent esquema on es mostra cadascuna d'aquestes capes i que s'encarrega cadascuna d'elles: Capa de presentaci\u00f3: \u00c9s la capa on l'aplicaci\u00f3 es mostra a l'usuari. B\u00e0sicament \u00e9s la GUI ( Graphical User Interface, interf\u00edcie gr\u00e0fica d'usuari ). En el cas d'una aplicaci\u00f3 web seria el codi HTML que es carrega directament al navegador web. En qualsevol cas, s'executa directament en l'equip del client. Capa de negoci: \u00c9s la capa interm\u00e8dia on es porta a terme tota la l\u00f2gica de l'aplicaci\u00f3. Sempre s'executar\u00e0 en el costat servidor. Aquesta capa, despr\u00e9s de realitzar tots els c\u00e0lculs i / o operacions sobre les dades, genera el codi HTML que ser\u00e0 presentat a l'usuari en la capa seg\u00fcent. Capa de dades: \u00c9s la capa que emmagatzema les dades. B\u00e0sicament, en condicions normals, fa refer\u00e8ncia al propi SGBD que \u00e9s l'encarregat d'emmagatzemar les dades. Depenent de l'arquitectura de l'aplicaci\u00f3, aquesta capa i la de negoci es poden trobar f\u00edsicament en el mateix equip, encara que tamb\u00e9 \u00e9s possible que s'hagin de separar per q\u00fcestions de rendiment. La capa de dades serveix totes la informaci\u00f3 necess\u00e0ria a la capa de negoci per dur a terme les seves operacions. Si ens imaginem una botiga online, la capa de dades emmagatzema tota la informaci\u00f3 en una base de dades (usuaris, comandes, articles, ofertes,...), La capa de negoci ha d'accedir a aquesta informaci\u00f3 i, despr\u00e9s processar una comanda, per exemple, ha de presentar el resultat final a l'usuari en el navegador, que \u00e9s la capa de presentaci\u00f3. I si ens centrem en un cas concret amb programari i tecnologies ja definits, un model de 3 capes podria ser el seg\u00fcent: Navegador web: En aquest cas, Mozilla Firefox, Internet Explorer o Google Chrome podrien ser qualsevol de les aplicacions que ocuparien aquesta capa Apache + PHP / IIS + ASP: Un servidor web acompanyat del seu corresponent llenguatge de programaci\u00f3 web permeten desenvolupar la part que ocupa la capa de negoci. Tamb\u00e9 podr\u00edem col\u00b7locar la combinaci\u00f3 Apache Tomcat + Servlets MySQL / PostgreSQL: Finalment a la capa de dades podem posar qualsevol SGBD, com poden ser MySQL o PostgreSQL. L'avantatge principal d'aquest model \u00e9s que el desenvolupament es pot dur a terme en diversos nivells i, en cas que sobrevinga algun canvi, nom\u00e9s afectar\u00e0 el nivell requerit sense haver de revisar entre el codi font d'altres m\u00f2duls, at\u00e8s que s'haur\u00e0 redu\u00eft el acoblament inform\u00e0tic fins a una interf\u00edcie de pas de missatges. :::","title":"Introducci\u00f3"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#front-end-back-end-full-stack","text":"Tamb\u00e9 tenint en compte en quin costat se situen les tecnologies i per a qu\u00e8 s'utilitzen aquestes, actualment es parla molt de 3 perfils diferenciats en l'\u00e0mbit del desenvolupament web: Front-end: \u00c9s la part del desenvolupament que s'encarrega del disseny i maquetaci\u00f3 de l'aplicaci\u00f3 web utilitzant tecnologies com HTML, CSS i Javascript (i els seus frameworks). En aquest cas s'ha de preocupar tamb\u00e9 de la correcta presentaci\u00f3 en qualsevol tipus de dispositiu i fins i tot del posicionament en cercadors Back-end: \u00c9s la part del desenvolupament que s'encarrega del costat servidor utilitzant tecnologies com PHP, JSP i Python. Tamb\u00e9 s'encarrega de l'administraci\u00f3 del servidor d'aplicacions i la base de dades. Full stack: En un perfil que engloba els dos anteriors. En aquest cas el desenvolupador potser no \u00e9s un expert de cap tecnologia concreta per\u00f2 t\u00e9 amplis coneixements de tot el conjunt i \u00e9s capa\u00e7 de col\u00b7laborar en qualsevol de les parts.","title":"Front-end, Back-end, Full stack"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#servidors-web-i-servidors-daplicacions","text":"Aix\u00ed com les aplicacions d'escriptori s'executen directament sobre el sistema operatiu, les aplicacions web necessiten d'una eina addicional que permeti desplegar-les per a la seva posada en marxa. Parlem de servidors web i servidors d'aplicacions , respectivament.","title":"Servidors web i servidors d'aplicacions"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#que-es-un-servidor-web","text":"Un servidor web \u00e9s una aplicaci\u00f3 que rep una petici\u00f3 HTTP (normalment a trav\u00e9s d'un navegador web) i retorna la p\u00e0gina web sol\u00b7licitada (escrita en llenguatge HTML i podent contenir codi Javascript encastat) perqu\u00e8 aquesta sigua interpretada i visualitzada pel navegador de qui va realitzar la sol\u00b7licitud (l'usuari).","title":"Qu\u00e8 \u00e9s un servidor web?"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#que-es-un-servidor-daplicacions","text":"Un servidor d'aplicacions \u00e9s un servidor que permet l'execuci\u00f3 d'aplicacions web.","title":"Qu\u00e8 \u00e9s un servidor d'aplicacions?"},{"location":"01-intro/2_tecnologies_per_a_programaci_web_del_costat_del_servidor.html/#exemples","text":"","title":"Exemples"},{"location":"01-intro/3_llenguatges.html/","text":"3. Llenguatges PHP PHP (PHP Hypertext Preprocessor) \u00e9s un llenguatge de programaci\u00f3 de costat servidor dissenyat principalment per al desenvolupament web. PHP s'utilitza com a llenguatge de script embegut en p\u00e0gines HTML i funciona, normalment, com un m\u00f2dul del servidor web (per exemple, a Apache). El servidor web combina els resultats d'executar els scripts PHP amb l'HTML al qual va encastat i genera la p\u00e0gina web resultant per al navegador. Actualment PHP funciona pr\u00e0cticament amb qualsevol servidor web i en qualsevol Sistema Operatiu existents, i gaireb\u00e9 amb qualsevol SGBD en cas que necessitem utilitzar una base de dades. Tot i aix\u00f2, el m\u00e9s habitual \u00e9s veure-ho formant el que es coneix com una arquitectura LAMP (Linux, Apache, MySQL i PHP), \u00e9s a dir, funcionant sobre un sistema operatiu Linux, executant-com un m\u00f2dul del servidor web Apache i utilitzant a MySQL com SGBD per emmagatzemar la informaci\u00f3 en cas que es requereixi una base de dades. El llenguatge PHP va ser dissenyat per Rasmus Lerdorf i ara es mant\u00e9 per una comunitat de desenvolupadors, a m\u00e9s \u00e9s de codi obert. A continuaci\u00f3, un fragment d'una p\u00e0gina web din\u00e0mica escrita amb PHP on es pot apreciar com s'incrusta el codi juntament amb l'HTML de la p\u00e0gina: JSP / Servlets JavaServer Pages (tamb\u00e9 conegut com JSP) \u00e9s una tecnologia creada per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques del costat servidor. Igual que PHP, el seu codi s'escriu encastat juntament amb l'HTML de la p\u00e0gina web i \u00e9s el servidor d'aplicacions, en aquest cas, qui ha de processar-per generar la p\u00e0gina web resultant, en HTML. D'altra banda, Java Servlets \u00e9s una tecnologia que tamb\u00e9 es pot utilitzar per crear contingut web din\u00e0mic per\u00f2 que a m\u00e9s est\u00e9n la seva funcionalitat a la possibilitat de connectar aquestes webs din\u00e0miques amb un altre contingut accessible a trav\u00e9s d'Internet. De vegades s'utilitza juntament amb JSP per crear aplicacions web m\u00e9s complexes. Totes dues s\u00f3n tecnologies desenvolupades per Sun Microsystems i propietat ara d'Oracle, despr\u00e9s d'adquirir aquesta \u00faltima a la primera fa ja alguns anys. Python El llenguatge Python va ser dissenyat per Guido van Rossum i ara es mant\u00e9 gr\u00e0cies a una comunitat de desenvolupadors, i \u00e9s codi obert. Exemple de codi escrit amb Python. En aquest cas utilitzant el framework Django per al desenvolupament d'aplicacions web: < h1 > Mis pel\u00edculas < /h1> <a href=\"#\">+</ a > { % if lista_peliculas %} <ul> {% for pelicula in lista_peliculas %} < li >< a href = \"{% url 'pelicula' pelicula.id %}\" > {{ pelicula . titulo }} < /a></ li > { % endfor %} </ul> {% else %} < p > No hay pel\u00edculas disponibles < /p> {% endif %} Separada del controlador: from django.shortcuts import render . . . def index ( request ): lista_peliculas = Pelicula . objects . all () context = { 'lista_peliculas' : lista_peliculas } return render ( request , 'mispeliculas/index.html' , context ) ASP.NET ASP.NET \u00e9s una tecnologia, creada per Microsoft, per al desenvolupament de lloc web din\u00e0mics, aplicacions i serveis web. \u00c9s la tecnologia successora del que abans es coneixia com ASP, l'antiga tecnologia de Microsoft per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques. Com que funciona sobre la plataforma .NET de Microsoft, permet que es pugui desenvolupar en qualsevol dels llenguatges de programaci\u00f3 d'aquesta plataforma, Visual Basic .NET o C#. El m\u00e9s habitual \u00e9s veure-ho funcionar juntament amb el lloc web de Microsoft, IIS (Internet Information Server). A continuaci\u00f3, un exemple de p\u00e0gina web din\u00e0mica amb ASP.NET (desenvolupada en llenguatge C #) programant l'acci\u00f3 que passa en pr\u00e9mer un bot\u00f3 (apareix el text d'un formulari a la part final del web): protected void Button1_Click(object sender, EventArgs e) { string buf = TextBox1.Text; changed_text.InnerHtml = buf.ToUpper(); } < %@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\" Inherits=\"firstexample._Default\" %> <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> < html xmlns = \"http://www.w3.org/1999/xhtml\" > < head runat = \"server\" > < title > Untitled Page </ title > </ head > < body > < form id = \"form1\" runat = \"server\" > < div > < asp:TextBox ID = \"TextBox1\" runat = \"server\" style = \"width:224px\" > </ asp:TextBox > < asp:Button ID = \"Button1\" runat = \"server\" Text = \"Enter...\" style = \"width:85px\" onclick = \"Button1_Click\" /> < hr /> < h3 > Results: </ h3 > < span runat = \"server\" id = \"changed_text\" /> </ div > </ form > </ body > </ html >","title":"3. Llenguatges"},{"location":"01-intro/3_llenguatges.html/#3-llenguatges","text":"","title":"3. Llenguatges"},{"location":"01-intro/3_llenguatges.html/#php","text":"PHP (PHP Hypertext Preprocessor) \u00e9s un llenguatge de programaci\u00f3 de costat servidor dissenyat principalment per al desenvolupament web. PHP s'utilitza com a llenguatge de script embegut en p\u00e0gines HTML i funciona, normalment, com un m\u00f2dul del servidor web (per exemple, a Apache). El servidor web combina els resultats d'executar els scripts PHP amb l'HTML al qual va encastat i genera la p\u00e0gina web resultant per al navegador. Actualment PHP funciona pr\u00e0cticament amb qualsevol servidor web i en qualsevol Sistema Operatiu existents, i gaireb\u00e9 amb qualsevol SGBD en cas que necessitem utilitzar una base de dades. Tot i aix\u00f2, el m\u00e9s habitual \u00e9s veure-ho formant el que es coneix com una arquitectura LAMP (Linux, Apache, MySQL i PHP), \u00e9s a dir, funcionant sobre un sistema operatiu Linux, executant-com un m\u00f2dul del servidor web Apache i utilitzant a MySQL com SGBD per emmagatzemar la informaci\u00f3 en cas que es requereixi una base de dades. El llenguatge PHP va ser dissenyat per Rasmus Lerdorf i ara es mant\u00e9 per una comunitat de desenvolupadors, a m\u00e9s \u00e9s de codi obert. A continuaci\u00f3, un fragment d'una p\u00e0gina web din\u00e0mica escrita amb PHP on es pot apreciar com s'incrusta el codi juntament amb l'HTML de la p\u00e0gina:","title":"PHP"},{"location":"01-intro/3_llenguatges.html/#jsp-servlets","text":"JavaServer Pages (tamb\u00e9 conegut com JSP) \u00e9s una tecnologia creada per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques del costat servidor. Igual que PHP, el seu codi s'escriu encastat juntament amb l'HTML de la p\u00e0gina web i \u00e9s el servidor d'aplicacions, en aquest cas, qui ha de processar-per generar la p\u00e0gina web resultant, en HTML. D'altra banda, Java Servlets \u00e9s una tecnologia que tamb\u00e9 es pot utilitzar per crear contingut web din\u00e0mic per\u00f2 que a m\u00e9s est\u00e9n la seva funcionalitat a la possibilitat de connectar aquestes webs din\u00e0miques amb un altre contingut accessible a trav\u00e9s d'Internet. De vegades s'utilitza juntament amb JSP per crear aplicacions web m\u00e9s complexes. Totes dues s\u00f3n tecnologies desenvolupades per Sun Microsystems i propietat ara d'Oracle, despr\u00e9s d'adquirir aquesta \u00faltima a la primera fa ja alguns anys.","title":"JSP / Servlets"},{"location":"01-intro/3_llenguatges.html/#python","text":"El llenguatge Python va ser dissenyat per Guido van Rossum i ara es mant\u00e9 gr\u00e0cies a una comunitat de desenvolupadors, i \u00e9s codi obert. Exemple de codi escrit amb Python. En aquest cas utilitzant el framework Django per al desenvolupament d'aplicacions web: < h1 > Mis pel\u00edculas < /h1> <a href=\"#\">+</ a > { % if lista_peliculas %} <ul> {% for pelicula in lista_peliculas %} < li >< a href = \"{% url 'pelicula' pelicula.id %}\" > {{ pelicula . titulo }} < /a></ li > { % endfor %} </ul> {% else %} < p > No hay pel\u00edculas disponibles < /p> {% endif %} Separada del controlador: from django.shortcuts import render . . . def index ( request ): lista_peliculas = Pelicula . objects . all () context = { 'lista_peliculas' : lista_peliculas } return render ( request , 'mispeliculas/index.html' , context )","title":"Python"},{"location":"01-intro/3_llenguatges.html/#aspnet","text":"ASP.NET \u00e9s una tecnologia, creada per Microsoft, per al desenvolupament de lloc web din\u00e0mics, aplicacions i serveis web. \u00c9s la tecnologia successora del que abans es coneixia com ASP, l'antiga tecnologia de Microsoft per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques. Com que funciona sobre la plataforma .NET de Microsoft, permet que es pugui desenvolupar en qualsevol dels llenguatges de programaci\u00f3 d'aquesta plataforma, Visual Basic .NET o C#. El m\u00e9s habitual \u00e9s veure-ho funcionar juntament amb el lloc web de Microsoft, IIS (Internet Information Server). A continuaci\u00f3, un exemple de p\u00e0gina web din\u00e0mica amb ASP.NET (desenvolupada en llenguatge C #) programant l'acci\u00f3 que passa en pr\u00e9mer un bot\u00f3 (apareix el text d'un formulari a la part final del web): protected void Button1_Click(object sender, EventArgs e) { string buf = TextBox1.Text; changed_text.InnerHtml = buf.ToUpper(); } < %@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Default.aspx.cs\" Inherits=\"firstexample._Default\" %> <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> < html xmlns = \"http://www.w3.org/1999/xhtml\" > < head runat = \"server\" > < title > Untitled Page </ title > </ head > < body > < form id = \"form1\" runat = \"server\" > < div > < asp:TextBox ID = \"TextBox1\" runat = \"server\" style = \"width:224px\" > </ asp:TextBox > < asp:Button ID = \"Button1\" runat = \"server\" Text = \"Enter...\" style = \"width:85px\" onclick = \"Button1_Click\" /> < hr /> < h3 > Results: </ h3 > < span runat = \"server\" id = \"changed_text\" /> </ div > </ form > </ body > </ html >","title":"ASP.NET"},{"location":"01-intro/4_preparant_lentorn_de_desenvolupament.html/","text":"4. Preparant l'entorn de desenvolupament Per a poder provar els nostres llocs web necessitarem instal\u00b7lar una s\u00e8rie d'eines com s\u00f3n: el servidor web Apache, el m\u00f2dul PHP per a aquest servidor, el SGBD MySql, un front-end per al SGBD (PHPMyAdmin), etc. Per simplificar les coses optarem per instal\u00b7lar-ho mitjan\u00e7ant XAMPP, un paquet de programari lliure que cont\u00e9 el servidor HTTP Apache, la base de dades de MySQL i eines necess\u00e0ries per utilitzar el PHP i el llenguatge de programaci\u00f3 Perl. Pr\u00e0ctica 1: Instal\u00b7laci\u00f3 de XAMPP Descarreguem el paquet XAMPP per a la nostra m\u00e0quina (https://www.apachefriends.org/). Li donem permisos d'execuci\u00f3 a l'arxiu descarregat: sudo chmod +x xampp-linux-x64-7.3.9-0-installer.run Executem l'assistent d'instal\u00b7laci\u00f3 sudo ./xampp-linux-x64-7.3.9-0-installer.run En l'assistent d'instal\u00b7laci\u00f3, deixarem les opcions per defecte (excepte la qual ens parla de bitnami que la desmarcarem). Una vegada finalitzada la instal\u00b7laci\u00f3, el nostre XAMPP es trobar\u00e0 en el directori /opt/lampp Ara ja podem arrancar els serveis amb el seg\u00fcent comando: sudo /opt/lampp/lampp start Quan els arranquem, si obrim el navegador i ens anem a la url http://localhost, ens hauria d'apar\u00e8ixer la p\u00e0gina de benvinguda de XAMPP. Per a parar els serveis podem fer a\u00e7\u00f2: sudo /opt/lampp/xampp stop En qualsevol cas, \u00e9s molt m\u00e9s c\u00f2mode treballar amb el panell de control de XAMPP que podrem executar amb la seg\u00fcent ordre: sudo /opt/lampp/manager-linux-x64.run Veurem que s'inicia l'aplicaci\u00f3 que ens permet controlar els serveis de XAMPP.","title":"4. Preparant l'entorn de desenvolupament"},{"location":"01-intro/4_preparant_lentorn_de_desenvolupament.html/#4-preparant-lentorn-de-desenvolupament","text":"Per a poder provar els nostres llocs web necessitarem instal\u00b7lar una s\u00e8rie d'eines com s\u00f3n: el servidor web Apache, el m\u00f2dul PHP per a aquest servidor, el SGBD MySql, un front-end per al SGBD (PHPMyAdmin), etc. Per simplificar les coses optarem per instal\u00b7lar-ho mitjan\u00e7ant XAMPP, un paquet de programari lliure que cont\u00e9 el servidor HTTP Apache, la base de dades de MySQL i eines necess\u00e0ries per utilitzar el PHP i el llenguatge de programaci\u00f3 Perl. Pr\u00e0ctica 1: Instal\u00b7laci\u00f3 de XAMPP Descarreguem el paquet XAMPP per a la nostra m\u00e0quina (https://www.apachefriends.org/). Li donem permisos d'execuci\u00f3 a l'arxiu descarregat: sudo chmod +x xampp-linux-x64-7.3.9-0-installer.run Executem l'assistent d'instal\u00b7laci\u00f3 sudo ./xampp-linux-x64-7.3.9-0-installer.run En l'assistent d'instal\u00b7laci\u00f3, deixarem les opcions per defecte (excepte la qual ens parla de bitnami que la desmarcarem). Una vegada finalitzada la instal\u00b7laci\u00f3, el nostre XAMPP es trobar\u00e0 en el directori /opt/lampp Ara ja podem arrancar els serveis amb el seg\u00fcent comando: sudo /opt/lampp/lampp start Quan els arranquem, si obrim el navegador i ens anem a la url http://localhost, ens hauria d'apar\u00e8ixer la p\u00e0gina de benvinguda de XAMPP. Per a parar els serveis podem fer a\u00e7\u00f2: sudo /opt/lampp/xampp stop En qualsevol cas, \u00e9s molt m\u00e9s c\u00f2mode treballar amb el panell de control de XAMPP que podrem executar amb la seg\u00fcent ordre: sudo /opt/lampp/manager-linux-x64.run Veurem que s'inicia l'aplicaci\u00f3 que ens permet controlar els serveis de XAMPP.","title":"4. Preparant l'entorn de desenvolupament"},{"location":"01-intro/5_eines_de_desenvolupament.html/","text":"5. Eines de desevolupament Per a programar en llenguatges encastats com PHP, ASP o Phython \u00e9s suficient amb un editor de text pla. No obstant sempre \u00e9s recomanable treballar en un entorn integrat de desenvolupament o IDE (acr\u00f2nim en angl\u00e8s de Integrated development environment ). Un IDE \u00e9s una eina inform\u00e0tica per al desenvolupament de programari de manera c\u00f2moda i r\u00e0pida. Aix\u00ed doncs \u00e9s un entorn de desenvolupament que agrupa diferents funcions en un sol programa, habitualment: editor de codi, compilador, depurador i un programa de disseny d'interf\u00edcie gr\u00e0fica. El principal avantatge \u00e9s que facilita la tasca del programador mentre que l'inconvenient m\u00e9s important \u00e9s que pot provocar mals h\u00e0bits a l'hora de programar o provocar errors que a priori comen\u00e7ant de zero no es produirien. Alguns dels IDE m\u00e9s emprats per al desenvolupament web s\u00f3n: Eclipse Netbeans Atom Sublime PHPStorm Brackets Durant les activitats anteriors has preparat el teu propi entorn de desenvolupament sobre una m\u00e0quina virtual (o una real) tal com s'ha explicat en les anotacions. Despr\u00e9s, has de crear un projecte php utilitzant PHPStorm i visualitzar la p\u00e0gina principal a trav\u00e9s del teu servidor XAMPP. Al llarg del curs, crearem els nostres projectes utilitzant l'IDE PHPStorm. Aquesta eina \u00e9s de pagament, per\u00f2 podem utilitzar-la de forma gratu\u00efta per a projectes OpenSource i amb finalitats educatives. En aqueixos casos caldr\u00e0 sol\u00b7licitar la llic\u00e8ncia corresponent al fabricant del programari. Una vegada obtinguda la llic\u00e8ncia educativa pel professor, ser\u00e0 renovable anualment i podran utilitzar-la tots els alumnes del curs. \u00c9s una eina molt completa que ens permetr\u00e0 la integraci\u00f3 amb moltes de les funcionalitats que emprarem. Instal\u00b7lar PHPStorm Per a instal\u00b7lar l'IDE PHPStorm seguirem els seg\u00fcents passos: Executarem sudo snap install phpstorm --classic Ens demanar\u00e0 si volem importar dades d'una instal\u00b7laci\u00f3 anterior, al que contestarem, \u00f2bviament, que no. Ens demanar\u00e0 que acceptem la pol\u00edtica de privadesa. En executar l'aplicaci\u00f3 per primera vegada ens demanar\u00e0 les dades de llic\u00e8ncia. Cada alumne s'haur\u00e0 de registrar utilitzant l'enlla\u00e7 que us passar\u00e0 el professor en classe. en pr\u00e9mer l'enlla\u00e7 ens redirigir\u00e0 a la p\u00e0gina web de jetbrains perqu\u00e8 ens registrem. Una vegada registrats, podrem accedir a l'aplicaci\u00f3 amb el nostre compte o amb el codi d'activaci\u00f3 que ens proporcionen. Finalment, indicarem la configuraci\u00f3 inicial. Integrant l'executable de PHP PHPStorm disposa d'ajuda intel\u00b7ligent (IntelliJ IDEA). Perqu\u00e8 aquesta ajuda es corresponga amb la versi\u00f3 de php que tenim en el nostre XAMPP haurem de registrar l'executable de PHP de XAMPP en el nostre PHPStorm. Per a a\u00e7\u00f2 seguirem els seg\u00fcents passos: En la pantalla d'inici anem a Configure \u2013 Settings . En la llista de categories de l'esquerra anem a Language & Frameworks - PHP . Necessitem indicar quin \u00e9s el nostre int\u00e8rpret. ja que la llista est\u00e0 buida anem a configurar un de la seg\u00fcent forma: Fem clic en el bot\u00f3 ... de la llista d'int\u00e8rprets Premem el bot\u00f3 + de la cantonada superior esquerra per a afegir-ne un. Li posem el nom PHP de XAMPP. Indiquem instal\u00b7lat on nostre est\u00e0 XAMPP: /opt/lampp/bin/php Immediatament ens indicar\u00e0 la versi\u00f3 de l'int\u00e8rpret que tenim instal\u00b7lat Premem OK i seleccionem el nou interprete en la llista d'int\u00e8rprets. Finalment, seleccionem en l'opci\u00f3 PHP language level aquell que es corresponga amb l'int\u00e8rpret que acabem de configurar. Ara el nostre PHPStorm far\u00e0 \u00fas del PHP de XAMPP i utilitzar\u00e0 la versi\u00f3 de PHP que tenim instal\u00b7lada quan ens oferisca les ajudes. Primer projecte amb PHPStorm Per a comen\u00e7ar a treballar amb PHPStorm anem a crear el nostre primer projecte PHP buit. Tingueu en compte que el projecte heu de crear-ho en el directori /opt/lampp/htdocs i que necessitem tenir permisos d'escriptura en aquest directori. Compte! Pot ser que ho h\u00e0gem instal\u00b7lat com root , mentre que quan executem PHPStorm ho fem amb l'usuari dwes , per tant, l'usuari dwes necessita poder escriure en aquest directori. Per a assegurar-nos que tenim permisos, anirem amb una finestra de terminal al directori /opt/lampp i executarem la seg\u00fcent ordre: ls \u2013la htdocs Aquesta ordre ens dir\u00e0 qui \u00e9s el propietari de la carpeta i quins permisos t\u00e9. En el cas que el propietari siga root executarem la seguent ordre: sudo chown -hR dwes htdocs/ A\u00e7\u00f2 canviar\u00e0 el propietari a l'usuari dwes , amb el que tindrem perm\u00eds d'escriptura en aquest directori des de PHPStorm. Treballarem tenint els projectes en la mateixa carpeta. Pr\u00e0ctica 2. Instal\u00b7laci\u00f3 de PHPStorm Seguint les instruccions anteriors instal\u00b7la i configura PHP Storm. Creaci\u00f3 de projectes i comprovaci\u00f3 de la instal\u00b7laci\u00f3 de PHP Seguirem els passos que s'indiquen a continuaci\u00f3: Arrancar XAMPP Iniciar el m\u00f2dul Apache Executar PHPStorm Crear un projecte buit amb Create New > Project PHP Empty Project Posar al projecte el nom practica1 i situar-lo en el directori /opt/lampp/htdocs . Amb a\u00e7\u00f2 es crea un directori de nom practica1 dintre de /opt/lampp/htdocs . En la finestra de l'esquerra (explorador de projectes) apareix el projecte creat. Dins d'ell crearem un nou fitxer PHP prement bot\u00f3 dret sobre el nom i seleccionant New > PHP File . Li posem de nom index.php . En el fitxer creat introdu\u00efm les seg\u00fcents l\u00ednies de codi: <! doctype html > < html lang = \"es\" > < head > < meta charset = \"utf-8\" > < title > Desenvolupament web en entorn servidor </ title > < meta name = \"description\" content = \"PHP, PHPStorm\" > < meta name = \"author\" content = \"Homer Simpson\" > </ head > < body > <? php phpinfo (); ?> </body> </html> Canviem l'autor del document al nostre nom. Obrim el navegador i teclegem en la barra d'adreces la url: http://localhost/practica1 Apareixer\u00e0 una p\u00e0gina similar a la de la seg\u00fcent imatge: Pr\u00e0ctica 3: Prova d'Apache i PHP L'objectiu d'aquesta pr\u00e0ctica \u00e9s aprendre el maneig b\u00e0sic de l'entorn de desenvolupament PHPStorm creant una primera p\u00e0gina PHP que alhora servir\u00e0 per a comprovar la correcta instal\u00b7laci\u00f3 de XAMPP. Seguint les instruccions anterior crea projecte i prova'l.","title":"5. Eines de desevolupament"},{"location":"01-intro/5_eines_de_desenvolupament.html/#5-eines-de-desevolupament","text":"Per a programar en llenguatges encastats com PHP, ASP o Phython \u00e9s suficient amb un editor de text pla. No obstant sempre \u00e9s recomanable treballar en un entorn integrat de desenvolupament o IDE (acr\u00f2nim en angl\u00e8s de Integrated development environment ). Un IDE \u00e9s una eina inform\u00e0tica per al desenvolupament de programari de manera c\u00f2moda i r\u00e0pida. Aix\u00ed doncs \u00e9s un entorn de desenvolupament que agrupa diferents funcions en un sol programa, habitualment: editor de codi, compilador, depurador i un programa de disseny d'interf\u00edcie gr\u00e0fica. El principal avantatge \u00e9s que facilita la tasca del programador mentre que l'inconvenient m\u00e9s important \u00e9s que pot provocar mals h\u00e0bits a l'hora de programar o provocar errors que a priori comen\u00e7ant de zero no es produirien. Alguns dels IDE m\u00e9s emprats per al desenvolupament web s\u00f3n: Eclipse Netbeans Atom Sublime PHPStorm Brackets Durant les activitats anteriors has preparat el teu propi entorn de desenvolupament sobre una m\u00e0quina virtual (o una real) tal com s'ha explicat en les anotacions. Despr\u00e9s, has de crear un projecte php utilitzant PHPStorm i visualitzar la p\u00e0gina principal a trav\u00e9s del teu servidor XAMPP. Al llarg del curs, crearem els nostres projectes utilitzant l'IDE PHPStorm. Aquesta eina \u00e9s de pagament, per\u00f2 podem utilitzar-la de forma gratu\u00efta per a projectes OpenSource i amb finalitats educatives. En aqueixos casos caldr\u00e0 sol\u00b7licitar la llic\u00e8ncia corresponent al fabricant del programari. Una vegada obtinguda la llic\u00e8ncia educativa pel professor, ser\u00e0 renovable anualment i podran utilitzar-la tots els alumnes del curs. \u00c9s una eina molt completa que ens permetr\u00e0 la integraci\u00f3 amb moltes de les funcionalitats que emprarem.","title":"5. Eines de desevolupament"},{"location":"01-intro/5_eines_de_desenvolupament.html/#installar-phpstorm","text":"Per a instal\u00b7lar l'IDE PHPStorm seguirem els seg\u00fcents passos: Executarem sudo snap install phpstorm --classic Ens demanar\u00e0 si volem importar dades d'una instal\u00b7laci\u00f3 anterior, al que contestarem, \u00f2bviament, que no. Ens demanar\u00e0 que acceptem la pol\u00edtica de privadesa. En executar l'aplicaci\u00f3 per primera vegada ens demanar\u00e0 les dades de llic\u00e8ncia. Cada alumne s'haur\u00e0 de registrar utilitzant l'enlla\u00e7 que us passar\u00e0 el professor en classe. en pr\u00e9mer l'enlla\u00e7 ens redirigir\u00e0 a la p\u00e0gina web de jetbrains perqu\u00e8 ens registrem. Una vegada registrats, podrem accedir a l'aplicaci\u00f3 amb el nostre compte o amb el codi d'activaci\u00f3 que ens proporcionen. Finalment, indicarem la configuraci\u00f3 inicial.","title":"Instal\u00b7lar PHPStorm"},{"location":"01-intro/5_eines_de_desenvolupament.html/#integrant-lexecutable-de-php","text":"PHPStorm disposa d'ajuda intel\u00b7ligent (IntelliJ IDEA). Perqu\u00e8 aquesta ajuda es corresponga amb la versi\u00f3 de php que tenim en el nostre XAMPP haurem de registrar l'executable de PHP de XAMPP en el nostre PHPStorm. Per a a\u00e7\u00f2 seguirem els seg\u00fcents passos: En la pantalla d'inici anem a Configure \u2013 Settings . En la llista de categories de l'esquerra anem a Language & Frameworks - PHP . Necessitem indicar quin \u00e9s el nostre int\u00e8rpret. ja que la llista est\u00e0 buida anem a configurar un de la seg\u00fcent forma: Fem clic en el bot\u00f3 ... de la llista d'int\u00e8rprets Premem el bot\u00f3 + de la cantonada superior esquerra per a afegir-ne un. Li posem el nom PHP de XAMPP. Indiquem instal\u00b7lat on nostre est\u00e0 XAMPP: /opt/lampp/bin/php Immediatament ens indicar\u00e0 la versi\u00f3 de l'int\u00e8rpret que tenim instal\u00b7lat Premem OK i seleccionem el nou interprete en la llista d'int\u00e8rprets. Finalment, seleccionem en l'opci\u00f3 PHP language level aquell que es corresponga amb l'int\u00e8rpret que acabem de configurar. Ara el nostre PHPStorm far\u00e0 \u00fas del PHP de XAMPP i utilitzar\u00e0 la versi\u00f3 de PHP que tenim instal\u00b7lada quan ens oferisca les ajudes. Primer projecte amb PHPStorm Per a comen\u00e7ar a treballar amb PHPStorm anem a crear el nostre primer projecte PHP buit. Tingueu en compte que el projecte heu de crear-ho en el directori /opt/lampp/htdocs i que necessitem tenir permisos d'escriptura en aquest directori. Compte! Pot ser que ho h\u00e0gem instal\u00b7lat com root , mentre que quan executem PHPStorm ho fem amb l'usuari dwes , per tant, l'usuari dwes necessita poder escriure en aquest directori. Per a assegurar-nos que tenim permisos, anirem amb una finestra de terminal al directori /opt/lampp i executarem la seg\u00fcent ordre: ls \u2013la htdocs Aquesta ordre ens dir\u00e0 qui \u00e9s el propietari de la carpeta i quins permisos t\u00e9. En el cas que el propietari siga root executarem la seguent ordre: sudo chown -hR dwes htdocs/ A\u00e7\u00f2 canviar\u00e0 el propietari a l'usuari dwes , amb el que tindrem perm\u00eds d'escriptura en aquest directori des de PHPStorm. Treballarem tenint els projectes en la mateixa carpeta. Pr\u00e0ctica 2. Instal\u00b7laci\u00f3 de PHPStorm Seguint les instruccions anteriors instal\u00b7la i configura PHP Storm.","title":"Integrant l'executable de PHP"},{"location":"01-intro/5_eines_de_desenvolupament.html/#creacio-de-projectes-i-comprovacio-de-la-installacio-de-php","text":"Seguirem els passos que s'indiquen a continuaci\u00f3: Arrancar XAMPP Iniciar el m\u00f2dul Apache Executar PHPStorm Crear un projecte buit amb Create New > Project PHP Empty Project Posar al projecte el nom practica1 i situar-lo en el directori /opt/lampp/htdocs . Amb a\u00e7\u00f2 es crea un directori de nom practica1 dintre de /opt/lampp/htdocs . En la finestra de l'esquerra (explorador de projectes) apareix el projecte creat. Dins d'ell crearem un nou fitxer PHP prement bot\u00f3 dret sobre el nom i seleccionant New > PHP File . Li posem de nom index.php . En el fitxer creat introdu\u00efm les seg\u00fcents l\u00ednies de codi: <! doctype html > < html lang = \"es\" > < head > < meta charset = \"utf-8\" > < title > Desenvolupament web en entorn servidor </ title > < meta name = \"description\" content = \"PHP, PHPStorm\" > < meta name = \"author\" content = \"Homer Simpson\" > </ head > < body > <? php phpinfo (); ?> </body> </html> Canviem l'autor del document al nostre nom. Obrim el navegador i teclegem en la barra d'adreces la url: http://localhost/practica1 Apareixer\u00e0 una p\u00e0gina similar a la de la seg\u00fcent imatge: Pr\u00e0ctica 3: Prova d'Apache i PHP L'objectiu d'aquesta pr\u00e0ctica \u00e9s aprendre el maneig b\u00e0sic de l'entorn de desenvolupament PHPStorm creant una primera p\u00e0gina PHP que alhora servir\u00e0 per a comprovar la correcta instal\u00b7laci\u00f3 de XAMPP. Seguint les instruccions anterior crea projecte i prova'l.","title":"Creaci\u00f3 de projectes i comprovaci\u00f3 de la instal\u00b7laci\u00f3 de PHP"},{"location":"01-intro/6_eines_per_a_depuraci_de_codi/","text":"6. Eines per a la depuraci\u00f3 de codi En els entorns de desevolupament \u00e9s necessari disposar de ferramentes que ens permenten depurar les nostres aplicacions. Ja siga per arreglar errors com per millorar l'execuci\u00f3 del codi. Els entorns de desevolupament d'aplicacions d'escriptori solen disposar dels seus propis sistemes de depuraci\u00f3, en el cas dels llenguatges d'entorn servidor alguns ecosistemes com el de .Net de Microsoft l'inclouen. Per a PHP hi ha diverses ferramentes com XDebug o DBG. Instal\u00b7laci\u00f3 d'XDEBUG 3.0 XDebug 3.0 Recentment s'ha publicat XDebug 3.0, versi\u00f3 que cobreix aquest document. Si busqueu informaci\u00f3, tingau en compte en quina versi\u00f3 treballeu. A continuaci\u00f3, explicarem com instal\u00b7lar el m\u00f2dul XDebug 3 en un entorn basat en XAMPP. Abans de res comprovarem que no el tenim instal\u00b7lat, per a aix\u00f2 seguirem els seg\u00fcents passos: Obrim la p\u00e0gina de benvinguda de XAMPP escrivint al navegador la URL http://localhost . A la part superior de la p\u00e0gina tenim una s\u00e8rie d'enlla\u00e7os, entre els que es troba un que diu phpinfo . Feu clic en aquest enlla\u00e7. Se'ns mostrar\u00e0 la p\u00e0gina de configuraci\u00f3 del nostre m\u00f2dul php. Anem a seleccionar tots els continguts d'aquesta p\u00e0gina i els anem a copiar. Obrirem al navegador la seg\u00fcent URL: http://xdebug.org/wizard.php . En aquesta p\u00e0gina podrem comprovar quins m\u00f2duls tenim instal\u00b7lats en nostre m\u00f2dul PHP. Per a aix\u00f2, enganxarem els continguts que hem copiat pr\u00e8viament a la caixa de text que apareix i premerem Analyse mi phpinfo() output . Ens apareixeran un resultats semblants a aquests: Com es pot observar, l'extensi\u00f3 XDebug no est\u00e0 instal\u00b7lada. Una altra informaci\u00f3 important que ens d\u00f3na \u00e9s que el nostre fitxer de configuraci\u00f3 del PHP el podem trobar en /opt/lampp/etc/php.ini i les extensions les tenim en /opt/lampp/lib/php/extensions/no-debug-non-zts-20180731 \u00c9s important que recordem aquestes dades. Per instal\u00b7lar l'extensi\u00f3 XDebug seguirem les instruccions que ens indica la p\u00e0gina anterior per\u00f2 compte perqu\u00e8 cal fer algunes modificacions: Important Els car\u00e0cters # representen valors que depenen de cada instal\u00b7laci\u00f3, aix\u00ed que cal tindre-ho en compte en executar-ho. Descarregueu la darrera versi\u00f3 d'Xdebug Instal\u00b7leu els requisits previs per a la compilaci\u00f3 d'extensions PHP.\\ Instal\u00b7leu-lo amb el sistema Ubuntu amb: apt-get install php-dev autoconf automake Desempaqueteu el fitxer descarregat amb tar -xvzf xdebug-#.#.#.tgz Executar: cd xdebug-#.#.# Executar: /opt/lampp/bin/phpize (hem canviat la ruta perqu\u00e8 execute el phpize de XAMPP). Com a part de la seva eixida hauria de mostrar: Configuring for: ... Zend Module Api No: ######## Zend Extension Api No: ######### Si no \u00e9s aix\u00ed, est\u00e0s utilitzant phpize incorrecta. Seguiu aquesta entrada de FAQ i passeu al pas seg\u00fcent. Executar: ./configure --with-php-config=/opt/lampp/bin/php-config (hem afegit la ruta del php-config de XAMPP). Compilem les fonts: make Executar: sudo cp modules/xdebug.so /opt/lampp/lib/php/extensions/no-debug-non-zts-######## Edita /opt/lampp/etc/php.ini i afegeix les seg\u00fcents l\u00ednies al final [xdebug] zend_extension=xdebug xdebug.mode=debug xdebug.client_port=9003 xdebug.client_host=127.0.0.1 Reinicieu el servidor web Repeteix els passos del 1 al 5 inicials per comprovar que XDebug s\u00ed est\u00e0 instal\u00b7lat. Despr\u00e9s caldr\u00e0 configurar PHPStorm per a connectar-lo a XDebug Integraci\u00f3 amb PHPStorm i instal\u00b7lar una extensi\u00f3 de Firefox Xdebug Helper o Chrome. Pr\u00e0ctica 4. Instal\u00b7laci\u00f2 d'XDebug Seguint les instruccions anteriors instal\u00b7la i configura XDEBUG i connecta'l a PHP Storm.","title":"6. Eines per a la depuraci\u00f3 de codi"},{"location":"01-intro/6_eines_per_a_depuraci_de_codi/#6-eines-per-a-la-depuracio-de-codi","text":"En els entorns de desevolupament \u00e9s necessari disposar de ferramentes que ens permenten depurar les nostres aplicacions. Ja siga per arreglar errors com per millorar l'execuci\u00f3 del codi. Els entorns de desevolupament d'aplicacions d'escriptori solen disposar dels seus propis sistemes de depuraci\u00f3, en el cas dels llenguatges d'entorn servidor alguns ecosistemes com el de .Net de Microsoft l'inclouen. Per a PHP hi ha diverses ferramentes com XDebug o DBG.","title":"6. Eines per a la depuraci\u00f3 de codi"},{"location":"01-intro/6_eines_per_a_depuraci_de_codi/#installacio-dxdebug-30","text":"XDebug 3.0 Recentment s'ha publicat XDebug 3.0, versi\u00f3 que cobreix aquest document. Si busqueu informaci\u00f3, tingau en compte en quina versi\u00f3 treballeu. A continuaci\u00f3, explicarem com instal\u00b7lar el m\u00f2dul XDebug 3 en un entorn basat en XAMPP. Abans de res comprovarem que no el tenim instal\u00b7lat, per a aix\u00f2 seguirem els seg\u00fcents passos: Obrim la p\u00e0gina de benvinguda de XAMPP escrivint al navegador la URL http://localhost . A la part superior de la p\u00e0gina tenim una s\u00e8rie d'enlla\u00e7os, entre els que es troba un que diu phpinfo . Feu clic en aquest enlla\u00e7. Se'ns mostrar\u00e0 la p\u00e0gina de configuraci\u00f3 del nostre m\u00f2dul php. Anem a seleccionar tots els continguts d'aquesta p\u00e0gina i els anem a copiar. Obrirem al navegador la seg\u00fcent URL: http://xdebug.org/wizard.php . En aquesta p\u00e0gina podrem comprovar quins m\u00f2duls tenim instal\u00b7lats en nostre m\u00f2dul PHP. Per a aix\u00f2, enganxarem els continguts que hem copiat pr\u00e8viament a la caixa de text que apareix i premerem Analyse mi phpinfo() output . Ens apareixeran un resultats semblants a aquests: Com es pot observar, l'extensi\u00f3 XDebug no est\u00e0 instal\u00b7lada. Una altra informaci\u00f3 important que ens d\u00f3na \u00e9s que el nostre fitxer de configuraci\u00f3 del PHP el podem trobar en /opt/lampp/etc/php.ini i les extensions les tenim en /opt/lampp/lib/php/extensions/no-debug-non-zts-20180731 \u00c9s important que recordem aquestes dades. Per instal\u00b7lar l'extensi\u00f3 XDebug seguirem les instruccions que ens indica la p\u00e0gina anterior per\u00f2 compte perqu\u00e8 cal fer algunes modificacions: Important Els car\u00e0cters # representen valors que depenen de cada instal\u00b7laci\u00f3, aix\u00ed que cal tindre-ho en compte en executar-ho. Descarregueu la darrera versi\u00f3 d'Xdebug Instal\u00b7leu els requisits previs per a la compilaci\u00f3 d'extensions PHP.\\ Instal\u00b7leu-lo amb el sistema Ubuntu amb: apt-get install php-dev autoconf automake Desempaqueteu el fitxer descarregat amb tar -xvzf xdebug-#.#.#.tgz Executar: cd xdebug-#.#.# Executar: /opt/lampp/bin/phpize (hem canviat la ruta perqu\u00e8 execute el phpize de XAMPP). Com a part de la seva eixida hauria de mostrar: Configuring for: ... Zend Module Api No: ######## Zend Extension Api No: ######### Si no \u00e9s aix\u00ed, est\u00e0s utilitzant phpize incorrecta. Seguiu aquesta entrada de FAQ i passeu al pas seg\u00fcent. Executar: ./configure --with-php-config=/opt/lampp/bin/php-config (hem afegit la ruta del php-config de XAMPP). Compilem les fonts: make Executar: sudo cp modules/xdebug.so /opt/lampp/lib/php/extensions/no-debug-non-zts-######## Edita /opt/lampp/etc/php.ini i afegeix les seg\u00fcents l\u00ednies al final [xdebug] zend_extension=xdebug xdebug.mode=debug xdebug.client_port=9003 xdebug.client_host=127.0.0.1 Reinicieu el servidor web Repeteix els passos del 1 al 5 inicials per comprovar que XDebug s\u00ed est\u00e0 instal\u00b7lat. Despr\u00e9s caldr\u00e0 configurar PHPStorm per a connectar-lo a XDebug Integraci\u00f3 amb PHPStorm i instal\u00b7lar una extensi\u00f3 de Firefox Xdebug Helper o Chrome. Pr\u00e0ctica 4. Instal\u00b7laci\u00f2 d'XDebug Seguint les instruccions anteriors instal\u00b7la i configura XDEBUG i connecta'l a PHP Storm.","title":"Instal\u00b7laci\u00f3 d'XDEBUG 3.0"},{"location":"02-basics/0_index/","text":"0. Introducci\u00f3 Continguts Programaci\u00f3 web amb PHP Funcionament i estructura b\u00e0sica Variables i tipus de dades Constants Expressions i operadors Estructures de control Maneig de cadenes de text i dates Maneig de cadenes de text Maneig de dates Maneig d'arrays Introducci\u00f3 Arrays associatius Arrays multidimensionals Funcions Predefinides De l'usuari Noves caracter\u00edstiques de PHP 7 Type Hinting Nous operadors PHP 7 Operador nau espacial Operador de fusi\u00f3 de null Funcions an\u00f2nimes ( closures ) Processament de formularis M\u00e8todes GET i POST Definici\u00f3 de formularis Recuperaci\u00f3 d'informaci\u00f3 amb GET Recuperaci\u00f3 d'informaci\u00f3 amb POST Enviament d'arxius Validaci\u00f3 de formularis Pujada de fitxers Cr\u00e8dits Aitor Medrano. (setembre de 2021) Desarrollo Web en Entorno Servidor disponible en: https://aitor-medrano.github.io/dwes2122/index.html","title":"0. Introducci\u00f3"},{"location":"02-basics/0_index/#0-introduccio","text":"","title":"0. Introducci\u00f3"},{"location":"02-basics/0_index/#continguts","text":"Programaci\u00f3 web amb PHP Funcionament i estructura b\u00e0sica Variables i tipus de dades Constants Expressions i operadors Estructures de control Maneig de cadenes de text i dates Maneig de cadenes de text Maneig de dates Maneig d'arrays Introducci\u00f3 Arrays associatius Arrays multidimensionals Funcions Predefinides De l'usuari Noves caracter\u00edstiques de PHP 7 Type Hinting Nous operadors PHP 7 Operador nau espacial Operador de fusi\u00f3 de null Funcions an\u00f2nimes ( closures ) Processament de formularis M\u00e8todes GET i POST Definici\u00f3 de formularis Recuperaci\u00f3 d'informaci\u00f3 amb GET Recuperaci\u00f3 d'informaci\u00f3 amb POST Enviament d'arxius Validaci\u00f3 de formularis Pujada de fitxers","title":"Continguts"},{"location":"02-basics/0_index/#credits","text":"Aitor Medrano. (setembre de 2021) Desarrollo Web en Entorno Servidor disponible en: https://aitor-medrano.github.io/dwes2122/index.html","title":"Cr\u00e8dits"},{"location":"02-basics/1_programaci_web_amb_php/","text":"1. Programaci\u00f3 web amb PHP PHP Acr\u00f2nim de Personal Home Page Llenguatge de prop\u00f2sit general, encara que el seu fort \u00e9s el desenvolupament web. Sintaxi similar a C / Java El codi s'executa en el servidor (en Apache mitjan\u00e7ant mod_php ) El client rep el resultat generat despr\u00e9s d'interpretar el codi al servidor. El codi s'emmagatzema en arxiu amb extensi\u00f3 .php. L'\u00faltima versi\u00f3 \u00e9s la 8.0, de novembre de 2020 (i en breu tindrem la versi\u00f3 8.1). La versi\u00f3 7.0 va sortir al desembre de 2015. A m\u00e9s de nombroses noves funcionalitats que anirem veient durant el curs, t\u00e9 m\u00e9s de dues vegades millor rendiment que PHP5. La seva documentaci\u00f3 \u00e9s extensa i est\u00e0 tradu\u00efda: https://www.php.net/manual/es/. Funcionament i estructura b\u00e0sica El nostre primer codi PHP El codi PHP sempre va entre els simbolos <?php i ?> . Les instruccions PHP acaben sempre amb ; . Per a generar codi HTML des de PHP podem utilitzar el m\u00e8tode echo passant-li el text del codi que volem generar. El codi pot anar entre les etiquetes d'HTML. < html > < head ></ head > < body > < h1 > <?php echo \"Hola m\u00f3n\" ?> </ h1 > < body > Tamb\u00e9 podem utilitzar l'etiqueta <?= fa el echo al mateix temps. < html > < head ></ head > < body > < h1 > <? = \"Hola m\u00f3n\" ?> </ h1 > < body > Comentaris De bloc entre /* i */ . De linea, comen\u00e7ant per // o per # . Codi incrustat El documents que contenen codi PHP s'han d'anomenar amb l'extensi\u00f3 .php Variables i tipus de dades Una de les caracter\u00edstiques de php \u00e9s que \u00e9s un llenguatge no fortament tipat . De fet no cal declarar la variable ni indicar el tipus de dades si la declare. Encara que si volem codi de qualitat ho hauriem de fer. Declaraci\u00f3 Els noms de les variables sempre comencen per $ Despr\u00e9s del $ els noms de les variables han d'anar seguits per una lletra o el car\u00e0cter _ i poden contenir tamb\u00e9 n\u00fameros. No \u00e9s necessari declarar una variable ni especificar-li un tipus (sencer, cadena,...) concret. Per crear una variable que continga el text a generar i mostrar-la: < html > < head ></ head > < body > < h1 > <?php $salutacio = \"Hola m\u00f3n\" ; echo $salutacio ; ?> </ h1 > < body > Tipus de les variables El tipus de la variable es decideix en funci\u00f3 del context en qu\u00e8 s'utilitze. En assignar-li el valor 7, la variable \u00e9s de tipus \u201csencer\u201d $la_meua_variable = 7 ; // ara \u00e9s un n\u00famero $la_meua_variable = \"set\" ; // ara \u00e9s cadena Si li canviem el contingut passa a ser de tipus \u201ccadena\u201d Variable no inicialitzades Si s'intenta utilitzar una variable abans d'assignar-li un valor, es genera un error de tipus E_NOTICE per\u00f2 no s'interromp l'execuci\u00f3 de l'script. L'eixida mostrar\u00e0 un av\u00eds cada volta que s'intente. Tipus de dades en PHP boole\u00e0 ( boolean ). Els seus possibles valors s\u00f3n true i false. A m\u00e9s, qualsevol nombre enter es considera com true, excepte el 0 que \u00e9s false. sencer ( integer ). Qualsevol nombre sense decimals. Es poden representar en format decimal, octal (comen\u00e7ant per un 0), o hexadecimal (comen\u00e7ant per 0x). real ( float ). Qualsevol nombre amb decimals. Es poden representar tamb\u00e9 en notaci\u00f3 cient\u00edfica. cadena ( string ). Conjunts de car\u00e0cters delimitats per cometes simples o dobles. vector ( array ). Conjunt de variables del mateix tipus ordenades. Objecte ( object ). Utilitzat per les inst\u00e0ncies de classes. null . \u00c9s un tipus de dades especial, que s'usa per a indicar que la variable no t\u00e9 valor. ( http://php.net/manual/es/language.types.null.php ) \u00c0mbit de les variables L'\u00e0mbit d'una variable \u00e9s la part del codi en que \u00e9s visible. Una variable declarada en un fitxer de PHP est\u00e0 disponible en eixe fitxer i en els que l'incloguen. Les funcions definixen un \u00e0mbit local, separat de la resta del codi. Es poden definir variables globlals amb la paraula reservada global , encara que no s\u00f3n aconsellables. Variables predefinides S\u00f3n variables internes predefinides de PHP que poden usar-se des de qualsevol \u00e0mbit. Tomem forma d'arrays associatius que contenen un conjunt de valors. $_SERVER . Cont\u00e9 informaci\u00f3 sobre l'entorn del servidor web i d'execuci\u00f3. $_GET, $_POST i $_COOKIE contenen les variables que s'han passat al script actual utilitzant, respectivament, els m\u00e8todes GET (par\u00e0metres en la URL), HTTP POST i Cookies HTTP $_REQUEST junta en un solament el contingut dels tres *arrays anteriors, $_GET, $_POST i $_COOKIE. $_ENV cont\u00e9 les variables que es puguen haver passat a PHP des de l'entorn en qu\u00e8 s'executa. $_FILES cont\u00e9 els fitxers que es puguen haver pujat al servidor utilitzant el m\u00e8tode POST. $_SESSION cont\u00e9 les variables de sessi\u00f3 disponibles per al gui\u00f3 actual. http://es.php.net/manual/es/language.variables.superglobals.php Constants Per a definir constants s'utilitza define() , que reb el nom de la constant i el valor que li volem donar define ( \"LIMITE\" , 1000 ); \u00c9s habitual utilitzar identificadors en majuscules per a les constants. Operadors Arim\u00e8tics Exemple Nom Resultat +$a Identidat Conversi\u00f3 de $a a int o float segons el cas. -$a Negaci\u00f3 Oposat de $a . $a + $b Suma Suma de $a i $b . $a - $b Resta Difer\u00e8ncia de $a i $b . $a * $b Multiplicaci\u00f3 Producte de $a i $b . $a / $b Divisi\u00f3 Quocient de $a i $b . $a % $b M\u00f3dul / Residu Residu de $a dividit per $b . $a ** $b Pot\u00e8ncia Resultat de $a elevat a $b . PHP >= 5.6. En el caso de cadenas , si queremos concatenarlas, se utiliza el operador . : $x = 33 ; $y = 11 ; $z = $x + $y ; echo \"La suma de 33 y 11 es \" . 44. \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . ( 33 + 11 ) . \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . $z . \"<br />\" ; Realment en lloc de concatenar cadenas con variables, podem imprimir-les directament ja que s'expandeixen autom\u00e0ticament: echo \"La suma de $x y $y es $z <br />\" ; En ocasions, necesitem envoltar el nom de la variable entre claus per poder un m\u00e9s text al resultat: $color = \"rojo\" ; echo \"El plural de $color el ${ color } s\" ; ?> M\u00e9s endavant estudiarem algunes funcions per al tractament de cadenes. Comparaci\u00f3 Exemple Nom Resultat $a == $b Igual true si $a \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a === $b Id\u00e8ntic, Comparaci\u00f3 estricta true si $a \u00e9s igual a $b , i s\u00f3n del mateix tipus de dada. $a != $b , $a <> $b Diferent true si $a no \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a !== $b No id\u00e8ntic true si $a no \u00e9s igual a $b , o si no s\u00f3n del mateix tipus. $a < $b Menor que true si $a \u00e9s estrictament menor que $b . $a > $b Major que true si $a \u00e9s estrictament major que $b . $a <= $b Menor o igual que true si $a \u00e9s menor o igual que $b . $a >= $b Major o igual que true si $a \u00e9s major o igual que $b . $a <=> $b Nau espacial Torna -1 , 0 o 1 quan $a \u00e9s respectivamente menor, igual, o major que $b . PHP >= 7. $a ?? $b ?? $c Fusi\u00f3n de null El primer operano d'esquerra a dreta que existisca i no siga null . null si no hi ha valors definits i no s\u00f3n null . PHP >= 7. L\u00f2gics Exemple Nom Resultat $a and $b , $a && $b And (i) true si tant $a com $b s\u00f3n true . $a or $b , $a || $b Or (o inclusiu) true si qualsevol de $a o $b \u00e9s true . $a xor $b Xor (o exclusiu) true si $a o $b \u00e9s true , pero no ambd\u00f3s. !$a Not (no) true si $a no \u00e9s true . Assignaci\u00f3 Exemple Nom Resultat $a = $b Assignaci\u00f3 Assigna a $a el valor de $b $a += $b Assignaci\u00f3 de la suma Le suma a $a el valor de $b . Equivalent a $a = $a + $b $a -= $b Assignaci\u00f3 de la resta Le resta a $a el valor de $b . Equivalent a $a = $a - $b $a *= $b Assignaci\u00f3 del producte Assigna a $a el producto de $a por $b . Equivalent a $a = $a * $b $a /= $b Assignaci\u00f3 de la divisi\u00f3 Assigna a $a el quocient de $a entre $b . Equivalent a $a = $a / $b $a %= $b Assignaci\u00f3 del residu Assigna a $a el residu de dividir $a entre $b . Equivalent a $a = $a % $b $a .= $b Concatenaci\u00f3 Concatena a $a la cadena $b . Equivalent a $a = $a . $b $a++ Increment Incrementa $a en una unitat. Equivalent a $a = $a + 1 $a-- Decrement Decrementa $a en una unitat. Equivalent a $a = $a - 1 Prioridad de los operadores Recorda la prioritat. Primer els par\u00e8ntesis, despr\u00e9s la negaci\u00f3 ( ! ), productes/divisions, sumes/restes, comparacions, l\u00f2gics i finalment es realitza l'assignaci\u00f3. M\u00e9s informaci\u00f3 a https://www.php.net/manual/es/language.operators.precedence.php Autoevaluaci\u00f3n Si $a=5 i $b=4 , esbrina el valor de $c si $c = $a*2 > $b+5 && !($b<>4) Operador ternari Funciona com un condicional condici\u00f3 ? valor si true : valor si false i que es pot simplificar ** condici\u00f3 https://www.php.net/manual/es/language.operators.php Farem alguns exercicis : Exercisi 2.0 Conceptes b\u00e0sics Estructures de control de flux Les instruccions de control de flux en PHP funcionen exactament igual que en altres llenguatges de programaci\u00f3. Les m\u00e9s habituals s\u00f3n: Condicionals: if, if else, switch Bucles: while, do while, for seguint les estructures: if ( condici\u00f3 ) { // instruccions } else { // instruccions } switch ( $variable ) { case valor : //instruccio1 break ; case valor : //instruccio1 break ; default : //instruccio1 } while ( condici\u00f3 ) { //instruccions } do { //instruccions } while ( condici\u00f3 ); for ( $i = 1 ; $i < 10 ; $i ++ ){ //instruccions } http://php.net/manual/es/language.control-structures.php Sent\u00e8ncies per a incloure Fitxers Les sent\u00e8ncies include() i include_once() i require() i require_once() inclouen i avaluen l'artxiu especificat. include_once() i require_once() verifica que l'arxiu no haja sigut incl\u00f2s abans i \u00e9s preferible a include. Cal ser cur\u00f2s amb el path de l'arxiu a incloure. La difer\u00e8ncia entre require i include \u00e9s el tractament de l'error quan el fitxer no existeix. fruites . php <? php $color = 'verde' ; $fruta = 'manzana' ; include ( 'fruite.view.php' ) ?> fruites.view.php < html > < head > < title > Fruites </ title > </ head > < body > < h3 > <?= \"Una $fruta $color\" ?> </ h3 > </ body > </ html > Expansi\u00f3 de variables Podem introduir una variable dins d'un text sempre que usem les cometes dobles per a delimitar el text. A\u00e7\u00f2 far\u00e0 que el contingut de la variable s'expandisca i es concatene amb el text existent en la cadena. echo \"<p>M\u00f2dul: $module </p>\" A voltes, \u00e9s necessari envoltar-la entre claus echo \"<p>M\u00f2dul: { $module } DAW</p>\" Si no pos\u00e0rem les claus l'int\u00e8rpret cercaria una variable que es cride $moduleDAW","title":"1. Programaci\u00f3 web amb PHP"},{"location":"02-basics/1_programaci_web_amb_php/#1-programacio-web-amb-php","text":"","title":"1. Programaci\u00f3 web amb PHP"},{"location":"02-basics/1_programaci_web_amb_php/#php","text":"Acr\u00f2nim de Personal Home Page Llenguatge de prop\u00f2sit general, encara que el seu fort \u00e9s el desenvolupament web. Sintaxi similar a C / Java El codi s'executa en el servidor (en Apache mitjan\u00e7ant mod_php ) El client rep el resultat generat despr\u00e9s d'interpretar el codi al servidor. El codi s'emmagatzema en arxiu amb extensi\u00f3 .php. L'\u00faltima versi\u00f3 \u00e9s la 8.0, de novembre de 2020 (i en breu tindrem la versi\u00f3 8.1). La versi\u00f3 7.0 va sortir al desembre de 2015. A m\u00e9s de nombroses noves funcionalitats que anirem veient durant el curs, t\u00e9 m\u00e9s de dues vegades millor rendiment que PHP5. La seva documentaci\u00f3 \u00e9s extensa i est\u00e0 tradu\u00efda: https://www.php.net/manual/es/.","title":"PHP"},{"location":"02-basics/1_programaci_web_amb_php/#funcionament-i-estructura-basica","text":"","title":"Funcionament i estructura b\u00e0sica"},{"location":"02-basics/1_programaci_web_amb_php/#el-nostre-primer-codi-php","text":"El codi PHP sempre va entre els simbolos <?php i ?> . Les instruccions PHP acaben sempre amb ; . Per a generar codi HTML des de PHP podem utilitzar el m\u00e8tode echo passant-li el text del codi que volem generar. El codi pot anar entre les etiquetes d'HTML. < html > < head ></ head > < body > < h1 > <?php echo \"Hola m\u00f3n\" ?> </ h1 > < body > Tamb\u00e9 podem utilitzar l'etiqueta <?= fa el echo al mateix temps. < html > < head ></ head > < body > < h1 > <? = \"Hola m\u00f3n\" ?> </ h1 > < body >","title":"El nostre primer codi PHP"},{"location":"02-basics/1_programaci_web_amb_php/#comentaris","text":"De bloc entre /* i */ . De linea, comen\u00e7ant per // o per # .","title":"Comentaris"},{"location":"02-basics/1_programaci_web_amb_php/#codi-incrustat","text":"El documents que contenen codi PHP s'han d'anomenar amb l'extensi\u00f3 .php","title":"Codi incrustat"},{"location":"02-basics/1_programaci_web_amb_php/#variables-i-tipus-de-dades","text":"Una de les caracter\u00edstiques de php \u00e9s que \u00e9s un llenguatge no fortament tipat . De fet no cal declarar la variable ni indicar el tipus de dades si la declare. Encara que si volem codi de qualitat ho hauriem de fer.","title":"Variables i tipus de dades"},{"location":"02-basics/1_programaci_web_amb_php/#constants","text":"Per a definir constants s'utilitza define() , que reb el nom de la constant i el valor que li volem donar define ( \"LIMITE\" , 1000 ); \u00c9s habitual utilitzar identificadors en majuscules per a les constants.","title":"Constants"},{"location":"02-basics/1_programaci_web_amb_php/#operadors","text":"","title":"Operadors"},{"location":"02-basics/1_programaci_web_amb_php/#arimetics","text":"Exemple Nom Resultat +$a Identidat Conversi\u00f3 de $a a int o float segons el cas. -$a Negaci\u00f3 Oposat de $a . $a + $b Suma Suma de $a i $b . $a - $b Resta Difer\u00e8ncia de $a i $b . $a * $b Multiplicaci\u00f3 Producte de $a i $b . $a / $b Divisi\u00f3 Quocient de $a i $b . $a % $b M\u00f3dul / Residu Residu de $a dividit per $b . $a ** $b Pot\u00e8ncia Resultat de $a elevat a $b . PHP >= 5.6. En el caso de cadenas , si queremos concatenarlas, se utiliza el operador . : $x = 33 ; $y = 11 ; $z = $x + $y ; echo \"La suma de 33 y 11 es \" . 44. \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . ( 33 + 11 ) . \"<br />\" ; echo \"La suma de \" . $x . \" y \" . $y . \" es \" . $z . \"<br />\" ; Realment en lloc de concatenar cadenas con variables, podem imprimir-les directament ja que s'expandeixen autom\u00e0ticament: echo \"La suma de $x y $y es $z <br />\" ; En ocasions, necesitem envoltar el nom de la variable entre claus per poder un m\u00e9s text al resultat: $color = \"rojo\" ; echo \"El plural de $color el ${ color } s\" ; ?> M\u00e9s endavant estudiarem algunes funcions per al tractament de cadenes.","title":"Arim\u00e8tics"},{"location":"02-basics/1_programaci_web_amb_php/#comparacio","text":"Exemple Nom Resultat $a == $b Igual true si $a \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a === $b Id\u00e8ntic, Comparaci\u00f3 estricta true si $a \u00e9s igual a $b , i s\u00f3n del mateix tipus de dada. $a != $b , $a <> $b Diferent true si $a no \u00e9s igual a $b despr\u00e9s de la conversi\u00f3 de tipus. $a !== $b No id\u00e8ntic true si $a no \u00e9s igual a $b , o si no s\u00f3n del mateix tipus. $a < $b Menor que true si $a \u00e9s estrictament menor que $b . $a > $b Major que true si $a \u00e9s estrictament major que $b . $a <= $b Menor o igual que true si $a \u00e9s menor o igual que $b . $a >= $b Major o igual que true si $a \u00e9s major o igual que $b . $a <=> $b Nau espacial Torna -1 , 0 o 1 quan $a \u00e9s respectivamente menor, igual, o major que $b . PHP >= 7. $a ?? $b ?? $c Fusi\u00f3n de null El primer operano d'esquerra a dreta que existisca i no siga null . null si no hi ha valors definits i no s\u00f3n null . PHP >= 7.","title":"Comparaci\u00f3"},{"location":"02-basics/1_programaci_web_amb_php/#logics","text":"Exemple Nom Resultat $a and $b , $a && $b And (i) true si tant $a com $b s\u00f3n true . $a or $b , $a || $b Or (o inclusiu) true si qualsevol de $a o $b \u00e9s true . $a xor $b Xor (o exclusiu) true si $a o $b \u00e9s true , pero no ambd\u00f3s. !$a Not (no) true si $a no \u00e9s true .","title":"L\u00f2gics"},{"location":"02-basics/1_programaci_web_amb_php/#assignacio","text":"Exemple Nom Resultat $a = $b Assignaci\u00f3 Assigna a $a el valor de $b $a += $b Assignaci\u00f3 de la suma Le suma a $a el valor de $b . Equivalent a $a = $a + $b $a -= $b Assignaci\u00f3 de la resta Le resta a $a el valor de $b . Equivalent a $a = $a - $b $a *= $b Assignaci\u00f3 del producte Assigna a $a el producto de $a por $b . Equivalent a $a = $a * $b $a /= $b Assignaci\u00f3 de la divisi\u00f3 Assigna a $a el quocient de $a entre $b . Equivalent a $a = $a / $b $a %= $b Assignaci\u00f3 del residu Assigna a $a el residu de dividir $a entre $b . Equivalent a $a = $a % $b $a .= $b Concatenaci\u00f3 Concatena a $a la cadena $b . Equivalent a $a = $a . $b $a++ Increment Incrementa $a en una unitat. Equivalent a $a = $a + 1 $a-- Decrement Decrementa $a en una unitat. Equivalent a $a = $a - 1 Prioridad de los operadores Recorda la prioritat. Primer els par\u00e8ntesis, despr\u00e9s la negaci\u00f3 ( ! ), productes/divisions, sumes/restes, comparacions, l\u00f2gics i finalment es realitza l'assignaci\u00f3. M\u00e9s informaci\u00f3 a https://www.php.net/manual/es/language.operators.precedence.php Autoevaluaci\u00f3n Si $a=5 i $b=4 , esbrina el valor de $c si $c = $a*2 > $b+5 && !($b<>4)","title":"Assignaci\u00f3"},{"location":"02-basics/1_programaci_web_amb_php/#estructures-de-control-de-flux","text":"Les instruccions de control de flux en PHP funcionen exactament igual que en altres llenguatges de programaci\u00f3. Les m\u00e9s habituals s\u00f3n: Condicionals: if, if else, switch Bucles: while, do while, for seguint les estructures: if ( condici\u00f3 ) { // instruccions } else { // instruccions } switch ( $variable ) { case valor : //instruccio1 break ; case valor : //instruccio1 break ; default : //instruccio1 } while ( condici\u00f3 ) { //instruccions } do { //instruccions } while ( condici\u00f3 ); for ( $i = 1 ; $i < 10 ; $i ++ ){ //instruccions } http://php.net/manual/es/language.control-structures.php","title":"Estructures de control de flux"},{"location":"02-basics/1_programaci_web_amb_php/#sentencies-per-a-incloure-fitxers","text":"Les sent\u00e8ncies include() i include_once() i require() i require_once() inclouen i avaluen l'artxiu especificat. include_once() i require_once() verifica que l'arxiu no haja sigut incl\u00f2s abans i \u00e9s preferible a include. Cal ser cur\u00f2s amb el path de l'arxiu a incloure. La difer\u00e8ncia entre require i include \u00e9s el tractament de l'error quan el fitxer no existeix. fruites . php <? php $color = 'verde' ; $fruta = 'manzana' ; include ( 'fruite.view.php' ) ?> fruites.view.php < html > < head > < title > Fruites </ title > </ head > < body > < h3 > <?= \"Una $fruta $color\" ?> </ h3 > </ body > </ html >","title":"Sent\u00e8ncies per a incloure Fitxers"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/","text":"2. Maneig de cadenes de text i dates Maneig de cadenes de text Cadenes de text Podem utilitzar tant cometes simples com a cometes dobles. Per a concatenar cadenes utilitzarem l'operador punt (.) $fullName = $name.' '.$surname; Funcions de cadena Activitat 1 Crea una p\u00e0gina anomenada cadenes.php , copia el contingut de la p\u00e0gina index.php , activa la directiva de tipus estricta ( declare( strict_types = 1 ); ) i mostra el seg\u00fcent: Elimina els espais del principi i el final del nom si els hi haguera ( trim ). Elimina la lletra a del principi i el final del nom si els hi haguera ( trim ). Mostra la variable nom en maj\u00fascules, min\u00fascules i amb la primera lletra en maj\u00fascula i les altres en min\u00fascules ( strtoupper , strtolower , ucfirst ). Mostra el codi ascii de la primera lletra del nom ( ord ). Mostra la longitud del nom ( strlen ). Mostra el nombre de vegades que apareix la lletra a (maj\u00fascula o min\u00fascula, substr_count ). Mostra la posici\u00f3 de la primera a existent en el nom, siga maj\u00fascula o min\u00fascula ( strpos ). Si no hi ha cap mostrar\u00e0 -1. El mateix, per\u00f2 amb l''\u00faltima a. Mostra el nom substituint la lletr o pel n\u00famero zero, siga maj\u00fascula o min\u00fascula ( str_replace ). Indica si el nom comen\u00e7a per al o no. Activitat 2 En el mateix document cadenes.php i a partir d'una variable que continga una url: $url = 'http://username:password@hostname:9090/path?arg=value#anchor' ; Utilitza la funci\u00f3 parse_url per a extraure de la url les seg\u00fcents parts: 1. El protocol utilitzat (en l'exemple \"http\"). 2. El nom d'usuari (en l'exemple \"username\"). 3. El path de la url (en l'exemple \"/path\"). 4. El querystring de la url (en l'exemple \"arg=value\"). Maneig de dates Funci\u00f3 time() En PHP les dates s'emmagatzemen com a n\u00fameros enters. La funci\u00f3 time() retorna el nombre de segons transcorreguts des de l'1 de gener de 1970 (instant conegut com a \u00e8poca Unix). A aquesta forma d'expressar data i hora se li denomina timestamp . Funci\u00f3 date() date ( string $format [, int $timestamp = time ()]) : string La funci\u00f3 date retorna una cadena formatada segons els codi de format. Si no li passem la variable timestamp ens retorna la cadena formatada per a la data i l'hora actual. Els codis de format m\u00e9s habituals per a la funci\u00f3 date s\u00f3n: CODI DESCRIPCI\u00d3 a am o pm A AM o PM d Dia del mes amb zeros D Abreviatura del dia de la setmana (en angl\u00e8s) F Nom del mes (en angl\u00e8s) h Hora en format 1-12 H Hora en format 0-23 i Minuts j Dia del mes sense zeros l Dia de la setmana m N\u00famero de mes (1-12) M Abreviatura del mes (en angl\u00e8s) s Segons y Any amb 2 d\u00edgits Y Any amb 4 d\u00edgits z Dia de l'any (1-365) La informaci\u00f3 completa la pots trobar en el manual oficial de PHP: date Suposant que hui \u00e9s 15 de setembre de 2019 i les 19 hores 20 minuts i 23 segons et mostrem alguns exemples: date ( \"d-m-Y\" ); // 15-09-2019 date ( \"H:i:s\" ); // 19:20:23 date ( \"Y\" ); // 2019 date ( \"YmdHis\" ); // 20190915192023 date ( \"d/m/y H:i a\" ); // 15/09/19 19:20 pm date ( \"d-m-Y H:i\" , time ()); // Moment actual Funci\u00f3 mktime(hora, min, seg, mes, dia, any) La funci\u00f3 mktime permet obtenir la marca de temps Unix ( timestamp ) d'una data. Per exemple: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); echo date ( 'd-m-Y' , $data ); // mostrar\u00e0 01-01-2020 M\u00e9s informaci\u00f3 en https://www.php.net/manual/es/function.mktime.php Un altra forma de crear dates \u00e9s mitjan\u00e7ant la funci\u00f3 strtotime() on podem indicar les dates mitjan\u00e7ant una cadena de text. Per exemple: // posarem la data en el format any-mes-dia per a evitar confusions. $date = strtotime ( \"2020-01-01\" ); Operar amb dates Com hem dit al principi les dates s'emmagatzem com a enters on cada unitat representa un segon. Aix\u00ed podem sumar i restar dates ( timestamp ) per a afegir, llevar o calcular difer\u00e8ncies entre ells. Per exemple, per poder determinar els dies que falten per a l'1 de gener de 2020 far\u00edem: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); // timestamp que representa l'1 de gener de 2020 $diferencia = $data - time (); // restem a l'1 de gener de 2020 el temps actual, // el resultat estar\u00e0 en segons. $diferenciaEnDies = ((( $diferencia / 60 ) / 60 ) / 24 ); /* dividim els segons entre 60 i obtenim els minuts, els dividim entre 60 i obtenim les hores, els dividim entre 24 i obtenim els dies */ Validar dates En la funci\u00f3 checkdate podem validar una data. checkdate ( int $month , int $day , int $year ) : bool La funci\u00f3 torna true si la data es v\u00e0lida, si no, torna false . Classe DateTime PHP disposa tamb\u00e9 de la classe DateTime per a representar les dates, la veurem m\u00e9s avant. Activitat 3: Treballar amb dates Crea un fitxer anomenat dates.php i realitza les seg\u00fcents tasques: Mostra la data i hora actuals amb el format: dd/mm/yyyy hh:mm:ss Mostra el nom de la zona hor\u00e0ria que s'utilitza per defecte. Mostra la data de que ser\u00e0 d\u2019ac\u00ed 45 dies. Mostra el nombre de dies que han passat des de l'1 de gener. Mostra la data i hora actuals de Nova York. Mostra el dia de la setmana que era l'1 de gener d'enguany. En acabar penja el document a Aules. Activitat 4 200dadesPersonals.php : Escriu un programa que emmagatzeme en variables teu nom, primer cognom, segon cognom, email, any de naixement i tel\u00e8fon. Despr\u00e9s mostra'ls per pantalla dins d'una taula. Nom Bruce Cognoms Wayne Email batman@dccomics.com Any de naixement 1939 Tel\u00e8fon 555666777 206anyos.php : Despr\u00e9s de llegir l'edat d'una persona, mostrar l'edat que tindr\u00e0 d'aqu\u00ed a 10 anys i fa 10 anys. A m\u00e9s, mostra quin any ser\u00e0 en cada un dels casos. Finalment, mostra l'any de jubilaci\u00f3 suposant que treballar\u00e0s fins als 65 anys. Tip: $anyoActual = date(\"Y\") ;","title":"2. Maneig de cadenes de text i dates"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#2-maneig-de-cadenes-de-text-i-dates","text":"","title":"2. Maneig de cadenes de text i dates"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#maneig-de-cadenes-de-text","text":"","title":"Maneig de cadenes de text"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#cadenes-de-text","text":"Podem utilitzar tant cometes simples com a cometes dobles. Per a concatenar cadenes utilitzarem l'operador punt (.) $fullName = $name.' '.$surname; Funcions de cadena Activitat 1 Crea una p\u00e0gina anomenada cadenes.php , copia el contingut de la p\u00e0gina index.php , activa la directiva de tipus estricta ( declare( strict_types = 1 ); ) i mostra el seg\u00fcent: Elimina els espais del principi i el final del nom si els hi haguera ( trim ). Elimina la lletra a del principi i el final del nom si els hi haguera ( trim ). Mostra la variable nom en maj\u00fascules, min\u00fascules i amb la primera lletra en maj\u00fascula i les altres en min\u00fascules ( strtoupper , strtolower , ucfirst ). Mostra el codi ascii de la primera lletra del nom ( ord ). Mostra la longitud del nom ( strlen ). Mostra el nombre de vegades que apareix la lletra a (maj\u00fascula o min\u00fascula, substr_count ). Mostra la posici\u00f3 de la primera a existent en el nom, siga maj\u00fascula o min\u00fascula ( strpos ). Si no hi ha cap mostrar\u00e0 -1. El mateix, per\u00f2 amb l''\u00faltima a. Mostra el nom substituint la lletr o pel n\u00famero zero, siga maj\u00fascula o min\u00fascula ( str_replace ). Indica si el nom comen\u00e7a per al o no. Activitat 2 En el mateix document cadenes.php i a partir d'una variable que continga una url: $url = 'http://username:password@hostname:9090/path?arg=value#anchor' ; Utilitza la funci\u00f3 parse_url per a extraure de la url les seg\u00fcents parts: 1. El protocol utilitzat (en l'exemple \"http\"). 2. El nom d'usuari (en l'exemple \"username\"). 3. El path de la url (en l'exemple \"/path\"). 4. El querystring de la url (en l'exemple \"arg=value\").","title":"Cadenes de text"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#maneig-de-dates","text":"","title":"Maneig de dates"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#funcio-time","text":"En PHP les dates s'emmagatzemen com a n\u00fameros enters. La funci\u00f3 time() retorna el nombre de segons transcorreguts des de l'1 de gener de 1970 (instant conegut com a \u00e8poca Unix). A aquesta forma d'expressar data i hora se li denomina timestamp .","title":"Funci\u00f3 time()"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#funcio-date","text":"date ( string $format [, int $timestamp = time ()]) : string La funci\u00f3 date retorna una cadena formatada segons els codi de format. Si no li passem la variable timestamp ens retorna la cadena formatada per a la data i l'hora actual. Els codis de format m\u00e9s habituals per a la funci\u00f3 date s\u00f3n: CODI DESCRIPCI\u00d3 a am o pm A AM o PM d Dia del mes amb zeros D Abreviatura del dia de la setmana (en angl\u00e8s) F Nom del mes (en angl\u00e8s) h Hora en format 1-12 H Hora en format 0-23 i Minuts j Dia del mes sense zeros l Dia de la setmana m N\u00famero de mes (1-12) M Abreviatura del mes (en angl\u00e8s) s Segons y Any amb 2 d\u00edgits Y Any amb 4 d\u00edgits z Dia de l'any (1-365) La informaci\u00f3 completa la pots trobar en el manual oficial de PHP: date Suposant que hui \u00e9s 15 de setembre de 2019 i les 19 hores 20 minuts i 23 segons et mostrem alguns exemples: date ( \"d-m-Y\" ); // 15-09-2019 date ( \"H:i:s\" ); // 19:20:23 date ( \"Y\" ); // 2019 date ( \"YmdHis\" ); // 20190915192023 date ( \"d/m/y H:i a\" ); // 15/09/19 19:20 pm date ( \"d-m-Y H:i\" , time ()); // Moment actual","title":"Funci\u00f3 date()"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#funcio-mktimehora-min-seg-mes-dia-any","text":"La funci\u00f3 mktime permet obtenir la marca de temps Unix ( timestamp ) d'una data. Per exemple: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); echo date ( 'd-m-Y' , $data ); // mostrar\u00e0 01-01-2020 M\u00e9s informaci\u00f3 en https://www.php.net/manual/es/function.mktime.php Un altra forma de crear dates \u00e9s mitjan\u00e7ant la funci\u00f3 strtotime() on podem indicar les dates mitjan\u00e7ant una cadena de text. Per exemple: // posarem la data en el format any-mes-dia per a evitar confusions. $date = strtotime ( \"2020-01-01\" );","title":"Funci\u00f3 mktime(hora, min, seg, mes, dia, any)"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#operar-amb-dates","text":"Com hem dit al principi les dates s'emmagatzem com a enters on cada unitat representa un segon. Aix\u00ed podem sumar i restar dates ( timestamp ) per a afegir, llevar o calcular difer\u00e8ncies entre ells. Per exemple, per poder determinar els dies que falten per a l'1 de gener de 2020 far\u00edem: $data = mktime ( 0 , 0 , 0 , 1 , 1 , 2020 ); // timestamp que representa l'1 de gener de 2020 $diferencia = $data - time (); // restem a l'1 de gener de 2020 el temps actual, // el resultat estar\u00e0 en segons. $diferenciaEnDies = ((( $diferencia / 60 ) / 60 ) / 24 ); /* dividim els segons entre 60 i obtenim els minuts, els dividim entre 60 i obtenim les hores, els dividim entre 24 i obtenim els dies */","title":"Operar amb dates"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#validar-dates","text":"En la funci\u00f3 checkdate podem validar una data. checkdate ( int $month , int $day , int $year ) : bool La funci\u00f3 torna true si la data es v\u00e0lida, si no, torna false .","title":"Validar dates"},{"location":"02-basics/2_maneig_de_cadenes_de_text_i_dates/#classe-datetime","text":"PHP disposa tamb\u00e9 de la classe DateTime per a representar les dates, la veurem m\u00e9s avant. Activitat 3: Treballar amb dates Crea un fitxer anomenat dates.php i realitza les seg\u00fcents tasques: Mostra la data i hora actuals amb el format: dd/mm/yyyy hh:mm:ss Mostra el nom de la zona hor\u00e0ria que s'utilitza per defecte. Mostra la data de que ser\u00e0 d\u2019ac\u00ed 45 dies. Mostra el nombre de dies que han passat des de l'1 de gener. Mostra la data i hora actuals de Nova York. Mostra el dia de la setmana que era l'1 de gener d'enguany. En acabar penja el document a Aules. Activitat 4 200dadesPersonals.php : Escriu un programa que emmagatzeme en variables teu nom, primer cognom, segon cognom, email, any de naixement i tel\u00e8fon. Despr\u00e9s mostra'ls per pantalla dins d'una taula. Nom Bruce Cognoms Wayne Email batman@dccomics.com Any de naixement 1939 Tel\u00e8fon 555666777 206anyos.php : Despr\u00e9s de llegir l'edat d'una persona, mostrar l'edat que tindr\u00e0 d'aqu\u00ed a 10 anys i fa 10 anys. A m\u00e9s, mostra quin any ser\u00e0 en cada un dels casos. Finalment, mostra l'any de jubilaci\u00f3 suposant que treballar\u00e0s fins als 65 anys. Tip: $anyoActual = date(\"Y\") ;","title":"Classe DateTime"},{"location":"02-basics/3_maneig_darrays/","text":"3. Maneig d'arrays Introducci\u00f3 Un array \u00e9s un tipus de dades que ens permet emmagatzemar diversos valors. Per tal d'accedir a un valor utilitzarem una clau . Les claus poden ser nombres o textos ( arrays associatius ). Si no indiquem cap clau, a cada element se li associar\u00e0 una clau num\u00e8rica correlativa. Array indexat Crear array Podem crear un array buit de dues formes: $noms = array (); $noms = []; Si volem assignar valors al array en el moment de crear-ho: $noms = array ( 'Sandra' , 'Pedro' , 'Andrea' ); $noms = [ 'Sandra' , 'Pedro' , 'Andrea' ]; Mostrar el contingut d'un array Si intentem mostrar el contingut d'un array amb echo no obtindrem les dades que hi ha dins del array. En lloc d'a\u00e7\u00f2 podem utilitzar la funci\u00f3 print_r: print_r ( $noms ); Per\u00f2 si necessitem donar-li format als continguts del array, haurem de rec\u00f3rrer-ho amb un bucle i anar mostrant element a element. Afegint elements al array Podem afegir elements al array utilitzant claud\u00e0tors buits. La clau d'aquests elements ser\u00e0 el seg\u00fcent \u00edndex num\u00e8ric disponible. $noms [] = 'Raul' ; $noms [] = 'Marta' ; Accedir als elements del array Accedirem als elements del array indicant la clau de l'element entre claud\u00e0tors: echo $noms [ 2 ]; Tamb\u00e9 podem modificar el seu valor: $noms [ 0 ] = 'Sara' ; Rec\u00f3rrer arrays Arrays associatius Si el array cont\u00e9 dades diverses i/o ens interessa accedir a ells amb claus m\u00e9s espec\u00edfiques que un simple \u00edndex num\u00e8ric podem utilitzar arrays associatius: $alumne = array ( 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ); $alumne = [ 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ]; $alumne [ 'nom' ] = 'Ver\u00f3nica' ; echo $alumne [ 'nom' ]; Rec\u00f3rrer arrays associatius Rec\u00f3rrer claus i valors Arrays multidimensionals Imagina que volem tenir un array els elements del qual s\u00f3n noms d'esports. Volem dividir-los en esports d'hivern i esports d'estiu. Podem crear un array esports que continga dos elements que al seu torn tamb\u00e9 seran arrays. $esports = [ 'hivern' => [ 'esqu\u00ed de fons' , 'hoquei sobre gel' ], 'estiu' => [ 'nataci\u00f3' , 'voley platja' ] ]; Per a accedir al primer esport d'hivern: echo $esports [ 'hivern' ][ 0 ]; Funcions d'arrays Podem obtenir la mida de l'array mitjan\u00e7ant la funci\u00f3 count (array). Per rec\u00f3rrer l'array farem \u00fas d'un bucle for : $tam = count($fruites); // mida de l'array for ($i=0; $i < count ($ fruites ); $ i ++) { echo \" Element $ i: $ fruites [$ i ] < br /> \"; } Les operacions m\u00e9s importants que podem realitzar amb arrays s\u00f3n: print_r($ array) : mostra el contingut de tot el $array $elem = array_pop($array) : elimina l'\u00faltim $element array_push ($ array, $ elem) : afegeix un $element al final. $bool = in_array($elem, $array) : esbrina si $elem est\u00e0 en el $array PHP $fruits = [ \"orange\" , \"pear\" , \"apple\" ]; array_push ( $fruites , \"pinapple\" ); print_r ( $fruits ); $lastFruit = array_pop ( $fruits ); if ( in_array ( \"pineapple\" , $fruits )) { echo \"<p> Pineapple left </ p>\" ; } else { echo \"<p> No pineapple left </ p>\" ; } print_r ( $fruites ); ?> Consola Array ( [0] => orange [1] => pear [2] => apple [3] => pinapple ) <p>No pineapple left</ p> Array ( [0] => orange [1] => pear [2] => apple ) $claus = array_keys($array) : torna les claus de l' $ array associatiu. $tam = count ($array) : retorna la mida de $ array . sort($array) : ordena els elements de l' $ array . isset($array[element]) : indica si existeix / t\u00e9 valor element dins del array. unset($array[element]) : elimina l'element de l'array (deixa un buit). PHP $capitals = array ( \"Italy\" => \"Rome\" , \"France\" => \"Paris\" , \"Portugal\" => \"Lisbon\" ); $countries = array_keys ( $ capitals ); print_r ( $countries ); sort ( $countries ); print_r ( $countries ); unset ( $capitals [ \"France\" ]); print_r ( $capitals ); ?> Consola `Console Array ( [0] => Italy [1] => France [2] => Portugal ) Array ( [0] => France [1] => Italy [2] => Portugal ) Array ( [Italy] => Rome [Portugal] => Lisbon ) ` Existeixen molt\u00edssimes m\u00e9s funcions per treballar amb arrays. Tota la informaci\u00f3 en el documentaci\u00f3 oficial . Articles per aprofundir en les operacions amb arrays Un article molt complet (en angl\u00e8s) de Com treballar amb arrays en PHP de la manera correcta . Un altre article recomanable (en angl\u00e8s) \u00e9s Com ordenar arrays en PHP . Altres recursos: https://www.studytonight.com/php/indexed-array https://aprende-web.net/php/php6_1.php Activitats Activitat 231: Arrays indexats Crea una p\u00e0gina anomenada arrays.php , copia el contingut de la p\u00e0gina index.php i resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array amb els noms de diversos alumnes de la classe incloent el teu. Mostra el nombre d'elements que t\u00e9 l'array ( count ). Crea una cadena de text que continga els noms dels alumnes existents en l'array separats per un espai i mostra-la ( implode ). Mostra l'array en un ordre aleatori diferent al que ho vas crear ( shuffle ). Mostra l'array ordenat alfab\u00e8ticament ( sort ). Mostra els alumnes el nom dels quals continga almenys una \u201ca\u201d ( array_filter ). Mostra l'array en l'ordre invers al que es va crear ( rsort ). Mostra la posici\u00f3 que t\u00e9 el teu nom en l'array ( array_search ). Activitat 232: Arrays associatius Segons l'INE les 7 ciutats m\u00e9s grans d\u2019Espanya (per habitants) el 2018 van ser les seg\u00fcents: Madrid, MAD, 3.223.334 Sevilla, AN , 688.711 Murcia, MU, 447.182 M\u00e1laga, AN, 571.026 Zaragoza, AR, 666.880 Val\u00e8ncia, CV, 791.413 Barcelona, CAT, 1.620.343 Copia index.php i crea un nou document cituats.php . Defineix un array que continga aquesta informaci\u00f3 sobre ciutats i habitants. Imprimeix una taula d'ubicacions i habitants que incloga la poblaci\u00f3 total de les 7 ciutats. Opcional: Modifica la soluci\u00f3 de l\u2019anterior exercici perqu\u00e8 mostre les ciutats ordenades per habitants. Despr\u00e9s mostra-les per ordre alfab\u00e8tic. Activitat 233: Arrays multidimensionals Crea una p\u00e0gina anomenada arrays2.php , copia el contingut de la p\u00e0gina index.php i resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array d'alumnes on cada element siga un altre array que continga nom i edat de l'alumne. Crea una taula HTML en la qual es mostren totes les dades dels alumnes. Utilitza la funci\u00f3 array_column per a obtenir un array indexat que continga \u00fanicament els noms dels alumnes i mostra\u2019ls per pantalla. Crea un array amb 10 n\u00fameros : * utilitza la funci\u00f3 array_sum per a obtenir la suma dels 10 nombres. Activitat 234: Opcional Modifica la soluci\u00f3 del exercici ciutats.php perqu\u00e8 la taula continga tamb\u00e9 la columna del total d\u2019habitants de la comunitat aut\u00f2noma de les ciutats de la llista i el percentatge sobre els habitants de la comunitat aut\u00f2noma que representa. Per exemple: Ciutat Habitants Habitats CA % sobre CA Val\u00e8ncia 791.413 5.003.769 15.81% Pista: Caldr\u00e0 modificar l'array $ciutats i convertir-lo en multidimensional. Les dades de comunitats aut\u00f2nomes hauran d'estar en un altre array. Dades: Municipis de Espa\u00f1a","title":"3. Maneig d'arrays"},{"location":"02-basics/3_maneig_darrays/#3-maneig-darrays","text":"","title":"3. Maneig d'arrays"},{"location":"02-basics/3_maneig_darrays/#introduccio","text":"Un array \u00e9s un tipus de dades que ens permet emmagatzemar diversos valors. Per tal d'accedir a un valor utilitzarem una clau . Les claus poden ser nombres o textos ( arrays associatius ). Si no indiquem cap clau, a cada element se li associar\u00e0 una clau num\u00e8rica correlativa.","title":"Introducci\u00f3"},{"location":"02-basics/3_maneig_darrays/#array-indexat","text":"","title":"Array indexat"},{"location":"02-basics/3_maneig_darrays/#crear-array","text":"Podem crear un array buit de dues formes: $noms = array (); $noms = []; Si volem assignar valors al array en el moment de crear-ho: $noms = array ( 'Sandra' , 'Pedro' , 'Andrea' ); $noms = [ 'Sandra' , 'Pedro' , 'Andrea' ];","title":"Crear array"},{"location":"02-basics/3_maneig_darrays/#mostrar-el-contingut-dun-array","text":"Si intentem mostrar el contingut d'un array amb echo no obtindrem les dades que hi ha dins del array. En lloc d'a\u00e7\u00f2 podem utilitzar la funci\u00f3 print_r: print_r ( $noms ); Per\u00f2 si necessitem donar-li format als continguts del array, haurem de rec\u00f3rrer-ho amb un bucle i anar mostrant element a element.","title":"Mostrar el contingut d'un array"},{"location":"02-basics/3_maneig_darrays/#afegint-elements-al-array","text":"Podem afegir elements al array utilitzant claud\u00e0tors buits. La clau d'aquests elements ser\u00e0 el seg\u00fcent \u00edndex num\u00e8ric disponible. $noms [] = 'Raul' ; $noms [] = 'Marta' ;","title":"Afegint elements al array"},{"location":"02-basics/3_maneig_darrays/#accedir-als-elements-del-array","text":"Accedirem als elements del array indicant la clau de l'element entre claud\u00e0tors: echo $noms [ 2 ]; Tamb\u00e9 podem modificar el seu valor: $noms [ 0 ] = 'Sara' ;","title":"Accedir als elements del array"},{"location":"02-basics/3_maneig_darrays/#recorrer-arrays","text":"","title":"Rec\u00f3rrer arrays"},{"location":"02-basics/3_maneig_darrays/#arrays-associatius","text":"Si el array cont\u00e9 dades diverses i/o ens interessa accedir a ells amb claus m\u00e9s espec\u00edfiques que un simple \u00edndex num\u00e8ric podem utilitzar arrays associatius: $alumne = array ( 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ); $alumne = [ 'nom' => 'Sara' , 'cognom' => 'Garc\u00eda' , 'edat' => 22 ]; $alumne [ 'nom' ] = 'Ver\u00f3nica' ; echo $alumne [ 'nom' ];","title":"Arrays associatius"},{"location":"02-basics/3_maneig_darrays/#recorrer-arrays-associatius","text":"","title":"Rec\u00f3rrer arrays associatius"},{"location":"02-basics/3_maneig_darrays/#recorrer-claus-i-valors","text":"","title":"Rec\u00f3rrer claus i valors"},{"location":"02-basics/3_maneig_darrays/#arrays-multidimensionals","text":"Imagina que volem tenir un array els elements del qual s\u00f3n noms d'esports. Volem dividir-los en esports d'hivern i esports d'estiu. Podem crear un array esports que continga dos elements que al seu torn tamb\u00e9 seran arrays. $esports = [ 'hivern' => [ 'esqu\u00ed de fons' , 'hoquei sobre gel' ], 'estiu' => [ 'nataci\u00f3' , 'voley platja' ] ]; Per a accedir al primer esport d'hivern: echo $esports [ 'hivern' ][ 0 ];","title":"Arrays multidimensionals"},{"location":"02-basics/3_maneig_darrays/#funcions-darrays","text":"Podem obtenir la mida de l'array mitjan\u00e7ant la funci\u00f3 count (array). Per rec\u00f3rrer l'array farem \u00fas d'un bucle for : $tam = count($fruites); // mida de l'array for ($i=0; $i < count ($ fruites ); $ i ++) { echo \" Element $ i: $ fruites [$ i ] < br /> \"; } Les operacions m\u00e9s importants que podem realitzar amb arrays s\u00f3n: print_r($ array) : mostra el contingut de tot el $array $elem = array_pop($array) : elimina l'\u00faltim $element array_push ($ array, $ elem) : afegeix un $element al final. $bool = in_array($elem, $array) : esbrina si $elem est\u00e0 en el $array PHP $fruits = [ \"orange\" , \"pear\" , \"apple\" ]; array_push ( $fruites , \"pinapple\" ); print_r ( $fruits ); $lastFruit = array_pop ( $fruits ); if ( in_array ( \"pineapple\" , $fruits )) { echo \"<p> Pineapple left </ p>\" ; } else { echo \"<p> No pineapple left </ p>\" ; } print_r ( $fruites ); ?> Consola Array ( [0] => orange [1] => pear [2] => apple [3] => pinapple ) <p>No pineapple left</ p> Array ( [0] => orange [1] => pear [2] => apple ) $claus = array_keys($array) : torna les claus de l' $ array associatiu. $tam = count ($array) : retorna la mida de $ array . sort($array) : ordena els elements de l' $ array . isset($array[element]) : indica si existeix / t\u00e9 valor element dins del array. unset($array[element]) : elimina l'element de l'array (deixa un buit). PHP $capitals = array ( \"Italy\" => \"Rome\" , \"France\" => \"Paris\" , \"Portugal\" => \"Lisbon\" ); $countries = array_keys ( $ capitals ); print_r ( $countries ); sort ( $countries ); print_r ( $countries ); unset ( $capitals [ \"France\" ]); print_r ( $capitals ); ?> Consola `Console Array ( [0] => Italy [1] => France [2] => Portugal ) Array ( [0] => France [1] => Italy [2] => Portugal ) Array ( [Italy] => Rome [Portugal] => Lisbon ) ` Existeixen molt\u00edssimes m\u00e9s funcions per treballar amb arrays. Tota la informaci\u00f3 en el documentaci\u00f3 oficial . Articles per aprofundir en les operacions amb arrays Un article molt complet (en angl\u00e8s) de Com treballar amb arrays en PHP de la manera correcta . Un altre article recomanable (en angl\u00e8s) \u00e9s Com ordenar arrays en PHP . Altres recursos: https://www.studytonight.com/php/indexed-array https://aprende-web.net/php/php6_1.php","title":"Funcions d'arrays"},{"location":"02-basics/3_maneig_darrays/#activitats","text":"","title":"Activitats"},{"location":"02-basics/3_maneig_darrays/#activitat-231-arrays-indexats","text":"Crea una p\u00e0gina anomenada arrays.php , copia el contingut de la p\u00e0gina index.php i resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array amb els noms de diversos alumnes de la classe incloent el teu. Mostra el nombre d'elements que t\u00e9 l'array ( count ). Crea una cadena de text que continga els noms dels alumnes existents en l'array separats per un espai i mostra-la ( implode ). Mostra l'array en un ordre aleatori diferent al que ho vas crear ( shuffle ). Mostra l'array ordenat alfab\u00e8ticament ( sort ). Mostra els alumnes el nom dels quals continga almenys una \u201ca\u201d ( array_filter ). Mostra l'array en l'ordre invers al que es va crear ( rsort ). Mostra la posici\u00f3 que t\u00e9 el teu nom en l'array ( array_search ).","title":"Activitat 231: Arrays indexats"},{"location":"02-basics/3_maneig_darrays/#activitat-232-arrays-associatius","text":"Segons l'INE les 7 ciutats m\u00e9s grans d\u2019Espanya (per habitants) el 2018 van ser les seg\u00fcents: Madrid, MAD, 3.223.334 Sevilla, AN , 688.711 Murcia, MU, 447.182 M\u00e1laga, AN, 571.026 Zaragoza, AR, 666.880 Val\u00e8ncia, CV, 791.413 Barcelona, CAT, 1.620.343 Copia index.php i crea un nou document cituats.php . Defineix un array que continga aquesta informaci\u00f3 sobre ciutats i habitants. Imprimeix una taula d'ubicacions i habitants que incloga la poblaci\u00f3 total de les 7 ciutats. Opcional: Modifica la soluci\u00f3 de l\u2019anterior exercici perqu\u00e8 mostre les ciutats ordenades per habitants. Despr\u00e9s mostra-les per ordre alfab\u00e8tic.","title":"Activitat 232: Arrays associatius"},{"location":"02-basics/3_maneig_darrays/#activitat-233-arrays-multidimensionals","text":"Crea una p\u00e0gina anomenada arrays2.php , copia el contingut de la p\u00e0gina index.php i resol els exercicis seg\u00fcents utilitzant funcions d'arrays: Crea un array d'alumnes on cada element siga un altre array que continga nom i edat de l'alumne. Crea una taula HTML en la qual es mostren totes les dades dels alumnes. Utilitza la funci\u00f3 array_column per a obtenir un array indexat que continga \u00fanicament els noms dels alumnes i mostra\u2019ls per pantalla. Crea un array amb 10 n\u00fameros : * utilitza la funci\u00f3 array_sum per a obtenir la suma dels 10 nombres.","title":"Activitat 233: Arrays multidimensionals"},{"location":"02-basics/3_maneig_darrays/#activitat-234-opcional","text":"Modifica la soluci\u00f3 del exercici ciutats.php perqu\u00e8 la taula continga tamb\u00e9 la columna del total d\u2019habitants de la comunitat aut\u00f2noma de les ciutats de la llista i el percentatge sobre els habitants de la comunitat aut\u00f2noma que representa. Per exemple: Ciutat Habitants Habitats CA % sobre CA Val\u00e8ncia 791.413 5.003.769 15.81% Pista: Caldr\u00e0 modificar l'array $ciutats i convertir-lo en multidimensional. Les dades de comunitats aut\u00f2nomes hauran d'estar en un altre array. Dades: Municipis de Espa\u00f1a","title":"Activitat 234: Opcional"},{"location":"02-basics/4_funcions/","text":"4. Funcions Funcions predefinides Algunes de les funcions predefinides en PHP s\u00f3n les seg\u00fcents, per\u00f2 hi ha molt\u00edssimes m\u00e9s vinculades als diferents m\u00f2duls que podem instal\u00b7lar. is_null($var) determina si una variable \u00e9s nula o no. isset($var) determina si una variable estan definida i no \u00e9s NULL. unset($var) destrueix les variables especificades. empty($var) torna true si no existeix o \u00e9s FALSE is_int($var) , is_float() , is_bool() , is_array() var_dump($var) mostra informaci\u00f3 de la variable. Funcions definides per l'usuari Per a crear les teues pr\u00f2pies funcions, haur\u00e0s d'usar la paraula function : function suma ( $a , $b ) { return $a + $b ; } Per tal d'invocar la funci\u00f3: $resultat = suma ( 5 , 7 ); Si una funci\u00f3 no t\u00e9 una sent\u00e8ncia return , retorna null en finalitzar. Valors per defecte en els par\u00e0metres Podem indicar valors per defecte per als par\u00e0metres. Si quan cridem a la funci\u00f3 no indiquem el valor d'un par\u00e0metre es prendr\u00e0 el valor per defecte indicat. function preuAmbIva ( $preu , $iva = 0.21 ){ return $preu * ( 1 + $iva ); } $preu = 10 ; $pIva = preuAmbIva ( $preu ); Pot haver-hi m\u00e9s d'un par\u00e0metre amb valor per defecte, per\u00f2 sempre han d'estar al final. Pas de par\u00e0metres per refer\u00e8ncia Per defecte els par\u00e0metres es passen per valor. Per a passar un par\u00e0metre per refer\u00e8ncia afegirem el s\u00edmbol & davant del seu nom. function preuAmbIva ( & $preu , $iva = 0.18 ){ $preu *= ( 1 + $iva ); } Declaracions de tipus (Type Hinting) Les funcions obliguen a que els par\u00e0metres siguen de cert tipus. Si el valor donat \u00e9s d'un tipus incorrecte, es generar\u00e0 un error. Per aix\u00f2 s'ha d'anteposar-se el nom del tipus al nom del par\u00e0metre. Es pot fer que una declaraci\u00f3 accepte valors NULL si el valor predeterminat del par\u00e0metre s'estableix a NULL. Tipus v\u00e0lids Type Description Version Class/interface name The value must be an instanceof the given class or interface. self The value must be an instanceof the same class as the one in which the type declaration is used. Can only be used in classes. parent The value must be an instanceof the parent of the class in which the type declaration is used. Can only be used in classes. array The value must be an array. callable The value must be a valid callable. Cannot be used as a class property type declaration. bool The value must be a boolean value. float The value must be a floating point number. int The value must be an integer. string The value must be a string. iterable The value must be either an array or an instanceof Traversable. PHP 7.1.0 object The value must be an object. PHP 7.2.0 mixed The value can be any value. PHP 8.0.0 Exemple function suma ( int a , int b ) : int { return $a + $b ; } $resultado = suma ( 3 , 5 ); Funcions com a par\u00e0metres En PHP \u00e9s possible passar funcions com a par\u00e0metres a altres funcions. Nom\u00e9s cal passar el nom de la funci\u00f3 entre cometes. Exemple: function calculator ( $operation , $numA , $numB ){ return $operation ( $numA , $numB ); } function sumar ( $a , $b ) { return $a + $b ; } function restar ( $a , $b ) { return $a - $b ; } $a = 4 ; $b = 6 ; echo calculator ( 'sumar' , $a , $b ); echo calculator ( 'restar' , $a , $b ); Funcions an\u00f2nimes ( closures ) Estan implementades usant la classe Closure Permeten la creaci\u00f3 de funcions que no tenen un nom espec\u00edfic Podem assignar la funci\u00f3 a una variable o passar-la com a par\u00e0metre a una altra funci\u00f3. Exemple Sense par\u00e0metres: $anonima = function () { echo \"Hola\" ; }; $anonima (); Amb par\u00e0metres: $anonima = function ( $nom ) { echo \"Hola { $nom } \" ; }; $anonima ( 'Vicent' ); Usar variables de l'\u00e0mbit superior Una funci\u00f3 an\u00f2nima pot usar variables de l'\u00e0mbit superior mitjan\u00e7ant la paraula reservada use : function saluda ( callable $fnSaluda ) { $fnSaluda ( 'Vicent' ); } $salutacio = 'Hola' ; $anonima = function ( $nom ) use ( $salutacio ) { echo \" { $salutacio } { $nom } \" ; }; saluda ( $anonima ); Llibreries Podem fer llibreries de funcions guardant-les en un fitxer que despr\u00e8s importem des d'on les utilitzem. Ho podem fer amb include, o utilitzant composer per a fer-ho. Activitat 241: funci\u00f3 imatge Crea el fitxer funcions.php Escriviu una funci\u00f3 per retornar una etiqueta HTML <img /> . La funci\u00f3 hauria d\u2019acceptar com a argument obligatori l\u2019URL de la imatge i arguments opcionals per a un text alternatiu, al\u00e7ada i amplada. Activitat 242: funci\u00f3 imatge local Copieu la funci\u00f3 de l\u2019exercici anterior i modifiqueu-la de manera que nom\u00e9s es passe el nom de fitxer a la funci\u00f3 en lloc de l\u2019URL completa. Dins de la funci\u00f3, farem \u00fas d\u2019una variable global per fer l\u2019URL completa. Per exemple, si passem photo.png a la funci\u00f3, i la variable global cont\u00e9 /images , llavors l\u2019atribut src de l'etiqueta retornada ser\u00e0 /images/photo.png . Una funci\u00f3 com aquesta \u00e9s una forma senzilla de mantenir correctes les vostres etiquetes d\u2019imatges, fins i tot si les imatges es mouen a un nou cam\u00ed o servidor. Nom\u00e9s cal canviar la variable global, per exemple, de /images a http://images.example.com/. Activitat 243: Funcions Els colors web com #ffffff i #cc3399 es realitzen concatenant els valors hexadecimals de color per a vermell, verd i blau. Escriu una funci\u00f3 que accepte 3 arguments: roig, verd i blau, i que retorne un string que cont\u00e9 el color adequat per utilitzar-lo en una p\u00e0gina web. Per exemple, si els arguments s\u00f3n 255, 0, i 255, llavors la cadena retornada hauria de ser #FF00FF. Pot resultar \u00fatil utilitzeu la funci\u00f3 dechex() integrada, que es troba documentada a http://www.php.net/ Assegureu-vos que els par\u00e0metres reben valors enters i que s\u00f3n colors v\u00e0lids. Implementa 3 exemples d\u2019\u00fas. Activitat 244: SQL Crea un fitxer anomenat funcions_sql.php . Crea una funci\u00f3 anomenada insert que ens genere una sent\u00e8ncia INSERT INTO en SQL. Per a a\u00e7\u00f2 la funci\u00f3 rebr\u00e0 dos par\u00e0metres: 1. El nom de la taula 2. Un array associatiu que contindr\u00e0 els noms i valors dels camps de la taula. La sent\u00e8ncia resultant tindr\u00e0 la seg\u00fcent forma: \u201cINSERT INTO nom_taula (nom dels camps separats per comes) VALUES (noms dels camps separats per comes amb el car\u00e0cter \u201c:\u201d davant) De moment, no farem res amb els valors dels camps. Ajuda: utilitza les funcions sprintf , implode i array_keys Activitat 245: SQL A partir de l'exercici anterior crea una altra funci\u00f3 que reba els mateixos par\u00e0metres m\u00e9s un par\u00e0metre boole\u00e0 per a indicar si volem generar la query amb els noms dels camps o no. El par\u00e0metre tindr\u00e0 el valor true per defecte. Si el seu valor \u00e9s true generar\u00e0 la consulta igual que en l'exercici anterior, per\u00f2 si \u00e9s false la generar\u00e0 aix\u00ed: INSERT INTO nom_taula VALUES ( valors dels camps separats per comes amb el car\u00e0cter \u2018 : \u2019 davant ) Activitat 246: SQL Repeteix l'exercici anterior amb els seg\u00fcents canvis: La cadena resultant es passar\u00e0 per refer\u00e8ncia. Passarem la cadena de la seg\u00fcent forma: INSERT INTO taula ( camps ) VALUES ( valors ) Dins de la funci\u00f3 substituirem el seg\u00fcent: El text taula pel nom de la taula. El text camps pels noms dels camps separats per comes El text valors pels noms dels camps separats per comes i el car\u00e0cter \u2018:\u2019 davant.","title":"4. Funcions"},{"location":"02-basics/4_funcions/#4-funcions","text":"","title":"4. Funcions"},{"location":"02-basics/4_funcions/#funcions-predefinides","text":"Algunes de les funcions predefinides en PHP s\u00f3n les seg\u00fcents, per\u00f2 hi ha molt\u00edssimes m\u00e9s vinculades als diferents m\u00f2duls que podem instal\u00b7lar. is_null($var) determina si una variable \u00e9s nula o no. isset($var) determina si una variable estan definida i no \u00e9s NULL. unset($var) destrueix les variables especificades. empty($var) torna true si no existeix o \u00e9s FALSE is_int($var) , is_float() , is_bool() , is_array() var_dump($var) mostra informaci\u00f3 de la variable.","title":"Funcions predefinides"},{"location":"02-basics/4_funcions/#funcions-definides-per-lusuari","text":"Per a crear les teues pr\u00f2pies funcions, haur\u00e0s d'usar la paraula function : function suma ( $a , $b ) { return $a + $b ; } Per tal d'invocar la funci\u00f3: $resultat = suma ( 5 , 7 ); Si una funci\u00f3 no t\u00e9 una sent\u00e8ncia return , retorna null en finalitzar.","title":"Funcions definides per l'usuari"},{"location":"02-basics/4_funcions/#valors-per-defecte-en-els-parametres","text":"Podem indicar valors per defecte per als par\u00e0metres. Si quan cridem a la funci\u00f3 no indiquem el valor d'un par\u00e0metre es prendr\u00e0 el valor per defecte indicat. function preuAmbIva ( $preu , $iva = 0.21 ){ return $preu * ( 1 + $iva ); } $preu = 10 ; $pIva = preuAmbIva ( $preu ); Pot haver-hi m\u00e9s d'un par\u00e0metre amb valor per defecte, per\u00f2 sempre han d'estar al final.","title":"Valors per defecte en els par\u00e0metres"},{"location":"02-basics/4_funcions/#pas-de-parametres-per-referencia","text":"Per defecte els par\u00e0metres es passen per valor. Per a passar un par\u00e0metre per refer\u00e8ncia afegirem el s\u00edmbol & davant del seu nom. function preuAmbIva ( & $preu , $iva = 0.18 ){ $preu *= ( 1 + $iva ); }","title":"Pas de par\u00e0metres per refer\u00e8ncia"},{"location":"02-basics/4_funcions/#activitat-241-funcio-imatge","text":"Crea el fitxer funcions.php Escriviu una funci\u00f3 per retornar una etiqueta HTML <img /> . La funci\u00f3 hauria d\u2019acceptar com a argument obligatori l\u2019URL de la imatge i arguments opcionals per a un text alternatiu, al\u00e7ada i amplada.","title":"Activitat 241: funci\u00f3 imatge"},{"location":"02-basics/4_funcions/#activitat-242-funcio-imatge-local","text":"Copieu la funci\u00f3 de l\u2019exercici anterior i modifiqueu-la de manera que nom\u00e9s es passe el nom de fitxer a la funci\u00f3 en lloc de l\u2019URL completa. Dins de la funci\u00f3, farem \u00fas d\u2019una variable global per fer l\u2019URL completa. Per exemple, si passem photo.png a la funci\u00f3, i la variable global cont\u00e9 /images , llavors l\u2019atribut src de l'etiqueta retornada ser\u00e0 /images/photo.png . Una funci\u00f3 com aquesta \u00e9s una forma senzilla de mantenir correctes les vostres etiquetes d\u2019imatges, fins i tot si les imatges es mouen a un nou cam\u00ed o servidor. Nom\u00e9s cal canviar la variable global, per exemple, de /images a http://images.example.com/.","title":"Activitat 242: funci\u00f3 imatge local"},{"location":"02-basics/4_funcions/#activitat-243-funcions","text":"Els colors web com #ffffff i #cc3399 es realitzen concatenant els valors hexadecimals de color per a vermell, verd i blau. Escriu una funci\u00f3 que accepte 3 arguments: roig, verd i blau, i que retorne un string que cont\u00e9 el color adequat per utilitzar-lo en una p\u00e0gina web. Per exemple, si els arguments s\u00f3n 255, 0, i 255, llavors la cadena retornada hauria de ser #FF00FF. Pot resultar \u00fatil utilitzeu la funci\u00f3 dechex() integrada, que es troba documentada a http://www.php.net/ Assegureu-vos que els par\u00e0metres reben valors enters i que s\u00f3n colors v\u00e0lids. Implementa 3 exemples d\u2019\u00fas.","title":"Activitat 243: Funcions"},{"location":"02-basics/4_funcions/#activitat-244-sql","text":"Crea un fitxer anomenat funcions_sql.php . Crea una funci\u00f3 anomenada insert que ens genere una sent\u00e8ncia INSERT INTO en SQL. Per a a\u00e7\u00f2 la funci\u00f3 rebr\u00e0 dos par\u00e0metres: 1. El nom de la taula 2. Un array associatiu que contindr\u00e0 els noms i valors dels camps de la taula. La sent\u00e8ncia resultant tindr\u00e0 la seg\u00fcent forma: \u201cINSERT INTO nom_taula (nom dels camps separats per comes) VALUES (noms dels camps separats per comes amb el car\u00e0cter \u201c:\u201d davant) De moment, no farem res amb els valors dels camps. Ajuda: utilitza les funcions sprintf , implode i array_keys","title":"Activitat 244: SQL"},{"location":"02-basics/4_funcions/#activitat-245-sql","text":"A partir de l'exercici anterior crea una altra funci\u00f3 que reba els mateixos par\u00e0metres m\u00e9s un par\u00e0metre boole\u00e0 per a indicar si volem generar la query amb els noms dels camps o no. El par\u00e0metre tindr\u00e0 el valor true per defecte. Si el seu valor \u00e9s true generar\u00e0 la consulta igual que en l'exercici anterior, per\u00f2 si \u00e9s false la generar\u00e0 aix\u00ed: INSERT INTO nom_taula VALUES ( valors dels camps separats per comes amb el car\u00e0cter \u2018 : \u2019 davant )","title":"Activitat 245: SQL"},{"location":"02-basics/4_funcions/#activitat-246-sql","text":"Repeteix l'exercici anterior amb els seg\u00fcents canvis: La cadena resultant es passar\u00e0 per refer\u00e8ncia. Passarem la cadena de la seg\u00fcent forma: INSERT INTO taula ( camps ) VALUES ( valors ) Dins de la funci\u00f3 substituirem el seg\u00fcent: El text taula pel nom de la taula. El text camps pels noms dels camps separats per comes El text valors pels noms dels camps separats per comes i el car\u00e0cter \u2018:\u2019 davant.","title":"Activitat 246: SQL"},{"location":"02-basics/5_noves%20caracteristiques_php/","text":"Noves caracter\u00edsques PHP 7 Spaceship operator (<==>) Compara dues expressions $a i $b i torna -1 si $a \u00e9s menor que $b, 0 si s\u00f3n iguals i 1 si $b \u00e9s major que $a. Exemple: // Integers echo 1 <=> 1 ; // 0 echo 1 <=> 2 ; // -1 echo 2 <=> 1 ; // 1 Operador de fusi\u00f3 de null ?? Torna el primer operand si existeix i no \u00e9s NULL o el segon operand. Exemple: // Fetches the value of $_GET['user'] and returns 'nobody' // if it does not exist. $username = $_GET [ 'user' ] ?? 'nobody' ; // This is equivalent to: $username = isset ( $_GET [ 'user' ]) ? $_GET [ 'user' ] : 'nobody' ; M\u00e9s recursos: Noves caracter\u00edstiques PHP 7.0 Noves caracter\u00edstiques PHP 7.1 Noves caracter\u00edstiques PHP 7.2 Noves caracter\u00edstiques PHP 7.3 Noves caracter\u00edstiques PHP 7.4 Noves caracter\u00edstiques PHP 8.0","title":"5. Noves caracter\u00edstiques de PHP 7"},{"location":"02-basics/5_noves%20caracteristiques_php/#noves-caracterisques-php-7","text":"","title":"Noves caracter\u00edsques PHP 7"},{"location":"02-basics/5_noves%20caracteristiques_php/#spaceship-operator","text":"Compara dues expressions $a i $b i torna -1 si $a \u00e9s menor que $b, 0 si s\u00f3n iguals i 1 si $b \u00e9s major que $a. Exemple: // Integers echo 1 <=> 1 ; // 0 echo 1 <=> 2 ; // -1 echo 2 <=> 1 ; // 1","title":"Spaceship operator  (&lt;==&gt;)"},{"location":"02-basics/5_noves%20caracteristiques_php/#operador-de-fusio-de-null","text":"Torna el primer operand si existeix i no \u00e9s NULL o el segon operand. Exemple: // Fetches the value of $_GET['user'] and returns 'nobody' // if it does not exist. $username = $_GET [ 'user' ] ?? 'nobody' ; // This is equivalent to: $username = isset ( $_GET [ 'user' ]) ? $_GET [ 'user' ] : 'nobody' ;","title":"Operador de fusi\u00f3 de null ??"},{"location":"02-basics/5_noves%20caracteristiques_php/#mes-recursos","text":"Noves caracter\u00edstiques PHP 7.0 Noves caracter\u00edstiques PHP 7.1 Noves caracter\u00edstiques PHP 7.2 Noves caracter\u00edstiques PHP 7.3 Noves caracter\u00edstiques PHP 7.4 Noves caracter\u00edstiques PHP 8.0","title":"M\u00e9s recursos:"},{"location":"02-basics/6_processament_formularis%20copy/","text":"6. Processament de formularis Introducci\u00f3 Qu\u00e8 \u00e9s una petici\u00f3 HTTP? Una petici\u00f3 HTTP \u00e9s una sol\u00b7licitud d'un recurs a un servidor. La petici\u00f3 es realitza a trav\u00e9s d'una URL. Amb la petici\u00f3 s'envien tamb\u00e9 par\u00e0metres. Hi ha diferents m\u00e8todes (METHOD) per a realitzar una petici\u00f3 (GET, POST, PUT, DELETE, PATCH, etc.). Els m\u00e9s habituals s\u00f3n GET i POST. La resta s\u00f3n m\u00e9s utilitzats en les RESTful API. M\u00e8todes GET i POST M\u00e8tode GET S'utilitza per a sol\u00b7licitar dades d'un recurs. Mostren els par\u00e0metres que s'envien en la url. Es poden utilitzar directament en enlla\u00e7os. El resultat es pot emmagatzemar en cache. Romanen en l'historial del navegador. La grand\u00e0ria dels par\u00e0metres est\u00e0 limitat a 255 car\u00e0cters. Exemple de petici\u00f3 GET Inspecci\u00f3 de la petici\u00f3 Inspecci\u00f3 de la petici\u00f3 Accedir a les dades de la petici\u00f3 GET Per a accedir a les dades usem la variable superglobal $_GET . $_GET \u00e9s un array associatiu les claus del qual coincidiran amb els noms que li hem donat als par\u00e0metres. Per a accedir als par\u00e0metres de la petici\u00f3 anterior: echo $_GET [ 'nom' ] . ' ' . $_GET [ 'cognom' ]; // Homer Simpson M\u00e8tode POST El m\u00e8tode POST t\u00e9 les seg\u00fcents caracter\u00edstiques: S'utilitza per a enviar dades a un recurs. Els par\u00e0metres van en el cos de la petici\u00f3, no s\u00f3n visibles per a l'usuari. La petici\u00f3 no es guarda en cache. No es pot utilitzar en un enlla\u00e7. No roman en l'historial. No tenim la limitaci\u00f3 de grand\u00e0ria dels par\u00e0metres. Es solen utilitzar en els formularis. Evitar el CSRF En tota p\u00e0gina que reba par\u00e0metres GET has de comprovar el HTTP referer del navegador, i que aquest siga de dins de la teua web. En php el referer que envia el navegador s'emmagatzema en $_SERVER['HTTP_REFERER'] . Seria tal com: if ( parse_url ( $_SERVER [ 'HTTP_REFERER' ], PHP_URL_HOST ) != $_SERVER [ 'HTTP_HOST' ]) die ( 'Anti-CSRF' ); Important Amb aquest codi estem obligant al fet que el navegador envie un referer si o s\u00ed. Per tant nom\u00e9s ha d'utilitzar-se en p\u00e0gines a les quals el navegador accedisca des d'una altra p\u00e0gina de la nostra web. \u00d2bviament no podem col\u00b7locar-ho en la primera p\u00e0gina a la qual s'accedeix a la nostra web ( index.php o similar), ja que si l'usuari a escrit l'adre\u00e7a a m\u00e0 en la barra del navegador no s'enviar\u00e0 referer cap i saltar\u00e0 el sistema. Definici\u00f3 de formularis Com hem dit abans el m\u00e8tode POST s'empra en els formularis. El formulari seg\u00fcent enviar\u00e0 les dades a la p\u00e0gina index.php (atribut action de l'element form ). Utilitza el m\u00e8tode post indicat en l'atribut method : < form action = \"index.php\" method = \"post\" > < label for = \"nom\" > Nom </ label > < input type = \"text\" name = \"nom\" value = \"\" > < br /> < label for = \"cognom\" > Cognom </ label > < input type = \"text\" name = \"cognom\" value = \"\" > < br /> < input type = \"submit\" value = \"Enviar\" > </ form > Inspecci\u00f3 de la petici\u00f3: Headers Inspecci\u00f3 de la petici\u00f3: Param\u00e8tres Accedir a les dades de la petici\u00f3 POST Usem la variable superglobal $_POST . Funciona igual que $_GET , per\u00f2 amb els noms (atribut name ) que li hem donat als camps del formulari. En depuraci\u00f3 podem mostar totes les dades rebudes: var_dump ( $_POST ); print_r ( $_POST ) Per a mostrar les dades individualment: echo $_POST [ 'nom' ]; echo $_POST [ 'cognom' ]; Accedir a par\u00e0metres no existents Errors del tipus Notice: Undefined index: nom in /home/ubuntu/index.php on line 6 ens indiquen que la clau nom no existeix en l'array $_POST . La variable supergloblal $_POST est\u00e0 buida si no s'ha enviat el formulari. Per a evitar aquest tipus d'errors \u00e9s important verificar que s'haja enviat el formulari pr\u00e8viament: if ( $_SERVER [ 'REQUEST_METHOD' ] === 'POST' ) { } Validaci\u00f3 de formularis Hem de comprovar que les dades que envia el formulari s\u00f3n correctes. Les validacions a realitzar s\u00f3n les seg\u00fcents: Els camps requerits no han de quedar buits. Ni contenir espais en blanc a l'inici i al final. Els camps email i data han de tenir el format esperat. Tots els camps s'han de filtrar amb htmlspecialchars per a evitar atacs de Cross-site Scripting (XSS). Valors buits Els camps requerits no deurien quedar-se buits. Per a verificar que un valor no queda buit podem utilitzar la funci\u00f3 empty() de PHP. Espais en blanc Hem d'eliminar els espais en blanc del principi i final dels camps. S'utilitza la funci\u00f3 trim Escapar l'entrada Sempre hem de filtrar l'entrada amb htmlspecialchars abans de mostrar el camp amb echo o similar. Ac\u00f2 convertir\u00e0 qualsevol car\u00e0cter especial d'html en la entitat, aix\u00ed no interferir\u00e0 en el el programa. Comprovar l'email Per a verificar si un email \u00e9s correcte podem utilitzar la funci\u00f3 filter_var filter_var ( $email , FILTER_VALIDATE_EMAIL ) o la funci\u00f3 filter_input quan obtenin les dades directament d'una variable extern. // suposem que rebem les dades d'un formulari que t\u00e9 un quadre de text de nom 'email' $email = filter_input ( INPUT_POST , 'email' , FILTER_VALIDATE_EMAIL ) filter_input filter_input ( int $type , string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options ]]) : mixed La funci\u00f3 filter_input agafa una variable externa ( $_GET , $_POST , etc) concreta pel seu nom i aplica el filtre indicat. Els filtres poden sanejar o validar les variables externes. Per exemple, si volem agafar el valor del par\u00e0metre nom del querystring (http://localhost/index.php?nom= Homer ) usarem el tipus INPUT_GET. El fltre FILTER_SANITIZE_STRING elimina etiquetes, i opcionalment elimina o codifica caracters especials. $nom = filter_input ( INPUT_GET , 'nom' , FILTER_SANITIZE_STRING ) . // $nom = Homer M\u00e9s informaci\u00f3 en: filter_var filter_input Comprovar la data Per a comprovar la data hem de crear una funci\u00f3 a aquest efecte. Podem utilitzar el m\u00e8tode est\u00e0tic createFromFormat de la classe DateTime M\u00e9s informaci\u00f3: http://php.net/manual/es/datetime.createfromformat.php Exemple $data1 = \"2001-05-02\" ; // Data \u00e9s de tipus string // DateTime::createFromFormat converteix una cadena de text a on objecte DateTime // ens tornar\u00e0 una inst\u00e0ncia de DateTime o FALSE en cas d'error. $dt1 = DateTime :: createFromFormat ( 'Y-m-d' , $data1 ); if ( $dt1 === false ) { echo \"La data d'inici \u00e9s incorrecta\" ; } https://www.php.net/manual/es/function.strtotime.php Tamb\u00e9 \u00e9s habitual trobar els controls de data separats en 3 elements input. Un per a l\u2019any, l\u2019altre per a mes i l\u2019altre per al dia. Bones pr\u00e0ctiques en l\u2019obtenci\u00f3 de dades des de l\u2019exterior Cal seguir les seg\u00fcents bones pr\u00e0ctiques: No confieu mai (mai) en l\u2019entrada des de l\u2019exterior del vostre PHP. Sanegeu i valideu l\u2019entrada de dades sempre. Les funcions filter_var() i filter_input() poden sanejar el text i validar els formats de text (per exemple, adreces de correu electr\u00f2nic, enters). Recordeu que l\u2019entrada de dades no es limita a formularis enviats per l\u2019usuari. Els fitxers carregats i descarregats, els valors de sessi\u00f3, les dades de galetes i les dades de serveis web de tercers tamb\u00e9 s\u00f3n d\u2019entrada estrangera. A mode de resum pod\u00edem resumir la gesti\u00f3 de formularis en el seg\u00fcent diagrama de flux. Formularis en HTML5 En els seg\u00fcents recursos trobar\u00e0s informaci\u00f3 addicional sobre els controls de formularis en HTML5: * Formularios en HTML en MDN web docs. * Formularios en HTML5 en MDN web docs. * HTML Forms en W3CSchools. Activities Activit 261 Crea una p\u00e0gina que reba com a par\u00e0metre un nom i mostre el text \u2018Benvingut [nom]!!!\u2019 sent [nom] el nom has passat com a par\u00e0metre. Guarda-la amb el nom exemple_get.php . Activitat 12 A: Creaci\u00f3 d'un formulari Crea un formulari que tinga els seg\u00fcents camps: Nom i cognoms Data de naixement Correu electr\u00f2nic Assumpte Missatge En l'atribut action del formulari posarem el seg\u00fcent: action = \"<?= $_SERVER['PHP_SELF'] ; ?>\" A\u00e7\u00f2 far\u00e0 que siga la pr\u00f2pia p\u00e0gina del formulari la que processe les dades del mateix. En pr\u00e9mer Enviar han d'apar\u00e8ixer sota el formulari les dades que s'han introdu\u00eft en el mateix. Activitat 12 B: Creaci\u00f3 d'un formulari Soluciona el problema dels par\u00e0metres no enviats de l'exercici anterior. Activitat 12 C: Validaci\u00f3 d'un formulari Modifica l'exercici anterior realitzant les validacions oportunes.","title":"6. Processament de formularis"},{"location":"02-basics/6_processament_formularis%20copy/#6-processament-de-formularis","text":"","title":"6. Processament de formularis"},{"location":"02-basics/6_processament_formularis%20copy/#introduccio","text":"","title":"Introducci\u00f3"},{"location":"02-basics/6_processament_formularis%20copy/#que-es-una-peticio-http","text":"Una petici\u00f3 HTTP \u00e9s una sol\u00b7licitud d'un recurs a un servidor. La petici\u00f3 es realitza a trav\u00e9s d'una URL. Amb la petici\u00f3 s'envien tamb\u00e9 par\u00e0metres. Hi ha diferents m\u00e8todes (METHOD) per a realitzar una petici\u00f3 (GET, POST, PUT, DELETE, PATCH, etc.). Els m\u00e9s habituals s\u00f3n GET i POST. La resta s\u00f3n m\u00e9s utilitzats en les RESTful API.","title":"Qu\u00e8 \u00e9s una petici\u00f3 HTTP?"},{"location":"02-basics/6_processament_formularis%20copy/#metodes-get-i-post","text":"","title":"M\u00e8todes GET i POST"},{"location":"02-basics/6_processament_formularis%20copy/#metode-get","text":"S'utilitza per a sol\u00b7licitar dades d'un recurs. Mostren els par\u00e0metres que s'envien en la url. Es poden utilitzar directament en enlla\u00e7os. El resultat es pot emmagatzemar en cache. Romanen en l'historial del navegador. La grand\u00e0ria dels par\u00e0metres est\u00e0 limitat a 255 car\u00e0cters. Exemple de petici\u00f3 GET Inspecci\u00f3 de la petici\u00f3 Inspecci\u00f3 de la petici\u00f3","title":"M\u00e8tode GET"},{"location":"02-basics/6_processament_formularis%20copy/#metode-post","text":"El m\u00e8tode POST t\u00e9 les seg\u00fcents caracter\u00edstiques: S'utilitza per a enviar dades a un recurs. Els par\u00e0metres van en el cos de la petici\u00f3, no s\u00f3n visibles per a l'usuari. La petici\u00f3 no es guarda en cache. No es pot utilitzar en un enlla\u00e7. No roman en l'historial. No tenim la limitaci\u00f3 de grand\u00e0ria dels par\u00e0metres. Es solen utilitzar en els formularis.","title":"M\u00e8tode POST"},{"location":"02-basics/6_processament_formularis%20copy/#definicio-de-formularis","text":"Com hem dit abans el m\u00e8tode POST s'empra en els formularis. El formulari seg\u00fcent enviar\u00e0 les dades a la p\u00e0gina index.php (atribut action de l'element form ). Utilitza el m\u00e8tode post indicat en l'atribut method : < form action = \"index.php\" method = \"post\" > < label for = \"nom\" > Nom </ label > < input type = \"text\" name = \"nom\" value = \"\" > < br /> < label for = \"cognom\" > Cognom </ label > < input type = \"text\" name = \"cognom\" value = \"\" > < br /> < input type = \"submit\" value = \"Enviar\" > </ form > Inspecci\u00f3 de la petici\u00f3: Headers Inspecci\u00f3 de la petici\u00f3: Param\u00e8tres","title":"Definici\u00f3 de formularis"},{"location":"02-basics/6_processament_formularis%20copy/#accedir-a-les-dades-de-la-peticio-post","text":"Usem la variable superglobal $_POST . Funciona igual que $_GET , per\u00f2 amb els noms (atribut name ) que li hem donat als camps del formulari. En depuraci\u00f3 podem mostar totes les dades rebudes: var_dump ( $_POST ); print_r ( $_POST ) Per a mostrar les dades individualment: echo $_POST [ 'nom' ]; echo $_POST [ 'cognom' ];","title":"Accedir a les dades de la petici\u00f3 POST"},{"location":"02-basics/6_processament_formularis%20copy/#accedir-a-parametres-no-existents","text":"Errors del tipus Notice: Undefined index: nom in /home/ubuntu/index.php on line 6 ens indiquen que la clau nom no existeix en l'array $_POST . La variable supergloblal $_POST est\u00e0 buida si no s'ha enviat el formulari. Per a evitar aquest tipus d'errors \u00e9s important verificar que s'haja enviat el formulari pr\u00e8viament: if ( $_SERVER [ 'REQUEST_METHOD' ] === 'POST' ) { }","title":"Accedir a par\u00e0metres no existents"},{"location":"02-basics/6_processament_formularis%20copy/#validacio-de-formularis","text":"Hem de comprovar que les dades que envia el formulari s\u00f3n correctes. Les validacions a realitzar s\u00f3n les seg\u00fcents: Els camps requerits no han de quedar buits. Ni contenir espais en blanc a l'inici i al final. Els camps email i data han de tenir el format esperat. Tots els camps s'han de filtrar amb htmlspecialchars per a evitar atacs de Cross-site Scripting (XSS).","title":"Validaci\u00f3 de formularis"},{"location":"02-basics/6_processament_formularis%20copy/#valors-buits","text":"Els camps requerits no deurien quedar-se buits. Per a verificar que un valor no queda buit podem utilitzar la funci\u00f3 empty() de PHP.","title":"Valors buits"},{"location":"02-basics/6_processament_formularis%20copy/#espais-en-blanc","text":"Hem d'eliminar els espais en blanc del principi i final dels camps. S'utilitza la funci\u00f3 trim","title":"Espais en blanc"},{"location":"02-basics/6_processament_formularis%20copy/#escapar-lentrada","text":"Sempre hem de filtrar l'entrada amb htmlspecialchars abans de mostrar el camp amb echo o similar. Ac\u00f2 convertir\u00e0 qualsevol car\u00e0cter especial d'html en la entitat, aix\u00ed no interferir\u00e0 en el el programa.","title":"Escapar l'entrada"},{"location":"02-basics/6_processament_formularis%20copy/#comprovar-lemail","text":"Per a verificar si un email \u00e9s correcte podem utilitzar la funci\u00f3 filter_var filter_var ( $email , FILTER_VALIDATE_EMAIL ) o la funci\u00f3 filter_input quan obtenin les dades directament d'una variable extern. // suposem que rebem les dades d'un formulari que t\u00e9 un quadre de text de nom 'email' $email = filter_input ( INPUT_POST , 'email' , FILTER_VALIDATE_EMAIL )","title":"Comprovar l'email"},{"location":"02-basics/6_processament_formularis%20copy/#comprovar-la-data","text":"Per a comprovar la data hem de crear una funci\u00f3 a aquest efecte. Podem utilitzar el m\u00e8tode est\u00e0tic createFromFormat de la classe DateTime M\u00e9s informaci\u00f3: http://php.net/manual/es/datetime.createfromformat.php","title":"Comprovar la data"},{"location":"02-basics/6_processament_formularis%20copy/#bones-practiques-en-lobtencio-de-dades-des-de-lexterior","text":"Cal seguir les seg\u00fcents bones pr\u00e0ctiques: No confieu mai (mai) en l\u2019entrada des de l\u2019exterior del vostre PHP. Sanegeu i valideu l\u2019entrada de dades sempre. Les funcions filter_var() i filter_input() poden sanejar el text i validar els formats de text (per exemple, adreces de correu electr\u00f2nic, enters). Recordeu que l\u2019entrada de dades no es limita a formularis enviats per l\u2019usuari. Els fitxers carregats i descarregats, els valors de sessi\u00f3, les dades de galetes i les dades de serveis web de tercers tamb\u00e9 s\u00f3n d\u2019entrada estrangera. A mode de resum pod\u00edem resumir la gesti\u00f3 de formularis en el seg\u00fcent diagrama de flux.","title":"Bones pr\u00e0ctiques en l\u2019obtenci\u00f3 de dades des de l\u2019exterior"},{"location":"02-basics/6_processament_formularis%20copy/#formularis-en-html5","text":"En els seg\u00fcents recursos trobar\u00e0s informaci\u00f3 addicional sobre els controls de formularis en HTML5: * Formularios en HTML en MDN web docs. * Formularios en HTML5 en MDN web docs. * HTML Forms en W3CSchools.","title":"Formularis en HTML5"},{"location":"02-basics/6_processament_formularis%20copy/#activities","text":"","title":"Activities"},{"location":"02-basics/6_processament_formularis%20copy/#activit-261","text":"Crea una p\u00e0gina que reba com a par\u00e0metre un nom i mostre el text \u2018Benvingut [nom]!!!\u2019 sent [nom] el nom has passat com a par\u00e0metre. Guarda-la amb el nom exemple_get.php .","title":"Activit 261"},{"location":"02-basics/6_processament_formularis%20copy/#activitat-12-a-creacio-dun-formulari","text":"Crea un formulari que tinga els seg\u00fcents camps: Nom i cognoms Data de naixement Correu electr\u00f2nic Assumpte Missatge En l'atribut action del formulari posarem el seg\u00fcent: action = \"<?= $_SERVER['PHP_SELF'] ; ?>\" A\u00e7\u00f2 far\u00e0 que siga la pr\u00f2pia p\u00e0gina del formulari la que processe les dades del mateix. En pr\u00e9mer Enviar han d'apar\u00e8ixer sota el formulari les dades que s'han introdu\u00eft en el mateix.","title":"Activitat 12 A: Creaci\u00f3 d'un formulari"},{"location":"02-basics/6_processament_formularis%20copy/#activitat-12-b-creacio-dun-formulari","text":"Soluciona el problema dels par\u00e0metres no enviats de l'exercici anterior.","title":"Activitat 12 B: Creaci\u00f3 d'un formulari"},{"location":"02-basics/6_processament_formularis%20copy/#activitat-12-c-validacio-dun-formulari","text":"Modifica l'exercici anterior realitzant les validacions oportunes.","title":"Activitat 12 C: Validaci\u00f3 d'un formulari"},{"location":"02-basics/7_pujada_fitxers/","text":"7. Pujada de fitxers Introducci\u00f3 Per a pujar fitxers PHP implementa un mecanisme senzill a trav\u00e9s de la variable superglobal $_FILES . En Pujada d'arxius disposeu de tota la informaci\u00f3 necess\u00e0ria per a gestionar la pujada d'arxius. Formulari Per poder utilitzar el tipus file en l'element input cal que el formulari incloga l'atribut enctype amb el valor multipart/form-data . El valor de l'atribut name de l'element input ser\u00e0 l'\u00edndex de l'array associatiu $_FILES que ens permetr\u00e0 obtenir tota la informaci\u00f3 del proc\u00e9s de pujada del fitxer. En el seg\u00fcent exemple: < form action = \"upload.php\" enctype = \"multipart/form-data\" method = \"POST\" > < input type = \"hidden\" name = \"MAX_FILE_SIZE\" value = \"10240\" > < input type = \"file\" name = \"image\" /> < input type = \"submit\" value = \"Upload\" /> </ form > Emprarem $_FILES['image'] per obtenir les dades de l'arxiu penjat. Variable superglobal $_FILES Cada element en $_FILES \u00e9s un array que aporta informaci\u00f3 sobre el fitxer pujat. Les claus m\u00e9s importants s\u00f3n: * name . El nom original del fitxer pujat. No \u00e9s massa \u00fatil perqu\u00e8 el sistema original pot tindre convencions diferents i pot generar col\u00b7lisions si l'utilitzem per a emmagatzemar-lo en la seua ubicaci\u00f3 definitiva. * type . El tipus MIME del fitxer dedu\u00eft pel navegador. * size . La grand\u00e0ria en bytes del fitxer. Si el fitxer \u00e9s massa gran el valor enviat ser\u00e0 0. * tmp_name . El nom temporal del fitxer en el servidor on s'ha emmagatzemat el fitxer pujat. Moure el fitxer Com que el fitxer pujat es guarda en una carpeta temporal hem d'emprar la funci\u00f3 move_uploaded_file per a guardar-lo en la ubicaci\u00f3 definitiva. La funci\u00f3 is_uploaded_file ens permet a assegurar-nos que el fitxer ha estat pujat usant HTTP POST i no es tracta d'un fitxer malici\u00f3s. move_uploaded_file ja fa eixa comprovaci\u00f3 en executar-se. Gesti\u00f3 d'errors PHP torna un codi d'error en $_FILES . El codi es pot trabar en la clau error . Per exemple: $_FILES['image']['error'] . Els missates d'error m\u00e9s importants s\u00f3n: UPLOAD_ERR_OK : La pujada ha sigut correcta. UPLOAD_ERR_INI_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en la directiva upload_max_filesize . UPLOAD_ERR_FORM_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en el formulari en max_file_size . UPLOAD_ERR_NO_FILE : No s'ha enviat cap fitxer. En Explicaci\u00f3 dels missatges d'error teniu m\u00e9s informaci\u00f3. Activitats Activitat 271: Pujada d'imatges (opcional) Modifica l'activitat anterior afegint un camp de tipus FILE per a pujar una imatge al servidor. Es guardar\u00e0 en la carpeta uploads i es mostrar\u00e0 amb la resta de dades.","title":"7. Pujada de fitxers"},{"location":"02-basics/7_pujada_fitxers/#7-pujada-de-fitxers","text":"","title":"7. Pujada de fitxers"},{"location":"02-basics/7_pujada_fitxers/#introduccio","text":"Per a pujar fitxers PHP implementa un mecanisme senzill a trav\u00e9s de la variable superglobal $_FILES . En Pujada d'arxius disposeu de tota la informaci\u00f3 necess\u00e0ria per a gestionar la pujada d'arxius.","title":"Introducci\u00f3"},{"location":"02-basics/7_pujada_fitxers/#formulari","text":"Per poder utilitzar el tipus file en l'element input cal que el formulari incloga l'atribut enctype amb el valor multipart/form-data . El valor de l'atribut name de l'element input ser\u00e0 l'\u00edndex de l'array associatiu $_FILES que ens permetr\u00e0 obtenir tota la informaci\u00f3 del proc\u00e9s de pujada del fitxer. En el seg\u00fcent exemple: < form action = \"upload.php\" enctype = \"multipart/form-data\" method = \"POST\" > < input type = \"hidden\" name = \"MAX_FILE_SIZE\" value = \"10240\" > < input type = \"file\" name = \"image\" /> < input type = \"submit\" value = \"Upload\" /> </ form > Emprarem $_FILES['image'] per obtenir les dades de l'arxiu penjat.","title":"Formulari"},{"location":"02-basics/7_pujada_fitxers/#variable-superglobal-_files","text":"Cada element en $_FILES \u00e9s un array que aporta informaci\u00f3 sobre el fitxer pujat. Les claus m\u00e9s importants s\u00f3n: * name . El nom original del fitxer pujat. No \u00e9s massa \u00fatil perqu\u00e8 el sistema original pot tindre convencions diferents i pot generar col\u00b7lisions si l'utilitzem per a emmagatzemar-lo en la seua ubicaci\u00f3 definitiva. * type . El tipus MIME del fitxer dedu\u00eft pel navegador. * size . La grand\u00e0ria en bytes del fitxer. Si el fitxer \u00e9s massa gran el valor enviat ser\u00e0 0. * tmp_name . El nom temporal del fitxer en el servidor on s'ha emmagatzemat el fitxer pujat.","title":"Variable superglobal $_FILES"},{"location":"02-basics/7_pujada_fitxers/#moure-el-fitxer","text":"Com que el fitxer pujat es guarda en una carpeta temporal hem d'emprar la funci\u00f3 move_uploaded_file per a guardar-lo en la ubicaci\u00f3 definitiva. La funci\u00f3 is_uploaded_file ens permet a assegurar-nos que el fitxer ha estat pujat usant HTTP POST i no es tracta d'un fitxer malici\u00f3s. move_uploaded_file ja fa eixa comprovaci\u00f3 en executar-se.","title":"Moure el fitxer"},{"location":"02-basics/7_pujada_fitxers/#gestio-derrors","text":"PHP torna un codi d'error en $_FILES . El codi es pot trabar en la clau error . Per exemple: $_FILES['image']['error'] . Els missates d'error m\u00e9s importants s\u00f3n: UPLOAD_ERR_OK : La pujada ha sigut correcta. UPLOAD_ERR_INI_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en la directiva upload_max_filesize . UPLOAD_ERR_FORM_SIZE : La grand\u00e0ria del fitxer que s'intenta pujar \u00e9s major que el valor indicat en el formulari en max_file_size . UPLOAD_ERR_NO_FILE : No s'ha enviat cap fitxer. En Explicaci\u00f3 dels missatges d'error teniu m\u00e9s informaci\u00f3.","title":"Gesti\u00f3 d'errors"},{"location":"02-basics/7_pujada_fitxers/#activitats","text":"","title":"Activitats"},{"location":"02-basics/7_pujada_fitxers/#activitat-271-pujada-dimatges-opcional","text":"Modifica l'activitat anterior afegint un camp de tipus FILE per a pujar una imatge al servidor. Es guardar\u00e0 en la carpeta uploads i es mostrar\u00e0 amb la resta de dades.","title":"Activitat 271: Pujada d'imatges (opcional)"},{"location":"03-phpoo/0301-phpoo-basic/","text":"POO en PHP. Conceptes b\u00e0sics Introducci\u00f3 La programaci\u00f3 orientada a objectes (OOP, per les seues sigles en angl\u00e8s) \u00e9s un paradigma de programaci\u00f3. Paradigma: Teoria [\u2026] el nucli central de la qual [\u2026] suministra la base i el model per resoldre problemes i avan\u00e7ar en el coneixement. Per la qual cosa podem definir la programaci\u00f3 orientada a objecte com un m\u00e8tode -provat i estudiat- el qual es basa en les interaccions d'objectes per resoldre les necessitats d'un sistema inform\u00e0tic. Un objecte \u00e9s una estructura que cont\u00e9 dades i el codi que els maneja. L'estructura dels objectes es defineix en les classes. En elles s'escriu el codi que defineix el comportament dels objectes i s'indiquen els membres que formaran part dels objectes d'aquesta classe. Entre els membres de una classe pot haver-hi: M\u00e8todes . S\u00f3n els membres de la classe que contenen el codi de la mateixa. Un m\u00e8tode \u00e9s com una funci\u00f3. Pot rebre par\u00e0metres i retornar valors. Atributs o propietats . Emmagatzemen informaci\u00f3 sobre el estat de l'objecte al que pertanyen (i per tant, el seu valor pot ser diferent per a cadascun dels objectes de la mateixa classe). A la creaci\u00f3 de un objecte basat en una classe se li anomena instanciar una classe i a l'objecte obtingut tamb\u00e9 se li coneix com a inst\u00e0ncia d'aqueixa classe. Els pilars fonamentals de la POO s\u00f3n: Her\u00e8ncia . \u00c9s el proc\u00e9s de crear una classe a partir de una altra, heretant el seu comportament i caracter\u00edstiques i podent redefinir-los. Abstracci\u00f3 . L'objectiu principal es gestionar la complexitat ocultant detalls innecessaris a l'usuari. Aix\u00f2 li permet implementar l\u00f2gica m\u00e9s complexa sobre la base de la abstracci\u00f3 sense entendre o, incl\u00fas, sense pensar en tota la seua complexitat oculta. Polimorfisme . Un mateix m\u00e8tode pot tenir comportaments diferents en funci\u00f3 de l'objecte amb que s'utilitze. Encapsulaci\u00f3 . La idea \u00e9s mantindre en una mateix lloc (unitat de codi) les dades i el codi que els manipula. Aquest concepte tamb\u00e9 s'utilitza sovint per ocultar la representaci\u00f3 interna, o estat, d'un objecte des de l'exterior. Aix\u00f2 s'anomena ocultaci\u00f3 d'informaci\u00f3 . Els avantatges m\u00e9s importants que aporta la programaci\u00f3 orientada a objectes s\u00f3n: Modularitat . La POO permet dividir els programes en parts o m\u00f2duls m\u00e9s xicotets, que s\u00f3n independents uns d'uns altres per\u00f2 poden comunicar-se entre ells. Extensibilitat . Si es desitgen afegir noves caracter\u00edstiques a una aplicaci\u00f3, la POO facilita aquesta tasca de dues formes: afegint nous m\u00e8todes al codi, o creant nous objectes que estenguen el comportament dels ja existents. Manteniment . Els programes desenvolupats utilitzant POO s\u00f3n m\u00e9s senzills de mantenir, a causa de la modularitat abans comentada. Tamb\u00e9 ajuda seguir certes convencions en escriure'ls , per exemple, escriure cada classe en un fitxer propi. No ha d'haver-hi dues classes en un mateix fitxer, ni un altre codi a part de el propi de la classe. Caracter\u00edstiques b\u00e0siques de l'\u00fas d'objectes en PHP Segurament tot, o la majoria del que acabes de veure, ja ho coneixies, i \u00e9s fins i tot probable que s\u00e0pigues utilitzar algun llenguatge de programaci\u00f3 orientat a objectes, aix\u00ed que anem a veure directament les peculiaritats pr\u00f2pies de PHP en el que fa refer\u00e8ncia a la POO. En PHP podemos utilitzar els dos paradigmes de la programaci\u00f3: estructurada i orientada a objectes. // utilitzant programaci\u00f3 estructurada $dwes = mysqli_connect ( 'localhost' , 'dwes' , 'abc123.' , 'dwes' ); // utilizant POO $dwes = new mysqli (); $dwes -> connect ( 'localhost' , 'dwes' , 'abc123.' , 'dwes' ); No obstant a\u00e7\u00f2, el llenguatge PHP original no es va dissenyar amb caracter\u00edstiques d'orientaci\u00f3 a objectes. Nom\u00e9s a partir de la versi\u00f3 3, es van comen\u00e7ar a introduir alguns trets de POO en el llenguatge. A\u00e7\u00f2 es va potenciar en la versi\u00f3 4, encara que encara de forma molt rudiment\u00e0ria. Per exemple, en PHP4: Els objectes es passen sempre per valor, no per refer\u00e8ncia. No es pot definir el nivell d'acc\u00e9s per als membres de la classe. Tots s\u00f3n p\u00fablics. No existeixen les interf\u00edcies. No existeixen m\u00e8todes destructors. En PHP5 es va reescriure i potenciar el suport d'orientaci\u00f3 a objectes del llenguatge, ampliant les seues caracter\u00edstiques i millorant el seu rendiment i el seu funcionament general. Les caracter\u00edstiques de POO que suporta PHP5 inclouen: M\u00e8todes est\u00e0tics. M\u00e8todes constructors i destructors. Her\u00e8ncia. Interf\u00edcies. Classes abstractes. Entre les caracter\u00edstiques que no inclou PHP5, i que pots con\u00e8ixer d'altres llenguatges de programaci\u00f3, estan: Her\u00e8ncia m\u00faltiple. Sobrec\u00e0rrega de m\u00e8todes (tenir diversos m\u00e8todes amb el mateix nom, per\u00f2 amb funcionalitats diferents. Els m\u00e8todes sobrecarregats han de tenir diferents par\u00e0metres. Quan es diu al m\u00e8tode, s'utilitza una o una altra versi\u00f3 en funci\u00f3 dels par\u00e0metres amb que es realitze la trucada (podent distingir per el seu nombre i per el seu tipus, segons el llenguatge de programaci\u00f3 utilitzat)) (inclosos els m\u00e8todes constructors). Sobrec\u00e0rrega d'operadors (similar a la sobrec\u00e0rrega de m\u00e8todes. Es poden definir diverses funcionalitats a un mateix operador, i s'utilitzar\u00e0 una o una altra en funci\u00f3 del tipus dels operands que s'usen en cada instant). PHP 7 incorpora millores en el rendiment i el tipat d'arguments, valors de retorn i atributs (des de la versi\u00f3 7.4) Definici\u00f3 de classes La declaraci\u00f3 de una classe en PHP es fa utilitzant la paraula class . A continuaci\u00f3 i entre claus, han de figurar els membres de la classe. Conv\u00e9 fer-ho de forma ordenada, primer les propietats o atributs, i despr\u00e9s els m\u00e8todes, cadascun amb el seu codi respectiu. class Product { private string $code ; public string $name ; public float $price ; public function getSummaryLine () : string { return $this -> name ; } } En UML la classe anterior es representaria aix\u00ed: classDiagram class Product { -string code +string name +float price +string getSummaryLine() } Com coment\u00e0vem abans, \u00e9s preferible que cada classe figure en el seu propi fitxer ( Product.php ). A m\u00e9s, molts programadors prefereixen utilitzar per a les classes noms que comencen per lletra maj\u00fascula, per a, d'aquesta forma, distingir-los dels objectes i altres variables. Una vegada definida la classe, podem usar la paraula new per a instanciar objectes de la seg\u00fcent forma: $product = new Product (); Perqu\u00e8 la l\u00ednia anterior s'execute sense error, pr\u00e8viament hem d'haver declarat la classe. Per a a\u00e7\u00f2, en aqueix mateix fitxer haur\u00e0s de incloure la classe posant alguna cosa com: require ( 'Product.php' ); Els atributs de una classe s\u00f3n similars a les variables de PHP. \u00c9s possible indicar un valor en la declaraci\u00f3 de la classe. En aquest cas, tots els objectes que s'instancien a partir de aqueixa classe, partiran amb aqueix valor per defecte en l'atribut. Per a accedir des d'un objecte als seus atributs o als m\u00e8todes de la classe, has d'utilitzar l'operador fletxa (fixa't que nom\u00e9s es posa el s\u00edmbol $ davant del nom de l'objecte): $product -> name = 'Samsung Galaxy S' ; echo $product -> getSummaryLine (); Visibilitat Quan es declara una propietat o un m\u00e8tode, s'ha d'indicar el seu nivell d'acc\u00e9s (o visibilitat). Els principals nivells s\u00f3n: public . Els atributs declarats com public poden utilitzar-se directament per els objectes de la classe. \u00c9s el cas de l'atribut $name anterior. private . Els atributs declarats com private nom\u00e9s poden ser accedits i modificats per els m\u00e8todes definits en la classe, no directament per els objectes de la mateixa. \u00c9s el cas de l'atribut $code . protected . Una propietat o m\u00e8tode protected sols pot ser accedida per la classe on es defineix o per un subclasse. No \u00e9s accessible des de fora. Un dels motius per a crear atributs privats \u00e9s que el seu valor forma part de la informaci\u00f3 interna de l'objecte i no ha de formar part de la seua interf\u00edcie. Un altre motiu \u00e9s mantenir cert control sobre els seus possibles valors. Per exemple, si no vols que es puga canviar lliurement el valor del codi d'un producte. O necessites con\u00e8ixer quin ser\u00e0 el nou valor abans d'assignar-lo. En aquests casos, se solen definir aqueixos atributs com a privats i a m\u00e9s es creen dins de la classe m\u00e8todes per a permetre'ns obtenir i/o modificar els valors d'aqueixos atributs. Per exemple: private string $code ; public function setCode ( string $newCode ) : boolean { if ( ! existsCode ( $newCode )) { $this -> code = $newCode ; return true ; } return false ; } public function getCode () : string { return $this -> code ; } Encara que no \u00e9s obligatori, el nom del m\u00e8tode que ens permet obtenir el valor de un atribut sol comen\u00e7ar per get , i el que ens permet modificar-lo per set . Constructor Com ja has vist, per a instanciar objectes de una classe s'utilitza la paraula new : $product = new Product (); En PHP7 pots definir en les classes m\u00e8todes constructors, que s'executen quan es crea l'objecte. El constructor d'una classe ha d'anomenar-se __construct . Es poden utilitzar, per exemple, per assignar valors a atributs. class Product { private string $code ; public string $name ; public function __construct () { $this -> code = \"\" ; } \u2026 } El constructor d'una classe pot cridar a altres m\u00e8todes o tenir par\u00e0metres, en aquest cas hauran de passar-se quan es crea l'objecte. No obstant a\u00e7\u00f2, nom\u00e9s pot haver-hi un m\u00e8tode constructor en cada classe. class Product { private string $code ; public string $name ; public function __construct ( string $code ) { $this -> $code = $code ; } ... } $product = new Product ( 'GALAXYS' ); Per exemple, si com en aquest exemple, definim un constructor en el qual cal passar el codi, sempre que instancies un nou objecte d'aqueixa classe haur\u00e0s de indicar el seu codi. La pseuodovariable $this Quan des d'un objecte s'invoca un m\u00e8tode de la classe, a aquest se li passa sempre una refer\u00e8ncia a l'objecte que ha fet la crida. Aquesta refer\u00e8ncia s'emmagatzema en la pseudovariable $this. S'utilitza, per exemple, en el codi anterior per a tenir acc\u00e9s als atributs privats de l'objecte (que nom\u00e9s s\u00f3n accessibles des dels m\u00e8todes de la classe). echo \" < p > \" . $this->code . \" </ p > \"; En la documentaci\u00f3 de PHP tens m\u00e9s informaci\u00f3 sobre els m\u00e8todes m\u00e0gics: http://es.php.net/manual/es/language.oop5.magic.php Constants de classe A m\u00e9s de m\u00e8todes i propietats, en una classe tamb\u00e9 es poden definir constants, utilitzant la paraula const . \u00c9s important que no confongues els atributs amb les constants. S\u00f3n conceptes diferents: les constants no poden canviar el seu valor (\u00f2bviament, d'ah\u00ed el seu nom), no usen el car\u00e0cter $ , s'escriuen en maj\u00fascules (per convenci\u00f3) i el seu valor est\u00e0 associat a la classe, \u00e9s a dir, no existeix una c\u00f2pia del mateix en cada objecte. Per tant, per a accedir a les constants d'una classe, s'ha d'utilitzar el nom de la classe i l'operador :: , anomenat operador de resoluci\u00f3 d'\u00e0mbit (que s'utilitza per a accedir a els elements de una classe). class DB { const USUARIO = 'dwes' ; ... } echo DB :: USUARIO ; \u00c9s important ressaltar que no \u00e9s necessari que existisca cap objecte de una classe per a poder accedir al valor de les constants que definisca. PHP-FIG El PHP Framework Interop Group \u00e9s un grup de treball on est\u00e0 involucrada gent que treballa en diferents frameworks amb l'objectiu de posar en com\u00fa les t\u00e8cniques que usen en els diferents projectes per poder integrar-les i compartir-les i poder treballar millor junts. Les recomanacions PSR-1 i PSR-12 s\u00f3n recomanacions sobre l'estil de programaci\u00f3 amb l'objectiu d'aplicar estandards comuns i aix\u00ed facilitar la lectura del codi realitzar per altres. Algunes recomancions que cal seguir: Class names MUST be declared in StudlyCaps . For instance: Product . Class constants MUST be declared in all upper case with underscore separators. For example: const IMAGE_PATH. About property names the only recommendation is to be consistent. So, we SHOULD use $camelCase . The same recommendations applies for variables. Method names MUST be declared in camelCase() . M\u00e9s informaci\u00f3 en Est\u00e1ndares Utilitzaci\u00f3 d'objectes Ja saps com instanciar un objecte utilitzant new , i com accedir a els seus m\u00e8todes i atributs p\u00fablics amb l'operador fletxa: $product = new Product (); $product -> name = 'Samsung Galaxy S' ; echo $product -> getSummaryLine (); Una vegada creat un objecte, pots utilitzar l'operador instanceof per a comprovar si \u00e9s o no una inst\u00e0ncia de una classe determinada. if ( $product instanceof Product ) { \u2026 } Des de PHP7, pots indicar en les funcions i m\u00e8todes de quina classe han de ser els objectes que es passen com a par\u00e0metres. Per a a\u00e7\u00f2, has d'especificar el tipus abans del par\u00e0metre. public function sellProduct ( Product $product ) { \u2026 } Si quan es realitza la crida, el par\u00e0metre no \u00e9s del tipus adequat, es produeix un error que podries capturar. Una caracter\u00edstica de la POO que has de tenir molt en compte \u00e9s qu\u00e8 succeeix amb els objectes quan els passes a una funci\u00f3, o simplement quan executes un codi com el seg\u00fcent: $product1 = new Product (); $product1 -> name = 'Samsung Galaxy S' ; $product2 = $product1 ; El codi anterior simplement crearia un nou identificador del mateix objecte. A\u00e7\u00f2 \u00e9s, quan s'utilitze qualsevol dels identificadors per a canviar el valor de algun atribut, aquest canvi es veuria tamb\u00e9 reflectit en accedir utilitzant l'altre identificador. Recorda que, encara que hi haja dos o m\u00e9s identificadors del mateix objecte, en realitat tots es refereixen a l'\u00fanica c\u00f2pia que s'emmagatzema del mateix. Comparaci\u00f3 d'Objectes En utilitzar l'operador de comparaci\u00f3 (==), es comparen d'una manera senzilla les variables de cada objecte, \u00e9s a dir: dues inst\u00e0ncies d'un objecte s\u00f3n iguals si tenen els mateixos atributs i valors (els valors es comparen amb ==), i s\u00f3n inst\u00e0ncies de la mateixa classe. Quan s'utilitza l'operador identitat (===), les variables d'un objecte s\u00f3n id\u00e8ntiques si i nom\u00e9s s\u00ed fan refer\u00e8ncia a la mateixa inst\u00e0ncia de la mateixa classe. Her\u00e8ncia L'her\u00e8ncia \u00e9s un mecanisme de la POO que ens permet definir noves classes sobre la base d'una altra ja existent. Les noves classes que hereten tamb\u00e9 es coneixen amb el nom de subclasses. La classe de la qual hereten es diu classe base o superclasse. Per exemple, en la nostra tenda web anem a tenir productes de diferents tipus. En principi hem creat per a manejar-los una classe anomenada Product , amb alguns atributs i un m\u00e8tode que genera una eixida personalitzada en format HTML del codi. class Product { public string $code ; public string $name ; ... public function show () { echo \"<p>\" . $this -> code . \"</p>\" ; } } Aquesta classe \u00e9s molt \u00fatil si l'\u00fanica informaci\u00f3 que tenim dels diferents productes \u00e9s la que es mostra dalt. Per\u00f2, si vols personalitzar la informaci\u00f3 que vas a tractar de cada tipus de producte (i emmagatzemar, per exemple per als televisors, les polzades que tenen o la seua tecnologia de fabricaci\u00f3), pots crear noves classes que hereten de Product . Per exemple, TV , Computer , Phone . class TV extends Product { public float $size ; public string $technology ; } La paraula reservada extends Com pots veure, per a definir una classe que herete d'una altra, simplement has de utilitzar la paraula extends indicant la superclasse. Els nous objectes que s'instancien a partir de la subclasse s\u00f3n tamb\u00e9 objectes de la classe base; es pot comprovar utilitzant l'operador instanceof . $tv = new TV (); if ( $tv instanceof Product ) { // Aquest codi s'executa doncs la condici\u00f3 \u00e9s certa \u2026 } La nova classe hereta tots els atributs i m\u00e8todes p\u00fablics de la classe base, per\u00f2 no els privats. Si vols crear en la classe base un m\u00e8tode no visible a l'exterior (com els privats) que s'herete a les subclasses, has d'utilitzar la paraula protected en lloc de private . A m\u00e9s, pots redefinir el comportament dels m\u00e8todes existents en la classe base, simplement creant en la subclasse un nou m\u00e8tode amb el mateix nom. class TV extends Producte { public float $size ; public string $technology ; public function show () { print \"<p>\" . $this -> size . \" polzades</p>\" ; } } Bibliografia Jos\u00e9 Luis Comesa\u00f1a. Apuntes de formaci\u00f3n a distancia del m\u00f3dulo \u00abDesarrollo web en entorno servidor\u00bb del CFGS DAW, elaborados y licenciados por el Ministerio de Educaci\u00f3n, Cultura y Deporte. [en l\u00ednia]. 2012 [data de consulta: 13 de setembre de 2019]. Disponible en < https://github.com/statickidz/TemarioDAW/tree/master/DWES > Antonio L\u00f3pez. Learning PHP 7. Packt Publishing (29 de marzo de 2016) . https://stackify.com/oop-concept-for-beginners-what-is-encapsulation/ https://stackify.com/oop-concept-abstraction/","title":"PHP OO B\u00e0sic"},{"location":"03-phpoo/0301-phpoo-basic/#poo-en-php-conceptes-basics","text":"","title":"POO en PHP. Conceptes b\u00e0sics"},{"location":"03-phpoo/0301-phpoo-basic/#introduccio","text":"La programaci\u00f3 orientada a objectes (OOP, per les seues sigles en angl\u00e8s) \u00e9s un paradigma de programaci\u00f3. Paradigma: Teoria [\u2026] el nucli central de la qual [\u2026] suministra la base i el model per resoldre problemes i avan\u00e7ar en el coneixement. Per la qual cosa podem definir la programaci\u00f3 orientada a objecte com un m\u00e8tode -provat i estudiat- el qual es basa en les interaccions d'objectes per resoldre les necessitats d'un sistema inform\u00e0tic. Un objecte \u00e9s una estructura que cont\u00e9 dades i el codi que els maneja. L'estructura dels objectes es defineix en les classes. En elles s'escriu el codi que defineix el comportament dels objectes i s'indiquen els membres que formaran part dels objectes d'aquesta classe. Entre els membres de una classe pot haver-hi: M\u00e8todes . S\u00f3n els membres de la classe que contenen el codi de la mateixa. Un m\u00e8tode \u00e9s com una funci\u00f3. Pot rebre par\u00e0metres i retornar valors. Atributs o propietats . Emmagatzemen informaci\u00f3 sobre el estat de l'objecte al que pertanyen (i per tant, el seu valor pot ser diferent per a cadascun dels objectes de la mateixa classe). A la creaci\u00f3 de un objecte basat en una classe se li anomena instanciar una classe i a l'objecte obtingut tamb\u00e9 se li coneix com a inst\u00e0ncia d'aqueixa classe. Els pilars fonamentals de la POO s\u00f3n: Her\u00e8ncia . \u00c9s el proc\u00e9s de crear una classe a partir de una altra, heretant el seu comportament i caracter\u00edstiques i podent redefinir-los. Abstracci\u00f3 . L'objectiu principal es gestionar la complexitat ocultant detalls innecessaris a l'usuari. Aix\u00f2 li permet implementar l\u00f2gica m\u00e9s complexa sobre la base de la abstracci\u00f3 sense entendre o, incl\u00fas, sense pensar en tota la seua complexitat oculta. Polimorfisme . Un mateix m\u00e8tode pot tenir comportaments diferents en funci\u00f3 de l'objecte amb que s'utilitze. Encapsulaci\u00f3 . La idea \u00e9s mantindre en una mateix lloc (unitat de codi) les dades i el codi que els manipula. Aquest concepte tamb\u00e9 s'utilitza sovint per ocultar la representaci\u00f3 interna, o estat, d'un objecte des de l'exterior. Aix\u00f2 s'anomena ocultaci\u00f3 d'informaci\u00f3 . Els avantatges m\u00e9s importants que aporta la programaci\u00f3 orientada a objectes s\u00f3n: Modularitat . La POO permet dividir els programes en parts o m\u00f2duls m\u00e9s xicotets, que s\u00f3n independents uns d'uns altres per\u00f2 poden comunicar-se entre ells. Extensibilitat . Si es desitgen afegir noves caracter\u00edstiques a una aplicaci\u00f3, la POO facilita aquesta tasca de dues formes: afegint nous m\u00e8todes al codi, o creant nous objectes que estenguen el comportament dels ja existents. Manteniment . Els programes desenvolupats utilitzant POO s\u00f3n m\u00e9s senzills de mantenir, a causa de la modularitat abans comentada. Tamb\u00e9 ajuda seguir certes convencions en escriure'ls , per exemple, escriure cada classe en un fitxer propi. No ha d'haver-hi dues classes en un mateix fitxer, ni un altre codi a part de el propi de la classe.","title":"Introducci\u00f3"},{"location":"03-phpoo/0301-phpoo-basic/#caracteristiques-basiques-de-lus-dobjectes-en-php","text":"Segurament tot, o la majoria del que acabes de veure, ja ho coneixies, i \u00e9s fins i tot probable que s\u00e0pigues utilitzar algun llenguatge de programaci\u00f3 orientat a objectes, aix\u00ed que anem a veure directament les peculiaritats pr\u00f2pies de PHP en el que fa refer\u00e8ncia a la POO. En PHP podemos utilitzar els dos paradigmes de la programaci\u00f3: estructurada i orientada a objectes. // utilitzant programaci\u00f3 estructurada $dwes = mysqli_connect ( 'localhost' , 'dwes' , 'abc123.' , 'dwes' ); // utilizant POO $dwes = new mysqli (); $dwes -> connect ( 'localhost' , 'dwes' , 'abc123.' , 'dwes' ); No obstant a\u00e7\u00f2, el llenguatge PHP original no es va dissenyar amb caracter\u00edstiques d'orientaci\u00f3 a objectes. Nom\u00e9s a partir de la versi\u00f3 3, es van comen\u00e7ar a introduir alguns trets de POO en el llenguatge. A\u00e7\u00f2 es va potenciar en la versi\u00f3 4, encara que encara de forma molt rudiment\u00e0ria. Per exemple, en PHP4: Els objectes es passen sempre per valor, no per refer\u00e8ncia. No es pot definir el nivell d'acc\u00e9s per als membres de la classe. Tots s\u00f3n p\u00fablics. No existeixen les interf\u00edcies. No existeixen m\u00e8todes destructors. En PHP5 es va reescriure i potenciar el suport d'orientaci\u00f3 a objectes del llenguatge, ampliant les seues caracter\u00edstiques i millorant el seu rendiment i el seu funcionament general. Les caracter\u00edstiques de POO que suporta PHP5 inclouen: M\u00e8todes est\u00e0tics. M\u00e8todes constructors i destructors. Her\u00e8ncia. Interf\u00edcies. Classes abstractes. Entre les caracter\u00edstiques que no inclou PHP5, i que pots con\u00e8ixer d'altres llenguatges de programaci\u00f3, estan: Her\u00e8ncia m\u00faltiple. Sobrec\u00e0rrega de m\u00e8todes (tenir diversos m\u00e8todes amb el mateix nom, per\u00f2 amb funcionalitats diferents. Els m\u00e8todes sobrecarregats han de tenir diferents par\u00e0metres. Quan es diu al m\u00e8tode, s'utilitza una o una altra versi\u00f3 en funci\u00f3 dels par\u00e0metres amb que es realitze la trucada (podent distingir per el seu nombre i per el seu tipus, segons el llenguatge de programaci\u00f3 utilitzat)) (inclosos els m\u00e8todes constructors). Sobrec\u00e0rrega d'operadors (similar a la sobrec\u00e0rrega de m\u00e8todes. Es poden definir diverses funcionalitats a un mateix operador, i s'utilitzar\u00e0 una o una altra en funci\u00f3 del tipus dels operands que s'usen en cada instant). PHP 7 incorpora millores en el rendiment i el tipat d'arguments, valors de retorn i atributs (des de la versi\u00f3 7.4)","title":"Caracter\u00edstiques b\u00e0siques de l'\u00fas d'objectes en PHP"},{"location":"03-phpoo/0301-phpoo-basic/#definicio-de-classes","text":"La declaraci\u00f3 de una classe en PHP es fa utilitzant la paraula class . A continuaci\u00f3 i entre claus, han de figurar els membres de la classe. Conv\u00e9 fer-ho de forma ordenada, primer les propietats o atributs, i despr\u00e9s els m\u00e8todes, cadascun amb el seu codi respectiu. class Product { private string $code ; public string $name ; public float $price ; public function getSummaryLine () : string { return $this -> name ; } } En UML la classe anterior es representaria aix\u00ed: classDiagram class Product { -string code +string name +float price +string getSummaryLine() } Com coment\u00e0vem abans, \u00e9s preferible que cada classe figure en el seu propi fitxer ( Product.php ). A m\u00e9s, molts programadors prefereixen utilitzar per a les classes noms que comencen per lletra maj\u00fascula, per a, d'aquesta forma, distingir-los dels objectes i altres variables. Una vegada definida la classe, podem usar la paraula new per a instanciar objectes de la seg\u00fcent forma: $product = new Product (); Perqu\u00e8 la l\u00ednia anterior s'execute sense error, pr\u00e8viament hem d'haver declarat la classe. Per a a\u00e7\u00f2, en aqueix mateix fitxer haur\u00e0s de incloure la classe posant alguna cosa com: require ( 'Product.php' ); Els atributs de una classe s\u00f3n similars a les variables de PHP. \u00c9s possible indicar un valor en la declaraci\u00f3 de la classe. En aquest cas, tots els objectes que s'instancien a partir de aqueixa classe, partiran amb aqueix valor per defecte en l'atribut. Per a accedir des d'un objecte als seus atributs o als m\u00e8todes de la classe, has d'utilitzar l'operador fletxa (fixa't que nom\u00e9s es posa el s\u00edmbol $ davant del nom de l'objecte): $product -> name = 'Samsung Galaxy S' ; echo $product -> getSummaryLine ();","title":"Definici\u00f3 de classes"},{"location":"03-phpoo/0301-phpoo-basic/#visibilitat","text":"Quan es declara una propietat o un m\u00e8tode, s'ha d'indicar el seu nivell d'acc\u00e9s (o visibilitat). Els principals nivells s\u00f3n: public . Els atributs declarats com public poden utilitzar-se directament per els objectes de la classe. \u00c9s el cas de l'atribut $name anterior. private . Els atributs declarats com private nom\u00e9s poden ser accedits i modificats per els m\u00e8todes definits en la classe, no directament per els objectes de la mateixa. \u00c9s el cas de l'atribut $code . protected . Una propietat o m\u00e8tode protected sols pot ser accedida per la classe on es defineix o per un subclasse. No \u00e9s accessible des de fora. Un dels motius per a crear atributs privats \u00e9s que el seu valor forma part de la informaci\u00f3 interna de l'objecte i no ha de formar part de la seua interf\u00edcie. Un altre motiu \u00e9s mantenir cert control sobre els seus possibles valors. Per exemple, si no vols que es puga canviar lliurement el valor del codi d'un producte. O necessites con\u00e8ixer quin ser\u00e0 el nou valor abans d'assignar-lo. En aquests casos, se solen definir aqueixos atributs com a privats i a m\u00e9s es creen dins de la classe m\u00e8todes per a permetre'ns obtenir i/o modificar els valors d'aqueixos atributs. Per exemple: private string $code ; public function setCode ( string $newCode ) : boolean { if ( ! existsCode ( $newCode )) { $this -> code = $newCode ; return true ; } return false ; } public function getCode () : string { return $this -> code ; } Encara que no \u00e9s obligatori, el nom del m\u00e8tode que ens permet obtenir el valor de un atribut sol comen\u00e7ar per get , i el que ens permet modificar-lo per set .","title":"Visibilitat"},{"location":"03-phpoo/0301-phpoo-basic/#constructor","text":"Com ja has vist, per a instanciar objectes de una classe s'utilitza la paraula new : $product = new Product (); En PHP7 pots definir en les classes m\u00e8todes constructors, que s'executen quan es crea l'objecte. El constructor d'una classe ha d'anomenar-se __construct . Es poden utilitzar, per exemple, per assignar valors a atributs. class Product { private string $code ; public string $name ; public function __construct () { $this -> code = \"\" ; } \u2026 } El constructor d'una classe pot cridar a altres m\u00e8todes o tenir par\u00e0metres, en aquest cas hauran de passar-se quan es crea l'objecte. No obstant a\u00e7\u00f2, nom\u00e9s pot haver-hi un m\u00e8tode constructor en cada classe. class Product { private string $code ; public string $name ; public function __construct ( string $code ) { $this -> $code = $code ; } ... } $product = new Product ( 'GALAXYS' ); Per exemple, si com en aquest exemple, definim un constructor en el qual cal passar el codi, sempre que instancies un nou objecte d'aqueixa classe haur\u00e0s de indicar el seu codi.","title":"Constructor"},{"location":"03-phpoo/0301-phpoo-basic/#la-pseuodovariable-this","text":"Quan des d'un objecte s'invoca un m\u00e8tode de la classe, a aquest se li passa sempre una refer\u00e8ncia a l'objecte que ha fet la crida. Aquesta refer\u00e8ncia s'emmagatzema en la pseudovariable $this. S'utilitza, per exemple, en el codi anterior per a tenir acc\u00e9s als atributs privats de l'objecte (que nom\u00e9s s\u00f3n accessibles des dels m\u00e8todes de la classe). echo \" < p > \" . $this->code . \" </ p > \"; En la documentaci\u00f3 de PHP tens m\u00e9s informaci\u00f3 sobre els m\u00e8todes m\u00e0gics: http://es.php.net/manual/es/language.oop5.magic.php","title":"La pseuodovariable $this"},{"location":"03-phpoo/0301-phpoo-basic/#constants-de-classe","text":"A m\u00e9s de m\u00e8todes i propietats, en una classe tamb\u00e9 es poden definir constants, utilitzant la paraula const . \u00c9s important que no confongues els atributs amb les constants. S\u00f3n conceptes diferents: les constants no poden canviar el seu valor (\u00f2bviament, d'ah\u00ed el seu nom), no usen el car\u00e0cter $ , s'escriuen en maj\u00fascules (per convenci\u00f3) i el seu valor est\u00e0 associat a la classe, \u00e9s a dir, no existeix una c\u00f2pia del mateix en cada objecte. Per tant, per a accedir a les constants d'una classe, s'ha d'utilitzar el nom de la classe i l'operador :: , anomenat operador de resoluci\u00f3 d'\u00e0mbit (que s'utilitza per a accedir a els elements de una classe). class DB { const USUARIO = 'dwes' ; ... } echo DB :: USUARIO ; \u00c9s important ressaltar que no \u00e9s necessari que existisca cap objecte de una classe per a poder accedir al valor de les constants que definisca. PHP-FIG El PHP Framework Interop Group \u00e9s un grup de treball on est\u00e0 involucrada gent que treballa en diferents frameworks amb l'objectiu de posar en com\u00fa les t\u00e8cniques que usen en els diferents projectes per poder integrar-les i compartir-les i poder treballar millor junts. Les recomanacions PSR-1 i PSR-12 s\u00f3n recomanacions sobre l'estil de programaci\u00f3 amb l'objectiu d'aplicar estandards comuns i aix\u00ed facilitar la lectura del codi realitzar per altres. Algunes recomancions que cal seguir: Class names MUST be declared in StudlyCaps . For instance: Product . Class constants MUST be declared in all upper case with underscore separators. For example: const IMAGE_PATH. About property names the only recommendation is to be consistent. So, we SHOULD use $camelCase . The same recommendations applies for variables. Method names MUST be declared in camelCase() . M\u00e9s informaci\u00f3 en Est\u00e1ndares","title":"Constants de classe"},{"location":"03-phpoo/0301-phpoo-basic/#utilitzacio-dobjectes","text":"Ja saps com instanciar un objecte utilitzant new , i com accedir a els seus m\u00e8todes i atributs p\u00fablics amb l'operador fletxa: $product = new Product (); $product -> name = 'Samsung Galaxy S' ; echo $product -> getSummaryLine (); Una vegada creat un objecte, pots utilitzar l'operador instanceof per a comprovar si \u00e9s o no una inst\u00e0ncia de una classe determinada. if ( $product instanceof Product ) { \u2026 } Des de PHP7, pots indicar en les funcions i m\u00e8todes de quina classe han de ser els objectes que es passen com a par\u00e0metres. Per a a\u00e7\u00f2, has d'especificar el tipus abans del par\u00e0metre. public function sellProduct ( Product $product ) { \u2026 } Si quan es realitza la crida, el par\u00e0metre no \u00e9s del tipus adequat, es produeix un error que podries capturar. Una caracter\u00edstica de la POO que has de tenir molt en compte \u00e9s qu\u00e8 succeeix amb els objectes quan els passes a una funci\u00f3, o simplement quan executes un codi com el seg\u00fcent: $product1 = new Product (); $product1 -> name = 'Samsung Galaxy S' ; $product2 = $product1 ; El codi anterior simplement crearia un nou identificador del mateix objecte. A\u00e7\u00f2 \u00e9s, quan s'utilitze qualsevol dels identificadors per a canviar el valor de algun atribut, aquest canvi es veuria tamb\u00e9 reflectit en accedir utilitzant l'altre identificador. Recorda que, encara que hi haja dos o m\u00e9s identificadors del mateix objecte, en realitat tots es refereixen a l'\u00fanica c\u00f2pia que s'emmagatzema del mateix.","title":"Utilitzaci\u00f3 d'objectes"},{"location":"03-phpoo/0301-phpoo-basic/#comparacio-dobjectes","text":"En utilitzar l'operador de comparaci\u00f3 (==), es comparen d'una manera senzilla les variables de cada objecte, \u00e9s a dir: dues inst\u00e0ncies d'un objecte s\u00f3n iguals si tenen els mateixos atributs i valors (els valors es comparen amb ==), i s\u00f3n inst\u00e0ncies de la mateixa classe. Quan s'utilitza l'operador identitat (===), les variables d'un objecte s\u00f3n id\u00e8ntiques si i nom\u00e9s s\u00ed fan refer\u00e8ncia a la mateixa inst\u00e0ncia de la mateixa classe.","title":"Comparaci\u00f3 d'Objectes"},{"location":"03-phpoo/0301-phpoo-basic/#herencia","text":"L'her\u00e8ncia \u00e9s un mecanisme de la POO que ens permet definir noves classes sobre la base d'una altra ja existent. Les noves classes que hereten tamb\u00e9 es coneixen amb el nom de subclasses. La classe de la qual hereten es diu classe base o superclasse. Per exemple, en la nostra tenda web anem a tenir productes de diferents tipus. En principi hem creat per a manejar-los una classe anomenada Product , amb alguns atributs i un m\u00e8tode que genera una eixida personalitzada en format HTML del codi. class Product { public string $code ; public string $name ; ... public function show () { echo \"<p>\" . $this -> code . \"</p>\" ; } } Aquesta classe \u00e9s molt \u00fatil si l'\u00fanica informaci\u00f3 que tenim dels diferents productes \u00e9s la que es mostra dalt. Per\u00f2, si vols personalitzar la informaci\u00f3 que vas a tractar de cada tipus de producte (i emmagatzemar, per exemple per als televisors, les polzades que tenen o la seua tecnologia de fabricaci\u00f3), pots crear noves classes que hereten de Product . Per exemple, TV , Computer , Phone . class TV extends Product { public float $size ; public string $technology ; }","title":"Her\u00e8ncia"},{"location":"03-phpoo/0301-phpoo-basic/#la-paraula-reservada-extends","text":"Com pots veure, per a definir una classe que herete d'una altra, simplement has de utilitzar la paraula extends indicant la superclasse. Els nous objectes que s'instancien a partir de la subclasse s\u00f3n tamb\u00e9 objectes de la classe base; es pot comprovar utilitzant l'operador instanceof . $tv = new TV (); if ( $tv instanceof Product ) { // Aquest codi s'executa doncs la condici\u00f3 \u00e9s certa \u2026 } La nova classe hereta tots els atributs i m\u00e8todes p\u00fablics de la classe base, per\u00f2 no els privats. Si vols crear en la classe base un m\u00e8tode no visible a l'exterior (com els privats) que s'herete a les subclasses, has d'utilitzar la paraula protected en lloc de private . A m\u00e9s, pots redefinir el comportament dels m\u00e8todes existents en la classe base, simplement creant en la subclasse un nou m\u00e8tode amb el mateix nom. class TV extends Producte { public float $size ; public string $technology ; public function show () { print \"<p>\" . $this -> size . \" polzades</p>\" ; } }","title":"La paraula reservada extends"},{"location":"03-phpoo/0301-phpoo-basic/#bibliografia","text":"Jos\u00e9 Luis Comesa\u00f1a. Apuntes de formaci\u00f3n a distancia del m\u00f3dulo \u00abDesarrollo web en entorno servidor\u00bb del CFGS DAW, elaborados y licenciados por el Ministerio de Educaci\u00f3n, Cultura y Deporte. [en l\u00ednia]. 2012 [data de consulta: 13 de setembre de 2019]. Disponible en < https://github.com/statickidz/TemarioDAW/tree/master/DWES > Antonio L\u00f3pez. Learning PHP 7. Packt Publishing (29 de marzo de 2016) . https://stackify.com/oop-concept-for-beginners-what-is-encapsulation/ https://stackify.com/oop-concept-abstraction/","title":"Bibliografia"},{"location":"03-phpoo/0302-phpoo-advanced/","text":"PPO en PHP. Conceptes avan\u00e7ants M\u00e8todes i propietats est\u00e0tiques Els m\u00e8todes i propietats est\u00e0tics (o de classe) s\u00f3n aquells accessibles directament des de la classe, sense necessitat d'inst\u00e0nciar-la. Es declaren amb la paraula reservada static i s'accedeix a ells amb l'operador d'\u00e0mbit :: . Si volem accedir a un m\u00e8tode est\u00e0tic, es posa davant el nom de la classe: Product :: newProduct () . Si des d'un m\u00e8tode volem accedir a una propietat est\u00e0tica de la mateixa classe, s'utilitza la referencia self : self::$numberOfProducts class Product { const IVA = 0.23 ; private static $numberOfProducts = 0 ; public static function newProducts () { self :: $numberOfProducts ++ ; } } Product :: newProduct (); $impuesto = Producto :: IVA ; Tamb\u00e9 podems tindre classes normals que tinguen alguna propietat est\u00e0tica: class Product { const IVA = 0.23 ; private static int $numberOfProducts = 0 ; private string $code ; public function __construct ( string $code ) { self :: $numOfProducts ++ ; $this -> code = $code ; } public function getSummaryLine () : string { return \"El producte \" . $this -> codigo . \" \u00e9s el n\u00famero \" . self :: $numOfProducts ; } } $prod1 = new Product ( \"PS5\" ); $prod2 = new Product ( \"XBOX Series X\" ); $prod3 = new Product ( \"Nintendo Switch\" ); echo $prod3 -> getSummaryLine (); Classes abstractes Les classes abstractes s\u00f3n classes que no es poden instanciar, per la qual cosa actuaran de superclasse i ser\u00e0 obligatori crear subclasses per a fer \u00fas d'ella. \u00c9s a dir, una classe amb el modificador abstract no pot tenir objectes que la instancien, per\u00f2 s\u00ed podr\u00e0 utilitzar-se de classe base i les seues subclasses s\u00ed podran utilitzar-se per a instanciar objectes. abstract class Product { ... } M\u00e8todes abstractes Un m\u00e8tode en el qual s'indique abstract , ha de ser redefinit obligat\u00f2riament per les subclasses, i no podr\u00e0 contenir codi. class Product { \u2026 abstract public function show (); } Anem a fer una petita modificaci\u00f3 en la nostra classe Product . Per a facilitar la creaci\u00f3 de nous objectes, crearem un constructor al que se li passar\u00e0 un array amb els valors dels atributs del nou producte. class Product { public $code ; public $name ; public $shortName ; public $price ; public function show () { echo \"<p>\" . $this -> code . \"</p>\" ; } public function __construct ( $row ) { $this -> code = $row [ 'code' ]; $this -> name = $row [ 'name' ]; $this -> shortName = $row [ 'short_name' ]; $this -> price = $row [ 'price' ]; } } Questi\u00f3 Qu\u00e8 passa ara amb la classe TV , qu\u00e8 hereta de Product? Quan crees un nou objecte d'aqueixa classe, es cridar\u00e0 al constructor de Product? Pots crear un nou constructor espec\u00edfic perqu\u00e8 redefinisca el comportament de la classe base? Comen\u00e7ant per aquesta \u00faltima pregunta, \u00f2bviament pots definir un nou constructor per a les classes heretades que redefinisquen el comportament del que existeix en la classe base, tal com faries amb qualsevol altre m\u00e8tode. I depenent de si programes o no el constructor en la classe heretada, es cridar\u00e0 o no autom\u00e0ticament al constructor de la classe base. En PHP5+, si la classe heretada no t\u00e9 constructor propi, es cridar\u00e0 autom\u00e0ticament al constructor de la classe base (si existeix). No obstant a\u00e7\u00f2, si la classe heretada defineix el seu propi constructor, haur\u00e0s de ser tu el que realitze la crida al constructor de la classe base si ho consideres necessari, utilitzant per a a\u00e7\u00f2 la paraula parent i l'operador de resoluci\u00f3 d'\u00e0mbit. class TV extends Product { public $size ; public $technology ; public function show () { print \"<p>\" . $this -> size . \" polzades</p>\" ; } public function __construct ( $row ) { parent :: __construct ( $row ); $this -> size = $row [ 'size' ]; $this -> technology = $row [ 'technology' ]; } } Ja has vist amb amb anterioritat com s'utilitzava la paraula clau self per a tenir acc\u00e9s a la classe actual. La paraula parent \u00e9s semblant. En utilitzar parent fas refer\u00e8ncia a la classe base de la actual, tal com apareix rere extends . Interf\u00edcies Un interf\u00edcie ( interface ) \u00e9s com una classe buida que solament cont\u00e9 declaracions de m\u00e8todes. Es defineixen utilitzant la paraula interface . Per exemple, abans vam veure que pod\u00edem crear noves classes heretades de Product , com TV o Ordinador . Tamb\u00e9 vam veure que en les subclasses podies redefinir el comportament del m\u00e8tode perqu\u00e8 generara una eixida en HTML diferent per a cada tipus de producte. Si vols assegurar-te que tots els tipus de productes tinguen un m\u00e8tode show , pots crear un interface com el seg\u00fcent. interface IShow { public function show (); } I quan crees les subclasses haur\u00e0s d'indicar amb la paraula implements que han de implementar els m\u00e8todes declarats en aquest interface. class TV extends Product implements IShow { \u2026 public function show () { echo \"<p>\" . $this -> size . \" polzades</p>\" ; } \u2026 } Tots els m\u00e8todes que es declaren en un interface han de ser p\u00fablics. A m\u00e9s de m\u00e8todes, els interf\u00edcies podran contenir constants per\u00f2 no atributs. Un interface \u00e9s com un contracte que la classe ha de complir. En implementar tots els m\u00e8todes declarats en la interf\u00edcie s'assegura la interoperabilitat entre classes. Si saps que una classe implementa un interf\u00edcie determinada saps quins noms tenen els seus m\u00e8todes, quins par\u00e0metres els has de passar i, probablement, podr\u00e0s esbrinar f\u00e0cilment amb quins objectiu han sigut escrits. Per exemple, en la llibreria de PHP est\u00e0 definit la interf\u00edcie countable . Countable { abstract public int count ( void ) } Si crees una classe per a la cistella de la compra en la tenda web, podries implementar aquesta interf\u00edcie per a contar els productes que figuren en la mateixa. Abans vas aprendre que en PHP5 una classe nom\u00e9s pot heretar d'una altra. En PHP5 no existeix l'her\u00e8ncia m\u00faltiple. No obstant a\u00e7\u00f2, s\u00ed \u00e9s possible crear classes que implementen diverses interf\u00edcies, simplement separant la llista d'interf\u00edcies per comes despr\u00e9s de la paraula implements . class TV extends Product implements IShow , Countable { \u2026 } L'\u00fanica restricci\u00f3 \u00e9s que els noms dels m\u00e8todes que s'hagen d'implementar en els diferents interf\u00edcies no coincidisquen. \u00c9s a dir, en el nostre exemple, la interf\u00edcie IShow no podria contenir el m\u00e8tode count , doncs aquest ja est\u00e0 declarat en Countable . En PHP7 tamb\u00e9 es poden crear nous interf\u00edcies heretant d'uns altres ja existents. Es fa de la mateixa forma que amb les classes, utilitzant la paraula extends . Classes abstractes vs interf\u00edcies Un dels dubtes m\u00e9s comuns en POO, \u00e9s quina soluci\u00f3 adoptar en algunes situacions: interf\u00edcies o classes abstractes. Ambdues permeten definir regles per a les classes que els implementen o hereten respectivament. I cap permet instanciar objectes. Les difer\u00e8ncies principals entre ambdues opcions s\u00f3n: En les classes abstractes, els m\u00e8todes poden contenir codi. Si van a existir diverses subclasses amb un comportament com\u00fa, es podria programar en els m\u00e8todes de la classe abstracta. Si s'opta per un interface, caldria repetir el codi en totes les classes que ho implemente. Les classes abstractes poden contenir atributs, i les interf\u00edcies no. No es pot crear una classe que herete de dues classes abstractes, per\u00f2 s\u00ed es pot crear una classe que implemente diverses interf\u00edcies. Per exemple, en la botiga online va a haver-hi dos tipus d'usuaris: clients i empleats. Si necessites crear en la teua aplicaci\u00f3 objectes de tipus Usuari (per exemple, per a manejar de forma conjunta als clients i als empleats), hauries de crear una classe no abstracta amb aqueix nom, de la qual heretarien Client i Empleat. Podeu llegir tamb\u00e9 l'article Clases abastractas e interfaces en PHP class Usuari { ... } class Client extends Usuari { ... } class Empleat extends Usuari { ... } Per\u00f2 si no f\u00f3ra aix\u00ed, hauries de decidir si crees o no Usuari , i si ho faries com una classe abstracta o com una interf\u00edcie. Si per exemple, volgueres definir en un \u00fanic lloc els atributs comuns a Client i a Empleat, hauries de crear una classe abstracta Usuari de la qual hereten. abstract class Usuari { public $dni ; protected $nom ; ... } Per\u00f2 a\u00e7\u00f2 no podries fer-ho si ja tens planificada alguna relaci\u00f3 d'her\u00e8ncia per a una d'aquestes dues classes. Per a finalitzar amb les interf\u00edcies, a la llista de funcions de PHP relacionades amb la POO pots afegir les seg\u00fcents. Funci\u00f3 Exemple Significat get_declared_interf\u00edcies print_r (get_declared_interf\u00edcies()); Retorna un array amb els noms dels interf\u00edcies declarats. interface_exists if (interface_exists('iShow') { \u2026 } Retorna true si existeix l'interface que s'indica, o false en cas contrari. Trets (Traits) Des de la seva versi\u00f3 5.4.0, PHP implementa una metodologia de reutilitzaci\u00f3 de codi anomenada Traits . Els trets (\u00abtraits\u00bb en angl\u00e8s) s\u00f3n un mecanisme de reutilitzaci\u00f3 de codi en llenguatges d'her\u00e8ncia simple, com PHP. L'objectiu d'un tret \u00e9s el de reduir les limitacions pr\u00f2pies de l'her\u00e8ncia simple permetent que els desenvolupadors reutilitzen a voluntat conjunts de m\u00e8todes sobre diverses classes independents i pertanyents a classes jer\u00e0rquiques diferents. Un Trait \u00e9s similar a una classe, per\u00f2 amb l'\u00fanic objectiu d'agrupar funcionalitats molt espec\u00edfiques i d'una manera coherent. No es pot instanciar directament un Trait . \u00c9s per tant un afegit a l'her\u00e8ncia tradicional, i habilita la composici\u00f3 horitzontal de comportaments; \u00e9s a dir, permet combinar membres de classes sense haver d'usar her\u00e8ncia. trait Saludar { function decirHola (){ return \"hola\" ; } } trait Despedir { function decirAdios (){ return \"adi\u00f3s\" ; } } class Comunicacion { use Saludar , Despedir ; } $comunicacion = new Comunicacion ; echo $comunicacion -> decirHola () . \", que tal. \" . $comunicacion -> decirAdios (); En l'exemple anterior la classe Comunicacion necessita reutilitzar els m\u00e8todes Saludar::decirHola() i Despedir::decirAdios() com que en PHP no hi ha her\u00e8ncia m\u00faltiple mitjan\u00e7ant els trait es pot aconseguir reutilitzar-les. Clonaci\u00f3 d'Objectes Per crear una c\u00f2pia d'un objecte s'utilitza la paraula clau clone (que invoca, si fos possible, al m\u00e8tode __clone() de l'objecte). No es pot cridar el m\u00e8tode __clone() d'un objecte directament. $copia_objecte = clone $objecte ; Quan es clona un objecte, PHP7 dur\u00e0 a terme una c\u00f2pia superficial de les propietats de l'objecte. Les propietats que siguen refer\u00e8ncies a altres variables (per exemple, objectes), mantindran les refer\u00e8ncies. Compte: si els atributs s\u00f3n objectes no es clonaran. Classes i m\u00e8todes finals Existeix una forma d'evitar que les classes heretades puguen redefinir el comportament dels m\u00e8todes existents en la superclasse: utilitzar la paraula final . Si en el nostre exemple hagu\u00e9rem fet: class Product { public $code ; public $name ; public $price ; public final function show () { print \"<p>\" . $this -> code . \"</p>\" ; } } En aquest cas el m\u00e8tode show no podria redefinir-se en la classe TV . Tamb\u00e9 es pot declarar una classe utilitzant final . En aquest cas no podran crear-se classes heretades utilitzant-les com a base. final class Product { ... } Bibliografia Jos\u00e9 Luis Comesa\u00f1a. Apuntes de formaci\u00f3n a distancia del m\u00f3dulo \u00abDesarrollo web en entorno servidor\u00bb del CFGS DAW, elaborados y licenciados por el Ministerio de Educaci\u00f3n, Cultura y Deporte. [en l\u00ednia]. 2012 [data de consulta: 13 de setembre de 2019]. Disponible en \\< https://github.com/statickidz/TemarioDAW/tree/master/DWES > Antonio L\u00f3pez. Learning PHP 7. Packt Publishing (29 de marzo de 2016) .","title":"PHP OO Avan\u00e7at"},{"location":"03-phpoo/0302-phpoo-advanced/#ppo-en-php-conceptes-avancants","text":"","title":"PPO en PHP. Conceptes avan\u00e7ants"},{"location":"03-phpoo/0302-phpoo-advanced/#metodes-i-propietats-estatiques","text":"Els m\u00e8todes i propietats est\u00e0tics (o de classe) s\u00f3n aquells accessibles directament des de la classe, sense necessitat d'inst\u00e0nciar-la. Es declaren amb la paraula reservada static i s'accedeix a ells amb l'operador d'\u00e0mbit :: . Si volem accedir a un m\u00e8tode est\u00e0tic, es posa davant el nom de la classe: Product :: newProduct () . Si des d'un m\u00e8tode volem accedir a una propietat est\u00e0tica de la mateixa classe, s'utilitza la referencia self : self::$numberOfProducts class Product { const IVA = 0.23 ; private static $numberOfProducts = 0 ; public static function newProducts () { self :: $numberOfProducts ++ ; } } Product :: newProduct (); $impuesto = Producto :: IVA ; Tamb\u00e9 podems tindre classes normals que tinguen alguna propietat est\u00e0tica: class Product { const IVA = 0.23 ; private static int $numberOfProducts = 0 ; private string $code ; public function __construct ( string $code ) { self :: $numOfProducts ++ ; $this -> code = $code ; } public function getSummaryLine () : string { return \"El producte \" . $this -> codigo . \" \u00e9s el n\u00famero \" . self :: $numOfProducts ; } } $prod1 = new Product ( \"PS5\" ); $prod2 = new Product ( \"XBOX Series X\" ); $prod3 = new Product ( \"Nintendo Switch\" ); echo $prod3 -> getSummaryLine ();","title":"M\u00e8todes i propietats est\u00e0tiques"},{"location":"03-phpoo/0302-phpoo-advanced/#classes-abstractes","text":"Les classes abstractes s\u00f3n classes que no es poden instanciar, per la qual cosa actuaran de superclasse i ser\u00e0 obligatori crear subclasses per a fer \u00fas d'ella. \u00c9s a dir, una classe amb el modificador abstract no pot tenir objectes que la instancien, per\u00f2 s\u00ed podr\u00e0 utilitzar-se de classe base i les seues subclasses s\u00ed podran utilitzar-se per a instanciar objectes. abstract class Product { ... }","title":"Classes abstractes"},{"location":"03-phpoo/0302-phpoo-advanced/#metodes-abstractes","text":"Un m\u00e8tode en el qual s'indique abstract , ha de ser redefinit obligat\u00f2riament per les subclasses, i no podr\u00e0 contenir codi. class Product { \u2026 abstract public function show (); } Anem a fer una petita modificaci\u00f3 en la nostra classe Product . Per a facilitar la creaci\u00f3 de nous objectes, crearem un constructor al que se li passar\u00e0 un array amb els valors dels atributs del nou producte. class Product { public $code ; public $name ; public $shortName ; public $price ; public function show () { echo \"<p>\" . $this -> code . \"</p>\" ; } public function __construct ( $row ) { $this -> code = $row [ 'code' ]; $this -> name = $row [ 'name' ]; $this -> shortName = $row [ 'short_name' ]; $this -> price = $row [ 'price' ]; } } Questi\u00f3 Qu\u00e8 passa ara amb la classe TV , qu\u00e8 hereta de Product? Quan crees un nou objecte d'aqueixa classe, es cridar\u00e0 al constructor de Product? Pots crear un nou constructor espec\u00edfic perqu\u00e8 redefinisca el comportament de la classe base? Comen\u00e7ant per aquesta \u00faltima pregunta, \u00f2bviament pots definir un nou constructor per a les classes heretades que redefinisquen el comportament del que existeix en la classe base, tal com faries amb qualsevol altre m\u00e8tode. I depenent de si programes o no el constructor en la classe heretada, es cridar\u00e0 o no autom\u00e0ticament al constructor de la classe base. En PHP5+, si la classe heretada no t\u00e9 constructor propi, es cridar\u00e0 autom\u00e0ticament al constructor de la classe base (si existeix). No obstant a\u00e7\u00f2, si la classe heretada defineix el seu propi constructor, haur\u00e0s de ser tu el que realitze la crida al constructor de la classe base si ho consideres necessari, utilitzant per a a\u00e7\u00f2 la paraula parent i l'operador de resoluci\u00f3 d'\u00e0mbit. class TV extends Product { public $size ; public $technology ; public function show () { print \"<p>\" . $this -> size . \" polzades</p>\" ; } public function __construct ( $row ) { parent :: __construct ( $row ); $this -> size = $row [ 'size' ]; $this -> technology = $row [ 'technology' ]; } } Ja has vist amb amb anterioritat com s'utilitzava la paraula clau self per a tenir acc\u00e9s a la classe actual. La paraula parent \u00e9s semblant. En utilitzar parent fas refer\u00e8ncia a la classe base de la actual, tal com apareix rere extends .","title":"M\u00e8todes abstractes"},{"location":"03-phpoo/0302-phpoo-advanced/#interficies","text":"Un interf\u00edcie ( interface ) \u00e9s com una classe buida que solament cont\u00e9 declaracions de m\u00e8todes. Es defineixen utilitzant la paraula interface . Per exemple, abans vam veure que pod\u00edem crear noves classes heretades de Product , com TV o Ordinador . Tamb\u00e9 vam veure que en les subclasses podies redefinir el comportament del m\u00e8tode perqu\u00e8 generara una eixida en HTML diferent per a cada tipus de producte. Si vols assegurar-te que tots els tipus de productes tinguen un m\u00e8tode show , pots crear un interface com el seg\u00fcent. interface IShow { public function show (); } I quan crees les subclasses haur\u00e0s d'indicar amb la paraula implements que han de implementar els m\u00e8todes declarats en aquest interface. class TV extends Product implements IShow { \u2026 public function show () { echo \"<p>\" . $this -> size . \" polzades</p>\" ; } \u2026 } Tots els m\u00e8todes que es declaren en un interface han de ser p\u00fablics. A m\u00e9s de m\u00e8todes, els interf\u00edcies podran contenir constants per\u00f2 no atributs. Un interface \u00e9s com un contracte que la classe ha de complir. En implementar tots els m\u00e8todes declarats en la interf\u00edcie s'assegura la interoperabilitat entre classes. Si saps que una classe implementa un interf\u00edcie determinada saps quins noms tenen els seus m\u00e8todes, quins par\u00e0metres els has de passar i, probablement, podr\u00e0s esbrinar f\u00e0cilment amb quins objectiu han sigut escrits. Per exemple, en la llibreria de PHP est\u00e0 definit la interf\u00edcie countable . Countable { abstract public int count ( void ) } Si crees una classe per a la cistella de la compra en la tenda web, podries implementar aquesta interf\u00edcie per a contar els productes que figuren en la mateixa. Abans vas aprendre que en PHP5 una classe nom\u00e9s pot heretar d'una altra. En PHP5 no existeix l'her\u00e8ncia m\u00faltiple. No obstant a\u00e7\u00f2, s\u00ed \u00e9s possible crear classes que implementen diverses interf\u00edcies, simplement separant la llista d'interf\u00edcies per comes despr\u00e9s de la paraula implements . class TV extends Product implements IShow , Countable { \u2026 } L'\u00fanica restricci\u00f3 \u00e9s que els noms dels m\u00e8todes que s'hagen d'implementar en els diferents interf\u00edcies no coincidisquen. \u00c9s a dir, en el nostre exemple, la interf\u00edcie IShow no podria contenir el m\u00e8tode count , doncs aquest ja est\u00e0 declarat en Countable . En PHP7 tamb\u00e9 es poden crear nous interf\u00edcies heretant d'uns altres ja existents. Es fa de la mateixa forma que amb les classes, utilitzant la paraula extends .","title":"Interf\u00edcies"},{"location":"03-phpoo/0302-phpoo-advanced/#classes-abstractes-vs-interficies","text":"Un dels dubtes m\u00e9s comuns en POO, \u00e9s quina soluci\u00f3 adoptar en algunes situacions: interf\u00edcies o classes abstractes. Ambdues permeten definir regles per a les classes que els implementen o hereten respectivament. I cap permet instanciar objectes. Les difer\u00e8ncies principals entre ambdues opcions s\u00f3n: En les classes abstractes, els m\u00e8todes poden contenir codi. Si van a existir diverses subclasses amb un comportament com\u00fa, es podria programar en els m\u00e8todes de la classe abstracta. Si s'opta per un interface, caldria repetir el codi en totes les classes que ho implemente. Les classes abstractes poden contenir atributs, i les interf\u00edcies no. No es pot crear una classe que herete de dues classes abstractes, per\u00f2 s\u00ed es pot crear una classe que implemente diverses interf\u00edcies. Per exemple, en la botiga online va a haver-hi dos tipus d'usuaris: clients i empleats. Si necessites crear en la teua aplicaci\u00f3 objectes de tipus Usuari (per exemple, per a manejar de forma conjunta als clients i als empleats), hauries de crear una classe no abstracta amb aqueix nom, de la qual heretarien Client i Empleat. Podeu llegir tamb\u00e9 l'article Clases abastractas e interfaces en PHP class Usuari { ... } class Client extends Usuari { ... } class Empleat extends Usuari { ... } Per\u00f2 si no f\u00f3ra aix\u00ed, hauries de decidir si crees o no Usuari , i si ho faries com una classe abstracta o com una interf\u00edcie. Si per exemple, volgueres definir en un \u00fanic lloc els atributs comuns a Client i a Empleat, hauries de crear una classe abstracta Usuari de la qual hereten. abstract class Usuari { public $dni ; protected $nom ; ... } Per\u00f2 a\u00e7\u00f2 no podries fer-ho si ja tens planificada alguna relaci\u00f3 d'her\u00e8ncia per a una d'aquestes dues classes. Per a finalitzar amb les interf\u00edcies, a la llista de funcions de PHP relacionades amb la POO pots afegir les seg\u00fcents. Funci\u00f3 Exemple Significat get_declared_interf\u00edcies print_r (get_declared_interf\u00edcies()); Retorna un array amb els noms dels interf\u00edcies declarats. interface_exists if (interface_exists('iShow') { \u2026 } Retorna true si existeix l'interface que s'indica, o false en cas contrari.","title":"Classes abstractes vs interf\u00edcies"},{"location":"03-phpoo/0302-phpoo-advanced/#trets-traits","text":"Des de la seva versi\u00f3 5.4.0, PHP implementa una metodologia de reutilitzaci\u00f3 de codi anomenada Traits . Els trets (\u00abtraits\u00bb en angl\u00e8s) s\u00f3n un mecanisme de reutilitzaci\u00f3 de codi en llenguatges d'her\u00e8ncia simple, com PHP. L'objectiu d'un tret \u00e9s el de reduir les limitacions pr\u00f2pies de l'her\u00e8ncia simple permetent que els desenvolupadors reutilitzen a voluntat conjunts de m\u00e8todes sobre diverses classes independents i pertanyents a classes jer\u00e0rquiques diferents. Un Trait \u00e9s similar a una classe, per\u00f2 amb l'\u00fanic objectiu d'agrupar funcionalitats molt espec\u00edfiques i d'una manera coherent. No es pot instanciar directament un Trait . \u00c9s per tant un afegit a l'her\u00e8ncia tradicional, i habilita la composici\u00f3 horitzontal de comportaments; \u00e9s a dir, permet combinar membres de classes sense haver d'usar her\u00e8ncia. trait Saludar { function decirHola (){ return \"hola\" ; } } trait Despedir { function decirAdios (){ return \"adi\u00f3s\" ; } } class Comunicacion { use Saludar , Despedir ; } $comunicacion = new Comunicacion ; echo $comunicacion -> decirHola () . \", que tal. \" . $comunicacion -> decirAdios (); En l'exemple anterior la classe Comunicacion necessita reutilitzar els m\u00e8todes Saludar::decirHola() i Despedir::decirAdios() com que en PHP no hi ha her\u00e8ncia m\u00faltiple mitjan\u00e7ant els trait es pot aconseguir reutilitzar-les.","title":"Trets (Traits)"},{"location":"03-phpoo/0302-phpoo-advanced/#clonacio-dobjectes","text":"Per crear una c\u00f2pia d'un objecte s'utilitza la paraula clau clone (que invoca, si fos possible, al m\u00e8tode __clone() de l'objecte). No es pot cridar el m\u00e8tode __clone() d'un objecte directament. $copia_objecte = clone $objecte ; Quan es clona un objecte, PHP7 dur\u00e0 a terme una c\u00f2pia superficial de les propietats de l'objecte. Les propietats que siguen refer\u00e8ncies a altres variables (per exemple, objectes), mantindran les refer\u00e8ncies. Compte: si els atributs s\u00f3n objectes no es clonaran.","title":"Clonaci\u00f3 d'Objectes"},{"location":"03-phpoo/0302-phpoo-advanced/#classes-i-metodes-finals","text":"Existeix una forma d'evitar que les classes heretades puguen redefinir el comportament dels m\u00e8todes existents en la superclasse: utilitzar la paraula final . Si en el nostre exemple hagu\u00e9rem fet: class Product { public $code ; public $name ; public $price ; public final function show () { print \"<p>\" . $this -> code . \"</p>\" ; } } En aquest cas el m\u00e8tode show no podria redefinir-se en la classe TV . Tamb\u00e9 es pot declarar una classe utilitzant final . En aquest cas no podran crear-se classes heretades utilitzant-les com a base. final class Product { ... }","title":"Classes i m\u00e8todes finals"},{"location":"03-phpoo/0302-phpoo-advanced/#bibliografia","text":"Jos\u00e9 Luis Comesa\u00f1a. Apuntes de formaci\u00f3n a distancia del m\u00f3dulo \u00abDesarrollo web en entorno servidor\u00bb del CFGS DAW, elaborados y licenciados por el Ministerio de Educaci\u00f3n, Cultura y Deporte. [en l\u00ednia]. 2012 [data de consulta: 13 de setembre de 2019]. Disponible en \\< https://github.com/statickidz/TemarioDAW/tree/master/DWES > Antonio L\u00f3pez. Learning PHP 7. Packt Publishing (29 de marzo de 2016) .","title":"Bibliografia"},{"location":"03-phpoo/0303-errorhandling/","text":"Gesti\u00f3 d'errors i excepcions De ben segur que a mesura que has anat resolent exercicis o simplement provant codi, t'has trobat amb errors de programaci\u00f3. Alguns s\u00f3n reconeguts per l'entorn de desenvolupament i pots corregir-los abans d'executar. Altres apareixen al navegador en forma de missatge d'error a l'executar l' script . A difer\u00e8ncia d'altres llenguatges de programaci\u00f3 que tenen una gesti\u00f3 d'excepcions m\u00e9s completa PHP mant\u00e9 una gesti\u00f3 d'excepcions lleugera ja que distingeix entre errors i excepcions. Aix\u00ed, mentre no es produisca una excepci\u00f3 o un error fatal l'execuci\u00f3 del programa continuar\u00e0. No obstant aix\u00f2, en PHP 7 canvia la majoria dels errors notificats per PHP. En lloc de notificar errors a trav\u00e9s de l'mecanisme de notificaci\u00f3 d'errors tradicional de PHP 5, la majoria dels errors ara s\u00f3n notificats llan\u00e7ant excepcions Error . A l'igual que les excepcions normals, les excepcions Error es propagaran fins a arribar al primer bloc catch coincident. Si no hi ha blocs coincidents, ser\u00e0 invocat qualsevol gestor d'excepcions predeterminat definit amb set_exception_handler () , i si no hi hagu\u00e9s cap gestor d'excepcions predeterminat, l'excepci\u00f3 ser\u00e0 convertida en un error fatal i ser\u00e0 gestionada com un error tradicional. A causa de que la jerarquia d' Error no hereta de Exception , el codi que empre blocs catch (Exception $e) {...} per gestionar excepcions no capturades en PHP 5 trobareu que aquests Errors no s\u00f3n capturats per aquests blocs. Es requereix, per tant, un bloc catch (Error $e) {...} o un gestor set_exception_handler() . Errors PHP defineix una classificaci\u00f3 dels errors que es poden produir en l'execuci\u00f3 d'un programa i ofereix m\u00e8todes per ajustar el tractament dels mateixos. Per fer refer\u00e8ncia a cada un dels nivells d'error, PHP defineix una s\u00e8rie de constants. Cada nivell s'identifica per una constant. Per exemple, la constant E_NOTICE fa refer\u00e8ncia a avisos que poden indicar un error en executar el programa, i la constant E_ERROR engloba errors fatals que provoquen que s'interrompa for\u00e7osament l'execuci\u00f3. La llista completa de constants la pots consultar al manual de PHP, on tamb\u00e9 es descriu el tipus d'errors que representa : http://es.php.net/manual/es/errorfunc.constants.php Canviar el comportament de PHP La configuraci\u00f3 inicial de com va a tractar-se cada error segons el seu nivell es realitza en php.ini el fitxer de configuraci\u00f3 de PHP. Entre els principals par\u00e0metres que pots ajustar estan: error_reporting . Indica quins tipus d'errors es notificaran. El seu valor es forma utilitzant els operadors a nivell de bit per combinar les constants anteriors. El seu valor per defecte \u00e9s E_ALL & ~ E_NOTICE que indica que es notifiquin tots els errors ( E_ALL ) excepte els avisos a temps d'execuci\u00f3 ( E_NOTICE ). display_errors . En el seu valor per defecte ( On ), fa que els missatges s'envien a la sortida est\u00e0ndard (i per tant es mostrin al navegador). S'ha de desactivar ( Off ) en els servidors que s'usen per a producci\u00f3. Hi ha altres par\u00e0metres que podem utilitzar en php.ini per ajustar el comportament de PHP quan es produeix un error. http://es.php.net/manual/es/errorfunc.configuration.php Des codi, pots fer servir la funci\u00f3 error_reporting amb les constants anteriors per establir el nivell de notificaci\u00f3 en un moment determinat. Per exemple, si en algun lloc del teu codi figura una divisi\u00f3 en la qual hi haja la possibilitat que el divisor siga zero, quan aix\u00f2 passe obtindr\u00e0s un missatge d'error al navegador. Per evitar-ho, pots desactivar la notificaci\u00f3 de errors de nivell E_WARNING abans de la divisi\u00f3 i restaurar al seu valor normal a continuaci\u00f3: error_reporting ( E_ALL & ~ E_NOTICE & ~ E_WARNING ); $resultat = $dividend / $divisor ; error_reporting ( E_ALL & ~ E_NOTICE ); Notificaci\u00f3 d'error en entorns de producci\u00f3 ; PHP comes packaged with two INI files. One that is recommended to be used ; in production environments and one that is recommended to be used in ; development environments. ; php.ini-production contains settings which hold security, performance and ; best practices at its core. But please be aware, these settings may break ; compatibility with older or less security conscience applications. We ; recommending using the production ini in production and testing environments. ; display_errors ; Default Value: On ; Development Value: On ; Production Value: Off ; display_startup_errors ; Default Value: Off ; Development Value: On ; Production Value: Off ; error_reporting ; Default Value: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED ; Development Value: E_ALL ; Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT ; html_errors ; Default Value: On ; Development Value: On ; Production value: On ; log_errors ; Default Value: Off ; Development Value: On ; Production Value: On Gesti\u00f3 global dels errors En utilitzar la funci\u00f3 error_reporting nom\u00e9s controles quin tipus d'errors va a notificar PHP. A vegades pot ser suficient, per\u00f2 per obtenir m\u00e9s control sobre el proc\u00e9s existeix tamb\u00e9 la possibilitat de gestionar de forma personalitzada els errors. \u00c9s a dir, pots programar una funci\u00f3 perqu\u00e8 siga la que executa PHP cada vegada que es produeix un error. El nom d'aquesta funci\u00f3 s'indica utilitzant set_error_handler i ha de tenir com a m\u00ednim dos par\u00e0metres obligatoris (el nivell de l'error i el missatge descriptiu) i fins tres opcionals amb informaci\u00f3 addicional sobre el error (el nom del fitxer en qu\u00e8 es produeix, el nombre de l\u00ednia, i un bolcat de l'estat de les variables en aquest moment). set_error_handler ( \"miGestorDeErrores\" ); $resultat = $dividend / $divisor ; restore_error_handler (); function miGestorDeErrores ( $nivell , $missatge ) { switch ( $nivell ) { case E_WARNING : echo \"Error de tipus WARNING: $missatge . <br />\" ; break ; default : echo \"Error de tipus no especificat: $ missatge. <br />\" ; } } La funci\u00f3 restore_error_handler restaura el gestor d'errors original de PHP (m\u00e9s concretament, el que s'estava fent servir abans de la crida a set_error_handler ). ErrorException Gr\u00e0cies a la combinaci\u00f3 de la classe ErrorException i el m\u00e8tode set_error_handler podem convertir f\u00e0cilment els errors en excepcions de tipus ErrorException : <? php function exception_error_handler ( $severidad , $mensaje , $fichero , $l\u00ednea ) { if ( ! ( error_reporting () & $severidad )) { // Este c\u00f3digo de error no est\u00e1 incluido en error_reporting return ; } throw new ErrorException ( $mensaje , 0 , $severidad , $fichero , $l\u00ednea ); } set_error_handler ( \"exception_error_handler\" ); /* Desencadenar la excepci\u00f3n */ strpos (); ?> Excepcions A partir de la versi\u00f3 5 es va introduir en PHP un model d'excepcions similar a l'existent en altres llenguatges de programaci\u00f3: El codi susceptible de produir algun error s'introdueix en un bloc try . Quan es produeix algun error, es llan\u00e7a una excepci\u00f3 utilitzant la instrucci\u00f3 throw . Despr\u00e9s del bloc try ha d'haver com a m\u00ednim un bloc catch encarregat de processar el error. Si un cop acabat el bloc try no s'ha llan\u00e7at cap excepci\u00f3, es continua amb la execuci\u00f3 en la l\u00ednia seg\u00fcent al bloc o blocs catch . Per exemple, per llan\u00e7ar una excepci\u00f3 quan es produeix una divisi\u00f3 per zero podries fer: try { if ( $divisor == 0 ) throw new Exception ( \"Divisi\u00f3 per zero.\" ); $resultat = $dividend / $divisor ; } catch ( Exception $e ) { echo \"S'ha produ\u00eft el seg\u00fcent error:\" . $ e -> getMessage (); } PHP ofereix una classe base Exception per utilitzar com a gestor d'excepcions. Per llan\u00e7ar una excepci\u00f3 no cal indicar cap par\u00e0metre, encara que de forma opcional es pot passar un missatge d'error (com en l'exemple anterior) i tamb\u00e9 un codi d'error. Entre els m\u00e8todes que podeu utilitzar amb els objectes de la classe Exception estan: getMessage . Retorna el missatge, en cas que s'hagi posat algun. getCode . Retorna el codi d'error si existeix. Les funcions internes de PHP i moltes extensions com MySQLi usen el sistema d'errors vist anteriorment. Nom\u00e9s les extensions m\u00e9s modernes orientades a objectes, com \u00e9s el cas de PDO, utilitzen aquest model d'excepcions. En aquest cas, el m\u00e9s com\u00fa \u00e9s que l'extensi\u00f3 definisca els seues propis controladors d'errors heretant de la classe Exception . Classe ErrorException Com hem dit abans, utilitzant la classe ErrorException \u00e9s possible traduir els errors a excepcions. http://es.php.net/manual/es/class.errorexception.php Concretament, la classe PDO permet definir la f\u00f3rmula que far\u00e0 servir quan es produeixi un error, utilitzant l'atribut PDO::ATTR_ERRMODE . Les possibilitats s\u00f3n: PDO::ERRMODE_SILENT . No es fa res quan ocorre un error. \u00c9s el comportament per defecte. PDO::ERRMODE_WARNING . Genera un error de tipus E_WARNING quan es produeix un error. PDO::ERRMODE_EXCEPTION . Quan es produeix un error llan\u00e7a una excepci\u00f3 utilitzant el gestor propi PDOException. \u00c9s a dir, que si vols utilitzar excepcions amb l'extensi\u00f3 PDO, has de configurar la connexi\u00f3 fent: $dwes -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); Per exemple, el seg\u00fcent codi: $dwes = new PDO ( \"mysql:host=localhost;dbname=dwes\" , \"dwes\" , \"abc123.\" ); $dwes -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); try { $sql = \"SELECT * FROM stox\" ; $result = $dwes -> query ( $sql ); ... } catch ( PDOException $p ) { echo \"Error\" . $p -> getMessage () . \"<br />\" ; } Captura l'excepci\u00f3 que llan\u00e7a PDO a causa de que la taula no existeix. El bloc catch mostra el seg\u00fcent missatge: Error SQLSTATE [ 42 S02 ] : Base table or view not found : 1146 Table 'dwes.stox' does not exist El bloc finally En PHP 5.5 i posterior, es pot utilitzar un bloc finally despr\u00e9s o en lloc dels blocs catch . El codi de dins el bloc finally sempre s'executar\u00e0 despr\u00e9s dels blocs try i catch , independentment que s'haja llan\u00e7at una excepci\u00f3 o no, i abans que l'execuci\u00f3 normal continue. Com que el contingut del bloc finally sempre s'executa \u00e9s ideal per a alliberar recursos en cas d'error, com una connexi\u00f3 a base de dades o a la connexi\u00f3 a un servei proporcionats per tercers. M\u00faltiples catch \u00c9s possible afegir m\u00e9s d'un cath de la seg\u00fcent manera: try { ... } catch ( FooException e ) { ... } catch ( BarException e ) { ... } catch ( Exception e ) { ... } A partir de PHP 7.1 tamb\u00e9 \u00e9s possible fer-ho aix\u00ed: try { ... } catch ( FooException | BarException | Exception e ) { ... } Ampliant les excepcions \u00c9s possible crear excepcions personalitzades heretant de la classe Exception . class NegativeIdException extends Exception { public function __construct ( $message = null ) { $this -> message = $message ?: 'ID Negatiu.' ; parent :: __construct ( $message ); } } Despr\u00e9s l'utilitzarem aix\u00ed: try { $post = new Post ( - 1 , \"Hola m\u00f3n\" , \"Aquest \u00e9s el primer post del blog\" , new DateTime (), \"Vicent\" ); } catch ( NegativeIdException $e ) { echo \"No es pot posar un ID negatiu\" ; } catch ( Exception $e ) { echo \"Excepci\u00f3 desconeguda\" . $e -> getMessage (); } Interf\u00edcie Throwable Throwable \u00e9s la interf\u00edcie base per a qualsevol objecte que puga ser llan\u00e7at mitjan\u00e7ant una sent\u00e8ncia throw en PHP 7, incloent Error i Exception . Les classes de PHP no poden implementar la interf\u00edcie Throwable directament, de manera que han d'estendre en el seu lloc Exception . Aquesta nova interf\u00edcie t\u00e9 per objectiu unificar les dos tipologies d'exceptions. Tant Exception com Error implementen la interf\u00edcie Throwable . Gesti\u00f3 d'errors i excepcions Modifica les classes Input creades anteriorment perqu\u00e8 en cas que el atribut $name no tinga valor llance una excepci\u00f3 amb el missatge \"L'atribut name no pot estar buit\". Captura l'excepci\u00f3. Crea una excepci\u00f3 personalitzada ValuesNotFoundException en cas que el par\u00e0metre $values del control InputRadio estiga buit. Captura l'excepci\u00f3. Crea una excepci\u00f3 personalitzada MovieNotFound que es llance en cas que l'identificador $id sol\u00b7licitat no trobe cap pel\u00b7licula en single-page.php Captura l'excepci\u00f3. Exercicis pr\u00e0ctics Activitat: Pel\u00b7l\u00edcules Objectius Els objectius de l'activitat s\u00f3n els seg\u00fcents: * Aprendre a crear classes * Instanciar objectes * Accedir a les seues propietats. Enunciat Crea la classe Movie en la carpeta src del projecte ( cal usar tipat esctricte ). Els atributs seran: id (enter) title (string) tagline (string) releaseDate (DateTime) starsRating (float) poster (string) Crea els setters i els getters . La constant de classe POSTER_PATH contindr\u00e0 la ruta al directori dels posters. Modifica el projecte de forma que $movies siga un array d\u2019objectes Movie . Modifica'l tamb\u00e9 perqu\u00e8 les p\u00e0gines index.php i movies.php funcionen correctament Activitat: Pel\u00b7licules II Objectius Els objectius de l'activitat s\u00f3n els seg\u00fcents: * Repassar el concepte de par\u00e0metres per refer\u00e8ncia. * Clonar objectes. Enunciat Crea una pel\u00b7l\u00edcula copiant-la (=) de la darrera pel\u00b7l\u00edcula de l'array. Comprova en movies.php que s'ha insertat i que tenen les mateixes dades. Ara canvia el t\u00edtol de la c\u00f2pia afegint-li \"(C\u00f2pia)\" al t\u00edtol que ten\u00eda. Per exemple si el t\u00edtol era \"Ava\" ara ser\u00e0 \"Ava (c\u00f2pia)\". Comprova en movies.php que s'ha insertat i que \u00e9s diferent a l'original. Tenen les mateixes dades? Per qu\u00e8? Repassa els apunts i soluciona-ho. Activitat: Pel\u00b7l\u00edcules III Objectius Els objectius de l'activitat s\u00f3n els seg\u00fcents: * Seguir construint el projecte. * Treballar amb objectes. Enunciat El t\u00edtol de la pel\u00b7licula ser\u00e0 un enlla\u00e7 a single-page.php?id=[atribut id de la pel\u00b7l\u00edcula] . La p\u00e0gina single-page.php mostrar\u00e0 les dades de la pel\u00b7licula que tinga l' id que s'ha passat pel querystring. Post usar array_filter per trobar l'objecte que t\u00e9 l'id indicat. Activitat 4.2: Her\u00e8ncia Objectius Els objectius de l'activitat s\u00f3n els seg\u00fcents: * Treballar l'her\u00e8ncia. * Treballar amb classes abstractes Enunciat Anem a crear una s\u00e8rie de classes per mostrar camps de formulari. Pots incloure'ls al projecte en src/utils o crear-les a banda en la carpeta activitat4 en l'arrel del projecte. Crea la classe abstracta Input que tindr\u00e0 les propietats: * title , ser\u00e0 el text que apareix com a etiqueta de camp. * name , ser\u00e0 el atribut name del camp. * value , ser\u00e0 el valor a mostrar si hi ha. * type , ser\u00e0 el tipus de camp, el valor per defecte ser\u00e0 'text' i es modificar\u00e0 internament en les subclasses ( $this->type=?? ). El constructor ser\u00e0 public function __construct ( string $title , string $name , string $value ); Tindr\u00e0 un m\u00e8tode generateHTML() que no tindr\u00e0 par\u00e0metres i tornar\u00e0 un string amb l'HTML que representa el camp. Per exemple: < label > Nom </ label > < input type = \"text\" value = \"\" name = \"nom\" /> A continuaci\u00f3 crea les classes InputText , InputEmail ( type=email ), InputTel ( type=tel ), que hereten de la classe abstracta i usa-les per a crear un formulari en els camps * Nom * Cogonms * Correu electr\u00f2nic * Tel\u00e8fon fixe * Tel\u00e8fon m\u00f2bil. * Enviar (pots implementar la classe InputSubmit o escriure'l directament en HTML. La p\u00e0gina de resposta mostrar\u00e0 els valors enviats pel formulari. Activitat 4.3: Her\u00e8ncia (i 2) {:.no_toc .nocount} Objectius {:.no_toc .nocount} Els objectius de l'activitat s\u00f3n els seg\u00fcents: * Treballar l'her\u00e8ncia. * Treballar amb classes abstractes * Treballar el polimorfisme Enunciat {:.no_toc .nocount} Anem a crear una s\u00e8rie de classes per mostrar camps de formulari. Pots incloure'ls al projecte en src/utils o crear-les a banda en la carpeta activitat4 en l'arrel del projecte. Crea les classes InputRange i InputRadio que heretaran de la classe abstracta per\u00f2 que tindran el constructor i els atributs diferents. Afig als camps ja existents els camps: Edat (de tipus range, 40 ser\u00e0 el valor per defecte) Sexe (de tipus radio amb el sexe) Crea la classe Form que representar\u00e0 un formulari HTML. El constructor ser\u00e0 public function __construct ( string $action , string $method = 'POST' ); Tindr\u00e0 una propietat p\u00fablica $elements que ser\u00e0 un array d'objectes Input . Un m\u00e8tode Form::add(Input $input) que afegir\u00e0 elements a l'array. Tindr\u00e0 tamb\u00e9 altres dos m\u00e8todes Form::generateStartHTML() que generar\u00e0 l'etiqueta <form...> i Form::generaEndHTML() que generar\u00e0 l'etiqueta de tancament </form> Crea un objecte Form i afig mitjan\u00e7ant el m\u00e8tode add els elements ja existents i mostra el formulari. La p\u00e0gina de resposta mostrar\u00e0 els valors enviats pel formulari. Activitat 4.4: Interf\u00edcie IControl Objectius Els objectius de l'activitat s\u00f3n els seg\u00fcents: * Crear interf\u00edcies. * Treballar amb classes abstractes * Treballar el polimorfisme Enunciat {:.no_toc .nocount} Crea una nova classe Textarea semblant a la classe Input que generar\u00e0 un camp textarea de formulari. Podrem afegir objectes Textarea mitjan\u00e7ant el m\u00e8tode Form::add() ?; Crea la interf\u00edcie IControl : interface IControl { public function render () : string ; } Totes les classes creades implementaran eixa interf\u00edcie. Modifica Form::add() perqu\u00e8 admeta par\u00e0metres de tipus IControl . Implementa en la classe Form la interf\u00edcie Countable . Despr\u00e9s mitjan\u00e7ant la funci\u00f3 count() mostra el n\u00famero total d'elements del formulari. Bibliografia {: .no_toc } Jos\u00e9 Luis Comesa\u00f1a. Apuntes de formaci\u00f3n a distancia del m\u00f3dulo \u00abDesarrollo web en entorno servidor\u00bb del CFGS DAW, elaborados y licenciados por el Ministerio de Educaci\u00f3n, Cultura y Deporte. [en l\u00ednia]. 2012 [data de consulta: 13 de setembre de 2019]. Disponible en \\< https://github.com/statickidz/TemarioDAW/tree/master/DWES > Antonio L\u00f3pez. Learning PHP 7. Packt Publishing (29 de marzo de 2016) .","title":"Erros i excepcions"},{"location":"03-phpoo/0303-errorhandling/#gestio-derrors-i-excepcions","text":"De ben segur que a mesura que has anat resolent exercicis o simplement provant codi, t'has trobat amb errors de programaci\u00f3. Alguns s\u00f3n reconeguts per l'entorn de desenvolupament i pots corregir-los abans d'executar. Altres apareixen al navegador en forma de missatge d'error a l'executar l' script . A difer\u00e8ncia d'altres llenguatges de programaci\u00f3 que tenen una gesti\u00f3 d'excepcions m\u00e9s completa PHP mant\u00e9 una gesti\u00f3 d'excepcions lleugera ja que distingeix entre errors i excepcions. Aix\u00ed, mentre no es produisca una excepci\u00f3 o un error fatal l'execuci\u00f3 del programa continuar\u00e0. No obstant aix\u00f2, en PHP 7 canvia la majoria dels errors notificats per PHP. En lloc de notificar errors a trav\u00e9s de l'mecanisme de notificaci\u00f3 d'errors tradicional de PHP 5, la majoria dels errors ara s\u00f3n notificats llan\u00e7ant excepcions Error . A l'igual que les excepcions normals, les excepcions Error es propagaran fins a arribar al primer bloc catch coincident. Si no hi ha blocs coincidents, ser\u00e0 invocat qualsevol gestor d'excepcions predeterminat definit amb set_exception_handler () , i si no hi hagu\u00e9s cap gestor d'excepcions predeterminat, l'excepci\u00f3 ser\u00e0 convertida en un error fatal i ser\u00e0 gestionada com un error tradicional. A causa de que la jerarquia d' Error no hereta de Exception , el codi que empre blocs catch (Exception $e) {...} per gestionar excepcions no capturades en PHP 5 trobareu que aquests Errors no s\u00f3n capturats per aquests blocs. Es requereix, per tant, un bloc catch (Error $e) {...} o un gestor set_exception_handler() .","title":"Gesti\u00f3 d'errors i excepcions"},{"location":"03-phpoo/0303-errorhandling/#errors","text":"PHP defineix una classificaci\u00f3 dels errors que es poden produir en l'execuci\u00f3 d'un programa i ofereix m\u00e8todes per ajustar el tractament dels mateixos. Per fer refer\u00e8ncia a cada un dels nivells d'error, PHP defineix una s\u00e8rie de constants. Cada nivell s'identifica per una constant. Per exemple, la constant E_NOTICE fa refer\u00e8ncia a avisos que poden indicar un error en executar el programa, i la constant E_ERROR engloba errors fatals que provoquen que s'interrompa for\u00e7osament l'execuci\u00f3. La llista completa de constants la pots consultar al manual de PHP, on tamb\u00e9 es descriu el tipus d'errors que representa : http://es.php.net/manual/es/errorfunc.constants.php","title":"Errors"},{"location":"03-phpoo/0303-errorhandling/#canviar-el-comportament-de-php","text":"La configuraci\u00f3 inicial de com va a tractar-se cada error segons el seu nivell es realitza en php.ini el fitxer de configuraci\u00f3 de PHP. Entre els principals par\u00e0metres que pots ajustar estan: error_reporting . Indica quins tipus d'errors es notificaran. El seu valor es forma utilitzant els operadors a nivell de bit per combinar les constants anteriors. El seu valor per defecte \u00e9s E_ALL & ~ E_NOTICE que indica que es notifiquin tots els errors ( E_ALL ) excepte els avisos a temps d'execuci\u00f3 ( E_NOTICE ). display_errors . En el seu valor per defecte ( On ), fa que els missatges s'envien a la sortida est\u00e0ndard (i per tant es mostrin al navegador). S'ha de desactivar ( Off ) en els servidors que s'usen per a producci\u00f3. Hi ha altres par\u00e0metres que podem utilitzar en php.ini per ajustar el comportament de PHP quan es produeix un error. http://es.php.net/manual/es/errorfunc.configuration.php Des codi, pots fer servir la funci\u00f3 error_reporting amb les constants anteriors per establir el nivell de notificaci\u00f3 en un moment determinat. Per exemple, si en algun lloc del teu codi figura una divisi\u00f3 en la qual hi haja la possibilitat que el divisor siga zero, quan aix\u00f2 passe obtindr\u00e0s un missatge d'error al navegador. Per evitar-ho, pots desactivar la notificaci\u00f3 de errors de nivell E_WARNING abans de la divisi\u00f3 i restaurar al seu valor normal a continuaci\u00f3: error_reporting ( E_ALL & ~ E_NOTICE & ~ E_WARNING ); $resultat = $dividend / $divisor ; error_reporting ( E_ALL & ~ E_NOTICE );","title":"Canviar el comportament de PHP"},{"location":"03-phpoo/0303-errorhandling/#notificacio-derror-en-entorns-de-produccio","text":"; PHP comes packaged with two INI files. One that is recommended to be used ; in production environments and one that is recommended to be used in ; development environments. ; php.ini-production contains settings which hold security, performance and ; best practices at its core. But please be aware, these settings may break ; compatibility with older or less security conscience applications. We ; recommending using the production ini in production and testing environments. ; display_errors ; Default Value: On ; Development Value: On ; Production Value: Off ; display_startup_errors ; Default Value: Off ; Development Value: On ; Production Value: Off ; error_reporting ; Default Value: E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED ; Development Value: E_ALL ; Production Value: E_ALL & ~E_DEPRECATED & ~E_STRICT ; html_errors ; Default Value: On ; Development Value: On ; Production value: On ; log_errors ; Default Value: Off ; Development Value: On ; Production Value: On","title":"Notificaci\u00f3 d'error en entorns de producci\u00f3"},{"location":"03-phpoo/0303-errorhandling/#gestio-global-dels-errors","text":"En utilitzar la funci\u00f3 error_reporting nom\u00e9s controles quin tipus d'errors va a notificar PHP. A vegades pot ser suficient, per\u00f2 per obtenir m\u00e9s control sobre el proc\u00e9s existeix tamb\u00e9 la possibilitat de gestionar de forma personalitzada els errors. \u00c9s a dir, pots programar una funci\u00f3 perqu\u00e8 siga la que executa PHP cada vegada que es produeix un error. El nom d'aquesta funci\u00f3 s'indica utilitzant set_error_handler i ha de tenir com a m\u00ednim dos par\u00e0metres obligatoris (el nivell de l'error i el missatge descriptiu) i fins tres opcionals amb informaci\u00f3 addicional sobre el error (el nom del fitxer en qu\u00e8 es produeix, el nombre de l\u00ednia, i un bolcat de l'estat de les variables en aquest moment). set_error_handler ( \"miGestorDeErrores\" ); $resultat = $dividend / $divisor ; restore_error_handler (); function miGestorDeErrores ( $nivell , $missatge ) { switch ( $nivell ) { case E_WARNING : echo \"Error de tipus WARNING: $missatge . <br />\" ; break ; default : echo \"Error de tipus no especificat: $ missatge. <br />\" ; } } La funci\u00f3 restore_error_handler restaura el gestor d'errors original de PHP (m\u00e9s concretament, el que s'estava fent servir abans de la crida a set_error_handler ).","title":"Gesti\u00f3 global dels errors"},{"location":"03-phpoo/0303-errorhandling/#errorexception","text":"Gr\u00e0cies a la combinaci\u00f3 de la classe ErrorException i el m\u00e8tode set_error_handler podem convertir f\u00e0cilment els errors en excepcions de tipus ErrorException : <? php function exception_error_handler ( $severidad , $mensaje , $fichero , $l\u00ednea ) { if ( ! ( error_reporting () & $severidad )) { // Este c\u00f3digo de error no est\u00e1 incluido en error_reporting return ; } throw new ErrorException ( $mensaje , 0 , $severidad , $fichero , $l\u00ednea ); } set_error_handler ( \"exception_error_handler\" ); /* Desencadenar la excepci\u00f3n */ strpos (); ?>","title":"ErrorException"},{"location":"03-phpoo/0303-errorhandling/#excepcions","text":"A partir de la versi\u00f3 5 es va introduir en PHP un model d'excepcions similar a l'existent en altres llenguatges de programaci\u00f3: El codi susceptible de produir algun error s'introdueix en un bloc try . Quan es produeix algun error, es llan\u00e7a una excepci\u00f3 utilitzant la instrucci\u00f3 throw . Despr\u00e9s del bloc try ha d'haver com a m\u00ednim un bloc catch encarregat de processar el error. Si un cop acabat el bloc try no s'ha llan\u00e7at cap excepci\u00f3, es continua amb la execuci\u00f3 en la l\u00ednia seg\u00fcent al bloc o blocs catch . Per exemple, per llan\u00e7ar una excepci\u00f3 quan es produeix una divisi\u00f3 per zero podries fer: try { if ( $divisor == 0 ) throw new Exception ( \"Divisi\u00f3 per zero.\" ); $resultat = $dividend / $divisor ; } catch ( Exception $e ) { echo \"S'ha produ\u00eft el seg\u00fcent error:\" . $ e -> getMessage (); } PHP ofereix una classe base Exception per utilitzar com a gestor d'excepcions. Per llan\u00e7ar una excepci\u00f3 no cal indicar cap par\u00e0metre, encara que de forma opcional es pot passar un missatge d'error (com en l'exemple anterior) i tamb\u00e9 un codi d'error. Entre els m\u00e8todes que podeu utilitzar amb els objectes de la classe Exception estan: getMessage . Retorna el missatge, en cas que s'hagi posat algun. getCode . Retorna el codi d'error si existeix. Les funcions internes de PHP i moltes extensions com MySQLi usen el sistema d'errors vist anteriorment. Nom\u00e9s les extensions m\u00e9s modernes orientades a objectes, com \u00e9s el cas de PDO, utilitzen aquest model d'excepcions. En aquest cas, el m\u00e9s com\u00fa \u00e9s que l'extensi\u00f3 definisca els seues propis controladors d'errors heretant de la classe Exception . Classe ErrorException Com hem dit abans, utilitzant la classe ErrorException \u00e9s possible traduir els errors a excepcions. http://es.php.net/manual/es/class.errorexception.php Concretament, la classe PDO permet definir la f\u00f3rmula que far\u00e0 servir quan es produeixi un error, utilitzant l'atribut PDO::ATTR_ERRMODE . Les possibilitats s\u00f3n: PDO::ERRMODE_SILENT . No es fa res quan ocorre un error. \u00c9s el comportament per defecte. PDO::ERRMODE_WARNING . Genera un error de tipus E_WARNING quan es produeix un error. PDO::ERRMODE_EXCEPTION . Quan es produeix un error llan\u00e7a una excepci\u00f3 utilitzant el gestor propi PDOException. \u00c9s a dir, que si vols utilitzar excepcions amb l'extensi\u00f3 PDO, has de configurar la connexi\u00f3 fent: $dwes -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); Per exemple, el seg\u00fcent codi: $dwes = new PDO ( \"mysql:host=localhost;dbname=dwes\" , \"dwes\" , \"abc123.\" ); $dwes -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); try { $sql = \"SELECT * FROM stox\" ; $result = $dwes -> query ( $sql ); ... } catch ( PDOException $p ) { echo \"Error\" . $p -> getMessage () . \"<br />\" ; } Captura l'excepci\u00f3 que llan\u00e7a PDO a causa de que la taula no existeix. El bloc catch mostra el seg\u00fcent missatge: Error SQLSTATE [ 42 S02 ] : Base table or view not found : 1146 Table 'dwes.stox' does not exist","title":"Excepcions"},{"location":"03-phpoo/0303-errorhandling/#el-bloc-finally","text":"En PHP 5.5 i posterior, es pot utilitzar un bloc finally despr\u00e9s o en lloc dels blocs catch . El codi de dins el bloc finally sempre s'executar\u00e0 despr\u00e9s dels blocs try i catch , independentment que s'haja llan\u00e7at una excepci\u00f3 o no, i abans que l'execuci\u00f3 normal continue. Com que el contingut del bloc finally sempre s'executa \u00e9s ideal per a alliberar recursos en cas d'error, com una connexi\u00f3 a base de dades o a la connexi\u00f3 a un servei proporcionats per tercers.","title":"El bloc finally"},{"location":"03-phpoo/0303-errorhandling/#multiples-catch","text":"\u00c9s possible afegir m\u00e9s d'un cath de la seg\u00fcent manera: try { ... } catch ( FooException e ) { ... } catch ( BarException e ) { ... } catch ( Exception e ) { ... } A partir de PHP 7.1 tamb\u00e9 \u00e9s possible fer-ho aix\u00ed: try { ... } catch ( FooException | BarException | Exception e ) { ... }","title":"M\u00faltiples catch"},{"location":"03-phpoo/0303-errorhandling/#ampliant-les-excepcions","text":"\u00c9s possible crear excepcions personalitzades heretant de la classe Exception . class NegativeIdException extends Exception { public function __construct ( $message = null ) { $this -> message = $message ?: 'ID Negatiu.' ; parent :: __construct ( $message ); } } Despr\u00e9s l'utilitzarem aix\u00ed: try { $post = new Post ( - 1 , \"Hola m\u00f3n\" , \"Aquest \u00e9s el primer post del blog\" , new DateTime (), \"Vicent\" ); } catch ( NegativeIdException $e ) { echo \"No es pot posar un ID negatiu\" ; } catch ( Exception $e ) { echo \"Excepci\u00f3 desconeguda\" . $e -> getMessage (); }","title":"Ampliant les excepcions"},{"location":"03-phpoo/0303-errorhandling/#interficie-throwable","text":"Throwable \u00e9s la interf\u00edcie base per a qualsevol objecte que puga ser llan\u00e7at mitjan\u00e7ant una sent\u00e8ncia throw en PHP 7, incloent Error i Exception . Les classes de PHP no poden implementar la interf\u00edcie Throwable directament, de manera que han d'estendre en el seu lloc Exception . Aquesta nova interf\u00edcie t\u00e9 per objectiu unificar les dos tipologies d'exceptions. Tant Exception com Error implementen la interf\u00edcie Throwable .","title":"Interf\u00edcie Throwable"},{"location":"03-phpoo/0303-errorhandling/#gestio-derrors-i-excepcions_1","text":"Modifica les classes Input creades anteriorment perqu\u00e8 en cas que el atribut $name no tinga valor llance una excepci\u00f3 amb el missatge \"L'atribut name no pot estar buit\". Captura l'excepci\u00f3. Crea una excepci\u00f3 personalitzada ValuesNotFoundException en cas que el par\u00e0metre $values del control InputRadio estiga buit. Captura l'excepci\u00f3. Crea una excepci\u00f3 personalitzada MovieNotFound que es llance en cas que l'identificador $id sol\u00b7licitat no trobe cap pel\u00b7licula en single-page.php Captura l'excepci\u00f3.","title":"Gesti\u00f3 d'errors i excepcions"},{"location":"03-phpoo/0303-errorhandling/#exercicis-practics","text":"","title":"Exercicis pr\u00e0ctics"},{"location":"03-phpoo/0303-errorhandling/#activitat-pellicules","text":"","title":"Activitat: Pel\u00b7l\u00edcules"},{"location":"03-phpoo/0303-errorhandling/#activitat-pellicules-ii","text":"","title":"Activitat: Pel\u00b7licules II"},{"location":"03-phpoo/0303-errorhandling/#activitat-pellicules-iii","text":"","title":"Activitat: Pel\u00b7l\u00edcules III"},{"location":"03-phpoo/0303-errorhandling/#activitat-42-herencia","text":"","title":"Activitat 4.2: Her\u00e8ncia"},{"location":"03-phpoo/0303-errorhandling/#activitat-43-herencia-i-2","text":"{:.no_toc .nocount}","title":"Activitat 4.3: Her\u00e8ncia (i 2)"},{"location":"03-phpoo/0303-errorhandling/#activitat-44-interficie-icontrol","text":"","title":"Activitat 4.4: Interf\u00edcie IControl"},{"location":"03-phpoo/0303-errorhandling/#bibliografia","text":"{: .no_toc } Jos\u00e9 Luis Comesa\u00f1a. Apuntes de formaci\u00f3n a distancia del m\u00f3dulo \u00abDesarrollo web en entorno servidor\u00bb del CFGS DAW, elaborados y licenciados por el Ministerio de Educaci\u00f3n, Cultura y Deporte. [en l\u00ednia]. 2012 [data de consulta: 13 de setembre de 2019]. Disponible en \\< https://github.com/statickidz/TemarioDAW/tree/master/DWES > Antonio L\u00f3pez. Learning PHP 7. Packt Publishing (29 de marzo de 2016) .","title":"Bibliografia"},{"location":"03-phpoo/0399-activities/","text":"Activitats POO B\u00e0sic 301-Card : Crea una classe anomenada Card que contindr\u00e0 la informaci\u00f3 relativa una carta de la baralla francesa amb les seguents propietats: suit , string, privada. symbol , string, privada. value , entera, privada. El constructor i el seus getters i setters . Crea cinc objects diferents en un array i mostra'ls de forma aleat\u00f2ria. classDiagram class Card { -string suit -string symbol -int value +void function __construct (string, string, int) } 302-CardCollection : Crea una classe anomenada CardCollection que contindr\u00e0 la propietat cards que ser\u00e0 un array de cartes (objectes Card ). Hi haur\u00e0 dues formes d'inserir cartes, mitjan\u00e7ant el m\u00e8tode CardCollection::add(array $array) que rebr\u00e0 un array de cartes i els afegir\u00e0 a la propietat cards i el m\u00e8tode CardCollecion::addCard(Card $card) que rebr\u00e0 una carta i la inserir\u00e0 en la propietat card . A m\u00e9s, contindr\u00e0 el m\u00e8tode shuffle() que ordenar\u00e0 les cartes de forma aleat\u00f2ria. Inst\u00e0ncia la classe, afig 5 cartes, reordena-les i mostra-les. classDiagram class CardCollection { -cards: array +add(cards: array) +addCard(card: Card): void } class Card { -suit: string -symbol: string -value: int __construct (suit: string, symbol: string, value: int) shuffle() getCards() array } CardCollection \"1\"--\"*\" Card 303-writer : crea el m\u00e8todo writer en la classe CardCollection de forma que mostre en format lliure la col\u00b7leci\u00f3 de cartes. Amb aquest m\u00e8tode afegirem una nova capa d'abstracci\u00f3 ja que no caldr\u00e0 accedir directament als m\u00e8todes de la classe Card . Afig un segon m\u00e8tode que mostre la col\u00b7lecci\u00f3 de cartes en una imatge que represente cada carta (les imatges que hem usat en activitats anteriors). 304-basic-game : fent \u00fas de les classes anteriors crearem una aplicaci\u00f3 b\u00e0sica en la que s'enfronten dos jugadors. Un exemple de partida podria ser el seg\u00fcent: La classe CardCollection quedar\u00e0 aix\u00ed: classDiagram class CardCollection { -cards: array add(cards: array) addCard(card: Card) void ... deal(amount: int) array play() Card } Els requisits seran els seg\u00fcents: Es repartiran 5 cartes per jugador. * El m\u00e8tode deal que repartir\u00e0 el n\u00famero de cartes que s'indique com a par\u00e0metre eliminant-les de la col\u00b7lecci\u00f3. * El m\u00e8tode play jugar\u00e0 una carta que s'eliminar\u00e0 de la col\u00b7lecci\u00f3. * Cada tirada la guanya el jugador que t\u00e9 la carta m\u00e9s alta, segons el valor. * La partida la guanya el jugador que ha guanyat m\u00e9s vegades. * En cas d'empat es repartir\u00e0 una nova carta a cada jugador. Aix\u00ed que en la aplicaci\u00f3 interactuaran 3 objectes de tipus CardCollection . 305-abstract-game : en l'activitat anterior vam crear tres objectes de tipus CardCollection . Podem observar que alguns m\u00e8todes, com per exemple deal ( repartir ) tenen sentit en l'objecte quan representen la m\u00e0 d'un jugador. Podem replantejar la soluci\u00f3 de la seg\u00fcent manera: classDiagram direction LR class CardCollection { < < abstract >> #cards: array +add(cards: Card[]) +addCard(card: Card) void getCards() Card[] } class Card { -suit: string -symbol: string -value: int __construct (suit: string, symbol: string, value: int) } class Deck { shuffle() deal(amount: int = 1) Card[] } class Hand { play() Card } CardCollection \"1\"--\"*\" Card Deck --|> CardCollection Hand --|> CardCollection En el diagrama anterior definim CardCollection com una classe abstracta, d'ella hereten dos classes Deck que representa la baralla i Hand que representa les cartes d'un jugador. Cada classe exten la funcionalitat afegint els seus propis m\u00e8todes. Recorda que una classe abstracta \u00e9s un tipus de classe que no s'inst\u00e0ncia i sols poden ser heretades traslladant aix\u00ed un funcionamient obligatori a les classes filles (o subclasses). Modifica la soluci\u00f3 a l'activitat anterior amb la nova jerarquia de classes. Errors i excepcions 306-error-handling : modifica l'activitat 284 (formulari de contactes) de forma que quan es produisca un error de validaci\u00f3 \u00e9s llance una excepci\u00f3 que ser\u00e0 capturada. Caldr\u00e0 construir la seg\u00fcent jerarquia d'errors: ValidationException ser\u00e0 la classe base i heretaran d'ella les seg\u00fcents subclasses: RequiredValidationException TooLongValidationException InvalidPhoneValidationException InvalidEmailValidationException . InvalidKeyValidationException FileUploadException ser\u00e0 la classe base de la part de pujada de fitxers. NoUploadedFileException . TooBigFileException . InvalidTypeFileException . Projecte: MovieFX En primer lloc caldr\u00e0 crear el lloc web virtual que allotjar\u00e0 l'aplicaci\u00f3 que haur\u00e0 d'estar en un directori. All\u00ed disposarem de la seg\u00fcent estructura de directoris: . \u251c\u2500\u2500 index.php \u251c\u2500\u2500 src \u2514\u2500\u2500 views src contindr\u00e0 les classes i view les vistes. Caldr\u00e0 crear un repositori privat de Github on mantindrem una versi\u00f3 del projecte. Crea la classe Movie en la carpeta src del projecte, cal usar tipat esctricte . Les propietats seran: id (integer) title (string) overview (string) releaseDate (string) rating (float) poster (string) Crea els setters i els getters . Crea la constant de classe POSTER_PATH contindr\u00e0 la ruta al directori on es troben les imatges. Crea un array $movies que siga un array d\u2019objectes Movie . Crean 3. Crea la p\u00e0gina d'index.php perqu\u00e8 mostre les pel\u00b7licules de l'array. El t\u00edtol de la pel\u00b7licula ser\u00e0 un enlla\u00e7 a movie.php?id=[atribut id de la pel\u00b7l\u00edcula] . La p\u00e0gina movie.php mostrar\u00e0 les dades de la pel\u00b7licula que tinga l' id que s'ha passat pel querystring. Post usar array_filter per trobar l'objecte que t\u00e9 l'id indicat. Crea la classe User en la carpeta src amb les seg\u00fcents propietats: id (integer) username (string) password (string) plan (Plan) Crea la classe Plan en la carpeta src amb les seg\u00fcents propietats: id (integer) name (enumeration: BASIC, PREMIUM) quality (enumeration: SD, HD, 4K) screens (integer)","title":"Activitats"},{"location":"03-phpoo/0399-activities/#activitats","text":"","title":"Activitats"},{"location":"03-phpoo/0399-activities/#poo-basic","text":"301-Card : Crea una classe anomenada Card que contindr\u00e0 la informaci\u00f3 relativa una carta de la baralla francesa amb les seguents propietats: suit , string, privada. symbol , string, privada. value , entera, privada. El constructor i el seus getters i setters . Crea cinc objects diferents en un array i mostra'ls de forma aleat\u00f2ria. classDiagram class Card { -string suit -string symbol -int value +void function __construct (string, string, int) } 302-CardCollection : Crea una classe anomenada CardCollection que contindr\u00e0 la propietat cards que ser\u00e0 un array de cartes (objectes Card ). Hi haur\u00e0 dues formes d'inserir cartes, mitjan\u00e7ant el m\u00e8tode CardCollection::add(array $array) que rebr\u00e0 un array de cartes i els afegir\u00e0 a la propietat cards i el m\u00e8tode CardCollecion::addCard(Card $card) que rebr\u00e0 una carta i la inserir\u00e0 en la propietat card . A m\u00e9s, contindr\u00e0 el m\u00e8tode shuffle() que ordenar\u00e0 les cartes de forma aleat\u00f2ria. Inst\u00e0ncia la classe, afig 5 cartes, reordena-les i mostra-les. classDiagram class CardCollection { -cards: array +add(cards: array) +addCard(card: Card): void } class Card { -suit: string -symbol: string -value: int __construct (suit: string, symbol: string, value: int) shuffle() getCards() array } CardCollection \"1\"--\"*\" Card 303-writer : crea el m\u00e8todo writer en la classe CardCollection de forma que mostre en format lliure la col\u00b7leci\u00f3 de cartes. Amb aquest m\u00e8tode afegirem una nova capa d'abstracci\u00f3 ja que no caldr\u00e0 accedir directament als m\u00e8todes de la classe Card . Afig un segon m\u00e8tode que mostre la col\u00b7lecci\u00f3 de cartes en una imatge que represente cada carta (les imatges que hem usat en activitats anteriors). 304-basic-game : fent \u00fas de les classes anteriors crearem una aplicaci\u00f3 b\u00e0sica en la que s'enfronten dos jugadors. Un exemple de partida podria ser el seg\u00fcent: La classe CardCollection quedar\u00e0 aix\u00ed: classDiagram class CardCollection { -cards: array add(cards: array) addCard(card: Card) void ... deal(amount: int) array play() Card } Els requisits seran els seg\u00fcents: Es repartiran 5 cartes per jugador. * El m\u00e8tode deal que repartir\u00e0 el n\u00famero de cartes que s'indique com a par\u00e0metre eliminant-les de la col\u00b7lecci\u00f3. * El m\u00e8tode play jugar\u00e0 una carta que s'eliminar\u00e0 de la col\u00b7lecci\u00f3. * Cada tirada la guanya el jugador que t\u00e9 la carta m\u00e9s alta, segons el valor. * La partida la guanya el jugador que ha guanyat m\u00e9s vegades. * En cas d'empat es repartir\u00e0 una nova carta a cada jugador. Aix\u00ed que en la aplicaci\u00f3 interactuaran 3 objectes de tipus CardCollection . 305-abstract-game : en l'activitat anterior vam crear tres objectes de tipus CardCollection . Podem observar que alguns m\u00e8todes, com per exemple deal ( repartir ) tenen sentit en l'objecte quan representen la m\u00e0 d'un jugador. Podem replantejar la soluci\u00f3 de la seg\u00fcent manera: classDiagram direction LR class CardCollection { < < abstract >> #cards: array +add(cards: Card[]) +addCard(card: Card) void getCards() Card[] } class Card { -suit: string -symbol: string -value: int __construct (suit: string, symbol: string, value: int) } class Deck { shuffle() deal(amount: int = 1) Card[] } class Hand { play() Card } CardCollection \"1\"--\"*\" Card Deck --|> CardCollection Hand --|> CardCollection En el diagrama anterior definim CardCollection com una classe abstracta, d'ella hereten dos classes Deck que representa la baralla i Hand que representa les cartes d'un jugador. Cada classe exten la funcionalitat afegint els seus propis m\u00e8todes. Recorda que una classe abstracta \u00e9s un tipus de classe que no s'inst\u00e0ncia i sols poden ser heretades traslladant aix\u00ed un funcionamient obligatori a les classes filles (o subclasses). Modifica la soluci\u00f3 a l'activitat anterior amb la nova jerarquia de classes.","title":"POO B\u00e0sic"},{"location":"03-phpoo/0399-activities/#errors-i-excepcions","text":"306-error-handling : modifica l'activitat 284 (formulari de contactes) de forma que quan es produisca un error de validaci\u00f3 \u00e9s llance una excepci\u00f3 que ser\u00e0 capturada. Caldr\u00e0 construir la seg\u00fcent jerarquia d'errors: ValidationException ser\u00e0 la classe base i heretaran d'ella les seg\u00fcents subclasses: RequiredValidationException TooLongValidationException InvalidPhoneValidationException InvalidEmailValidationException . InvalidKeyValidationException FileUploadException ser\u00e0 la classe base de la part de pujada de fitxers. NoUploadedFileException . TooBigFileException . InvalidTypeFileException .","title":"Errors i excepcions"},{"location":"03-phpoo/0399-activities/#projecte-moviefx","text":"En primer lloc caldr\u00e0 crear el lloc web virtual que allotjar\u00e0 l'aplicaci\u00f3 que haur\u00e0 d'estar en un directori. All\u00ed disposarem de la seg\u00fcent estructura de directoris: . \u251c\u2500\u2500 index.php \u251c\u2500\u2500 src \u2514\u2500\u2500 views src contindr\u00e0 les classes i view les vistes. Caldr\u00e0 crear un repositori privat de Github on mantindrem una versi\u00f3 del projecte. Crea la classe Movie en la carpeta src del projecte, cal usar tipat esctricte . Les propietats seran: id (integer) title (string) overview (string) releaseDate (string) rating (float) poster (string) Crea els setters i els getters . Crea la constant de classe POSTER_PATH contindr\u00e0 la ruta al directori on es troben les imatges. Crea un array $movies que siga un array d\u2019objectes Movie . Crean 3. Crea la p\u00e0gina d'index.php perqu\u00e8 mostre les pel\u00b7licules de l'array. El t\u00edtol de la pel\u00b7licula ser\u00e0 un enlla\u00e7 a movie.php?id=[atribut id de la pel\u00b7l\u00edcula] . La p\u00e0gina movie.php mostrar\u00e0 les dades de la pel\u00b7licula que tinga l' id que s'ha passat pel querystring. Post usar array_filter per trobar l'objecte que t\u00e9 l'id indicat. Crea la classe User en la carpeta src amb les seg\u00fcents propietats: id (integer) username (string) password (string) plan (Plan) Crea la classe Plan en la carpeta src amb les seg\u00fcents propietats: id (integer) name (enumeration: BASIC, PREMIUM) quality (enumeration: SD, HD, 4K) screens (integer)","title":"Projecte: MovieFX"},{"location":"04-data-access/04-data-access-php/","text":"Acc\u00e9s a dades mitjan\u00e7ant PHP PDO PHP permet treballar en base de dades MySQL gr\u00e0cies a dues llibreries. MySQLi i PDO. Com que MySQLi est\u00e0 dissenyada exclusivament per a MySQL nosaltres aprofundirem en PDO, que permet connectar fins amb 12 sistemes gestors de base de dades diferents. Les sigles PDO ( PHP Data Objects ) fan refer\u00e8ncia a una interf\u00edcie de PHP que ens permet accedir a bases de dades de qualsevol tipus en PHP. Cada controlador de bases de dades que implemente la interf\u00edcie PDO pot exposar caracter\u00edstiques espec\u00edfiques de la base de dades, com les funcions habituals de l'extensi\u00f3. Cal observar que no es pot realitzar cap de les funcions de la bases de dades utilitzant l'extensi\u00f3 PDO per si mateixa; s'ha d'utilitzar-ne una de PDO espec\u00edfica de la base de dades per tenir acc\u00e9s a un servidor de base de dades. PDO proporciona una capa d'abstracci\u00f3 d'acc\u00e9s a dades, el que significa que, independentment de la base de dades que s'estiga utilitzant, s'usen les mateixes funcions per fer consultes i obtenir dades. Per saber els controladors PDO disponibles en el nostre sistema: print_r ( PDO :: getAvailableDrivers ()); La informaci\u00f3 oficial sobre PDO es troba en http://php.net/manual/es/book.pdo.php Classes PDO, PDOStatement i PDOException PDO proporciona 3 classes per a gestionar l'acc\u00e9s a la base de dades PDO : S'utilitza per representar la connexi\u00f3 entre PHP i un servidor de bases de dades. PDOStatement : representa una sent\u00e8ncia preparada i tamb\u00e9 ens permet accedir al conjunt de resultats associat. PDOException : representa els errors generats PDO. Connexi\u00f3 a la base de dades Per a crear una nova connexi\u00f3 s'utilitza la classe PDO : public __construct ( string $dsn [, string $username [, string $passwd [, array $options ]]] ) El constructor t\u00e9 els seg\u00fcents par\u00e0metres: dsn : cadena de connexi\u00f3 username : nom d'usuari passwd : contrasenya d'usuari options : permet afegir altres opcions de la connexi\u00f3 $pdo = new PDO ( \"mysql:host=localhost; dbname=test\" , \"dbuser\" , \"1234\" ); En l'exemple anterior mysql representa una connexi\u00f3 a una base de dades MySQL ( podria ser: MSSQL, Sybase, sqlite, etc.) anomenada test que es troba al servidor localhost . La connexi\u00f3 es realitzar\u00e0 mitjan\u00e7ant l'usuari dbuser i la contrasenya 1234 . // Exemple de connexi\u00f3 a diferents tipus de bases de dades. # Connectem a la base de dades $host = 'www.local' ; $hbname = 'cxbasex' ; $user = 'cxbasex' ; $pass = 'xxxxxx' ; try { # MS SQL Server y Sybase amb PDO_DBLIB $pdo = new PDO ( \"MSSQL:host= $host ;dbname= $dbname , $user , $pass \" ); $pdo = new PDO ( \"Sybase:host= $host ;dbname= $dbname , $user , $pass \" ); /* MySQL amb PDO_MYSQL Perqu\u00e8 la connexi\u00f3 a mysql utilitzi les collation UTF-8 afegir charset = utf8 a string de la connexi\u00f3. */ $pdo = new PDO ( \"mysql:host= $host ;dbname= $dbname ;charset=utf8\" , $user , $pass ); // Perqu\u00e8 generi excepcions a l'hora de reportar errors. $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); # SQLite Database $pdo = new PDO ( \"sqlite:my/database/path/database.db\" ); } catch ( PDOException $e ) { die ( $e -> getMessage ()); } // Si tot va b\u00e9 en $pdo tindrem el objecte que gestionar\u00e0 la connexi\u00f3 amb la base de dades. Tancar la connexi\u00f3 a la base de dades Es recomana tancar sempre la connexi\u00f3 a la base de dades quan no es vaja a utilitzar m\u00e9s durant el nostre proc\u00e9s. Cal recordar que els recursos s\u00f3n limitats i quan hi ha pocs usuaris no hi ha cap problema, per\u00f2 si tenim molts usuaris simultanis llavors \u00e9s quan sorgeixen problemes en haver assolit el nombre m\u00e0xim de connexions amb el servidor, per exemple. En tancar la connexi\u00f3 de forma expl\u00edcita accelerem l'alliberament de recursos perqu\u00e8 estiguin disponibles per a altres usuaris. // Si vullguerem tancar la connexi\u00f3 amb la base de dades simplement podr\u00edem fer al final del fitxer. $pdo = null ; Execuci\u00f3 de consultes Per a realitzar consultes PDO proporciona tres m\u00e8todes: PDO::query() per a consultes de recuperaci\u00f3 de dades (SELECT). PDO::exec() per a consultes d'inserci\u00f3, modificaci\u00f3 i esborrat de dades (INSERT, UPDATE i DELETE) PDO::prepare() per a consultes de tot tipus amb par\u00e0metres. Aquest \u00e9s el m\u00e8tode recomanat si la consulta t\u00e9 par\u00e0metres o si s'ha d'executar divereses vegades per\u00f2 aix\u00f2 hem dedicat un apartat espec\u00edfic. Una vegada executada la consulta les dades s'obtenen a trav\u00e9s del m\u00e8tode PDOStatement::fetch() o PDOStatement::fetchAll() . fetch() : Obt\u00e9 la seg\u00fcent fila d'un recordset (conjunt de resultats). http://php.net/manual/es/pdostatement.fetch.php fetchAll() : Retorna un array que cont\u00e9 totes les files del conjunt de resultats (el tipus de dades a retornar es pot indicar com a par\u00e0metre). http://php.net/manual/es/pdostatement.fetchall.php Estil de b\u00fasqueda ( fetch style ) Abans de cridar al m\u00e8tode fetch() una bona idea \u00e9s indicar-li com volem que ens torne les dades de la base de dades. Tindrem les seg\u00fcents opcions en el m\u00e8tode fetch() : PDO::FETCH_ASSOC : Torna les dades en un array associatiu pel nom de camp de la taula. PDO::FETCH_NUM : Retorna un array indexat per la posici\u00f3 del camp. PDO::FETCH_BOTH : Retorna un array associatiu pel nom de camp de la taula i un indexat per la posici\u00f3 del camp. \u00c9s una combinaci\u00f3 dels dos estils anteriors. \u00c9s l'estil per defecte. PDO::FETCH_BOUND : Assigna els valors retornats a les variables assignades amb el m\u00e8tode bindColumn() . PDO::FETCH_CLASS : Assigna els valors dels camps a les propietats d'una classe. Si les propietats no existeixen en aquesta classe, les crear\u00e0. PDO::FETCH_INTO : Actualitza una inst\u00e0ncia existent d'una classe. PDO::FETCH_LAZY : Combina PDO::FETCH_BOTH / PDO::FETCH_OBJ , creant les variables de l'objecte a mesura que es van fent servir. PDO::FETCH_OBJ : Retorna un objecte an\u00f2nim amb els noms de les propietats que es corresponen amb els noms de columnes. Podem ajustar l'estil de b\u00fasqueda de dues formes: Abans de recuperar registres $stmt -> setFetchMode ( PDO :: FETCH_ASSOC ); O en el moment de recuperar-los: $stmt -> fetch ( PDO :: FETCH_ASSOC ); $stmt -> fechtall ( PDO :: FETCH_ASSOC ); PDO::FETCH_CLASS Cal saber que no podem usar PDO::FETCH_CLASS com a par\u00e0metre de PDOStatement::fetch() . Cal controlar l'estil de b\u00fasqueda amb PDOStatement::setFetchMode() . FETCH_ASSOC Per executar la consulta SELECT si no tenim par\u00e0metres en la consulta podrem usar PDO::query() Vegem un exemple de consulta SELECT: try { #Per executar la consulta SELECT si no tenim par\u00e0metres en la consulta podrem usar -> query () $stmt = $pdo -> query ( 'SELECT name, addr, city from colleague' ); /* Indiquem en quin format volem obtenir les dades de la taula en format d'array associatiu. Si no indiquem res per defecte s'usar\u00e0 FETCH_BOTH el que ens permetr\u00e0 accedir com a vector associatiu o array num\u00e8ric. */ $stmt -> setFetchMode ( PDO :: FETCH_ASSOC ); #Llegim les dades del recordset amb el m\u00e8tode->fetch () while ( $row = $stmt -> fetch ()) { echo $row [ 'name' ] . \"<br/>\" ; echo $row [ 'addr' ] . \"<br/>\" ; echo $row [ 'city' ] . \"<br/>\" ; } #Per alliberar els recursos utilitzats en la consulta SELECT $stmt = null ; } catch ( PDOException $err ) { // Mostrem un missatge gen\u00e8ric d'error. echo \"Error: executant consulta SQL.\" ; } FETCH_OBJ En aquest estil de b\u00fasqueda es crear\u00e0 un objecte est\u00e0ndard ( stdClass ) per cada fila que llegim del recordset. Per exemple: try { #Creem la consulta $stmt = $pdo -> query ( 'SELECT name, addr, city from colleague' ); #Ajustem la manera d'obtenci\u00f3 de dades $stmt -> setFetchMode ( PDO :: FETCH_OBJ ); #Mostrem els resultats. #Fixeu-vos que es torna un objecte cada vegada que es llegeix una fila del recordset. while ( $row = $stmt -> fetch ()) { echo $row -> name . \"<br/>\" ; echo $row -> addr . \"<br/>\" ; echo $row -> city . \"<br/>\" ; } #Alliberem els recursos utilitzats per $stmt $stmt = null ; } catch ( PDOException $err ) { // Mostrem un missatge gen\u00e8ric d'error. echo \"Error: executant consulta SQL.\" ; } FETCH_CLASS En aquest estil de b\u00fasqueda els registres es tornaran en una nova inst\u00e0ncia de la classe indicada en el segon par\u00e0metre, fent correspondre les columnes del conjunt de resultats amb els noms de les propietats de la classe, i cridant al constructor despr\u00e9s, a menys que tambi\u00e9n es proporcione l'opci\u00f3 PDO::FETCH_PROPS_LATE . Si algun nom de camp no existeix com a propietat en la classe es crear\u00e0 din\u00e0micament. class Persona { private $name ; public function __construct () { $this -> decir (); } public function decir () { if ( isset ( $this -> name )) { echo \"Soy { $this -> name } . \\n \" ; } else { echo \"A\u00fan no tengo nombre. \\n \" ; } } } $sth = $dbh -> query ( \"SELECT * FROM people\" ); $sth -> setFetchMode ( PDO :: FETCH_CLASS , 'Persona' ); $persona = $sth -> fetch (); $persona -> decir (); $sth -> setFetchMode ( PDO :: FETCH_CLASS | PDO :: FETCH_PROPS_LATE , 'Persona' ); $persona = $sth -> fetch (); $persona -> decir (); Mostrar\u00e0: Soy Alice. Soy Alice. A\u00fan no tengo nombre. Soy Bob. Consultes preparades Com hem vist en l'apartat anterior les consultes poden acceptar par\u00e0metres. La millor forma de realitzar aquestes consultes \u00e9s mitjan\u00e7ant les consultes preparades . Les consultes preparades ens aporten dues avantatges importants: Per a sent\u00e8ncies que seran executades en m\u00faltiples ocasions amb diferents par\u00e0metres optimitza el rendiment de la aplicaci\u00f3. Ajuda a prevenir injeccions SQL eliminant la necessitat de posar entre cometes manualment els par\u00e0metres. Per a construir una sent\u00e8ncia preparada cal incloure uns marcadors en la sent\u00e8ncia SQL. Hi ha tres formes de fer-ho: # Marcadors an\u00f2nims $stmt = $pdo -> prepare ( \"INSERT INTO colleague (name, addr, city) values (?, ?, ?)\" ); # Marcadors coneguts $stmt = $pdo -> prepare ( \"INSERT INTO colleague (name, addr, city) values (:name, :addr, :city)\" ); # Sense marcadors. Aquest m\u00e8tode est\u00e0 desaconsellat! Prohibit en el nostre cas. $stmt = $pdo -> prepare ( \"INSERT INTO colleague (name, addr, city) values ( $name , $addr , $city )\" ); Haur\u00e0s d'usar el primer o el segon m\u00e8tode dels que es mostren anteriorment. El tipus de marcadors que utilitzem afectaran a la forma d'assignar els valors d'eixos marcadors. Assignaci\u00f3 amb marcadors an\u00f2nims Per enlla\u00e7ar els marcadors an\u00f2nims amb el seu corresponent valor es pot utilitzar bindParam o bindValue : Marcadors an\u00f2nims ATENCI\u00d3: $pdo->prepare() usant marcadors an\u00f2nims ? , tracta totes les variables com si foren string , per la qual cosa far\u00e0 servir cometes per delimitar els seus valors per defecte. # Marcadors an\u00f2nims $stmt = $pdo -> prepare ( \"INSERT INTO colleague (name, addr, city) values (?, ?, ?)\" ); # Assignem variables a cada marcador, indexats l'1 al 3 $stmt -> bindParam ( 1 , $name ); $stmt -> bindParam ( 2 , $addr ); $stmt -> bindParam ( 3 , $city ); # Inserim una fila. $name = \"Daniel\" ; $addr = \"1 Wicked Way\" ; $city = \"Arlington Heights\" ; $stmt -> execute (); # Inserim un altra fila con valores diferents. $name = \"Steve\" $addr = \"5 Circle Drive\" ; $city = \"Schaumburg\" ; $stmt -> execute (); Un altra forma d'assignaci\u00f3 amb marcadors an\u00f2nims \u00e9s mitjan\u00e7ant un array associatiu: # Les dades que volem inserir $dades = [ 'Cathy' , '9 Dark and Twisty Road' , 'Cardiff' ]; $stmt = $pdo -> prepare ( \"INSERT INTO colleague (name, addr, city) values (?, ?, ?)\" ); $stmt -> execute ( $dades ); Difer\u00e8ncia entre l'\u00fas de bindParam i bindValue Amb bindParam es vincula la variable al par\u00e0metre i en el moment de fer l' execute \u00e9s quan s'assigna realment el valor de la variable a aquest par\u00e0metre. Amb bindValue s'assigna el valor de la variable a aquest par\u00e0metre just en el moment d'executar la instrucci\u00f3 bindValue . Exemple de difer\u00e8ncia entre bindParam i bindValue : // Ejemplo con bindParam: $sex = 'hombre' ; $s = $dbh -> prepare ( 'SELECT name FROM estudiantes WHERE sexo = :sexo' ); $s -> bindParam ( ':sexo' , $sex ); $sex = 'mujer' ; $s -> execute (); // se ejecut\u00f3 con el valor WHERE sexo = 'mujer' // El mismo ejemplo con bindValue: $sex = 'hombre' ; $s = $dbh -> prepare ( 'SELECT name FROM students WHERE sexo = :sexo' ); $s -> bindValue ( ':sexo' , $sex ); $sex = 'mujer' ; $s -> execute (); // se ejecut\u00f3 con el valor WHERE sexo = 'hombre' Assignaci\u00f3 amb marcadors coneguts Els marcadors coneguts s\u00f3n la forma m\u00e9s recomanable de treballar amb PDO, ja que a l'hora de fer el bindParam o el bindValue es pot especificar el tipus de dada i la seua longitud. Format de bindParam amb marcadors coneguts: bindParam ( ':marcador' , $variableVincular , TIPO DATOS PDO ) Exemple d'\u00fas de bindParam : $stmt -> bindParam ( ':calorias' , $misCalorias , PDO :: PARAM_INT ); $stmt -> bindParam ( ':apellidos' , $misApellidos , PDO :: PARAM_STR , 35 ); // 35 caracteres como m\u00e1ximo. Amb marcadors coneguts quedaria de la seg\u00fcent forma: $stmt = $pdo -> prepare ( \"INSERT INTO colleague (name, addr, city) value (:name, :addr, :city)\" ); # El primer argument de bindParam \u00e9s el nom del marcador i el segon la variable # que contindr\u00e0 les dades. # Els marcadors conocidos siempre comienzan con : $stmt -> bindParam ( ':name' , $name ); $name = 'Pepito' ; $stmt -> bindParam ( ':addr' , $addr ); $addr = 'Duanes, 17' ; $stmt -> bindParam ( ':city' , $city ); $city = 'Pego' ; $stmt -> execute (); # Tamb\u00e9 podem fer-ho mitjan\u00e7ant un array associatiu $dades = [ 'name' => 'Pepito' , 'addr' => 'Duanes, 17' , 'city' => 'Pego' ); # Fixeu-vos es passa l'array de dades en execute(). $stmt = $pdo -> prepare ( \"INSERT INTO colleague (name, addr, city) value (:name, :addr, :city)\" ); $stmt -> execute ( $dades ); # La \u00faltima instrucci\u00f3n se podr\u00eda poner tambi\u00e9n as\u00ed: $stmt -> execute ([ 'name' => 'Pepito' , 'addr' => 'Duanes, 17' , 'city' => 'Pego' ]); Una altra caracter\u00edstica dels marcadors coneguts \u00e9s que ens permetran treballar amb objectes directament a la base de dades, assumint que les propietats d'aquest objecte coincideixen amb els noms dels camps de la taula a la base de dades. Exemple d'\u00fas de marcadors coneguts i objectes: # Un objeto sencillo class Person { public $name ; public $addr ; public $city ; function __construct ( $n , $a , $c ) { $this -> name = $n ; $this -> addr = $a ; $this -> city = $c ; } # etc ... } $cathy = new Person ( 'Pepito' , 'Duanes, 17' , 'Pego' ); # Preparaci\u00f3n de la consulta $stmt = $pdo -> prepare ( \"INSERT INTO colegas (name, addr, city) value (:name, :addr, :city)\" ); # Inserci\u00f3n del objeto $stmt -> execute (( array ) $cathy ); Exemple d'\u00fas Per a utilitzar les consultes preparades seguirem sempre aquest esquema: $pdo = new PDO ( 'sqlite:/path/db/users.db' ); # 1. Preparem la connexi\u00f3 $stmt = $pdo -> prepare ( 'SELECT name FROM users WHERE id = :id' ); $id = 5 ; # 2. Vinculem els par\u00e0metres $stmt -> bindParam ( ':id' , $id , PDO :: PARAM_INT ); # 3. Executem la consulta $stmt -> execute (); # 4. Obtenim els registres # Un a un $row = $stmt -> fetch (); # Tots a l'hora $rows = $stmt -> fetchAll (); Dates en MySQL Recorda que el tipus DATE de MySQL es recupera com un string en format \"YYYY-MM-DD\" i a l'hora d'emmagatzemar-lo cal que tinga el mateix format. Si f\u00f3ra DATETIME tamb\u00e9 caldria afegir l'hora \"YY-MM-DD hh:mm:ss\". Inserci\u00f3, modificaci\u00f3 i eliminaci\u00f3 de dades de la BBDD Inserir noves dades, actualitzar-les o esborrar-les s\u00f3n algunes de les operacions m\u00e9s comunes en una base de dades. Amb PDO podem fer aquestes aquestes operacions en 3 passos. Exemple d'\u00fas: # $stmt ser\u00e0 un objecte de tipus PDOStatement (consulta preparada) $stmt = $pdo -> prepare ( \"INSERT INTO colleague(name, addr, city) values (:name, :addr, :city)\" ); # Assignem els valors dels marcadors $name = \"Josep\" $addr = \"Duanes, 17\" $city = \"Pego\" $stmt -> BindValue ( \"name\" , $name ); $stmt -> BindValue ( \"addr\" , $addr ); $stmt -> BindValue ( \"city\" , $city ); # Executem la consulta amb ->execute() m\u00e8tode de l'objecte PDOStatement # Este m\u00e8tode devuelve true o false. $result = $stmt -> execute (); Exemples CRUD ( C reate, R ead, U pdate, D elete): INSERT, UPDATE y DELETE INSERT try { $pdo = new PDO ( \"mysql:host= $host ;dbname= $dbname ;charset=utf8\" , $username , $password ); $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); $stmt = $pdo -> prepare ( 'INSERT INTO colleague (name, addr, city ) VALUES(:name, :addr, :city)' ); $stmt -> execute ([ ':name' => 'Josep' , ':addr' => 'Duanes, 17' , ':city' => 'Pego' ]); # Affected Rows? echo $stmt -> rowCount (); // 1 } catch ( PDOException $e ) { echo 'Error: ' . $e -> getMessage (); } UPDATE $id = 5 ; $name = \"Joe the Plumber\" ; try { $pdo = new PDO ( \"mysql:host= $host ;dbname= $dbname ;charset=utf8\" , $username , $password ); $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); $stmt = $pdo -> prepare ( 'UPDATE someTable SET name = :name WHERE id = :id' ); $stmt -> execute ( array ( ':id' => $id , ':name' => $name )); echo $stmt -> rowCount (); // 1 } catch ( PDOException $e ) { echo 'Error: ' . $e -> getMessage (); } DELETE $id = 5 ; // From a form or something similar try { $pdo = new PDO ( \"mysql:host= $host ;dbname= $dbname ;charset=utf8\" , $username , $password ); $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); $stmt = $pdo -> prepare ( 'DELETE FROM someTable WHERE id = :id' ); $stmt -> bindParam ( ':id' , $id ); // this time, we'll use the bindParam method $stmt -> execute (); echo $stmt -> rowCount (); // 1 } catch ( PDOException $e ) { echo 'Error: ' . $e -> getMessage (); } Alguns m\u00e8todes d'inter\u00e8s Alguns m\u00e8todes interessant i que podem utilitzar per a millorar la gesti\u00f3 de l'acc\u00e9s a dades s\u00f3n: PDO::lastInsertId() , ens torna la clau prim\u00e0ria ( id ) del \u00faltim registre inserit en la base de dades. PDOStatement::rowCount() , ens torna el n\u00famero de files afectades por una sent\u00e8ncia DELETE, INSERT, o UPDATE. Gesti\u00f3 d'errors en l'acc\u00e9s PDO pot utilitzar les excepcions per gestionar els errors, el que significa que qualsevol cosa que fem amb PDO podr\u00edem encapsular en un bloc try/catch per gestionar si produeix algun error. Podem for\u00e7ar PDO perqu\u00e8 treballi en qualsevol de les tres maneres seg\u00fcents: PDO::ERRMODE_SILENT . \u00c9s el mode per defecte. Aqu\u00ed haurem de revisar els errors usant errorCode() i errorInfo() . PDO::ERRMODE_WARNING . Genera errors de revisi\u00f3 de resultats PHP per\u00f2 permetria l'execuci\u00f3 normal de l'aplicaci\u00f3. PDO::ERRMODE_EXCEPTION . Ser\u00e0 la forma m\u00e9s utilitzada en PDO. Dispara una excepci\u00f3 permetent-nos gestionar l'error de forma amigable. //Activaci\u00f3 de la manera de treball de PDO $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_SILENT ); $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_WARNING ); // Es recomana activar aquesta opci\u00f3 per gestionar els errors amb PDOException $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); Excepcions Es recomana activar aquesta opci\u00f3 per gestionar els errors amb PDOException , d'altra forma no apareixer\u00e0 cap missatge i ser\u00e0 complicat detectar-los. $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); Exemple d'\u00fas: # Connectem a la base de dades $host = 'www.local' ; $dbname = 'cxbasex' ; $user = 'cxbasex' ; $pass = 'xxxxxx' ; try { $pdo = new PDO ( \"mysql:host= $host ;dbname= $dbname ;charset=utf8\" , $user , $pass ); $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); } catch ( PDOException $e ) { echo \"S'ha produ\u00eft un error en intentar connectar al servidor MySQL:\" . $e -> getMessage (); } try { # Un altre Exemple d'error! DELECT en lloc de SELECT! $pdo -> exec ( 'DELECT name FROM people' ); } catch ( PDOException $e ) { echo \"S'ha produ\u00eft un error en l'execuci\u00f3 de la consulta:\" . $e -> getMessage (); /* En aquest cas hem mostrat el missatge d'error i, a m\u00e9s emmagatzemem en un fitxer els errors generats. */ file_put_contents ( 'PDOErrors.txt' , $e -> getMessage (), FILE_APPEND ); } Transaccions Una transacci\u00f3 en un Sistema de Gesti\u00f3 de Bases de Dades \u00e9s un conjunt d'ordres que s'executen formant una unitat de treball, \u00e9s a dir, en forma indivisible o at\u00f2mica. Un SGBD es diu transaccional si \u00e9s capa\u00e7 de mantenir la integritat de dades, fent que aquestes transaccions no puguin finalitzar en un estat intermedi. Quan per alguna causa el sistema ha de cancel\u00b7lar la transacci\u00f3, comen\u00e7a a desfer les ordres executades fins a deixar la base de dades en el seu estat inicial (anomenat punt d'integritat), com si l'ordre de la transacci\u00f3 mai s'hagu\u00e9s realitzat. Una transacci\u00f3 ha de comptar amb ACID (un acr\u00f2nim angl\u00e8s) que vol dir: Atomicidad, consist\u00e8ncia, a\u00efllament i durabilitat. Transaccions en PDO Com ja hem comentat, no tots els SGBD s\u00f3n transaccionals. Per\u00f2 tamb\u00e9 es possible que tot i que el SGBD ho siga el motor d'emmagatzemat no ho suporte. Per la qual cosa si necessites utilitzar transaccions haur\u00e0s d'assegurar-se que estiguen suportades pel motor d'emmagatzematge que gestiona les teves taules en MySQL. Per exemple el motor MyISAM no les suporta. Per defecte PDO treballa en mode autocommit. Confirma autom\u00e0ticament cada sent\u00e8ncia que executa el servidor. Per treballar amb transaccions, PDO incorpora tres m\u00e8todes: beginTransaction . Deshabilita la manera autocommit i comen\u00e7a una nova transacci\u00f3, que finalitzar\u00e0 quan executis un dels dos m\u00e8todes seg\u00fcents. commit . Confirma la transacci\u00f3 actual. rollback . Reverteix els canvis duts a terme a la transacci\u00f3 actual. Un cop executat un commit o rollback , es tornar\u00e0 al mode de confirmaci\u00f3 autom\u00e0tica. Si utilitzem un motor que no suporta transaccions PDO no mostrar\u00e0 cap error, simplement ser\u00e0 incapa\u00e7 de realitzar un rollback si fora necessari. Esquema b\u00e0sic d'\u00fas de transaccions amb PDO #Esquema b\u00e0sic d'\u00fas de PDO try { $pdo -> beginTransaction (); $pdo -> exec ( 'DELETE ...' ); $pdo -> exec ( 'UPDATE ...' ); $pdo -> commit (); } catch ( PDOException $exception ) { $pdo -> rollback (); } Exemple $mbd = new PDO ( 'odbc:SAMPLE' , 'db2inst1' , 'ibmdb2' , array ( PDO :: ATTR_PERSISTENT => true )); echo \"Conectado \\n \" ; } catch ( Exception $e ) { die ( \"No se pudo conectar: \" . $e -> getMessage ()); } try { $mbd -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); $mbd -> beginTransaction (); $mbd -> exec ( \"insert into staff (id, first, last) values (23, 'Joe', 'Bloggs')\" ); $mbd -> exec ( \"insert into salarychange (id, amount, changedate) values (23, 50000, NOW())\" ); $mbd -> commit (); } catch ( Exception $e ) { $mbd -> rollBack (); echo \"Fallo: \" . $e -> getMessage (); } Projecte MovieFX L'objectiu \u00e9s afegir al projecte funcionalitats de base de dades. Crear la base de dades Crea la base de dades movieFX . Crea la seg\u00fcent taula: CREATE TABLE ` movie ` ( ` id ` int ( 11 ) NOT NULL , ` title ` varchar ( 50 ) COLLATE utf8_spanish2_ci NOT NULL , ` overview ` text COLLATE utf8_spanish2_ci NOT NULL , ` release_date ` date NOT NULL , ` rating ` float NOT NULL , ` poster ` varchar ( 50 ) COLLATE utf8_spanish2_ci DEFAULT NULL ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COLLATE = utf8_spanish2_ci ; ALTER TABLE ` movie ` ADD PRIMARY KEY ( ` id ` ); ALTER TABLE ` movie ` MODIFY ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT ; COMMIT ; Crea l'usuari dbuser amb 1234 de contrasenya. Dona-li els privilegis necessaris perqu\u00e8 sols puga fer SELECT, INSERT, DELETE i UPDATE Copiar i pegar La temptaci\u00f3 de copiar i pegar codi ser\u00e0 gran, per\u00f2 en aquest punt podeu fer-ho sense pietat. M\u00e9s avant vorem t\u00e8cniques per a evitar-ho. Modificar la p\u00e0gina principal Modifica index.php perqu\u00e8 obtinga les pel\u00b7l\u00edcules de la base de dades (com un array associatiu). Caldr\u00e0 transformar els resultats en un array d'objectes movie . Modificar la p\u00e0gina de detall Modifica movie.php perqu\u00e8 obtinga la pel\u00b7licula seleccionada de la base de dades (com un array associatiu). Caldr\u00e0 transformar els resultats en un array d'objectes movie . Inserint noves pel\u00b7l\u00edcules Crea un formulari en ( movies-create.php ) per a inserir noves pel\u00b7l\u00edcules. Posa un enlla\u00e7 al formulari en la p\u00e0gina principal. La p\u00e0gina ( movies-create.php ) processar\u00e0 el formulari i despr\u00e9s de validar tots els camps els inserir\u00e0 a la base de dades. Cal tenir en compte la separaci\u00f3 de la l\u00f2gica i la presentaci\u00f3. Modificant i esborrants pel\u00b7l\u00edcules Crea el formulari per a editar pel\u00b7l\u00edcules ( movies-edit.php ). Crea el formulari per a esborrar pel\u00b7l\u00edcules ( movies-delete.php ). Afig en cada pel\u00b7l\u00edcula un enlla\u00e7 per a esborrar i editar la pel\u00edcula. Creant transaccions Per poder fer aquesta activitat caldr\u00e0 tenir en la base de dades les taules: user i rating . erDiagram user ||--o{ rating : places movie ||--o{ rating : contains rating { int id int value } user { int id string username string password } CREATE TABLE ` rating ` ( ` id ` int ( 11 ) NOT NULL , ` value ` int ( 11 ) NOT NULL , ` movie_id ` int ( 11 ) NOT NULL , ` user_id ` int ( 11 ) NOT NULL ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COLLATE = utf8_spanish2_ci ; CREATE TABLE ` user ` ( ` id ` int ( 11 ) NOT NULL , ` username ` varchar ( 50 ) COLLATE utf8_spanish2_ci NOT NULL , ` password ` varchar ( 255 ) COLLATE utf8_spanish2_ci NOT NULL ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COLLATE = utf8_spanish2_ci ; ALTER TABLE ` user ` ADD PRIMARY KEY ( ` id ` ); ALTER TABLE ` user ` MODIFY ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT ; ALTER TABLE ` rating ` ADD PRIMARY KEY ( ` id ` ), ADD UNIQUE KEY ` movie_user_idx ` ( ` movie_id ` , ` user_id ` ) USING BTREE ; ALTER TABLE ` rating ` MODIFY ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT ; ALTER TABLE ` rating ` ADD CONSTRAINT ` rating_movie_fk ` FOREIGN KEY ( ` movie_id ` ) REFERENCES ` movie ` ( ` id ` ), ADD CONSTRAINT ` rating_user_fk ` FOREIGN KEY ( ` user_id ` ) REFERENCES ` user ` ( ` id ` ); COMMIT ; Els usuaris podran valorar una pel\u00b7l\u00edcula amb un n\u00famero de l'1 al 5, per aquest motiu afegirem en la classe User el m\u00e8tode rate que rebr\u00e0 com a par\u00e0metres una pel\u00b7l\u00edcula i una valoraci\u00f3. El m\u00e8tode rate crear\u00e0 un nou registre en la taula rating per evitar duplicats i a m\u00e8s, actualitzar\u00e0 la valoraci\u00f3 de la pel\u00b7l\u00edcula tenint en compte la valoraci\u00f3 de l'usuari. Aquestes dos sent\u00e8ncies contra la base de dades estaran dintre d'una transacci\u00f3, ja que s'han d'executar com si foren una.","title":"Acc\u00e9s a dades amb PHP"},{"location":"04-data-access/04-data-access-php/#acces-a-dades-mitjancant-php-pdo","text":"PHP permet treballar en base de dades MySQL gr\u00e0cies a dues llibreries. MySQLi i PDO. Com que MySQLi est\u00e0 dissenyada exclusivament per a MySQL nosaltres aprofundirem en PDO, que permet connectar fins amb 12 sistemes gestors de base de dades diferents. Les sigles PDO ( PHP Data Objects ) fan refer\u00e8ncia a una interf\u00edcie de PHP que ens permet accedir a bases de dades de qualsevol tipus en PHP. Cada controlador de bases de dades que implemente la interf\u00edcie PDO pot exposar caracter\u00edstiques espec\u00edfiques de la base de dades, com les funcions habituals de l'extensi\u00f3. Cal observar que no es pot realitzar cap de les funcions de la bases de dades utilitzant l'extensi\u00f3 PDO per si mateixa; s'ha d'utilitzar-ne una de PDO espec\u00edfica de la base de dades per tenir acc\u00e9s a un servidor de base de dades. PDO proporciona una capa d'abstracci\u00f3 d'acc\u00e9s a dades, el que significa que, independentment de la base de dades que s'estiga utilitzant, s'usen les mateixes funcions per fer consultes i obtenir dades. Per saber els controladors PDO disponibles en el nostre sistema: print_r ( PDO :: getAvailableDrivers ()); La informaci\u00f3 oficial sobre PDO es troba en http://php.net/manual/es/book.pdo.php","title":"Acc\u00e9s a dades mitjan\u00e7ant PHP PDO"},{"location":"04-data-access/04-data-access-php/#classes-pdo-pdostatement-i-pdoexception","text":"PDO proporciona 3 classes per a gestionar l'acc\u00e9s a la base de dades PDO : S'utilitza per representar la connexi\u00f3 entre PHP i un servidor de bases de dades. PDOStatement : representa una sent\u00e8ncia preparada i tamb\u00e9 ens permet accedir al conjunt de resultats associat. PDOException : representa els errors generats PDO.","title":"Classes PDO, PDOStatement i PDOException"},{"location":"04-data-access/04-data-access-php/#connexio-a-la-base-de-dades","text":"Per a crear una nova connexi\u00f3 s'utilitza la classe PDO : public __construct ( string $dsn [, string $username [, string $passwd [, array $options ]]] ) El constructor t\u00e9 els seg\u00fcents par\u00e0metres: dsn : cadena de connexi\u00f3 username : nom d'usuari passwd : contrasenya d'usuari options : permet afegir altres opcions de la connexi\u00f3 $pdo = new PDO ( \"mysql:host=localhost; dbname=test\" , \"dbuser\" , \"1234\" ); En l'exemple anterior mysql representa una connexi\u00f3 a una base de dades MySQL ( podria ser: MSSQL, Sybase, sqlite, etc.) anomenada test que es troba al servidor localhost . La connexi\u00f3 es realitzar\u00e0 mitjan\u00e7ant l'usuari dbuser i la contrasenya 1234 . // Exemple de connexi\u00f3 a diferents tipus de bases de dades. # Connectem a la base de dades $host = 'www.local' ; $hbname = 'cxbasex' ; $user = 'cxbasex' ; $pass = 'xxxxxx' ; try { # MS SQL Server y Sybase amb PDO_DBLIB $pdo = new PDO ( \"MSSQL:host= $host ;dbname= $dbname , $user , $pass \" ); $pdo = new PDO ( \"Sybase:host= $host ;dbname= $dbname , $user , $pass \" ); /* MySQL amb PDO_MYSQL Perqu\u00e8 la connexi\u00f3 a mysql utilitzi les collation UTF-8 afegir charset = utf8 a string de la connexi\u00f3. */ $pdo = new PDO ( \"mysql:host= $host ;dbname= $dbname ;charset=utf8\" , $user , $pass ); // Perqu\u00e8 generi excepcions a l'hora de reportar errors. $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); # SQLite Database $pdo = new PDO ( \"sqlite:my/database/path/database.db\" ); } catch ( PDOException $e ) { die ( $e -> getMessage ()); } // Si tot va b\u00e9 en $pdo tindrem el objecte que gestionar\u00e0 la connexi\u00f3 amb la base de dades.","title":"Connexi\u00f3 a la base de dades"},{"location":"04-data-access/04-data-access-php/#tancar-la-connexio-a-la-base-de-dades","text":"Es recomana tancar sempre la connexi\u00f3 a la base de dades quan no es vaja a utilitzar m\u00e9s durant el nostre proc\u00e9s. Cal recordar que els recursos s\u00f3n limitats i quan hi ha pocs usuaris no hi ha cap problema, per\u00f2 si tenim molts usuaris simultanis llavors \u00e9s quan sorgeixen problemes en haver assolit el nombre m\u00e0xim de connexions amb el servidor, per exemple. En tancar la connexi\u00f3 de forma expl\u00edcita accelerem l'alliberament de recursos perqu\u00e8 estiguin disponibles per a altres usuaris. // Si vullguerem tancar la connexi\u00f3 amb la base de dades simplement podr\u00edem fer al final del fitxer. $pdo = null ;","title":"Tancar la connexi\u00f3 a la base de dades"},{"location":"04-data-access/04-data-access-php/#execucio-de-consultes","text":"Per a realitzar consultes PDO proporciona tres m\u00e8todes: PDO::query() per a consultes de recuperaci\u00f3 de dades (SELECT). PDO::exec() per a consultes d'inserci\u00f3, modificaci\u00f3 i esborrat de dades (INSERT, UPDATE i DELETE) PDO::prepare() per a consultes de tot tipus amb par\u00e0metres. Aquest \u00e9s el m\u00e8tode recomanat si la consulta t\u00e9 par\u00e0metres o si s'ha d'executar divereses vegades per\u00f2 aix\u00f2 hem dedicat un apartat espec\u00edfic. Una vegada executada la consulta les dades s'obtenen a trav\u00e9s del m\u00e8tode PDOStatement::fetch() o PDOStatement::fetchAll() . fetch() : Obt\u00e9 la seg\u00fcent fila d'un recordset (conjunt de resultats). http://php.net/manual/es/pdostatement.fetch.php fetchAll() : Retorna un array que cont\u00e9 totes les files del conjunt de resultats (el tipus de dades a retornar es pot indicar com a par\u00e0metre). http://php.net/manual/es/pdostatement.fetchall.php","title":"Execuci\u00f3 de consultes"},{"location":"04-data-access/04-data-access-php/#estil-de-busqueda-fetch-style","text":"Abans de cridar al m\u00e8tode fetch() una bona idea \u00e9s indicar-li com volem que ens torne les dades de la base de dades. Tindrem les seg\u00fcents opcions en el m\u00e8tode fetch() : PDO::FETCH_ASSOC : Torna les dades en un array associatiu pel nom de camp de la taula. PDO::FETCH_NUM : Retorna un array indexat per la posici\u00f3 del camp. PDO::FETCH_BOTH : Retorna un array associatiu pel nom de camp de la taula i un indexat per la posici\u00f3 del camp. \u00c9s una combinaci\u00f3 dels dos estils anteriors. \u00c9s l'estil per defecte. PDO::FETCH_BOUND : Assigna els valors retornats a les variables assignades amb el m\u00e8tode bindColumn() . PDO::FETCH_CLASS : Assigna els valors dels camps a les propietats d'una classe. Si les propietats no existeixen en aquesta classe, les crear\u00e0. PDO::FETCH_INTO : Actualitza una inst\u00e0ncia existent d'una classe. PDO::FETCH_LAZY : Combina PDO::FETCH_BOTH / PDO::FETCH_OBJ , creant les variables de l'objecte a mesura que es van fent servir. PDO::FETCH_OBJ : Retorna un objecte an\u00f2nim amb els noms de les propietats que es corresponen amb els noms de columnes. Podem ajustar l'estil de b\u00fasqueda de dues formes: Abans de recuperar registres $stmt -> setFetchMode ( PDO :: FETCH_ASSOC ); O en el moment de recuperar-los: $stmt -> fetch ( PDO :: FETCH_ASSOC ); $stmt -> fechtall ( PDO :: FETCH_ASSOC ); PDO::FETCH_CLASS Cal saber que no podem usar PDO::FETCH_CLASS com a par\u00e0metre de PDOStatement::fetch() . Cal controlar l'estil de b\u00fasqueda amb PDOStatement::setFetchMode() . FETCH_ASSOC Per executar la consulta SELECT si no tenim par\u00e0metres en la consulta podrem usar PDO::query() Vegem un exemple de consulta SELECT: try { #Per executar la consulta SELECT si no tenim par\u00e0metres en la consulta podrem usar -> query () $stmt = $pdo -> query ( 'SELECT name, addr, city from colleague' ); /* Indiquem en quin format volem obtenir les dades de la taula en format d'array associatiu. Si no indiquem res per defecte s'usar\u00e0 FETCH_BOTH el que ens permetr\u00e0 accedir com a vector associatiu o array num\u00e8ric. */ $stmt -> setFetchMode ( PDO :: FETCH_ASSOC ); #Llegim les dades del recordset amb el m\u00e8tode->fetch () while ( $row = $stmt -> fetch ()) { echo $row [ 'name' ] . \"<br/>\" ; echo $row [ 'addr' ] . \"<br/>\" ; echo $row [ 'city' ] . \"<br/>\" ; } #Per alliberar els recursos utilitzats en la consulta SELECT $stmt = null ; } catch ( PDOException $err ) { // Mostrem un missatge gen\u00e8ric d'error. echo \"Error: executant consulta SQL.\" ; } FETCH_OBJ En aquest estil de b\u00fasqueda es crear\u00e0 un objecte est\u00e0ndard ( stdClass ) per cada fila que llegim del recordset. Per exemple: try { #Creem la consulta $stmt = $pdo -> query ( 'SELECT name, addr, city from colleague' ); #Ajustem la manera d'obtenci\u00f3 de dades $stmt -> setFetchMode ( PDO :: FETCH_OBJ ); #Mostrem els resultats. #Fixeu-vos que es torna un objecte cada vegada que es llegeix una fila del recordset. while ( $row = $stmt -> fetch ()) { echo $row -> name . \"<br/>\" ; echo $row -> addr . \"<br/>\" ; echo $row -> city . \"<br/>\" ; } #Alliberem els recursos utilitzats per $stmt $stmt = null ; } catch ( PDOException $err ) { // Mostrem un missatge gen\u00e8ric d'error. echo \"Error: executant consulta SQL.\" ; } FETCH_CLASS En aquest estil de b\u00fasqueda els registres es tornaran en una nova inst\u00e0ncia de la classe indicada en el segon par\u00e0metre, fent correspondre les columnes del conjunt de resultats amb els noms de les propietats de la classe, i cridant al constructor despr\u00e9s, a menys que tambi\u00e9n es proporcione l'opci\u00f3 PDO::FETCH_PROPS_LATE . Si algun nom de camp no existeix com a propietat en la classe es crear\u00e0 din\u00e0micament. class Persona { private $name ; public function __construct () { $this -> decir (); } public function decir () { if ( isset ( $this -> name )) { echo \"Soy { $this -> name } . \\n \" ; } else { echo \"A\u00fan no tengo nombre. \\n \" ; } } } $sth = $dbh -> query ( \"SELECT * FROM people\" ); $sth -> setFetchMode ( PDO :: FETCH_CLASS , 'Persona' ); $persona = $sth -> fetch (); $persona -> decir (); $sth -> setFetchMode ( PDO :: FETCH_CLASS | PDO :: FETCH_PROPS_LATE , 'Persona' ); $persona = $sth -> fetch (); $persona -> decir (); Mostrar\u00e0: Soy Alice. Soy Alice. A\u00fan no tengo nombre. Soy Bob.","title":"Estil de b\u00fasqueda (fetch style)"},{"location":"04-data-access/04-data-access-php/#consultes-preparades","text":"Com hem vist en l'apartat anterior les consultes poden acceptar par\u00e0metres. La millor forma de realitzar aquestes consultes \u00e9s mitjan\u00e7ant les consultes preparades . Les consultes preparades ens aporten dues avantatges importants: Per a sent\u00e8ncies que seran executades en m\u00faltiples ocasions amb diferents par\u00e0metres optimitza el rendiment de la aplicaci\u00f3. Ajuda a prevenir injeccions SQL eliminant la necessitat de posar entre cometes manualment els par\u00e0metres. Per a construir una sent\u00e8ncia preparada cal incloure uns marcadors en la sent\u00e8ncia SQL. Hi ha tres formes de fer-ho: # Marcadors an\u00f2nims $stmt = $pdo -> prepare ( \"INSERT INTO colleague (name, addr, city) values (?, ?, ?)\" ); # Marcadors coneguts $stmt = $pdo -> prepare ( \"INSERT INTO colleague (name, addr, city) values (:name, :addr, :city)\" ); # Sense marcadors. Aquest m\u00e8tode est\u00e0 desaconsellat! Prohibit en el nostre cas. $stmt = $pdo -> prepare ( \"INSERT INTO colleague (name, addr, city) values ( $name , $addr , $city )\" ); Haur\u00e0s d'usar el primer o el segon m\u00e8tode dels que es mostren anteriorment. El tipus de marcadors que utilitzem afectaran a la forma d'assignar els valors d'eixos marcadors.","title":"Consultes preparades"},{"location":"04-data-access/04-data-access-php/#assignacio-amb-marcadors-anonims","text":"Per enlla\u00e7ar els marcadors an\u00f2nims amb el seu corresponent valor es pot utilitzar bindParam o bindValue : Marcadors an\u00f2nims ATENCI\u00d3: $pdo->prepare() usant marcadors an\u00f2nims ? , tracta totes les variables com si foren string , per la qual cosa far\u00e0 servir cometes per delimitar els seus valors per defecte. # Marcadors an\u00f2nims $stmt = $pdo -> prepare ( \"INSERT INTO colleague (name, addr, city) values (?, ?, ?)\" ); # Assignem variables a cada marcador, indexats l'1 al 3 $stmt -> bindParam ( 1 , $name ); $stmt -> bindParam ( 2 , $addr ); $stmt -> bindParam ( 3 , $city ); # Inserim una fila. $name = \"Daniel\" ; $addr = \"1 Wicked Way\" ; $city = \"Arlington Heights\" ; $stmt -> execute (); # Inserim un altra fila con valores diferents. $name = \"Steve\" $addr = \"5 Circle Drive\" ; $city = \"Schaumburg\" ; $stmt -> execute (); Un altra forma d'assignaci\u00f3 amb marcadors an\u00f2nims \u00e9s mitjan\u00e7ant un array associatiu: # Les dades que volem inserir $dades = [ 'Cathy' , '9 Dark and Twisty Road' , 'Cardiff' ]; $stmt = $pdo -> prepare ( \"INSERT INTO colleague (name, addr, city) values (?, ?, ?)\" ); $stmt -> execute ( $dades );","title":"Assignaci\u00f3 amb marcadors an\u00f2nims"},{"location":"04-data-access/04-data-access-php/#diferencia-entre-lus-de-bindparam-i-bindvalue","text":"Amb bindParam es vincula la variable al par\u00e0metre i en el moment de fer l' execute \u00e9s quan s'assigna realment el valor de la variable a aquest par\u00e0metre. Amb bindValue s'assigna el valor de la variable a aquest par\u00e0metre just en el moment d'executar la instrucci\u00f3 bindValue . Exemple de difer\u00e8ncia entre bindParam i bindValue : // Ejemplo con bindParam: $sex = 'hombre' ; $s = $dbh -> prepare ( 'SELECT name FROM estudiantes WHERE sexo = :sexo' ); $s -> bindParam ( ':sexo' , $sex ); $sex = 'mujer' ; $s -> execute (); // se ejecut\u00f3 con el valor WHERE sexo = 'mujer' // El mismo ejemplo con bindValue: $sex = 'hombre' ; $s = $dbh -> prepare ( 'SELECT name FROM students WHERE sexo = :sexo' ); $s -> bindValue ( ':sexo' , $sex ); $sex = 'mujer' ; $s -> execute (); // se ejecut\u00f3 con el valor WHERE sexo = 'hombre'","title":"Difer\u00e8ncia entre l'\u00fas de bindParam i bindValue"},{"location":"04-data-access/04-data-access-php/#assignacio-amb-marcadors-coneguts","text":"Els marcadors coneguts s\u00f3n la forma m\u00e9s recomanable de treballar amb PDO, ja que a l'hora de fer el bindParam o el bindValue es pot especificar el tipus de dada i la seua longitud. Format de bindParam amb marcadors coneguts: bindParam ( ':marcador' , $variableVincular , TIPO DATOS PDO ) Exemple d'\u00fas de bindParam : $stmt -> bindParam ( ':calorias' , $misCalorias , PDO :: PARAM_INT ); $stmt -> bindParam ( ':apellidos' , $misApellidos , PDO :: PARAM_STR , 35 ); // 35 caracteres como m\u00e1ximo. Amb marcadors coneguts quedaria de la seg\u00fcent forma: $stmt = $pdo -> prepare ( \"INSERT INTO colleague (name, addr, city) value (:name, :addr, :city)\" ); # El primer argument de bindParam \u00e9s el nom del marcador i el segon la variable # que contindr\u00e0 les dades. # Els marcadors conocidos siempre comienzan con : $stmt -> bindParam ( ':name' , $name ); $name = 'Pepito' ; $stmt -> bindParam ( ':addr' , $addr ); $addr = 'Duanes, 17' ; $stmt -> bindParam ( ':city' , $city ); $city = 'Pego' ; $stmt -> execute (); # Tamb\u00e9 podem fer-ho mitjan\u00e7ant un array associatiu $dades = [ 'name' => 'Pepito' , 'addr' => 'Duanes, 17' , 'city' => 'Pego' ); # Fixeu-vos es passa l'array de dades en execute(). $stmt = $pdo -> prepare ( \"INSERT INTO colleague (name, addr, city) value (:name, :addr, :city)\" ); $stmt -> execute ( $dades ); # La \u00faltima instrucci\u00f3n se podr\u00eda poner tambi\u00e9n as\u00ed: $stmt -> execute ([ 'name' => 'Pepito' , 'addr' => 'Duanes, 17' , 'city' => 'Pego' ]); Una altra caracter\u00edstica dels marcadors coneguts \u00e9s que ens permetran treballar amb objectes directament a la base de dades, assumint que les propietats d'aquest objecte coincideixen amb els noms dels camps de la taula a la base de dades. Exemple d'\u00fas de marcadors coneguts i objectes: # Un objeto sencillo class Person { public $name ; public $addr ; public $city ; function __construct ( $n , $a , $c ) { $this -> name = $n ; $this -> addr = $a ; $this -> city = $c ; } # etc ... } $cathy = new Person ( 'Pepito' , 'Duanes, 17' , 'Pego' ); # Preparaci\u00f3n de la consulta $stmt = $pdo -> prepare ( \"INSERT INTO colegas (name, addr, city) value (:name, :addr, :city)\" ); # Inserci\u00f3n del objeto $stmt -> execute (( array ) $cathy );","title":"Assignaci\u00f3 amb marcadors coneguts"},{"location":"04-data-access/04-data-access-php/#exemple-dus","text":"Per a utilitzar les consultes preparades seguirem sempre aquest esquema: $pdo = new PDO ( 'sqlite:/path/db/users.db' ); # 1. Preparem la connexi\u00f3 $stmt = $pdo -> prepare ( 'SELECT name FROM users WHERE id = :id' ); $id = 5 ; # 2. Vinculem els par\u00e0metres $stmt -> bindParam ( ':id' , $id , PDO :: PARAM_INT ); # 3. Executem la consulta $stmt -> execute (); # 4. Obtenim els registres # Un a un $row = $stmt -> fetch (); # Tots a l'hora $rows = $stmt -> fetchAll (); Dates en MySQL Recorda que el tipus DATE de MySQL es recupera com un string en format \"YYYY-MM-DD\" i a l'hora d'emmagatzemar-lo cal que tinga el mateix format. Si f\u00f3ra DATETIME tamb\u00e9 caldria afegir l'hora \"YY-MM-DD hh:mm:ss\".","title":"Exemple d'\u00fas"},{"location":"04-data-access/04-data-access-php/#insercio-modificacio-i-eliminacio-de-dades-de-la-bbdd","text":"Inserir noves dades, actualitzar-les o esborrar-les s\u00f3n algunes de les operacions m\u00e9s comunes en una base de dades. Amb PDO podem fer aquestes aquestes operacions en 3 passos. Exemple d'\u00fas: # $stmt ser\u00e0 un objecte de tipus PDOStatement (consulta preparada) $stmt = $pdo -> prepare ( \"INSERT INTO colleague(name, addr, city) values (:name, :addr, :city)\" ); # Assignem els valors dels marcadors $name = \"Josep\" $addr = \"Duanes, 17\" $city = \"Pego\" $stmt -> BindValue ( \"name\" , $name ); $stmt -> BindValue ( \"addr\" , $addr ); $stmt -> BindValue ( \"city\" , $city ); # Executem la consulta amb ->execute() m\u00e8tode de l'objecte PDOStatement # Este m\u00e8tode devuelve true o false. $result = $stmt -> execute ();","title":"Inserci\u00f3, modificaci\u00f3 i eliminaci\u00f3 de dades de la BBDD"},{"location":"04-data-access/04-data-access-php/#exemples-crud-create-read-update-delete-insert-update-y-delete","text":"INSERT try { $pdo = new PDO ( \"mysql:host= $host ;dbname= $dbname ;charset=utf8\" , $username , $password ); $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); $stmt = $pdo -> prepare ( 'INSERT INTO colleague (name, addr, city ) VALUES(:name, :addr, :city)' ); $stmt -> execute ([ ':name' => 'Josep' , ':addr' => 'Duanes, 17' , ':city' => 'Pego' ]); # Affected Rows? echo $stmt -> rowCount (); // 1 } catch ( PDOException $e ) { echo 'Error: ' . $e -> getMessage (); } UPDATE $id = 5 ; $name = \"Joe the Plumber\" ; try { $pdo = new PDO ( \"mysql:host= $host ;dbname= $dbname ;charset=utf8\" , $username , $password ); $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); $stmt = $pdo -> prepare ( 'UPDATE someTable SET name = :name WHERE id = :id' ); $stmt -> execute ( array ( ':id' => $id , ':name' => $name )); echo $stmt -> rowCount (); // 1 } catch ( PDOException $e ) { echo 'Error: ' . $e -> getMessage (); } DELETE $id = 5 ; // From a form or something similar try { $pdo = new PDO ( \"mysql:host= $host ;dbname= $dbname ;charset=utf8\" , $username , $password ); $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); $stmt = $pdo -> prepare ( 'DELETE FROM someTable WHERE id = :id' ); $stmt -> bindParam ( ':id' , $id ); // this time, we'll use the bindParam method $stmt -> execute (); echo $stmt -> rowCount (); // 1 } catch ( PDOException $e ) { echo 'Error: ' . $e -> getMessage (); }","title":"Exemples CRUD (Create, Read, Update, Delete): INSERT, UPDATE y DELETE"},{"location":"04-data-access/04-data-access-php/#alguns-metodes-dinteres","text":"Alguns m\u00e8todes interessant i que podem utilitzar per a millorar la gesti\u00f3 de l'acc\u00e9s a dades s\u00f3n: PDO::lastInsertId() , ens torna la clau prim\u00e0ria ( id ) del \u00faltim registre inserit en la base de dades. PDOStatement::rowCount() , ens torna el n\u00famero de files afectades por una sent\u00e8ncia DELETE, INSERT, o UPDATE.","title":"Alguns m\u00e8todes d'inter\u00e8s"},{"location":"04-data-access/04-data-access-php/#gestio-derrors-en-lacces","text":"PDO pot utilitzar les excepcions per gestionar els errors, el que significa que qualsevol cosa que fem amb PDO podr\u00edem encapsular en un bloc try/catch per gestionar si produeix algun error. Podem for\u00e7ar PDO perqu\u00e8 treballi en qualsevol de les tres maneres seg\u00fcents: PDO::ERRMODE_SILENT . \u00c9s el mode per defecte. Aqu\u00ed haurem de revisar els errors usant errorCode() i errorInfo() . PDO::ERRMODE_WARNING . Genera errors de revisi\u00f3 de resultats PHP per\u00f2 permetria l'execuci\u00f3 normal de l'aplicaci\u00f3. PDO::ERRMODE_EXCEPTION . Ser\u00e0 la forma m\u00e9s utilitzada en PDO. Dispara una excepci\u00f3 permetent-nos gestionar l'error de forma amigable. //Activaci\u00f3 de la manera de treball de PDO $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_SILENT ); $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_WARNING ); // Es recomana activar aquesta opci\u00f3 per gestionar els errors amb PDOException $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); Excepcions Es recomana activar aquesta opci\u00f3 per gestionar els errors amb PDOException , d'altra forma no apareixer\u00e0 cap missatge i ser\u00e0 complicat detectar-los. $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); Exemple d'\u00fas: # Connectem a la base de dades $host = 'www.local' ; $dbname = 'cxbasex' ; $user = 'cxbasex' ; $pass = 'xxxxxx' ; try { $pdo = new PDO ( \"mysql:host= $host ;dbname= $dbname ;charset=utf8\" , $user , $pass ); $pdo -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); } catch ( PDOException $e ) { echo \"S'ha produ\u00eft un error en intentar connectar al servidor MySQL:\" . $e -> getMessage (); } try { # Un altre Exemple d'error! DELECT en lloc de SELECT! $pdo -> exec ( 'DELECT name FROM people' ); } catch ( PDOException $e ) { echo \"S'ha produ\u00eft un error en l'execuci\u00f3 de la consulta:\" . $e -> getMessage (); /* En aquest cas hem mostrat el missatge d'error i, a m\u00e9s emmagatzemem en un fitxer els errors generats. */ file_put_contents ( 'PDOErrors.txt' , $e -> getMessage (), FILE_APPEND ); }","title":"Gesti\u00f3 d'errors en l'acc\u00e9s"},{"location":"04-data-access/04-data-access-php/#transaccions","text":"Una transacci\u00f3 en un Sistema de Gesti\u00f3 de Bases de Dades \u00e9s un conjunt d'ordres que s'executen formant una unitat de treball, \u00e9s a dir, en forma indivisible o at\u00f2mica. Un SGBD es diu transaccional si \u00e9s capa\u00e7 de mantenir la integritat de dades, fent que aquestes transaccions no puguin finalitzar en un estat intermedi. Quan per alguna causa el sistema ha de cancel\u00b7lar la transacci\u00f3, comen\u00e7a a desfer les ordres executades fins a deixar la base de dades en el seu estat inicial (anomenat punt d'integritat), com si l'ordre de la transacci\u00f3 mai s'hagu\u00e9s realitzat. Una transacci\u00f3 ha de comptar amb ACID (un acr\u00f2nim angl\u00e8s) que vol dir: Atomicidad, consist\u00e8ncia, a\u00efllament i durabilitat.","title":"Transaccions"},{"location":"04-data-access/04-data-access-php/#transaccions-en-pdo","text":"Com ja hem comentat, no tots els SGBD s\u00f3n transaccionals. Per\u00f2 tamb\u00e9 es possible que tot i que el SGBD ho siga el motor d'emmagatzemat no ho suporte. Per la qual cosa si necessites utilitzar transaccions haur\u00e0s d'assegurar-se que estiguen suportades pel motor d'emmagatzematge que gestiona les teves taules en MySQL. Per exemple el motor MyISAM no les suporta. Per defecte PDO treballa en mode autocommit. Confirma autom\u00e0ticament cada sent\u00e8ncia que executa el servidor. Per treballar amb transaccions, PDO incorpora tres m\u00e8todes: beginTransaction . Deshabilita la manera autocommit i comen\u00e7a una nova transacci\u00f3, que finalitzar\u00e0 quan executis un dels dos m\u00e8todes seg\u00fcents. commit . Confirma la transacci\u00f3 actual. rollback . Reverteix els canvis duts a terme a la transacci\u00f3 actual. Un cop executat un commit o rollback , es tornar\u00e0 al mode de confirmaci\u00f3 autom\u00e0tica. Si utilitzem un motor que no suporta transaccions PDO no mostrar\u00e0 cap error, simplement ser\u00e0 incapa\u00e7 de realitzar un rollback si fora necessari.","title":"Transaccions en PDO"},{"location":"04-data-access/04-data-access-php/#esquema-basic-dus-de-transaccions-amb-pdo","text":"#Esquema b\u00e0sic d'\u00fas de PDO try { $pdo -> beginTransaction (); $pdo -> exec ( 'DELETE ...' ); $pdo -> exec ( 'UPDATE ...' ); $pdo -> commit (); } catch ( PDOException $exception ) { $pdo -> rollback (); }","title":"Esquema b\u00e0sic d'\u00fas de transaccions amb PDO"},{"location":"04-data-access/04-data-access-php/#exemple","text":"$mbd = new PDO ( 'odbc:SAMPLE' , 'db2inst1' , 'ibmdb2' , array ( PDO :: ATTR_PERSISTENT => true )); echo \"Conectado \\n \" ; } catch ( Exception $e ) { die ( \"No se pudo conectar: \" . $e -> getMessage ()); } try { $mbd -> setAttribute ( PDO :: ATTR_ERRMODE , PDO :: ERRMODE_EXCEPTION ); $mbd -> beginTransaction (); $mbd -> exec ( \"insert into staff (id, first, last) values (23, 'Joe', 'Bloggs')\" ); $mbd -> exec ( \"insert into salarychange (id, amount, changedate) values (23, 50000, NOW())\" ); $mbd -> commit (); } catch ( Exception $e ) { $mbd -> rollBack (); echo \"Fallo: \" . $e -> getMessage (); }","title":"Exemple"},{"location":"04-data-access/04-data-access-php/#projecte-moviefx","text":"L'objectiu \u00e9s afegir al projecte funcionalitats de base de dades.","title":"Projecte MovieFX"},{"location":"04-data-access/04-data-access-php/#crear-la-base-de-dades","text":"Crea la base de dades movieFX . Crea la seg\u00fcent taula: CREATE TABLE ` movie ` ( ` id ` int ( 11 ) NOT NULL , ` title ` varchar ( 50 ) COLLATE utf8_spanish2_ci NOT NULL , ` overview ` text COLLATE utf8_spanish2_ci NOT NULL , ` release_date ` date NOT NULL , ` rating ` float NOT NULL , ` poster ` varchar ( 50 ) COLLATE utf8_spanish2_ci DEFAULT NULL ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COLLATE = utf8_spanish2_ci ; ALTER TABLE ` movie ` ADD PRIMARY KEY ( ` id ` ); ALTER TABLE ` movie ` MODIFY ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT ; COMMIT ; Crea l'usuari dbuser amb 1234 de contrasenya. Dona-li els privilegis necessaris perqu\u00e8 sols puga fer SELECT, INSERT, DELETE i UPDATE Copiar i pegar La temptaci\u00f3 de copiar i pegar codi ser\u00e0 gran, per\u00f2 en aquest punt podeu fer-ho sense pietat. M\u00e9s avant vorem t\u00e8cniques per a evitar-ho.","title":"Crear la base de dades"},{"location":"04-data-access/04-data-access-php/#modificar-la-pagina-principal","text":"Modifica index.php perqu\u00e8 obtinga les pel\u00b7l\u00edcules de la base de dades (com un array associatiu). Caldr\u00e0 transformar els resultats en un array d'objectes movie .","title":"Modificar la p\u00e0gina principal"},{"location":"04-data-access/04-data-access-php/#modificar-la-pagina-de-detall","text":"Modifica movie.php perqu\u00e8 obtinga la pel\u00b7licula seleccionada de la base de dades (com un array associatiu). Caldr\u00e0 transformar els resultats en un array d'objectes movie .","title":"Modificar la p\u00e0gina de detall"},{"location":"04-data-access/04-data-access-php/#inserint-noves-pellicules","text":"Crea un formulari en ( movies-create.php ) per a inserir noves pel\u00b7l\u00edcules. Posa un enlla\u00e7 al formulari en la p\u00e0gina principal. La p\u00e0gina ( movies-create.php ) processar\u00e0 el formulari i despr\u00e9s de validar tots els camps els inserir\u00e0 a la base de dades. Cal tenir en compte la separaci\u00f3 de la l\u00f2gica i la presentaci\u00f3.","title":"Inserint noves pel\u00b7l\u00edcules"},{"location":"04-data-access/04-data-access-php/#modificant-i-esborrants-pellicules","text":"Crea el formulari per a editar pel\u00b7l\u00edcules ( movies-edit.php ). Crea el formulari per a esborrar pel\u00b7l\u00edcules ( movies-delete.php ). Afig en cada pel\u00b7l\u00edcula un enlla\u00e7 per a esborrar i editar la pel\u00edcula.","title":"Modificant i esborrants pel\u00b7l\u00edcules"},{"location":"04-data-access/04-data-access-php/#creant-transaccions","text":"Per poder fer aquesta activitat caldr\u00e0 tenir en la base de dades les taules: user i rating . erDiagram user ||--o{ rating : places movie ||--o{ rating : contains rating { int id int value } user { int id string username string password } CREATE TABLE ` rating ` ( ` id ` int ( 11 ) NOT NULL , ` value ` int ( 11 ) NOT NULL , ` movie_id ` int ( 11 ) NOT NULL , ` user_id ` int ( 11 ) NOT NULL ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COLLATE = utf8_spanish2_ci ; CREATE TABLE ` user ` ( ` id ` int ( 11 ) NOT NULL , ` username ` varchar ( 50 ) COLLATE utf8_spanish2_ci NOT NULL , ` password ` varchar ( 255 ) COLLATE utf8_spanish2_ci NOT NULL ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COLLATE = utf8_spanish2_ci ; ALTER TABLE ` user ` ADD PRIMARY KEY ( ` id ` ); ALTER TABLE ` user ` MODIFY ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT ; ALTER TABLE ` rating ` ADD PRIMARY KEY ( ` id ` ), ADD UNIQUE KEY ` movie_user_idx ` ( ` movie_id ` , ` user_id ` ) USING BTREE ; ALTER TABLE ` rating ` MODIFY ` id ` int ( 11 ) NOT NULL AUTO_INCREMENT ; ALTER TABLE ` rating ` ADD CONSTRAINT ` rating_movie_fk ` FOREIGN KEY ( ` movie_id ` ) REFERENCES ` movie ` ( ` id ` ), ADD CONSTRAINT ` rating_user_fk ` FOREIGN KEY ( ` user_id ` ) REFERENCES ` user ` ( ` id ` ); COMMIT ; Els usuaris podran valorar una pel\u00b7l\u00edcula amb un n\u00famero de l'1 al 5, per aquest motiu afegirem en la classe User el m\u00e8tode rate que rebr\u00e0 com a par\u00e0metres una pel\u00b7l\u00edcula i una valoraci\u00f3. El m\u00e8tode rate crear\u00e0 un nou registre en la taula rating per evitar duplicats i a m\u00e8s, actualitzar\u00e0 la valoraci\u00f3 de la pel\u00b7l\u00edcula tenint en compte la valoraci\u00f3 de l'usuari. Aquestes dos sent\u00e8ncies contra la base de dades estaran dintre d'una transacci\u00f3, ja que s'han d'executar com si foren una.","title":"Creant transaccions"},{"location":"05-maintain-state/05-01-intro/","text":"Introducci\u00f3 Moltes vegades \u00e9s important verificar la identitat dels dos extrems d\u2019una comunicaci\u00f3, hi ha m\u00e8todes per identificar tant al servidor en el qual s\u2019allotja el lloc web, com a l\u2019usuari del navegador que es troba en l\u2019altre extrem. Els llocs web que necessiten emprar identificaci\u00f3 de servidor, com les botigues o els bancs, utilitzen el protocol HTTPS . Aquest protocol requereix d\u2019un certificat digital v\u00e0lid, signat per una autoritat fiable, que \u00e9s verificat pel navegador quan s\u2019accedeix a la p\u00e0gina web. A m\u00e9s, HTTPS utilitza m\u00e8todes de xifrat per crear un canal segur entre el navegador i el servidor, de tal manera que no es puga interceptar la informaci\u00f3 que es transmet pel mateix. Autenticaci\u00f3 d\u2019usuaris Per identificar els usuaris que visiten un lloc web, es poden utilitzar diferents m\u00e8todes com el DNI digital o certificats digitals d\u2019usuari (document digital que cont\u00e9 informaci\u00f3 sobre l\u2019usuari com el nom o l\u2019adre\u00e7a. Aquesta informaci\u00f3 est\u00e0 signada per una altra entitat, anomenada entitat certificadora, que ha de ser de confian\u00e7a i garanteix que la informaci\u00f3 que cont\u00e9 \u00e9s certa), per\u00f2 el m\u00e9s est\u00e8s \u00e9s sol\u00b7licitar a l\u2019usuari certa informaci\u00f3 que nom\u00e9s ell coneix: la combinaci\u00f3 d\u2019un nom d\u2019usuari i una contrasenya. En les unitats anteriors vas aprendre a utilitzar aplicacions web per gestionar informaci\u00f3 emmagatzemada en bases de dades. En la majoria dels casos \u00e9s important implantar en aquest tipus de aplicacions web, les que accedeixen a bases de dades, algun mecanisme de control d\u2019acc\u00e9s que obliga a l\u2019usuari a identificar-se. Un cop identificat, es pot limitar l\u2019\u00fas que pot fer de la informaci\u00f3. Aix\u00ed, pot haver llocs web en els quals els usuaris autenticats poden utilitzar nom\u00e9s una part de la informaci\u00f3 (com els bancs, que permeten als seus clients accedir \u00fanicament a la informaci\u00f3 relativa als seus comptes). Altres llocs web necessiten separar en grups als usuaris autentificats, de tal manera que la informaci\u00f3 a la qual accedeix un usuari dep\u00e8n del grup en qu\u00e8 aquest es trobe. Per exemple, una aplicaci\u00f3 de gesti\u00f3 d\u2019una empresa pot tenir un grup d\u2019usuaris als qui permet visualitzar la informaci\u00f3, i un altre grup d\u2019usuaris que, a m\u00e9s de visualitzar la informaci\u00f3, tamb\u00e9 la poden modificar. Info Has distingir l\u2019autenticaci\u00f3 dels usuaris i el control d\u2019acc\u00e9s, de la utilitzaci\u00f3 de mecanismes per assegurar les comunicacions entre l\u2019usuari de el navegador i el servidor web. Encara que tots dos aspectes solen anar units, s\u00f3n independents. En els exemples d\u2019aquesta unitat, la informaci\u00f3 d\u2019autenticaci\u00f3 (nom i contrasenya dels usuaris) s\u2019envia en text pla des del navegador fins al servidor web. Aquesta pr\u00e0ctica \u00e9s altament insegura i mai s\u2019ha d\u2019usar sense un protocol com HTTPS que permeta xifrar les comunicacions amb el lloc web. No obstant aix\u00f2, la configuraci\u00f3 de servidors web que permeten fer servir el protocol HTTPS per xifrar la informaci\u00f3 que reben i transmeten no forma part dels continguts d\u2019aquest m\u00f2dul. Per aquest motiu, durant aquesta unitat utilitzarem \u00fanicament el protocol no segur HTTP. Manteniment de l\u2019estat Recorda que HTTP \u00e9s un protocol sense estat, el que significa que un cop un servidor web completa la sol\u00b7licitud d\u2019un client d\u2019un recurs, la connexi\u00f3 entre els dos acaba. Dit d\u2019una altra manera, no hi ha manera que un servidor recorde una que una seq\u00fc\u00e8ncia de sol\u00b7licituds prov\u00e9 del mateix client. Info Mantenir l\u2019estat \u00e9s poder fer el seguiment d\u2019una sequ\u00e8ncia de sol\u00b7licituds d\u2019un client. No obstant aix\u00f2 mantenir l\u2019estat, poder fer el seguiment d\u2019una seq\u00fc\u00e8ncia de sol\u00b7licituds d\u2019un client, \u00e9s molt \u00fatil. No podeu crear una aplicaci\u00f3 que tinga cistella de la compra, per exemple, si no podeu mantenir l\u2019estat. Heu de saber quan un usuari afegeix articles a la cistella o els elimina i el contingut final de la cistella si el client decideix adquirir els productes. Per solucionar aquesta manca d\u2019estat de la web tenim disponibles diverses t\u00e8cniques com l\u2019\u00fas cookies o de sessions que veurem a continuaci\u00f3. Combinant mecanismes d\u2019autenticaci\u00f3 i t\u00e8cniques per a mantenir l\u2019estat podem crear aplicacions web segures.","title":"Introducci\u00f3"},{"location":"05-maintain-state/05-01-intro/#introduccio","text":"Moltes vegades \u00e9s important verificar la identitat dels dos extrems d\u2019una comunicaci\u00f3, hi ha m\u00e8todes per identificar tant al servidor en el qual s\u2019allotja el lloc web, com a l\u2019usuari del navegador que es troba en l\u2019altre extrem. Els llocs web que necessiten emprar identificaci\u00f3 de servidor, com les botigues o els bancs, utilitzen el protocol HTTPS . Aquest protocol requereix d\u2019un certificat digital v\u00e0lid, signat per una autoritat fiable, que \u00e9s verificat pel navegador quan s\u2019accedeix a la p\u00e0gina web. A m\u00e9s, HTTPS utilitza m\u00e8todes de xifrat per crear un canal segur entre el navegador i el servidor, de tal manera que no es puga interceptar la informaci\u00f3 que es transmet pel mateix.","title":"Introducci\u00f3"},{"location":"05-maintain-state/05-01-intro/#autenticacio-dusuaris","text":"Per identificar els usuaris que visiten un lloc web, es poden utilitzar diferents m\u00e8todes com el DNI digital o certificats digitals d\u2019usuari (document digital que cont\u00e9 informaci\u00f3 sobre l\u2019usuari com el nom o l\u2019adre\u00e7a. Aquesta informaci\u00f3 est\u00e0 signada per una altra entitat, anomenada entitat certificadora, que ha de ser de confian\u00e7a i garanteix que la informaci\u00f3 que cont\u00e9 \u00e9s certa), per\u00f2 el m\u00e9s est\u00e8s \u00e9s sol\u00b7licitar a l\u2019usuari certa informaci\u00f3 que nom\u00e9s ell coneix: la combinaci\u00f3 d\u2019un nom d\u2019usuari i una contrasenya. En les unitats anteriors vas aprendre a utilitzar aplicacions web per gestionar informaci\u00f3 emmagatzemada en bases de dades. En la majoria dels casos \u00e9s important implantar en aquest tipus de aplicacions web, les que accedeixen a bases de dades, algun mecanisme de control d\u2019acc\u00e9s que obliga a l\u2019usuari a identificar-se. Un cop identificat, es pot limitar l\u2019\u00fas que pot fer de la informaci\u00f3. Aix\u00ed, pot haver llocs web en els quals els usuaris autenticats poden utilitzar nom\u00e9s una part de la informaci\u00f3 (com els bancs, que permeten als seus clients accedir \u00fanicament a la informaci\u00f3 relativa als seus comptes). Altres llocs web necessiten separar en grups als usuaris autentificats, de tal manera que la informaci\u00f3 a la qual accedeix un usuari dep\u00e8n del grup en qu\u00e8 aquest es trobe. Per exemple, una aplicaci\u00f3 de gesti\u00f3 d\u2019una empresa pot tenir un grup d\u2019usuaris als qui permet visualitzar la informaci\u00f3, i un altre grup d\u2019usuaris que, a m\u00e9s de visualitzar la informaci\u00f3, tamb\u00e9 la poden modificar. Info Has distingir l\u2019autenticaci\u00f3 dels usuaris i el control d\u2019acc\u00e9s, de la utilitzaci\u00f3 de mecanismes per assegurar les comunicacions entre l\u2019usuari de el navegador i el servidor web. Encara que tots dos aspectes solen anar units, s\u00f3n independents. En els exemples d\u2019aquesta unitat, la informaci\u00f3 d\u2019autenticaci\u00f3 (nom i contrasenya dels usuaris) s\u2019envia en text pla des del navegador fins al servidor web. Aquesta pr\u00e0ctica \u00e9s altament insegura i mai s\u2019ha d\u2019usar sense un protocol com HTTPS que permeta xifrar les comunicacions amb el lloc web. No obstant aix\u00f2, la configuraci\u00f3 de servidors web que permeten fer servir el protocol HTTPS per xifrar la informaci\u00f3 que reben i transmeten no forma part dels continguts d\u2019aquest m\u00f2dul. Per aquest motiu, durant aquesta unitat utilitzarem \u00fanicament el protocol no segur HTTP.","title":"Autenticaci\u00f3 d\u2019usuaris"},{"location":"05-maintain-state/05-01-intro/#manteniment-de-lestat","text":"Recorda que HTTP \u00e9s un protocol sense estat, el que significa que un cop un servidor web completa la sol\u00b7licitud d\u2019un client d\u2019un recurs, la connexi\u00f3 entre els dos acaba. Dit d\u2019una altra manera, no hi ha manera que un servidor recorde una que una seq\u00fc\u00e8ncia de sol\u00b7licituds prov\u00e9 del mateix client. Info Mantenir l\u2019estat \u00e9s poder fer el seguiment d\u2019una sequ\u00e8ncia de sol\u00b7licituds d\u2019un client. No obstant aix\u00f2 mantenir l\u2019estat, poder fer el seguiment d\u2019una seq\u00fc\u00e8ncia de sol\u00b7licituds d\u2019un client, \u00e9s molt \u00fatil. No podeu crear una aplicaci\u00f3 que tinga cistella de la compra, per exemple, si no podeu mantenir l\u2019estat. Heu de saber quan un usuari afegeix articles a la cistella o els elimina i el contingut final de la cistella si el client decideix adquirir els productes. Per solucionar aquesta manca d\u2019estat de la web tenim disponibles diverses t\u00e8cniques com l\u2019\u00fas cookies o de sessions que veurem a continuaci\u00f3. Combinant mecanismes d\u2019autenticaci\u00f3 i t\u00e8cniques per a mantenir l\u2019estat podem crear aplicacions web segures.","title":"Manteniment de l\u2019estat"},{"location":"05-maintain-state/05-02-cookies/","text":"Galletes ( cookies ) Una galleta \u00e9s un fitxer de text que un lloc web guarda a l'entorn de l'usuari de navegador. El seu \u00fas m\u00e9s t\u00edpic \u00e9s l'emmagatzematge de les prefer\u00e8ncies de l'usuari (per exemple, l'idioma en que s'han de mostrar les p\u00e0gines), perqu\u00e8 no hagi de tornar a indicar-les la propera vegada que visiteu el lloc. Si utilitzes Firefox com a navegador, pots accedir a Desenvolupador web \u2013 Inspector d'emmagatzematge des del men\u00fa principal. Entre les seves caracter\u00edstiques et permet consultar i editar les galetes emmagatzemades en el mateix. En PHP, per emmagatzemar una galleta al navegador de l'usuari, pots utilitzar la funci\u00f3 setcookie . L'\u00fanic par\u00e0metre obligatori que has de fer servir \u00e9s el nom de la galleta, per\u00f2 admet diversos par\u00e0metres m\u00e9s opcionals. setcookie ( string $name , string $value = \"\" , int $expires = 0 , string $path = \"\" , string $domain = \"\" , bool $secure = false , bool $httponly = false ) : bool Info Per a m\u00e9s informaci\u00f3 consulta: https://www.php.net/manual/es/function.setcookie.php . Per exemple, si vols emmagatzemar en una galleta la data del darrer acc\u00e9s d'un usuari, pots fer: setcookie ( \"last_visit_date\" , ( string ) time (), time () + 3600 ); Els dos primers par\u00e0metres s\u00f3n el nom de la galleta i el seu valor. El tercer \u00e9s la data de caducitat de la mateixa en format timestamp (en l'exemple, un hora des del moment en qu\u00e8 s'execute). En cas de no figurar aquest par\u00e0metre, la galleta s'eliminar\u00e0 quan es tanque el navegador. Tingues en compte que tamb\u00e9 es poden aplicar restriccions a les p\u00e0gines del lloc que poden accedir a una galleta en funci\u00f3 de la ruta. Les galetes es transmeten entre el navegador i el servidor web utilitzant les cap\u00e7aleres del protocol HTTP. Per aix\u00f2, les sent\u00e8ncies setcookie s'han d'enviar abans que el navegador mostre cap informaci\u00f3 a pantalla. Podeu trobar m\u00e9s informaci\u00f3 en Ultimate Guide to HTTP Cookies El proc\u00e9s de recuperaci\u00f3 de la informaci\u00f3 que emmagatzema una galleta \u00e9s molt simple. Quan accedeixes a un lloc web, el navegador li envia de forma autom\u00e0tica tot el contingut de les galetes que emmagatzema relatives a aquest lloc en concret. Des PHP pots accedir a aquesta informaci\u00f3 per mitj\u00e0 de l'array $_COOKIE . Warning Sempre que utilitzeu galetes en una aplicaci\u00f3 web, heu de tenir en compte que en \u00faltima inst\u00e0ncia la seva disponibilitat est\u00e0 controlada pel client. Per exemple, alguns usuaris deshabiliten les galetes al navegador perqu\u00e8 pensen que la informaci\u00f3 que emmagatzemen pot suposar un potencial problema de seguretat. O que la informaci\u00f3 que emmagatzemen pot arribar a perdre perqu\u00e8 el usuari decideix formatar l'equip o simplement eliminar-les de sistema. Si un cop emmagatzemada una galleta al navegador vols eliminar-la abans que expire, pots utilitzar la mateixa funci\u00f3 setcookie per\u00f2 indicant una data de caducitat anterior a l'actual. Question Quina \u00e9s la durada per defecte d'una galleta si no s'indica la data de caducitat, com en la seg\u00fcent crida a la funci\u00f3 setcookie ? setcookie ( \"idioma\" , \"espanyol\" ); Fins que es tanque el navegador de l'usuari. 1 hora. Problemes de seguretat relacionats amb galletes A l'hora de fer \u00fas de galletes, cal ser conscient dels potencials problemes de seguretat que poden patir. En l'article Ultimate Guide to HTTP Cookies s'exposen tres dels problemes m\u00e9s rellevants i la seua sol\u00b7luci\u00f3. Aquest article \u00e9s una refer\u00e8ncia molt completa dels possibles valors i atributs que es poden fer servir les galletes: Set-Cookie headers","title":"Galletes (cookies)"},{"location":"05-maintain-state/05-02-cookies/#galletes-cookies","text":"Una galleta \u00e9s un fitxer de text que un lloc web guarda a l'entorn de l'usuari de navegador. El seu \u00fas m\u00e9s t\u00edpic \u00e9s l'emmagatzematge de les prefer\u00e8ncies de l'usuari (per exemple, l'idioma en que s'han de mostrar les p\u00e0gines), perqu\u00e8 no hagi de tornar a indicar-les la propera vegada que visiteu el lloc. Si utilitzes Firefox com a navegador, pots accedir a Desenvolupador web \u2013 Inspector d'emmagatzematge des del men\u00fa principal. Entre les seves caracter\u00edstiques et permet consultar i editar les galetes emmagatzemades en el mateix. En PHP, per emmagatzemar una galleta al navegador de l'usuari, pots utilitzar la funci\u00f3 setcookie . L'\u00fanic par\u00e0metre obligatori que has de fer servir \u00e9s el nom de la galleta, per\u00f2 admet diversos par\u00e0metres m\u00e9s opcionals. setcookie ( string $name , string $value = \"\" , int $expires = 0 , string $path = \"\" , string $domain = \"\" , bool $secure = false , bool $httponly = false ) : bool Info Per a m\u00e9s informaci\u00f3 consulta: https://www.php.net/manual/es/function.setcookie.php . Per exemple, si vols emmagatzemar en una galleta la data del darrer acc\u00e9s d'un usuari, pots fer: setcookie ( \"last_visit_date\" , ( string ) time (), time () + 3600 ); Els dos primers par\u00e0metres s\u00f3n el nom de la galleta i el seu valor. El tercer \u00e9s la data de caducitat de la mateixa en format timestamp (en l'exemple, un hora des del moment en qu\u00e8 s'execute). En cas de no figurar aquest par\u00e0metre, la galleta s'eliminar\u00e0 quan es tanque el navegador. Tingues en compte que tamb\u00e9 es poden aplicar restriccions a les p\u00e0gines del lloc que poden accedir a una galleta en funci\u00f3 de la ruta. Les galetes es transmeten entre el navegador i el servidor web utilitzant les cap\u00e7aleres del protocol HTTP. Per aix\u00f2, les sent\u00e8ncies setcookie s'han d'enviar abans que el navegador mostre cap informaci\u00f3 a pantalla. Podeu trobar m\u00e9s informaci\u00f3 en Ultimate Guide to HTTP Cookies El proc\u00e9s de recuperaci\u00f3 de la informaci\u00f3 que emmagatzema una galleta \u00e9s molt simple. Quan accedeixes a un lloc web, el navegador li envia de forma autom\u00e0tica tot el contingut de les galetes que emmagatzema relatives a aquest lloc en concret. Des PHP pots accedir a aquesta informaci\u00f3 per mitj\u00e0 de l'array $_COOKIE . Warning Sempre que utilitzeu galetes en una aplicaci\u00f3 web, heu de tenir en compte que en \u00faltima inst\u00e0ncia la seva disponibilitat est\u00e0 controlada pel client. Per exemple, alguns usuaris deshabiliten les galetes al navegador perqu\u00e8 pensen que la informaci\u00f3 que emmagatzemen pot suposar un potencial problema de seguretat. O que la informaci\u00f3 que emmagatzemen pot arribar a perdre perqu\u00e8 el usuari decideix formatar l'equip o simplement eliminar-les de sistema. Si un cop emmagatzemada una galleta al navegador vols eliminar-la abans que expire, pots utilitzar la mateixa funci\u00f3 setcookie per\u00f2 indicant una data de caducitat anterior a l'actual. Question Quina \u00e9s la durada per defecte d'una galleta si no s'indica la data de caducitat, com en la seg\u00fcent crida a la funci\u00f3 setcookie ? setcookie ( \"idioma\" , \"espanyol\" ); Fins que es tanque el navegador de l'usuari. 1 hora.","title":"Galletes (cookies)"},{"location":"05-maintain-state/05-02-cookies/#problemes-de-seguretat-relacionats-amb-galletes","text":"A l'hora de fer \u00fas de galletes, cal ser conscient dels potencials problemes de seguretat que poden patir. En l'article Ultimate Guide to HTTP Cookies s'exposen tres dels problemes m\u00e9s rellevants i la seua sol\u00b7luci\u00f3. Aquest article \u00e9s una refer\u00e8ncia molt completa dels possibles valors i atributs que es poden fer servir les galletes: Set-Cookie headers","title":"Problemes de seguretat relacionats amb galletes"},{"location":"05-maintain-state/05-03-sessions/","text":"Maneig de sessions Com acabes de veure, una forma per guardar informaci\u00f3 particular de cada usuari \u00e9s utilitzar galetes ( cookies ). No obstant aix\u00f2, hi ha diversos problemes associats a les galetes, com el nombre d'elles que admet el navegador, o la seva grand\u00e0ria m\u00e0xima. Per solucionar aquests inconvenients, existeixen les sessions. El terme sessi\u00f3 fa refer\u00e8ncia al conjunt d'informaci\u00f3 relativa a un usuari concret. Aquesta informaci\u00f3 pot ser tan simple com el nom de l'usuari mateix, o m\u00e9s complexa, com els articles que ha dipositat a la cistella de compra d'una botiga en l\u00ednia. Cada usuari diferent d'un lloc web t\u00e9 la seva pr\u00f2pia informaci\u00f3 de sessi\u00f3. Per distingir una sessi\u00f3 d'una altra s'usen els identificadors de sessi\u00f3 (SID). Un SID \u00e9s un atribut que s'assigna a cada un dels visitants d'un lloc web i l'identifica. D'aquesta manera, si el servidor web coneix el SID d'un usuari, pot relacionar-lo amb tota la informaci\u00f3 que posseeix sobre ell, que es mant\u00e9 en la sessi\u00f3 de l'usuari. Aquesta informaci\u00f3 s'emmagatzema en el servidor web, generalment en fitxers tot i que tamb\u00e9 es poden utilitzar altres mecanismes d'emmagatzematge com bases de dades. Com ja haur\u00e0s suposat, la q\u00fcesti\u00f3 ara \u00e9s: \u00bfi on s'emmagatzema aquest SID, identificador de la sessi\u00f3, que \u00e9s \u00fanic per a cada usuari? Doncs hi ha dues maneres de mantenir el SID entre les p\u00e0gines d'un lloc web que visita l'usuari: Utilitzant galetes. Propagant el SID en un par\u00e0metre de la URL. El SID s'afegeix com una part m\u00e9s de la URL, de la forma: http://www.misitioweb.com/tienda/listado.php& PHPSESSID=34534fg4ffg34ty En l'exemple anterior, el SID \u00e9s el valor del par\u00e0metre PHPSESSID . Cap de les dues maneres \u00e9s perfecta. Ja saps els problemes que t\u00e9 la utilitzaci\u00f3 de cookies. Malgrat aix\u00f2, \u00e9s el millor m\u00e8tode i el m\u00e9s utilitzat. Propagar el SID com a part de la URL comporta majors desavantatges, com la impossibilitat de mantenir el SID entre diferents sessions, o el fet que compartir la URL amb una altra persona implica compartir tamb\u00e9 l'identificador de sessi\u00f3. La bona not\u00edcia, \u00e9s que el proc\u00e9s de maneig de sessions en PHP est\u00e0 automatitzat en gran mida. Quan un usuari visita un lloc web, no cal programar un procediment per veure si hi ha un SID previ i carregar les dades associades amb el mateix. Tampoc has d'utilitzar la funci\u00f3 setcookie si vols emmagatzemar els SID en galetes, o anar passant el SID entre les p\u00e0gines web del teu lloc si et decideixes per propagar. Tot aix\u00f2 PHP ho fa autom\u00e0ticament. Server side cookies A la informaci\u00f3 que s'emmagatzema en la sessi\u00f3 d'un usuari tamb\u00e9 se li coneix com a galetes en la part de servidor ( server side cookies ). Has de tenir en compte que encara aquesta informaci\u00f3 no viatja entre el client i el servidor, s\u00ed que ho fa el SID, b\u00e9 com a part de l'URL o en una cap\u00e7alera HTTP si es guarda en una galleta. En tots dos casos, aix\u00f2 planteja un possible problema de seguretat. El SID pot ser aconseguit per una altra persona, i a partir de la mateixa obtenir la informaci\u00f3 de la sessi\u00f3 de l'usuari. La manera m\u00e9s segura d'utilitzar sessions \u00e9s emmagatzemant els SID en galetes i utilitzar HTTPS per a xifrar la informaci\u00f3 que es transmet entre el servidor web i el client. Configuraci\u00f3 Per defecte, PHP inclou suport per a la gesti\u00f3 de sessions. Abans, per\u00f2, d'utilitzar sessions en el teu lloc web, has de configurar correctament PHP utilitzant els seg\u00fcents directives en el fitxer php.ini segons corresponga: Directiva significat session.use_cookies Indica si s'han d'usar cookies (1) o propagaci\u00f3 a la URL (0) per emmagatzemar el SID. session.use_only_cookies S'ha d'activar (1) quan fas servir cookies per emmagatzemar els SID, i a m\u00e9s no vols que es reconeguin els SID que es puguin passar com part de la URL (aquest m\u00e8tode es pot usar per usurpar l'identificador d'un altre usuari) session.save_handler S'utilitza per indicar a PHP com ha de emmagatzemar les dades de la sessi\u00f3 de l'usuari. Hi ha quatre opcions: en fitxers (files), en mem\u00f2ria (Mm), en una base de dades SQLite (sqlite) o utilitzant per a aix\u00f2 funcions que ha de definir el programador (user). El valor per defecte (Files) funcionar\u00e0 sense problemes en la majoria dels casos. session.name Determina el nom de la galleta que s'utilitzar\u00e0 per guardar el SID. La seva valor per defecte \u00e9s PHPSESSID. session.auto_start El seu valor per defecte \u00e9s 0, i en aquest cas haur\u00e0s de fer servir la funci\u00f3 session_start per gestionar l'inici de les sessions. Si fas servir sessions al lloc web, pot ser bona idea canviar el seu valor a 1 per que PHP activi de forma autom\u00e0tica el maneig de sessions. session.cookie_lifetime Si utilitzes l'URL per propagar el SID, aquest es perdr\u00e0 quan tanque el navegador. No obstant aix\u00f2, si utilitzes galetes, el SID es mantindr\u00e0 mentre no es destruisca la galleta. En el seu valor per defecte (0), les galetes es destrueixen quan es tanca el navegador. Si vols que es mantingui el SID durant m\u00e9s temps, has d'indicar en aquesta directiva aquest temps en segons. session.gc_maxlifetime Indica el temps en segons que s'ha de mantenir activa la sessi\u00f3, encara que no hi hagi cap activitat per part de l'usuari. El seu valor per defecte \u00e9s 1440. \u00c9s a dir, passats 24 minuts des de l'\u00faltima activitat per part de l'usuari, es tanca la sessi\u00f3 autom\u00e0ticament. session.cookie_path Indica la ruta que ha d'existir per a enviar la galleta de sessi\u00f3. session.cookie_domain Domini que ha d'haver perqu\u00e8 s'envie la cookie . Quan no s'indica valor la galleta s'envia sols al nom complet de host que l'ha enviada. session.cookie_secure Quan t\u00e9 el valor On la galleta sols s'enviar\u00e0 si les urls s\u00f3n HTTPS. session.cookie_httponly Quan t\u00e9 el valor On s'indica als navegadors que el JavaScript no pot llegir-les. La funci\u00f3 phpinfo , de la qual ja vam parlar amb anterioritat, t'ofereix informaci\u00f3 sobre la configuraci\u00f3 actual de les directives de sessi\u00f3. Cal saber La majoria de directives de PHP es poden modificar en temps d'execuci\u00f3 amb la funci\u00f3 ini_set . En la documentaci\u00f3 de PHP tens informaci\u00f3 sobre aquestes i altres directives que permeten configurar el maneig de sessions. https://www.php.net/manual/es/session.configuration.php Question Si la informaci\u00f3 de l'usuari que vols emmagatzemar inclou contingut privat com una contrasenya, \u00bfqu\u00e8 utilitzaries, galetes o la sessi\u00f3 de l'usuari? Inici i fi d'una sessi\u00f3 L'inici d'una sessi\u00f3 pot tenir lloc de dues maneres. Si has activat la directiva session.auto_start en la configuraci\u00f3 de PHP, la sessi\u00f3 comen\u00e7ar\u00e0 autom\u00e0ticament quan un usuari es connecte al teu lloc web. En el cas que aquest usuari ja haja obert una sessi\u00f3 amb anterioritat, i aquesta no s'haja eliminat, en lloc d'obrir una nova sessi\u00f3 es reprendr\u00e0 la anterior. Per a aix\u00f2 s'utilitzar\u00e0 el SID anterior, que estar\u00e0 emmagatzemat en una galleta (recorda que si fas servir propagaci\u00f3 de l'SID, no podr\u00e0s restaurar sessions anteriors; el SID figura a la URL i es perd quan tanques el navegador). Si per contra, decideixes no utilitzar l'inici autom\u00e0tic de sessions, haur\u00e0s executar la funci\u00f3 session_start() per indicar a PHP que inicie una nova sessi\u00f3 o reprenga l'anterior. Anteriorment aquesta funci\u00f3 tornava sempre true , a partir de la versi\u00f3 5.3.0 de PHP el seu comportament \u00e9s m\u00e9s coherent: retorna false en cas de no poder iniciar o restaurar la sessi\u00f3. Com l'inici de sessi\u00f3 requereix utilitzar cookies , i aquestes es transmeten en els encap\u00e7alats HTTP, heu de tenir en compte que per poder iniciar una sessi\u00f3 utilitzant session_start , haur\u00e0s de fer les cridades a aquesta funci\u00f3 abans que la p\u00e0gina web mostre informaci\u00f3 al navegador. A m\u00e9s, totes les p\u00e0gines que necessiten utilitzar la informaci\u00f3 emmagatzemada en la sessi\u00f3, hauran d'executar la funci\u00f3 session_start . Mentre la sessi\u00f3 estiga oberta, pots utilitzar la variable superglobal $_SESSION per afegir informaci\u00f3 a la sessi\u00f3 de l'usuari, o per accedir a la informaci\u00f3 emmagatzemada en la sessi\u00f3. Per exemple, per comptar el nombre de vegades que l'usuari visita la p\u00e0gina, pots fer: <? php // Iniciamos la sesi\u00f3n o recuperamos la anterior sesi\u00f3n existente session_start (); // Comprobamos si la variable ya existe if ( isset ( $_SESSION [ 'visitas' ])) $_SESSION [ 'visitas' ] ++ ; else $_SESSION [ 'visitas' ] = 0 ; ?> Si en lloc de el nombre de visites, voldries emmagatzemar l'instant en qu\u00e8 es produeix cadascuna, la variable de sessi\u00f3 \"visites\" ha de ser una matriu i per tant haur\u00e0s de canviar el codi anterior per: <? php // Iniciamos la sesi\u00f3n o recuperamos la anterior sesi\u00f3n existente session_start (); // En cada visita a\u00f1adimos un valor al array \"visitas\" $_SESSION [ 'visitas' ][] = mktime (); ?> Encara que com ja has vist, pots configurar PHP perqu\u00e8 elimine de forma autom\u00e0tica les dades de una sessi\u00f3 passat cert temps, en ocasions pot ser necessari tancar-la de forma manual en un moment determinat. Per exemple, si utilitzes sessions per recordar la informaci\u00f3 d'autenticaci\u00f3 haur\u00e0s donar-li a l'usuari de la p\u00e0gina web la possibilitat de tancar la sessi\u00f3 quan ho crega convenient. En PHP tens dues funcions per eliminar la informaci\u00f3 emmagatzemada en la sessi\u00f3: session_unset . Elimina les variables emmagatzemades a la sessi\u00f3 actual, per\u00f2 no elimina la informaci\u00f3 de la sessi\u00f3 del dispositiu d'emmagatzematge usat. session_destroy . Elimina completament la informaci\u00f3 de la sessi\u00f3 del dispositiu de emmagatzematge. Aplicacions pr\u00e0ctiques Evitar atacs CSRF La falsificaci\u00f3 de sol\u00b7licituds entre llocs (CSRF) \u00e9s un tipus d'atac que es produeix quan un lloc web, correu electr\u00f2nic, bloc, missatge instantani o programa malici\u00f3s fa que el navegador web d'un usuari realitze una acci\u00f3 no desitjada en un lloc de confian\u00e7a quan l'usuari s'autentica. En el cas dels formularis hem d'assegurar-nos que l'origen de la petici\u00f3 prov\u00e9 de la nostra aplicaci\u00f3 web. Per a aconseguir-ho caldr\u00e0: Generar un token \u00fanic quan es sol\u00b7licite mostrar un formulari. Guardar el token en un variable de sessi\u00f3. Incloure en el formulari un camp ocult amb el token. En el moment de processar el formulari comprovarem que el token enviat pel formulari coincideix amb el token emmagatzemat en la variable de sessi\u00f3. Si no \u00e9s aix\u00ed, mostarem un error. Separar la l\u00f2gica dels formularis Fins ara, hem creat formularis ( self-processing forms ) que es processaven en el mateix fitxer. Combinant variables de sessi\u00f3 i redireccions podem aconseguir separar la l\u00f2gica del formulari en dos fitxer. Si agafem com a exemple la creaci\u00f3 de noves pel\u00b7l\u00edcules: El fitxer movies-create.php s'encarregar\u00e0 de mostrar el formulari i el fitxer movies-store.php s'encarregar\u00e0 de processar-lo. En cas d'errors de validaci\u00f3 es redirigir\u00e0 a movies-create.php guardant en una variable de sessi\u00f3 els errors i les dades correctament validades. En cas d'\u00e8xit, movies-store.php redirigir\u00e0 a la p\u00e0gina index.php guardant en una variable de sessi\u00f3 el missatge d'\u00e8xit, que caldr\u00e0 mostrar en index.php . Redireccions Una redirecci\u00f3 \u00e9s una t\u00e8cnica que permet fer que el servidor web responga amb una URL diferent a l\u2019actual. Per a aconseguir s\u2019utilitza la funci\u00f3 header(). // Send to the browser a new url and send a HTTP redirect code (302) header ( 'Location: /index.php' ) // this function terminate the current script exit (); Compte amb les redireccions \u00c9s molt important fer una correcta gesti\u00f3 dels errors abans de fer una redirecci\u00f3, sin\u00f3 \u00e9s possible que s\u2019amaguen els errors i passen coses estranyes.","title":"Sessions"},{"location":"05-maintain-state/05-03-sessions/#maneig-de-sessions","text":"Com acabes de veure, una forma per guardar informaci\u00f3 particular de cada usuari \u00e9s utilitzar galetes ( cookies ). No obstant aix\u00f2, hi ha diversos problemes associats a les galetes, com el nombre d'elles que admet el navegador, o la seva grand\u00e0ria m\u00e0xima. Per solucionar aquests inconvenients, existeixen les sessions. El terme sessi\u00f3 fa refer\u00e8ncia al conjunt d'informaci\u00f3 relativa a un usuari concret. Aquesta informaci\u00f3 pot ser tan simple com el nom de l'usuari mateix, o m\u00e9s complexa, com els articles que ha dipositat a la cistella de compra d'una botiga en l\u00ednia. Cada usuari diferent d'un lloc web t\u00e9 la seva pr\u00f2pia informaci\u00f3 de sessi\u00f3. Per distingir una sessi\u00f3 d'una altra s'usen els identificadors de sessi\u00f3 (SID). Un SID \u00e9s un atribut que s'assigna a cada un dels visitants d'un lloc web i l'identifica. D'aquesta manera, si el servidor web coneix el SID d'un usuari, pot relacionar-lo amb tota la informaci\u00f3 que posseeix sobre ell, que es mant\u00e9 en la sessi\u00f3 de l'usuari. Aquesta informaci\u00f3 s'emmagatzema en el servidor web, generalment en fitxers tot i que tamb\u00e9 es poden utilitzar altres mecanismes d'emmagatzematge com bases de dades. Com ja haur\u00e0s suposat, la q\u00fcesti\u00f3 ara \u00e9s: \u00bfi on s'emmagatzema aquest SID, identificador de la sessi\u00f3, que \u00e9s \u00fanic per a cada usuari? Doncs hi ha dues maneres de mantenir el SID entre les p\u00e0gines d'un lloc web que visita l'usuari: Utilitzant galetes. Propagant el SID en un par\u00e0metre de la URL. El SID s'afegeix com una part m\u00e9s de la URL, de la forma: http://www.misitioweb.com/tienda/listado.php& PHPSESSID=34534fg4ffg34ty En l'exemple anterior, el SID \u00e9s el valor del par\u00e0metre PHPSESSID . Cap de les dues maneres \u00e9s perfecta. Ja saps els problemes que t\u00e9 la utilitzaci\u00f3 de cookies. Malgrat aix\u00f2, \u00e9s el millor m\u00e8tode i el m\u00e9s utilitzat. Propagar el SID com a part de la URL comporta majors desavantatges, com la impossibilitat de mantenir el SID entre diferents sessions, o el fet que compartir la URL amb una altra persona implica compartir tamb\u00e9 l'identificador de sessi\u00f3. La bona not\u00edcia, \u00e9s que el proc\u00e9s de maneig de sessions en PHP est\u00e0 automatitzat en gran mida. Quan un usuari visita un lloc web, no cal programar un procediment per veure si hi ha un SID previ i carregar les dades associades amb el mateix. Tampoc has d'utilitzar la funci\u00f3 setcookie si vols emmagatzemar els SID en galetes, o anar passant el SID entre les p\u00e0gines web del teu lloc si et decideixes per propagar. Tot aix\u00f2 PHP ho fa autom\u00e0ticament. Server side cookies A la informaci\u00f3 que s'emmagatzema en la sessi\u00f3 d'un usuari tamb\u00e9 se li coneix com a galetes en la part de servidor ( server side cookies ). Has de tenir en compte que encara aquesta informaci\u00f3 no viatja entre el client i el servidor, s\u00ed que ho fa el SID, b\u00e9 com a part de l'URL o en una cap\u00e7alera HTTP si es guarda en una galleta. En tots dos casos, aix\u00f2 planteja un possible problema de seguretat. El SID pot ser aconseguit per una altra persona, i a partir de la mateixa obtenir la informaci\u00f3 de la sessi\u00f3 de l'usuari. La manera m\u00e9s segura d'utilitzar sessions \u00e9s emmagatzemant els SID en galetes i utilitzar HTTPS per a xifrar la informaci\u00f3 que es transmet entre el servidor web i el client.","title":"Maneig de sessions"},{"location":"05-maintain-state/05-03-sessions/#configuracio","text":"Per defecte, PHP inclou suport per a la gesti\u00f3 de sessions. Abans, per\u00f2, d'utilitzar sessions en el teu lloc web, has de configurar correctament PHP utilitzant els seg\u00fcents directives en el fitxer php.ini segons corresponga: Directiva significat session.use_cookies Indica si s'han d'usar cookies (1) o propagaci\u00f3 a la URL (0) per emmagatzemar el SID. session.use_only_cookies S'ha d'activar (1) quan fas servir cookies per emmagatzemar els SID, i a m\u00e9s no vols que es reconeguin els SID que es puguin passar com part de la URL (aquest m\u00e8tode es pot usar per usurpar l'identificador d'un altre usuari) session.save_handler S'utilitza per indicar a PHP com ha de emmagatzemar les dades de la sessi\u00f3 de l'usuari. Hi ha quatre opcions: en fitxers (files), en mem\u00f2ria (Mm), en una base de dades SQLite (sqlite) o utilitzant per a aix\u00f2 funcions que ha de definir el programador (user). El valor per defecte (Files) funcionar\u00e0 sense problemes en la majoria dels casos. session.name Determina el nom de la galleta que s'utilitzar\u00e0 per guardar el SID. La seva valor per defecte \u00e9s PHPSESSID. session.auto_start El seu valor per defecte \u00e9s 0, i en aquest cas haur\u00e0s de fer servir la funci\u00f3 session_start per gestionar l'inici de les sessions. Si fas servir sessions al lloc web, pot ser bona idea canviar el seu valor a 1 per que PHP activi de forma autom\u00e0tica el maneig de sessions. session.cookie_lifetime Si utilitzes l'URL per propagar el SID, aquest es perdr\u00e0 quan tanque el navegador. No obstant aix\u00f2, si utilitzes galetes, el SID es mantindr\u00e0 mentre no es destruisca la galleta. En el seu valor per defecte (0), les galetes es destrueixen quan es tanca el navegador. Si vols que es mantingui el SID durant m\u00e9s temps, has d'indicar en aquesta directiva aquest temps en segons. session.gc_maxlifetime Indica el temps en segons que s'ha de mantenir activa la sessi\u00f3, encara que no hi hagi cap activitat per part de l'usuari. El seu valor per defecte \u00e9s 1440. \u00c9s a dir, passats 24 minuts des de l'\u00faltima activitat per part de l'usuari, es tanca la sessi\u00f3 autom\u00e0ticament. session.cookie_path Indica la ruta que ha d'existir per a enviar la galleta de sessi\u00f3. session.cookie_domain Domini que ha d'haver perqu\u00e8 s'envie la cookie . Quan no s'indica valor la galleta s'envia sols al nom complet de host que l'ha enviada. session.cookie_secure Quan t\u00e9 el valor On la galleta sols s'enviar\u00e0 si les urls s\u00f3n HTTPS. session.cookie_httponly Quan t\u00e9 el valor On s'indica als navegadors que el JavaScript no pot llegir-les. La funci\u00f3 phpinfo , de la qual ja vam parlar amb anterioritat, t'ofereix informaci\u00f3 sobre la configuraci\u00f3 actual de les directives de sessi\u00f3. Cal saber La majoria de directives de PHP es poden modificar en temps d'execuci\u00f3 amb la funci\u00f3 ini_set . En la documentaci\u00f3 de PHP tens informaci\u00f3 sobre aquestes i altres directives que permeten configurar el maneig de sessions. https://www.php.net/manual/es/session.configuration.php Question Si la informaci\u00f3 de l'usuari que vols emmagatzemar inclou contingut privat com una contrasenya, \u00bfqu\u00e8 utilitzaries, galetes o la sessi\u00f3 de l'usuari?","title":"Configuraci\u00f3"},{"location":"05-maintain-state/05-03-sessions/#inici-i-fi-duna-sessio","text":"L'inici d'una sessi\u00f3 pot tenir lloc de dues maneres. Si has activat la directiva session.auto_start en la configuraci\u00f3 de PHP, la sessi\u00f3 comen\u00e7ar\u00e0 autom\u00e0ticament quan un usuari es connecte al teu lloc web. En el cas que aquest usuari ja haja obert una sessi\u00f3 amb anterioritat, i aquesta no s'haja eliminat, en lloc d'obrir una nova sessi\u00f3 es reprendr\u00e0 la anterior. Per a aix\u00f2 s'utilitzar\u00e0 el SID anterior, que estar\u00e0 emmagatzemat en una galleta (recorda que si fas servir propagaci\u00f3 de l'SID, no podr\u00e0s restaurar sessions anteriors; el SID figura a la URL i es perd quan tanques el navegador). Si per contra, decideixes no utilitzar l'inici autom\u00e0tic de sessions, haur\u00e0s executar la funci\u00f3 session_start() per indicar a PHP que inicie una nova sessi\u00f3 o reprenga l'anterior. Anteriorment aquesta funci\u00f3 tornava sempre true , a partir de la versi\u00f3 5.3.0 de PHP el seu comportament \u00e9s m\u00e9s coherent: retorna false en cas de no poder iniciar o restaurar la sessi\u00f3. Com l'inici de sessi\u00f3 requereix utilitzar cookies , i aquestes es transmeten en els encap\u00e7alats HTTP, heu de tenir en compte que per poder iniciar una sessi\u00f3 utilitzant session_start , haur\u00e0s de fer les cridades a aquesta funci\u00f3 abans que la p\u00e0gina web mostre informaci\u00f3 al navegador. A m\u00e9s, totes les p\u00e0gines que necessiten utilitzar la informaci\u00f3 emmagatzemada en la sessi\u00f3, hauran d'executar la funci\u00f3 session_start . Mentre la sessi\u00f3 estiga oberta, pots utilitzar la variable superglobal $_SESSION per afegir informaci\u00f3 a la sessi\u00f3 de l'usuari, o per accedir a la informaci\u00f3 emmagatzemada en la sessi\u00f3. Per exemple, per comptar el nombre de vegades que l'usuari visita la p\u00e0gina, pots fer: <? php // Iniciamos la sesi\u00f3n o recuperamos la anterior sesi\u00f3n existente session_start (); // Comprobamos si la variable ya existe if ( isset ( $_SESSION [ 'visitas' ])) $_SESSION [ 'visitas' ] ++ ; else $_SESSION [ 'visitas' ] = 0 ; ?> Si en lloc de el nombre de visites, voldries emmagatzemar l'instant en qu\u00e8 es produeix cadascuna, la variable de sessi\u00f3 \"visites\" ha de ser una matriu i per tant haur\u00e0s de canviar el codi anterior per: <? php // Iniciamos la sesi\u00f3n o recuperamos la anterior sesi\u00f3n existente session_start (); // En cada visita a\u00f1adimos un valor al array \"visitas\" $_SESSION [ 'visitas' ][] = mktime (); ?> Encara que com ja has vist, pots configurar PHP perqu\u00e8 elimine de forma autom\u00e0tica les dades de una sessi\u00f3 passat cert temps, en ocasions pot ser necessari tancar-la de forma manual en un moment determinat. Per exemple, si utilitzes sessions per recordar la informaci\u00f3 d'autenticaci\u00f3 haur\u00e0s donar-li a l'usuari de la p\u00e0gina web la possibilitat de tancar la sessi\u00f3 quan ho crega convenient. En PHP tens dues funcions per eliminar la informaci\u00f3 emmagatzemada en la sessi\u00f3: session_unset . Elimina les variables emmagatzemades a la sessi\u00f3 actual, per\u00f2 no elimina la informaci\u00f3 de la sessi\u00f3 del dispositiu d'emmagatzematge usat. session_destroy . Elimina completament la informaci\u00f3 de la sessi\u00f3 del dispositiu de emmagatzematge.","title":"Inici i fi d'una sessi\u00f3"},{"location":"05-maintain-state/05-03-sessions/#aplicacions-practiques","text":"","title":"Aplicacions pr\u00e0ctiques"},{"location":"05-maintain-state/05-03-sessions/#evitar-atacs-csrf","text":"La falsificaci\u00f3 de sol\u00b7licituds entre llocs (CSRF) \u00e9s un tipus d'atac que es produeix quan un lloc web, correu electr\u00f2nic, bloc, missatge instantani o programa malici\u00f3s fa que el navegador web d'un usuari realitze una acci\u00f3 no desitjada en un lloc de confian\u00e7a quan l'usuari s'autentica. En el cas dels formularis hem d'assegurar-nos que l'origen de la petici\u00f3 prov\u00e9 de la nostra aplicaci\u00f3 web. Per a aconseguir-ho caldr\u00e0: Generar un token \u00fanic quan es sol\u00b7licite mostrar un formulari. Guardar el token en un variable de sessi\u00f3. Incloure en el formulari un camp ocult amb el token. En el moment de processar el formulari comprovarem que el token enviat pel formulari coincideix amb el token emmagatzemat en la variable de sessi\u00f3. Si no \u00e9s aix\u00ed, mostarem un error.","title":"Evitar atacs CSRF"},{"location":"05-maintain-state/05-03-sessions/#separar-la-logica-dels-formularis","text":"Fins ara, hem creat formularis ( self-processing forms ) que es processaven en el mateix fitxer. Combinant variables de sessi\u00f3 i redireccions podem aconseguir separar la l\u00f2gica del formulari en dos fitxer. Si agafem com a exemple la creaci\u00f3 de noves pel\u00b7l\u00edcules: El fitxer movies-create.php s'encarregar\u00e0 de mostrar el formulari i el fitxer movies-store.php s'encarregar\u00e0 de processar-lo. En cas d'errors de validaci\u00f3 es redirigir\u00e0 a movies-create.php guardant en una variable de sessi\u00f3 els errors i les dades correctament validades. En cas d'\u00e8xit, movies-store.php redirigir\u00e0 a la p\u00e0gina index.php guardant en una variable de sessi\u00f3 el missatge d'\u00e8xit, que caldr\u00e0 mostrar en index.php . Redireccions Una redirecci\u00f3 \u00e9s una t\u00e8cnica que permet fer que el servidor web responga amb una URL diferent a l\u2019actual. Per a aconseguir s\u2019utilitza la funci\u00f3 header(). // Send to the browser a new url and send a HTTP redirect code (302) header ( 'Location: /index.php' ) // this function terminate the current script exit (); Compte amb les redireccions \u00c9s molt important fer una correcta gesti\u00f3 dels errors abans de fer una redirecci\u00f3, sin\u00f3 \u00e9s possible que s\u2019amaguen els errors i passen coses estranyes.","title":"Separar la l\u00f2gica dels formularis"},{"location":"05-maintain-state/05-04-best-practices/","text":"Bones pr\u00e0ctiques En la seg\u00fcent secci\u00f3 fem un recull d'algunes mesures que cal tenir en compte a l'hora de posar una aplicaci\u00f3 web en producci\u00f3. Usa sempre HTTPS Usa sempre HTTPS si no s'enviar\u00e0 tota la informaci\u00f3 en text pla. Contrasenyes incloses. Usa sessions A difer\u00e8ncia de les galetes les dades emmagatzemades en les sessions no s'envien mitjan\u00e7ant els encap\u00e7alats HTTP, romanen al servidor. El que s\u00ed s'envia \u00e9s l'identificador de sessi\u00f3. Caldr\u00e0 prendre mesures perqu\u00e8 l'identificador no puga ser accessible per tercers i aix\u00ed poder accedir a les dades emmagatzemades. Segons l' OWASP : Session settings are some of the MOST important values to concentrate on in configuring. It is a good practice to change session.name to something new. I proposen la seg\u00fcent configuraci\u00f3 b\u00e0sica: session.save_path = /path/PHP-session/ session.name = myPHPSESSID session.auto_start = Off session.use_trans_sid = 0 session.cookie_domain = full.qualified.domain.name #session.cookie_path = /application/path/ session.use_strict_mode = 1 session.use_cookies = 1 session.use_only_cookies = 1 session.cookie_lifetime = 14400 # 4 hours session.cookie_secure = 1 session.cookie_httponly = 1 session.cookie_samesite = Strict session.cache_expire = 30 session.sid_length = 256 session.sid_bits_per_character = 6 # PHP 7.2+ session.hash_function = 1 # PHP 7.0-7.1 session.hash_bits_per_character = 6 # PHP 7.0-7.1 Les recomanacions en major detall: Control de la vida de sessi\u00f3 Fes que expire la sessi\u00f3 despr\u00e9s d\u2019un curt per\u00edode d\u2019inactivitat : ajusteu el temps d\u2019inactivitat a 5 minuts per a aplicacions altament protegides fins a no m\u00e9s de 30 minuts per a aplicacions de baix risc. Habilita l\u2019opci\u00f3 de tancament de sessi\u00f3 : caduca i destrueix expl\u00edcitament la sessi\u00f3 en tancar la sessi\u00f3. Eviteu els inicis de sessi\u00f3 persistents (opci\u00f3 \"recordeu-me\") : opcionalment podeu restringir la informaci\u00f3 conservada i revelada per l'aplicaci\u00f3, \u00e9s a dir, obligar a l'usuari a tornar a iniciar sessi\u00f3 abans de realitzar cap operaci\u00f3 cr\u00edtica. Fes que expire la sessi\u00f3 quan hi haja error de seguretat : qualsevol error de seguretat de l'aplicaci\u00f3 hauria de donar lloc a la finalitzaci\u00f3 de la sessi\u00f3. Fes caducar la sessi\u00f3 quan siga de llarga durada : obligaci\u00f3 a reautentificar la sessi\u00f3, que tot i estar actiu ha arribat al temps m\u00e0xim perm\u00e8s, p.e. unes poques hores. Elimineu la galleta de sessi\u00f3 en destruir una sessi\u00f3 . Identificador de sessi\u00f3 Utilitzeu nom\u00e9s galetes per propagar l\u2019ID de sessi\u00f3 , ja que quan es transmeten mitjan\u00e7ant un par\u00e0metre URL, les sol\u00b7licituds GET poden ser emmagatzemades a l\u2019historial del navegador, a la mem\u00f2ria cau i als marcadors. Aleshores tamb\u00e9 es pot visualitzar f\u00e0cilment. Regenereu l'identificador de sessi\u00f3 : regenereu (substitu\u00efu-ne per un de nou) l'identificador de sessi\u00f3, almenys cada cop que canvie el nivell de privilegi de l'usuari. Generalment es pot regenerar abans de qualsevol transacci\u00f3 important, despr\u00e9s d\u2019un determinat nombre de sol\u00b7licituds o despr\u00e9s d\u2019un per\u00edode de temps. Comproveu si l'identificador de sessi\u00f3 \u00e9s v\u00e0lid (de mida i tipus previst) i que ha estat generat per l'aplicaci\u00f3 i no proporcionat per l'usuari. L'identificador de sessi\u00f3 hauria de ser adequadament llarg, imprevisible, dif\u00edcil de reproduir i creat a partir de fonts aleat\u00f2ries d'alta qualitat . Cookie de sessi\u00f3 Definiu el domini de la galleta a quelcom m\u00e9s espec\u00edfic que el domini de primer nivell. No emmagatzeneu res a la galleta (almenys qualsevol informaci\u00f3 sensible com el nom d\u2019usuari o la contrasenya) sols\u2019ID de sessi\u00f3. Definiu el senyalador nom\u00e9s http per desactivar la captura de l'identificador de sessi\u00f3 mitjan\u00e7ant XSS. Quan siga possible, utilitzeu un xifrat fort (SSL) i l'atribut cookie_secure per permetre la transmissi\u00f3 de cookies nom\u00e9s a trav\u00e9s de https. Emmagatzematge de dades de sessi\u00f3 Determineu on s'emmagatzemen les dades de sessi\u00f3 i si es tracta d\u2019un sistema de fitxers o d\u2019una base de dades, determineu qui m\u00e9s podria tenir acc\u00e9s a aquestes dades. Quan s'emmagatzemen les dades de sessi\u00f3 en fitxers, assegureu-vos que l'aplicaci\u00f3 est\u00e0 configurada per utilitzar un directori privat independent (per exemple, la directiva session.save_path ). Utilitzeu els permisos del sistema de fitxers per protegir aquests fitxers d\u2019observaci\u00f3 o modificaci\u00f3 d\u2019usuaris diferents dels comptes necessaris per operar el servidor web i les aplicacions. Si aix\u00f2 no \u00e9s possible, cal xifrar les dades de la sessi\u00f3 o contenir nom\u00e9s dades no sensibles. Tingueu en compte que PHP utilitza de manera predeterminada el directori temporal del sistema p\u00fablic. Totes les variables de sessi\u00f3 s\u2019han de validar i sanejar per assegurar-se que siguem correctes i que no cont\u00e9 car\u00e0cters inesperats. No con\u00e8ixer les contrasenyes Al final, tothom crea una aplicaci\u00f3 PHP que es basa en la sessi\u00f3 d\u2019usuari. Els noms d\u2019usuari i les contrasenyes s\u2019emmagatzemen en una base de dades i s\u2019utilitzen posteriorment per autentificar els usuaris despr\u00e9s de l\u2019inici de sessi\u00f3. \u00c9s important que fer hash de les contrasenyes correctament abans d\u2019emmagatzemar-les. El hashing i el xifrat s\u00f3n dues coses molt diferents que sovint es confonen. El hashing \u00e9s una funci\u00f3 irreversible i unidireccional. \u00c9s produeix una cadena de longitud fixa que no es pot invertir. Aix\u00f2 vol dir que podeu comparar un hash amb un altre per determinar si tots dos provenien de la mateixa cadena font, per\u00f2 no podeu determinar la cadena original. Si les contrasenyes no s'emmagatzemen amb hashing i un tercer no autoritzat accedeix a la vostra base de dades, tots els comptes d'usuari estaran compromesos. A difer\u00e8ncia del hashing , el xifrat \u00e9s reversible (sempre que tingueu la clau). El xifratge \u00e9s \u00fatil en altres \u00e0rees, per\u00f2 \u00e9s una estrat\u00e8gia deficient per emmagatzemar contrasenyes de forma segura. Les contrasenyes tamb\u00e9 han de salar-se individualment afegint una cadena aleat\u00f2ria a cada contrasenya abans d'aplicar hashing . Aix\u00f2 evita els atacs de diccionari i l'\u00fas de \"taules de l'arc de Sant Mart\u00ed\" (una llista inversa de hash criptogr\u00e0fics per a contrasenyes comunes.) El hashing i el salat s\u00f3n vitals, ja que sovint els usuaris utilitzen la mateixa contrasenya per a diversos serveis i la qualitat de la contrasenya \u00e9s deficient. Addicionalment, haureu d'utilitzar un algorisme especialitzat en hashing en lloc d'una funci\u00f3 de hash criptogr\u00e0fic de prop\u00f2sit general i r\u00e0pid (per exemple, SHA256). La llista breu d'algorismes de hashing de contrasenya acceptables (a juny de 2018) a utilitzar s\u00f3n: Argon2 (disponible a PHP 7.2 i versions posteriors) Scrypt Bcrypt (PHP us proporciona aquesta; vegeu m\u00e9s avall) PBKDF2 amb HMAC-SHA256 o HMAC-SHA512 Afortunadament, avui en dia PHP ens ho facilita. Hashing de contrasenyes amb password_hash A PHP 5.5 s'ha introdu\u00eft password_hash() . En aquest moment est\u00e0 utilitzant BCrypt, l'algorisme m\u00e9s fort actualment suportat per PHP. Tot i aix\u00f2, s'actualitzar\u00e0 en el futur per donar suport a m\u00e9s algoritmes. La biblioteca de password_compat es va crear per proporcionar una compatibilitat de PHP> = 5.3.7. A continuaci\u00f3 hem aplicat hashing a una cadena i, a continuaci\u00f3, apliquem el hashing contra una nova cadena. Com que les dues cadenes d'origen s\u00f3n diferents (\"contrasenya-secreta\" i \"contrasenya-err\u00f2nia\"), aquesta sessi\u00f3 fallar\u00e0. $passwordHash = password_hash ( \"contrasenya-secreta\" , PASSWORD_DEFAULT ); if ( password_verify ( \"contrenya-err\u00f2nia\" , $passwordHash )) { // Contrasenya correcta } else { // Contrasenya incorrecta } password_hash() s'ocupa de la salificaci\u00f3 de contrasenyes. La sal s'emmagatzema, juntament amb l'algorisme i el \"cost\", com a part del hash. password_verify() extreu aix\u00f2 per determinar com comprovar la contrasenya, de manera que no necessiteu un camp de base de dades independent per emmagatzemar les vostres sals. PASSWORD_DEFAULT PASSWORD_DEFAULT . Actualment utilitza l\u2019algoritme bcrypt (predeterminat a partir de PHP 5.5.0). Observeu que aquesta constant est\u00e0 pensada per a adaptar-se sempre que hi haja un algoritme nou i m\u00e9s fort a PHP. Per aquesta ra\u00f3, la longitud del resultat d\u2019utilitzar aquest identificador pot canviar amb el temps. Per tant, es recomana emmagatzemar el resultat en una columna d\u2019una base de dades de m\u00e9s de 60 caracters (255 caracters seria una bona elecci\u00f3). Recursos The 2018 Guide to Building Secure PHP Software PHP: The Right Way. Security Session Management Basics Ultimate PHP Security Best Practices PHP Session Security Best Practices PHP Sessions in depth Session Management Cheat Sheet","title":"Bones pr\u00e0ctiques"},{"location":"05-maintain-state/05-04-best-practices/#bones-practiques","text":"En la seg\u00fcent secci\u00f3 fem un recull d'algunes mesures que cal tenir en compte a l'hora de posar una aplicaci\u00f3 web en producci\u00f3.","title":"Bones pr\u00e0ctiques"},{"location":"05-maintain-state/05-04-best-practices/#usa-sempre-https","text":"Usa sempre HTTPS si no s'enviar\u00e0 tota la informaci\u00f3 en text pla. Contrasenyes incloses.","title":"Usa sempre HTTPS"},{"location":"05-maintain-state/05-04-best-practices/#usa-sessions","text":"A difer\u00e8ncia de les galetes les dades emmagatzemades en les sessions no s'envien mitjan\u00e7ant els encap\u00e7alats HTTP, romanen al servidor. El que s\u00ed s'envia \u00e9s l'identificador de sessi\u00f3. Caldr\u00e0 prendre mesures perqu\u00e8 l'identificador no puga ser accessible per tercers i aix\u00ed poder accedir a les dades emmagatzemades. Segons l' OWASP : Session settings are some of the MOST important values to concentrate on in configuring. It is a good practice to change session.name to something new. I proposen la seg\u00fcent configuraci\u00f3 b\u00e0sica: session.save_path = /path/PHP-session/ session.name = myPHPSESSID session.auto_start = Off session.use_trans_sid = 0 session.cookie_domain = full.qualified.domain.name #session.cookie_path = /application/path/ session.use_strict_mode = 1 session.use_cookies = 1 session.use_only_cookies = 1 session.cookie_lifetime = 14400 # 4 hours session.cookie_secure = 1 session.cookie_httponly = 1 session.cookie_samesite = Strict session.cache_expire = 30 session.sid_length = 256 session.sid_bits_per_character = 6 # PHP 7.2+ session.hash_function = 1 # PHP 7.0-7.1 session.hash_bits_per_character = 6 # PHP 7.0-7.1 Les recomanacions en major detall:","title":"Usa sessions"},{"location":"05-maintain-state/05-04-best-practices/#control-de-la-vida-de-sessio","text":"Fes que expire la sessi\u00f3 despr\u00e9s d\u2019un curt per\u00edode d\u2019inactivitat : ajusteu el temps d\u2019inactivitat a 5 minuts per a aplicacions altament protegides fins a no m\u00e9s de 30 minuts per a aplicacions de baix risc. Habilita l\u2019opci\u00f3 de tancament de sessi\u00f3 : caduca i destrueix expl\u00edcitament la sessi\u00f3 en tancar la sessi\u00f3. Eviteu els inicis de sessi\u00f3 persistents (opci\u00f3 \"recordeu-me\") : opcionalment podeu restringir la informaci\u00f3 conservada i revelada per l'aplicaci\u00f3, \u00e9s a dir, obligar a l'usuari a tornar a iniciar sessi\u00f3 abans de realitzar cap operaci\u00f3 cr\u00edtica. Fes que expire la sessi\u00f3 quan hi haja error de seguretat : qualsevol error de seguretat de l'aplicaci\u00f3 hauria de donar lloc a la finalitzaci\u00f3 de la sessi\u00f3. Fes caducar la sessi\u00f3 quan siga de llarga durada : obligaci\u00f3 a reautentificar la sessi\u00f3, que tot i estar actiu ha arribat al temps m\u00e0xim perm\u00e8s, p.e. unes poques hores. Elimineu la galleta de sessi\u00f3 en destruir una sessi\u00f3 .","title":"Control de la vida de sessi\u00f3"},{"location":"05-maintain-state/05-04-best-practices/#identificador-de-sessio","text":"Utilitzeu nom\u00e9s galetes per propagar l\u2019ID de sessi\u00f3 , ja que quan es transmeten mitjan\u00e7ant un par\u00e0metre URL, les sol\u00b7licituds GET poden ser emmagatzemades a l\u2019historial del navegador, a la mem\u00f2ria cau i als marcadors. Aleshores tamb\u00e9 es pot visualitzar f\u00e0cilment. Regenereu l'identificador de sessi\u00f3 : regenereu (substitu\u00efu-ne per un de nou) l'identificador de sessi\u00f3, almenys cada cop que canvie el nivell de privilegi de l'usuari. Generalment es pot regenerar abans de qualsevol transacci\u00f3 important, despr\u00e9s d\u2019un determinat nombre de sol\u00b7licituds o despr\u00e9s d\u2019un per\u00edode de temps. Comproveu si l'identificador de sessi\u00f3 \u00e9s v\u00e0lid (de mida i tipus previst) i que ha estat generat per l'aplicaci\u00f3 i no proporcionat per l'usuari. L'identificador de sessi\u00f3 hauria de ser adequadament llarg, imprevisible, dif\u00edcil de reproduir i creat a partir de fonts aleat\u00f2ries d'alta qualitat .","title":"Identificador de sessi\u00f3"},{"location":"05-maintain-state/05-04-best-practices/#cookie-de-sessio","text":"Definiu el domini de la galleta a quelcom m\u00e9s espec\u00edfic que el domini de primer nivell. No emmagatzeneu res a la galleta (almenys qualsevol informaci\u00f3 sensible com el nom d\u2019usuari o la contrasenya) sols\u2019ID de sessi\u00f3. Definiu el senyalador nom\u00e9s http per desactivar la captura de l'identificador de sessi\u00f3 mitjan\u00e7ant XSS. Quan siga possible, utilitzeu un xifrat fort (SSL) i l'atribut cookie_secure per permetre la transmissi\u00f3 de cookies nom\u00e9s a trav\u00e9s de https.","title":"Cookie de sessi\u00f3"},{"location":"05-maintain-state/05-04-best-practices/#emmagatzematge-de-dades-de-sessio","text":"Determineu on s'emmagatzemen les dades de sessi\u00f3 i si es tracta d\u2019un sistema de fitxers o d\u2019una base de dades, determineu qui m\u00e9s podria tenir acc\u00e9s a aquestes dades. Quan s'emmagatzemen les dades de sessi\u00f3 en fitxers, assegureu-vos que l'aplicaci\u00f3 est\u00e0 configurada per utilitzar un directori privat independent (per exemple, la directiva session.save_path ). Utilitzeu els permisos del sistema de fitxers per protegir aquests fitxers d\u2019observaci\u00f3 o modificaci\u00f3 d\u2019usuaris diferents dels comptes necessaris per operar el servidor web i les aplicacions. Si aix\u00f2 no \u00e9s possible, cal xifrar les dades de la sessi\u00f3 o contenir nom\u00e9s dades no sensibles. Tingueu en compte que PHP utilitza de manera predeterminada el directori temporal del sistema p\u00fablic. Totes les variables de sessi\u00f3 s\u2019han de validar i sanejar per assegurar-se que siguem correctes i que no cont\u00e9 car\u00e0cters inesperats.","title":"Emmagatzematge de dades de sessi\u00f3"},{"location":"05-maintain-state/05-04-best-practices/#no-coneixer-les-contrasenyes","text":"Al final, tothom crea una aplicaci\u00f3 PHP que es basa en la sessi\u00f3 d\u2019usuari. Els noms d\u2019usuari i les contrasenyes s\u2019emmagatzemen en una base de dades i s\u2019utilitzen posteriorment per autentificar els usuaris despr\u00e9s de l\u2019inici de sessi\u00f3. \u00c9s important que fer hash de les contrasenyes correctament abans d\u2019emmagatzemar-les. El hashing i el xifrat s\u00f3n dues coses molt diferents que sovint es confonen. El hashing \u00e9s una funci\u00f3 irreversible i unidireccional. \u00c9s produeix una cadena de longitud fixa que no es pot invertir. Aix\u00f2 vol dir que podeu comparar un hash amb un altre per determinar si tots dos provenien de la mateixa cadena font, per\u00f2 no podeu determinar la cadena original. Si les contrasenyes no s'emmagatzemen amb hashing i un tercer no autoritzat accedeix a la vostra base de dades, tots els comptes d'usuari estaran compromesos. A difer\u00e8ncia del hashing , el xifrat \u00e9s reversible (sempre que tingueu la clau). El xifratge \u00e9s \u00fatil en altres \u00e0rees, per\u00f2 \u00e9s una estrat\u00e8gia deficient per emmagatzemar contrasenyes de forma segura. Les contrasenyes tamb\u00e9 han de salar-se individualment afegint una cadena aleat\u00f2ria a cada contrasenya abans d'aplicar hashing . Aix\u00f2 evita els atacs de diccionari i l'\u00fas de \"taules de l'arc de Sant Mart\u00ed\" (una llista inversa de hash criptogr\u00e0fics per a contrasenyes comunes.) El hashing i el salat s\u00f3n vitals, ja que sovint els usuaris utilitzen la mateixa contrasenya per a diversos serveis i la qualitat de la contrasenya \u00e9s deficient. Addicionalment, haureu d'utilitzar un algorisme especialitzat en hashing en lloc d'una funci\u00f3 de hash criptogr\u00e0fic de prop\u00f2sit general i r\u00e0pid (per exemple, SHA256). La llista breu d'algorismes de hashing de contrasenya acceptables (a juny de 2018) a utilitzar s\u00f3n: Argon2 (disponible a PHP 7.2 i versions posteriors) Scrypt Bcrypt (PHP us proporciona aquesta; vegeu m\u00e9s avall) PBKDF2 amb HMAC-SHA256 o HMAC-SHA512 Afortunadament, avui en dia PHP ens ho facilita.","title":"No con\u00e8ixer les contrasenyes"},{"location":"05-maintain-state/05-04-best-practices/#hashing-de-contrasenyes-amb-password_hash","text":"A PHP 5.5 s'ha introdu\u00eft password_hash() . En aquest moment est\u00e0 utilitzant BCrypt, l'algorisme m\u00e9s fort actualment suportat per PHP. Tot i aix\u00f2, s'actualitzar\u00e0 en el futur per donar suport a m\u00e9s algoritmes. La biblioteca de password_compat es va crear per proporcionar una compatibilitat de PHP> = 5.3.7. A continuaci\u00f3 hem aplicat hashing a una cadena i, a continuaci\u00f3, apliquem el hashing contra una nova cadena. Com que les dues cadenes d'origen s\u00f3n diferents (\"contrasenya-secreta\" i \"contrasenya-err\u00f2nia\"), aquesta sessi\u00f3 fallar\u00e0. $passwordHash = password_hash ( \"contrasenya-secreta\" , PASSWORD_DEFAULT ); if ( password_verify ( \"contrenya-err\u00f2nia\" , $passwordHash )) { // Contrasenya correcta } else { // Contrasenya incorrecta } password_hash() s'ocupa de la salificaci\u00f3 de contrasenyes. La sal s'emmagatzema, juntament amb l'algorisme i el \"cost\", com a part del hash. password_verify() extreu aix\u00f2 per determinar com comprovar la contrasenya, de manera que no necessiteu un camp de base de dades independent per emmagatzemar les vostres sals. PASSWORD_DEFAULT PASSWORD_DEFAULT . Actualment utilitza l\u2019algoritme bcrypt (predeterminat a partir de PHP 5.5.0). Observeu que aquesta constant est\u00e0 pensada per a adaptar-se sempre que hi haja un algoritme nou i m\u00e9s fort a PHP. Per aquesta ra\u00f3, la longitud del resultat d\u2019utilitzar aquest identificador pot canviar amb el temps. Per tant, es recomana emmagatzemar el resultat en una columna d\u2019una base de dades de m\u00e9s de 60 caracters (255 caracters seria una bona elecci\u00f3).","title":"Hashing de contrasenyes amb password_hash"},{"location":"05-maintain-state/05-04-best-practices/#recursos","text":"The 2018 Guide to Building Secure PHP Software PHP: The Right Way. Security Session Management Basics Ultimate PHP Security Best Practices PHP Session Security Best Practices PHP Sessions in depth Session Management Cheat Sheet","title":"Recursos"},{"location":"05-maintain-state/05-06-http-authentication/","text":"Autenticaci\u00f3 d'usuaris i control d'acc\u00e9s Moltes vegades \u00e9s important verificar la identitat dels dos extrems d'una comunicaci\u00f3, hi ha m\u00e8todes per identificar tant al servidor en el qual s'allotja el lloc web, com a l'usuari del navegador que es troba en l'altre extrem. Els llocs web que necessiten emprar identificaci\u00f3 de servidor, com les botigues o els bancs, utilitzen el protocol HTTPS . Aquest protocol requereix d'un certificat digital v\u00e0lid, signat per una autoritat fiable, que \u00e9s verificat pel navegador quan s'accedeix a la p\u00e0gina web. A m\u00e9s, HTTPS utilitza m\u00e8todes de xifrat per crear un canal segur entre el navegador i el servidor, de tal manera que no es puga interceptar la informaci\u00f3 que es transmet pel mateix. Per identificar els usuaris que visiten un lloc web, es poden utilitzar diferents m\u00e8todes com el DNI digital o certificats digitals d'usuari (document digital que cont\u00e9 informaci\u00f3 sobre l'usuari com el nom o l'adre\u00e7a. Aquesta informaci\u00f3 est\u00e0 signada per una altra entitat, anomenada entitat certificadora, que ha de ser de confian\u00e7a i garanteix que la informaci\u00f3 que cont\u00e9 \u00e9s certa), per\u00f2 el m\u00e9s est\u00e8s \u00e9s sol\u00b7licitar a l'usuari certa informaci\u00f3 que nom\u00e9s ell coneix: la combinaci\u00f3 d'un nom d'usuari i una contrasenya. En les unitats anteriors vas aprendre a utilitzar aplicacions web per gestionar informaci\u00f3 emmagatzemada en bases de dades. En la majoria dels casos \u00e9s important implantar en aquest tipus de aplicacions web, les que accedeixen a bases de dades, algun mecanisme de control d'acc\u00e9s que obligui a l'usuari a identificar-se. Un cop identificat, es pot limitar l'\u00fas que pot fer de la informaci\u00f3. Aix\u00ed, pot haver llocs web en els quals els usuaris autenticats poden utilitzar nom\u00e9s una part de la informaci\u00f3 (com els bancs, que permeten als seus clients accedir \u00fanicament a la informaci\u00f3 relativa als seus comptes). Altres llocs web necessiten separar en grups als usuaris autentificats, de tal manera que la informaci\u00f3 a la qual accedeix un usuari dep\u00e8n del grup en qu\u00e8 aquest es trobe. Per exemple, una aplicaci\u00f3 de gesti\u00f3 d'una empresa pot tenir un grup d'usuaris als qui permet visualitzar la informaci\u00f3, i un altre grup d'usuaris que, a m\u00e9s de visualitzar la informaci\u00f3, tamb\u00e9 la poden modificar. Autenticaci\u00f3, control d'acc\u00e9s i seguretat en les comunicacions Has distingir l'autenticaci\u00f3 dels usuaris i el control d'acc\u00e9s, de la utilitzaci\u00f3 de mecanismes per assegurar les comunicacions entre l'usuari de el navegador i el servidor web. Encara que tots dos aspectes solen anar units, s\u00f3n independents. En els exemples d'aquesta unitat, la informaci\u00f3 d'autenticaci\u00f3 (nom i contrasenya dels usuaris) s'envia en text pla des del navegador fins al servidor web. Aquesta pr\u00e0ctica \u00e9s altament insegura i mai s'ha d'usar sense un protocol com HTTPS que permeta xifrar les comunicacions amb el lloc web. No obstant aix\u00f2, la configuraci\u00f3 de servidors web que permeten fer servir el protocol HTTPS per xifrar la informaci\u00f3 que reben i transmeten no forma part dels continguts d'aquest m\u00f2dul. Per aquest motiu, durant aquesta unitat utilitzarem \u00fanicament el protocol no segur HTTP. Mecanismes d'autenticaci\u00f3 via HTTP El protocol HTTP ofereix un m\u00e8tode senzill per autenticar els usuaris. El proc\u00e9s \u00e9s el seg\u00fcent: El servidor web ha de proveir algun m\u00e8tode per definir els usuaris que s'utilitzaran i com es poden autentificar. A m\u00e9s, s'hauran de definir els recursos als quals es restringeix l'acc\u00e9s i quina llista de control d'acc\u00e9s (ACL - llista de permisos sobre un objecte (fitxer, directori, etc.), que indica quins usuaris poden utilitzar l'objecte i les accions concretes que poden realitzar amb el mateix (lectura, escriptura, esborrat, etc.)) s'aplica a cada un. Quan un usuari no autenticat intenta accedir a un recurs restringit, el servidor web respon amb un error de \"Acc\u00e9s no autoritzat\" (codi 401). El navegador rep l'error i obre una finestra per sol\u00b7licitar a l'usuari que es autentifiqui mitjan\u00e7ant el seu nom i contrasenya. La informaci\u00f3 d'autenticaci\u00f3 de l'usuari s'envia a servidor, que la verifica i decideix si permet o no l'acc\u00e9s a el recurs sol\u00b7licitat. Aquesta informaci\u00f3 es mant\u00e9 en el navegador per utilitzar-se en posteriors peticions a aquest servidor. Al servidor web Apache, el que has estat utilitzant en anteriors unitats, hi ha una utilitat en l\u00ednia d'ordres, htpasswd , que permet emmagatzemar en un fitxer una llista d'usuaris i els seus respectives contrasenyes. La informaci\u00f3 relativa a les contrasenyes s'emmagatzema xifrada; tot i aix\u00ed, \u00e9s convenient crear aquest fitxer en un lloc no accessible pels usuaris de servidor web. http://httpd.apache.org/docs/2.0/es/howto/auth.html Per exemple, per crear el fitxer d'usuari i afegir-li el usuari \"dwes\", pots fer: sudo htpasswd -c users dwes i introduir la contrasenya corresponent a aquest usuari. L'opci\u00f3 -c indica que s'ha de crear el fitxer, per la qual cosa nom\u00e9s haur\u00e0s de fer-la servir quan introdueixis el primer usuari i contrasenya. Fixa't que en l'exemple anterior, el fitxer es crea a la ruta /etc/apache2/users, que en principi no \u00e9s accessible via web. Per indicar-li a l'servidor Apache quins recursos tenen acc\u00e9s restringit, una opci\u00f3 \u00e9s crear un fitxer .htaccess en el directori en qu\u00e8 es trobin, amb les seg\u00fcents directives: AuthName \"Contingut restringit\" AuthType Basic AuthUserFile /etc/apache2/users requereix valid-user El significat de cadascuna de les directives anteriors \u00e9s el seg\u00fcent: Directiva significat AuthName Nom de domini que es far\u00e0 servir en l'autenticaci\u00f3. Si el client s'autentica correctament, aquesta mateixa informaci\u00f3 d'autenticaci\u00f3 s'utilitzar\u00e0 autom\u00e0ticament en la resta de les p\u00e0gines de el mateix domini. AuthType M\u00e8tode d'autenticaci\u00f3 que es far\u00e0 servir. A m\u00e9s de l'm\u00e8tode Basic, Apache tamb\u00e9 permet utilitzar el m\u00e8tode Digest. AuthUserFile Cam\u00ed de l'arxiu de credencials que has creat amb htpasswd. Require Permet indicar que nom\u00e9s puguin accedir alguns usuaris o grups d'usuaris concrets. Si indiquem \"valid-user\", podran accedir tots els usuaris que es s'autentifiquin correctament. A m\u00e9s, haur\u00e0s de assegurar-te que en la configuraci\u00f3 d'Apache s'utilitza la directiva AllowOverride perqu\u00e8 s'aplique correctament la configuraci\u00f3 que figura en els fitxers .htaccess . M\u00e9s detalls en http://httpd.apache.org/docs/2.0/es/mod/core.html#allowoverride A l'incloure l'opci\u00f3 -c el que fem \u00e9s crear un nou fitxer, amb la qual cosa eliminem el contingut anterior del mateix. Mecanismes d'autenticaci\u00f3 Des PHP pots accedir a la informaci\u00f3 d'autenticaci\u00f3 HTTP que ha introdu\u00eft l'usuari utilitzant l'array superglobal $_SERVER . valor contingut $_SERVER['PHP_AUTH_USER'] Nom d'usuari que s'ha introdu\u00eft. $_SERVER['PHP_AUTH_PW'] Clau introdu\u00efda. $_SERVER['AUTH_TYPE'] M\u00e8tode HTTP usat per autentificar. Pot ser Basic o Digest. \u00c9s a dir, que si crees una p\u00e0gina web que mostre els valors d'aquestes variables, i prepares el servidor web per utilitzar autenticaci\u00f3 HTTP, quan accedisques a aquesta p\u00e0gina amb l'usuari \"dwes\" obtindr\u00e0s alguna cosa com el seg\u00fcent: <!DOCTYPE html PUBLIC \"- // W3C // DTD HTML 4.01 Transitional // EN\" \"http://www.w3.org/TR/html4/loose.dtd \"> <!-- Desenvolupament Web a Entorn Servidor --> <!-- Tema 4: Desenvolupament d'aplicacions web amb PHP --> <!-- Exemple: Autenticaci\u00f3 HTTP --> < html > < head > < meta http-equiv = \"content-type\" content = \"text / html; charset = UTF-8\" /> < title > Exemple Tema 4: Autenticaci\u00f3 HTTP </ title > < link href = \"dwes.css\" rel = \"stylesheet\" type = \"text / css\" /> </ head > < body > <?php echo \"Nom d'usuari:\". $_ SERVER['PHP_AUTH_USER']. \"<br />\"; echo \"Contrasenya:\". $_ SERVER['PHP_AUTH_PW']. \"<br />\"; echo \"M\u00e8tode d'autenticaci\u00f3:\". $_SERVER['AUTH_TYPE']. \"<br />\"; ?> </ body > </ html > Si no introdueixes un usuari/contrasenya v\u00e0lids, el navegador et mostrar\u00e0 l'error 401. A m\u00e9s, en PHP pots utilitzar la funci\u00f3 header per for\u00e7ar que el servidor envie un error de \"Acc\u00e9s no autoritzat\" (codi 401). D'aquesta manera no cal utilitzar fitxers .htaccess per indicar-li a Apache quins recursos estan restringits. En el seu lloc, pots afegir les seg\u00fcents l\u00ednies en les teves p\u00e0gines PHP: <? php if ( ! isset ( $_ SERVER [ 'PHP_AUTH_USER' ])) { header ( 'WWW-Authenticate: Basic Realm = \"Contingut restringit\"' ); header ( 'HTTP/1.0 401 Unauthorized' ); echo \"Usuari no reconegut!\" ; exit ; } ?> La funci\u00f3 header envia cap\u00e7aleres HTTP (bloc de dades que forma part de l'protocol HTTP i s'envia abans de la informaci\u00f3 pr\u00f2pia que es transmet. Permet especificar codis d'estat, accions requerides a servidor, o el tipus d'informaci\u00f3 que es transmet), per\u00f2 s'ha d'utilitzar abans que es mostre res per pantalla. En cas contrari, obtindr\u00e0s un error. M\u00e9s informaci\u00f3: http://es.php.net/manual/es/function.header.php Amb el codi anterior, la p\u00e0gina envia un error 401, el que for\u00e7a al navegador a sol\u00b7licitar les credencials d'acc\u00e9s (nom d'usuari i contrasenya). Si s'introdueixen, s'executa la resta de la p\u00e0gina i es mostra el seu contingut. En aquest cas, caldria afegir algun codi per comprovar que el nom d'usuari i contrasenya s\u00f3n v\u00e0lids, tal com veurem a continuaci\u00f3. Si es prem el bot\u00f3 \"Cancel\", es mostra el missatge d'error que s'indica. Modifica la p\u00e0gina anterior utilitzant la funci\u00f3 header perqu\u00e8 sol\u00b7liciti les credencials a l'usuari. Haur\u00e0s de crear una p\u00e0gina similar a l'anterior, i afegir el codi per for\u00e7ar l'error 401 abans de qualsevol altre. <! DOCTYPE html PUBLIC \"- // W3C // DTD HTML 4.01 Transitional // EN\" \" http://www.w3.org/TR/html4/loose.dtd \" > <!-- Desenvolupament Web a Entorn Servidor --> <!-- Tema 4 : Desenvolupament d 'aplicacions web amb PHP --> <!-- Exemple: Funci\u00f3 header per autenticaci\u00f3 HTTP --> <?php if (!isset($_SERVER[' PHP_AUTH_USER '])) { header(' WWW - Authenticate : Basic Realm = \"Contingut restringit\" '); header(' HTTP / 1.0 401 Unauthorized '); echo \"Usuari no reconegut!\"; exit; } ?> <html> <head> <meta http-equiv = \"content-type\" content = \"text / html; charset = UTF-8\"> <title> Exercici: Funci\u00f3 header per autenticaci\u00f3 HTTP </ title> <link href = \"dwes.css\" rel = \"stylesheet\" type = \"text / css\"> </head> <body> <?php echo \"Nom d' usuari : \". $_ SERVER['PHP_AUTH_USER']. \" < br /> \"; echo \" Contrasenya : \". $_ SERVER['PHP_AUTH_PW']. \" < br /> \"; ?> </body> </html> Incorporaci\u00f3 de m\u00e8todes d'autenticaci\u00f3 a una aplicaci\u00f3 web Si utilitzes la funci\u00f3 header per for\u00e7ar el navegador a sol\u00b7licitar credencials HTTP, l'usuari introduir\u00e0 un nom i una contrasenya. Per\u00f2 el servidor no ha de verificar aquesta informaci\u00f3; haur\u00e0s de ser tu qui prove\u00efsca un m\u00e8tode per comprovar que les credencials que ha introdu\u00eft l'usuari s\u00f3n correctes. El m\u00e8tode m\u00e9s simple \u00e9s incloure en el codi PHP de la teva p\u00e0gina les sent\u00e8ncies necess\u00e0ries per comparar les dades introdu\u00efdes amb altres dades fixos. Per exemple, per a permetre l'acc\u00e9s a un usuari \"dwes\" amb contrasenya \"abc123.\", pots fer: if ( $_SERVER [ 'PHP_AUTH_USER' ] != 'dwes' || $_SERVER [ 'PHP_AUTH_PW' ] != 'abc123.' ) { header ( 'WWW-Authenticate: Basic Realm = \"Contingut restringit\"' ); header ( 'HTTP / 1.0 401 Unauthorized' ); echo \"Usuari no reconegut!\" ; exit ; } ?> Recorda que el codi PHP no s'envia al navegador, de manera que la informaci\u00f3 d'autenticaci\u00f3 que introdueixis en el codi no ser\u00e0 visible per l'usuari. No obstant aix\u00f2, aix\u00f2 far\u00e0 el teu codi menys portable. Si necessites modificar el nom d'usuari o la contrasenya, haur\u00e0s de fer modificacions en el codi. A m\u00e9s, no podr\u00e0s permetre a l'usuari introduir la seva pr\u00f2pia contrasenya. Una soluci\u00f3 millor \u00e9s utilitzar un emmagatzematge extern per als noms d'usuari i les seves contrasenyes. Per aix\u00f2 podries emprar un fitxer de text, o millor encara, una base de dades. La informaci\u00f3 d'autenticaci\u00f3 podr\u00e0 estar a\u00efllada en la seva pr\u00f2pia base de dades, o compartir espai d'emmagatzematge amb les dades que utilitze la teva aplicaci\u00f3 web. Si vols emmagatzemar la informaci\u00f3 dels usuaris a la base de dades \" dwes \", has de crear una nova taula en la seva estructura. Per a aix\u00f2, revisa i executa aquestes sent\u00e8ncies SQL. -- Seleccionem la base de dades USE dwes ; -- Creem la taula CREATE TABLE usuaris ( usuari VARCHAR ( 20 ) NOT NULL PRIMARY KEY , contrasenya VARCHAR ( 32 ) NOT NULL ) ENGINE = InnoDB ; -- Creem l'usuari dwes INSERT INTO usuaris ( usuari , contrasenya ) VALUES ( 'dwes' , 'e8dc8ccd5e5f9e3a54f07350ce8a2d3d' ); Tot i que es podrien emmagatzemar les contrasenyes en text pla, \u00e9s millor fer-ho en format encriptat. En l'exemple anterior, per a l'usuari \"dwes\" s'emmagatzema el hash MD5 (m\u00e8tode per generar un resum d'un text o un document, de tal manera que a partir de l'resum obtingut no \u00e9s possible recuperar el text original ni estar un altre text a partir de el qual s'obtingui el mateix resum. Es diu hash a el resum obtingut a l'aplicar una funci\u00f3 hash. Una de les funcions hash m\u00e9s esteses \u00e9s MD5, que genera 128 bits com a resum (normalment es representa mitjan\u00e7ant una cadena de text de 28 car\u00e0cters o mitjan\u00e7ant 32 d\u00edgits hexadecimals)) corresponent a la contrasenya \"abc123.\". En PHP pots utilitzar la funci\u00f3 md5 per calcular el hash MD5 d'una cadena de text. http://es.php.net/manual/es/function.md5.php // Si l'usuari encara no s'ha entrat, demanem les credencials if (!isset ($_SERVER [ 'PHP_AUTH_USER'])) { header ('WWW-Authenticate: Basic realm = \"Contingut restringit\"'); header (\"HTTP/1.0 401 Unauthorized\"); exit; } // Si ja ha enviat les credencials, les vam comprovar amb la base de dades else { // Connectem a la base de dades @$dwes = new mysqli(\"localhost\", \"dwes\", \"abc123.\", \"Dwes\"); $error = $dwes-> connect_errno; // Si es va establir la connexi\u00f3 if ($error == null) { // Executem la consulta per comprovar si existeix // aquesta combinaci\u00f3 d'usuari i contrasenya $sql \u200b\u200b= \"SELECT usuari FROM usuaris WHERE usuari = '$_ SERVER[PHP_AUTH_USER]' AND contrasenya = md5 ( '$_ SERVER[PHP_AUTH_PW]') \"; $resultat = $dwes-> query ($sql); // Si no existeix, es tornen a demanar les credencials if ($resultat-> num_rows == 0) { header ( 'WWW-Authenticate: Basic realm = \"Contingut restringit\"'); header ( \"HTTP / 1.0 401 Unauthorized\"); exit; } $resultat->close(); $dwes->close(); } } <!DOCTYPE html PUBLIC \"- // W3C // DTD HTML 4.01 Transitional // EN\" \"http://www.w3.org/TR/html4/loose.dtd \" > <!-- Desenvolupament Web a Entorn Servidor --> <!-- Tema 4: Desenvolupament d'aplicacions web amb PHP --> <!-- Exemple: Utilitzaci\u00f3 de MySQL per autenticaci\u00f3 HTTP --> < html > < head > < meta http-equiv = \"content-type\" content = \"text / html; charset = UTF-8\" > < title > Exemple Tema 4: Utilitzaci\u00f3 de MySQL per autenticaci\u00f3 HTTP </ title > < link href = \"dwes.css\" rel = \"stylesheet\" type = \"text / css\" > </ head > < body > <?php echo \"Nom d'usuari:\" . $_ SERVER [ 'PHP_AUTH_USER' ] . \"<br />\" ; echo \"Hash de la contrasenya:\" . md5 ( $_ SERVER [ 'PHP_AUTH_PW' ]) . \"<br />\" ; ?> </ body > </ html > Galetes ( cookies ) Una galleta \u00e9s un fitxer de text que un lloc web guarda a l'entorn de l'usuari de navegador. El seu \u00fas m\u00e9s t\u00edpic \u00e9s l'emmagatzematge de les prefer\u00e8ncies de l'usuari (per exemple, l'idioma en que s'han de mostrar les p\u00e0gines), perqu\u00e8 no hagi de tornar a indicar-les la propera vegada que visiteu el lloc. Si utilitzes Firefox com a navegador, pots accedir a Desenvolupador web \u2013 Inspector d'emmagatzematge des del men\u00fa principal. Entre les seves caracter\u00edstiques et permet consultar i editar les galetes emmagatzemades en el mateix. En PHP, per emmagatzemar una galleta al navegador de l'usuari, pots utilitzar la funci\u00f3 setcookie . L'\u00fanic par\u00e0metre obligatori que has de fer servir \u00e9s el nom de la galleta, per\u00f2 admet diversos par\u00e0metres m\u00e9s opcionals. setcookie Per a m\u00e9s informaci\u00f3 consulta: https://www.php.net/manual/es/function.setcookie.php . Per exemple, si vols emmagatzemar en una galleta el nom d'usuari que es va transmetre a les credencials HTTP (\u00e9s nom\u00e9s un exemple, no \u00e9s en absolut aconsellable emmagatzemar informaci\u00f3 relativa a la seguretat en les galetes), pots fer: setcookie ( \"nom_usuari\" , $_SERVER [ 'PHP_AUTH_USER' ], time () + 3600 ); Els dos primers par\u00e0metres s\u00f3n el nom de la galleta i el seu valor. El tercer \u00e9s la data de caducitat de la mateixa (una hora des del moment en qu\u00e8 s'execute). En cas de no figurar aquest par\u00e0metre, la galleta s'eliminar\u00e0 quan es tanqui el navegador. Tingues en compte que tamb\u00e9 es poden aplicar restriccions a les p\u00e0gines de el lloc que poden accedir a una galleta en funci\u00f3 de la ruta. Les galetes es transmeten entre el navegador i el servidor web de la mateixa manera que les credencials que acabes de veure; utilitzant les cap\u00e7aleres de el protocol HTTP. Per aix\u00f2, les sent\u00e8ncies setcookie s'han d'enviar abans que el navegador mostri cap informaci\u00f3 a pantalla. El proc\u00e9s de recuperaci\u00f3 de la informaci\u00f3 que emmagatzema una galleta \u00e9s molt simple. quan accedeixes a un lloc web, el navegador li envia de forma autom\u00e0tica tot el contingut de les galetes que emmagatzemi relatives a aquest lloc en concret. Des PHP pots accedir a aquesta informaci\u00f3 per mitj\u00e0 de l'array $_COOKIE . important Sempre que utilitzes galetes en una aplicaci\u00f3 web, heu de tenir en compte que en \u00faltima inst\u00e0ncia la seva disponibilitat est\u00e0 controlada pel client. Per exemple, alguns usuaris deshabiliten les galetes al navegador perqu\u00e8 pensen que la informaci\u00f3 que emmagatzemen pot suposar un potencial problema de seguretat. O la informaci\u00f3 que emmagatzemen pot arribar a perdre perqu\u00e8 el usuari decideix formatar l'equip o simplement eliminar-les de sistema. Si un cop emmagatzemada una galleta al navegador vols eliminar abans que expire, pots utilitzar la mateixa funci\u00f3 setcookie per\u00f2 indicant una data de caducitat anterior a l'actual. Sobre el mateix exercici anterior, emmagatzema en una galleta l'\u00faltim instant en qu\u00e8 el usuari va visitar la p\u00e0gina. Si \u00e9s la seva primera visita, mostra un missatge de benvinguda. En cas contrari, mostra la data i hora de la seva anterior visita. Revisa la soluci\u00f3 proposada. Haur\u00e0s utilitzar la funci\u00f3 setcookie per guardar l'instant de la seva anterior visita i mostrar el seu contingut utilitzant l'array $_COOKIE . // Si l'usuari encara no s'ha entrat, demanem les credencials if ( ! isset ( $_ SERVER [ 'PHP_AUTH_USER' ])) { header ( 'WWW-Authenticate: Basic realm = \"Contingut restringit\"' ); header ( \"HTTP / 1.0 401 Unauthorized\" ); exit ; } // Si ja ha enviat les credencials, les vam comprovar amb la base de dades else { // Connectem a la base de dades @ $dwes = new mysqli ( \"localhost\" , \"dwes\" , \"abc123.\" , \"Dwes\" ); $error = $dwes -> connect_errno ; // Si es va establir la connexi\u00f3 if ( $error == null ) { date_default_timezone_set ( 'Europe/Madrid' ); // Executem la consulta per comprovar si existeix // aquesta combinaci\u00f3 d'usuari i contrasenya $sql \u200b\u200b = \"SELECT usuari FROM usuaris WHERE usuari = '${_ SERVER [' PHP_AUTH_USER ']}' AND contrasenya = md5 ( '${_ SERVER [' PHP_AUTH_PW ']}') \" ; $resultat = $dwes -> query ( $sql ); // Si no existeix, es tornen a demanar les credencials if ( $resultat -> num_rows == 0 ) { header ( 'WWW-Authenticate: Basic realm = \"Contingut restringit\"' ); header ( \"HTTP / 1.0 401 Unauthorized\" ); exit ; } else { if ( isset ( $_ COOKIE [ 'ultimo_login' ])) { $ultimo_login = $_COOKIE [ 'ultimo_login' ]; } setcookie ( \"ultimo_login\" , time (), time () + 3600 ); } $resultat -> close (); $dwes -> close (); } } ?> <!DOCTYPE html PUBLIC \"- // W3C // DTD HTML 4.01 Transitional // EN\" \" http://www.w3.org/TR/html4/loose.dtd \"> <!-- Desenvolupament Web a Entorn Servidor --> <!-- Tema 4: Desenvolupament d'aplicacions web amb PHP --> <!-- Exemple: Galetes al autenticaci\u00f3 HTTP --> <html> <head> <meta http-equiv = \"content-type\" content = \"text / html; charset = UTF-8\"> <title> Exemple Tema 4: Galetes al autenticaci\u00f3 HTTP </ title> <link href = \"dwes.css\" rel = \"stylesheet\" type = \"text / css\"> </head> <body> <?php if ( $error == null ) { echo \"Nom d'usuari:\" . $_ SERVER [ 'PHP_AUTH_USER' ] . \"<br />\" ; echo \"Hash de la contrasenya:\" . md5 ( $_ SERVER [ 'PHP_AUTH_PW' ]) . \"<br />\" ; if ( isset ( $ultimo_login )) echo \"Darrer login:\" . date ( \"d/m/ i \\ a \\ l \\ a \\ s H: i\" , $ultimo_login ); else echo \"Benvingut. Aquesta \u00e9s la seva primera visita.\" ; } else echo \"S'ha produ\u00eft l'error $error . <br />\" ; ?> </body> </html> Reflexiona Quina \u00e9s la durada per defecte d'una galleta si no s'indica la data de caducitat, com en la seg\u00fcent crida a la funci\u00f3 setcookie? setcookie ( \"idioma\" , \"espanyol\" ); Fins que es tanque el navegador de l'usuari. 1 hora. Maneig de sessions Com acabes de veure, una forma per guardar informaci\u00f3 particular de cada usuari \u00e9s utilitzar galetes ( cookies ). No obstant aix\u00f2, hi ha diversos problemes associats a les galetes, com el nombre d'elles que admet el navegador, o la seva grand\u00e0ria m\u00e0xima. Per solucionar aquests inconvenients, existeixen les sessions. El terme sessi\u00f3 fa refer\u00e8ncia al conjunt d'informaci\u00f3 relativa a un usuari concret. Aquesta informaci\u00f3 pot ser tan simple com el nom de l'usuari mateix, o m\u00e9s complexa, com els articles que ha dipositat a la cistella de compra d'una botiga en l\u00ednia. Cada usuari diferent d'un lloc web t\u00e9 la seva pr\u00f2pia informaci\u00f3 de sessi\u00f3. Per distingir una sessi\u00f3 d'una altra s'usen els identificadors de sessi\u00f3 (SID). Un SID \u00e9s un atribut que s'assigna a cada un dels visitants d'un lloc web i l'identifica. D'aquesta manera, si el servidor web coneix el SID d'un usuari, pot relacionar-lo amb tota la informaci\u00f3 que posseeix sobre ell, que es mant\u00e9 en la sessi\u00f3 de l'usuari. Aquesta informaci\u00f3 s'emmagatzema en el servidor web, generalment en fitxers tot i que tamb\u00e9 es poden utilitzar altres mecanismes d'emmagatzematge com bases de dades. Com ja haur\u00e0s suposat, la q\u00fcesti\u00f3 ara \u00e9s: \u00bfi on s'emmagatzema aquest SID, identificador de la sessi\u00f3, que \u00e9s \u00fanic per a cada usuari? Doncs hi ha dues maneres de mantenir el SID entre les p\u00e0gines d'un lloc web que visita l'usuari: Utilitzant galetes. Propagant el SID en un par\u00e0metre de la URL. El SID s'afegeix com una part m\u00e9s de la URL, de la forma: http://www.misitioweb.com/tienda/listado.php& PHPSESSID=34534fg4ffg34ty En l'exemple anterior, el SID \u00e9s el valor del par\u00e0metre PHPSESSID. Cap de les dues maneres \u00e9s perfecta. Ja saps els problemes que t\u00e9 la utilitzaci\u00f3 de cookies. Malgrat aix\u00f2, \u00e9s el millor m\u00e8tode i el m\u00e9s utilitzat. Propagar el SID com a part de la URL comporta majors desavantatges, com la impossibilitat de mantenir el SID entre diferents sessions, o el fet que compartir la URL amb una altra persona implica compartir tamb\u00e9 l'identificador de sessi\u00f3. La bona not\u00edcia, \u00e9s que el proc\u00e9s de maneig de sessions en PHP est\u00e0 automatitzat en gran mida. Quan un usuari visita un lloc web, no cal programar un procediment per veure si hi ha un SID previ i carregar les dades associades amb el mateix. Tampoc has d'utilitzar la funci\u00f3 setcookie si vols emmagatzemar els SID en galetes, o anar passant el SID entre les p\u00e0gines web del teu lloc si et decideixes per propagar. Tot aix\u00f2 PHP ho fa autom\u00e0ticament. Server side cookies A la informaci\u00f3 que s'emmagatzema en la sessi\u00f3 d'un usuari tamb\u00e9 se li coneix com a galetes en la part de servidor ( server side cookies ). Has de tenir en compte que encara aquesta informaci\u00f3 no viatja entre el client i el servidor, s\u00ed que ho fa el SID, b\u00e9 com a part de l'URL o en una cap\u00e7alera HTTP si es guarda en una galleta. En tots dos casos, aix\u00f2 planteja un possible problema de seguretat. El SID pot ser aconseguit per una altra persona, i a partir de la mateixa obtenir la informaci\u00f3 de la sessi\u00f3 de l'usuari. La manera m\u00e9s segura d'utilitzar sessions \u00e9s emmagatzemant els SID en galetes i utilitzar HTTPS per a xifrar la informaci\u00f3 que es transmet entre el servidor web i el client. Configuraci\u00f3 Per defecte, PHP inclou suport de sessions incorporat. Abans, per\u00f2, d'utilitzar sessions en el teu lloc web, has de configurar correctament PHP utilitzant els seg\u00fcents directives en el fitxer php.ini segons correspongui: Directiva significat session.use_cookies Indica si s'han d'usar cookies (1) o propagaci\u00f3 a la URL (0) per emmagatzemar el SID. session.use_only_cookies S'ha d'activar (1) quan fas servir cookies per emmagatzemar els SID, i a m\u00e9s no vols que es reconeguin els SID que es puguin passar com part de la URL (aquest m\u00e8tode es pot usar per usurpar l'identificador d'un altre usuari) session.save_handler S'utilitza per indicar a PHP com ha de emmagatzemar les dades de la sessi\u00f3 de l'usuari. Hi ha quatre opcions: en fitxers (files), en mem\u00f2ria (Mm), en una base de dades SQLite (sqlite) o utilitzant per a aix\u00f2 funcions que ha de definir el programador (user). El valor per defecte (Files) funcionar\u00e0 sense problemes en la majoria dels casos. session.name Determina el nom de la galleta que s'utilitzar\u00e0 per guardar el SID. La seva valor per defecte \u00e9s PHPSESSID. session.auto_start El seu valor per defecte \u00e9s 0, i en aquest cas haur\u00e0s de fer servir la funci\u00f3 session_start per gestionar l'inici de les sessions. Si fas servir sessions al lloc web, pot ser bona idea canviar el seu valor a 1 per que PHP activi de forma autom\u00e0tica el maneig de sessions. session.cookie_lifetime Si utilitzes l'URL per propagar el SID, aquest es perdr\u00e0 quan tanqui el navegador. No obstant aix\u00f2, si utilitzes galetes, el SID es mantindr\u00e0 mentre no es destrueixi la galleta. En el seu valor per defecte (0), les galetes es destrueixen quan es tanca el navegador. Si vols que es mantingui el SID durant m\u00e9s temps, has d'indicar en aquesta directiva aquest temps en segons. session.gc_maxlifetime Indica el temps en segons que s'ha de mantenir activa la sessi\u00f3, encara que no hi hagi cap activitat per part de l'usuari. El seu valor per defecte \u00e9s 1440. \u00c9s a dir, passats 24 minuts des de l'\u00faltima activitat per part de l'usuari, es tanca la sessi\u00f3 autom\u00e0ticament. session.cookie_path URL path prefix that must match for the cookie to be sent. session.cookie_domain Domain suffix that must match for the cookie to be sent. No value means the cookie is sent back only to the full hostname that sent it. session.cookie_secure Set to On to have the cookie only sent back with HTTPS URLs. session.cookie_httponly Set to On to tell browsers to prevent JavaScript from reading the cookie. La funci\u00f3 phpinfo , de la qual ja vam parlar amb anterioritat, t'ofereix informaci\u00f3 sobre la configuraci\u00f3 actual de les directives de sessi\u00f3. En la documentaci\u00f3 de PHP tens informaci\u00f3 sobre aquestes i altres directives que permeten configurar el maneig de sessions. https://www.php.net/manual/es/session.configuration.php Question Si la informaci\u00f3 de l'usuari que vols emmagatzemar inclou contingut privat com una contrasenya, \u00bfqu\u00e8 utilitzaries, galetes o la sessi\u00f3 de l'usuari? Inici i fi d'una sessi\u00f3 L'inici d'una sessi\u00f3 pot tenir lloc de dues maneres. Si has activat la directiva session.auto_start en la configuraci\u00f3 de PHP, la sessi\u00f3 comen\u00e7ar\u00e0 autom\u00e0ticament quan un usuari es connecte al teu lloc web. En el cas que aquest usuari ja haja obert una sessi\u00f3 amb anterioritat, i aquesta no s'haja eliminat, en lloc d'obrir una nova sessi\u00f3 es reprendr\u00e0 la anterior. Per a aix\u00f2 s'utilitzar\u00e0 el SID anterior, que estar\u00e0 emmagatzemat en una galleta (recorda que si fas servir propagaci\u00f3 de l'SID, no podr\u00e0s restaurar sessions anteriors; el SID figura a la URL i es perd quan tanques el navegador). Si per contra, decideixes no utilitzar l'inici autom\u00e0tic de sessions, haur\u00e0s executar la funci\u00f3 session_start() per indicar a PHP que inicie una nova sessi\u00f3 o reprenga l'anterior. Anteriorment aquesta funci\u00f3 tornava sempre true , a partir de la versi\u00f3 5.3.0 de PHP el seu comportament \u00e9s m\u00e9s coherent: retorna false en cas de no poder iniciar o restaurar la sessi\u00f3. Com l'inici de sessi\u00f3 requereix utilitzar cookies , i aquestes es transmeten en els encap\u00e7alats HTTP, heu de tenir en compte que per poder iniciar una sessi\u00f3 utilitzant session_start , haur\u00e0s de fer les cridades a aquesta funci\u00f3 abans que la p\u00e0gina web mostre informaci\u00f3 al navegador. A m\u00e9s, totes les p\u00e0gines que necessiten utilitzar la informaci\u00f3 emmagatzemada en la sessi\u00f3, hauran d'executar la funci\u00f3 session_start . Mentre la sessi\u00f3 estiga oberta, pots utilitzar la variable superglobal $_SESSION per afegir informaci\u00f3 a la sessi\u00f3 de l'usuari, o per accedir a la informaci\u00f3 emmagatzemada en la sessi\u00f3. Per exemple, per comptar el nombre de vegades que l'usuari visita la p\u00e0gina, pots fer: <? php // Iniciamos la sesi\u00f3n o recuperamos la anterior sesi\u00f3n existente session_start (); // Comprobamos si la variable ya existe if ( isset ( $_SESSION [ 'visitas' ])) $_SESSION [ 'visitas' ] ++ ; else $_SESSION [ 'visitas' ] = 0 ; ?> Si en lloc de el nombre de visites, voldries emmagatzemar l'instant en qu\u00e8 es produeix cadascuna, la variable de sessi\u00f3 \"visites\" ha de ser una matriu i per tant haur\u00e0s de canviar el codi anterior per: <? php // Iniciamos la sesi\u00f3n o recuperamos la anterior sesi\u00f3n existente session_start (); // En cada visita a\u00f1adimos un valor al array \"visitas\" $_SESSION [ 'visitas' ][] = mktime (); ?> Encara que com ja has vist, pots configurar PHP perqu\u00e8 elimine de forma autom\u00e0tica les dades de una sessi\u00f3 passat cert temps, en ocasions pot ser necessari tancar-la de forma manual en un moment determinat. Per exemple, si utilitzes sessions per recordar la informaci\u00f3 d'autenticaci\u00f3 haur\u00e0s donar-li a l'usuari de la p\u00e0gina web la possibilitat de tancar la sessi\u00f3 quan ho crega convenient. En PHP tens dues funcions per eliminar la informaci\u00f3 emmagatzemada en la sessi\u00f3: session_unset . Elimina les variables emmagatzemades a la sessi\u00f3 actual, per\u00f2 no elimina la informaci\u00f3 de la sessi\u00f3 del dispositiu d'emmagatzematge usat. session_destroy . Elimina completament la informaci\u00f3 de la sessi\u00f3 del dispositiu de emmagatzematge. Activitat Crea una p\u00e0gina similar a l'anterior, emmagatzemant en la sessi\u00f3 d'usuari els instants de totes les seves \u00faltimes visites. Si \u00e9s la seva primera visita, mostra un missatge de benvinguda. En cas contrari, mostra la data i hora de totes les seves visites anteriors. Afegeix un bot\u00f3 a la p\u00e0gina que permeti esborrar el registre de visites. Utilitza tamb\u00e9 una variable de sessi\u00f3 per a comprovar si l'usuari ja ha iniciat correctament. D'aquesta manera no caldr\u00e0 comprovar les credencials amb la base de dades constantment. Gesti\u00f3 de la informaci\u00f3 de la sessi\u00f3 Ara veurem pas a pas un exemple d'utilitzaci\u00f3 de sessions per a emmagatzemar informaci\u00f3 de l'usuari. Utilitzar\u00e0s la base de dades \"blog\", usada anteriorment, per a crear un prototip d'elements favorits. Les p\u00e0gines de qu\u00e8 constar\u00e0 l'aplicaci\u00f3 web seran: Login ( SecurityController::login ). La seva funci\u00f3 \u00e9s autentificar a l'usuari de l'aplicaci\u00f3 web. Tots els usuaris de l'aplicaci\u00f3 s'hauran autentificar utilitzant aquesta p\u00e0gina abans de poder marcar algun post com a favorit. Afegir a preferits ( PostController::addToFavourite ). Cada entrada disposar\u00e0 d'un bot\u00f3 per a afegir a favorits sempre que el usuari s'haja validat. Llistat de posts favorits ( PostController::favourite ). Presenta un llistat de les entrades favorites. Logoff ( SecurityController::logout ). Aquesta p\u00e0gina desconnecta a l'usuari de l'aplicaci\u00f3 i redirigeix \u200b\u200ba l'usuari de forma autom\u00e0tica a la p\u00e0gina d'inici. No mostra cap informaci\u00f3 en pantalla, pel que no \u00e9s visible per a l'usuari. Abans de comen\u00e7ar tingues en compte que l'aplicaci\u00f3 que vas a desenvolupar no \u00e9s completament funcional. Per exemple: No tindr\u00e0s en compte la possibilitat que l'usuari afegisca diverses vegades la mateixa entrada. Un cop afegida una entrada no es podr\u00e0 eliminar, sols buidar. No es mostraran imatges dels productes. Es mostraran tots els posts en una \u00fanica p\u00e0gina, sense paginaci\u00f3. Encara que redu\u00efm en aquest exemple la funcionalitat, t'animem a que un cop finalitzat el mateix, afegisques pel teu compte totes aquelles opcions que vulguis. Recorda que la millor manera d'aprendre programaci\u00f3 \u00e9s ... programant! Autenticar l'usuari La primera p\u00e0gina que vas a programar \u00e9s la d'autenticaci\u00f3 de l'usuari ( SecurityController::login ). Per variar, far\u00e0s servir les capacitats de maneig de sessions de PHP per emmagatzemar la identificaci\u00f3 dels usuaris. A m\u00e9s, utilitzarem la informaci\u00f3 de la taula \"User\" a la base de dades \"bloc\", accedint mitjan\u00e7ant PDO. Vas a crear a la p\u00e0gina un formulari amb dos camps, un de tipus text per a l'usuari, i un altre de tipus password per a la contrasenya. En pr\u00e9mer el bot\u00f3 Enviar, el formulari s'enviar\u00e0 a aquesta mateixa p\u00e0gina, on es compararan les credencials proporcionades per l'usuari amb les emmagatzemades en la base de dades. Si les dades s\u00f3n correctes, s'iniciar\u00e0 una nova sessi\u00f3 i s'emmagatzemar\u00e0 en ella el nom de l'usuari que s'acaba de connectar. Anem per passos. El codi HTML per crear el formulari, que anir\u00e0 dins el cos de la p\u00e0gina (entre les etiquetes ) ser\u00e0 el seg\u00fcent: {% raw %} < form action = \"{{ router.generateURL('User', 'login') }}\" method = \"post\" > {{ message }} < div class = \"form-group\" > < input name = \"username\" type = \"text\" placeholder = \"Nom d'usuari\" class = \"form-control\" > </ div > < div class = \"form-group\" > < input name = \"password\" type = \"password\" placeholder = \"Contrasenya\" class = \"form-control\" > </ div > < p class = \"text-center\" > < button class = \"btn btn-primary\" name = \"login\" type = \"submit\" >< i class = \"fa fa-sign-in\" ></ i > Iniciar sessi\u00f3 </ button > </ p > </ form > {% endraw %} Fixa't que hi ha un espai per posar els possibles missatges d'error que es produeixin, com la falta d'alguna dada necessari, o un error de credencials err\u00f2nies. El codi PHP que ha de figurar a l'comen\u00e7ament d'aquesta mateixa p\u00e0gina (abans que es mostri qualsevol text), s'encarregar\u00e0 de: Comprovar que s'han introdu\u00eft tant el nom d'usuari com la contrasenya. # UserController.php if (( $this -> request -> getParams () -> has ( 'username' ) && $this -> request -> getParams () -> has ( 'password' )) && $this -> request -> isPost () ) { //Cogemos datos del formulario y validamos $username = $this -> request -> getParams () -> getString ( 'username' ); $password = $this -> request -> getParams () -> getString ( 'password' ); $user = new User (); $user -> setUsername ( $username ); $user -> setPassword ( $password ); // Comprovem que els valors s\u00f3n correctes. $errors = $userModel -> validateLogin ( $user ); Comprovem les credencials. // UserController.php // Si no hi ha errors comprovem les credancials if ( count ( $errors ) == 0 ) { //Cogemos los datos del formulario para comprobar que existe el usuario $loginOk = $userModel -> checkUser ( $user -> getUsername (), $user -> getPassword ()); // UserModel.php try { $loginUsuario = $this -> pdo -> prepare ( \"SELECT * FROM user WHERE username=:username AND password=:password\" ); $loginUsuario -> bindParam ( ':username' , $email , PDO :: PARAM_STR ); $loginUsuario -> bindParam ( ':password' , $password , PDO :: PARAM_STR ); $loginUsuario -> execute (); return $loginUsuario -> rowCount (); } catch ( PDOException $e ) { echo \"Error: \" . $e -> getMessage (); } Si les credencials s\u00f3n correctes carreguem en les dades d'usuari en \\$_SESSION if ( $loginOk > 0 ) { $dataUser = $userModel -> getByUsername ( $user -> getUsername ()); session_start (); $_SESSION [ 'loggedin' ] = true ; $_SESSION [ 'iduser' ] = $dataUser -> getId (); $_SESSION [ 'email' ] = $dataUser -> getEmail (); $_SESSION [ 'nombre' ] = $dataUser -> getUsername (); $_SESSION [ 'id_rol' ] = $dataUser -> getRoles (); header ( \"Location: \" . $GLOBALS [ 'router' ] -> generateUrl ( 'Post' , 'favourite' )); } else { $errors [] = \"Les credencials s\u00f3n inv\u00e0lides\" ; } I redirigir a la p\u00e0gina de les entrades favorites. header ( \"Location: \" . $GLOBALS [ 'router' ] -> generateUrl ( 'Post' , 'favourite' )); Enten b\u00e9 el codi abans de seguir endavant. {: .alert .alert-question } En el codi anterior, la sessi\u00f3 de l'usuari s'inicia s\u00f2l si es proporciona un nom d'usuari i contrasenya correctes. \u00bfPodria haver-se iniciat la sessi\u00f3 en comen\u00e7ar el codi encara que l'usuari no haja proporcionat les credencials? P\u00e0gina de favorits Quan un usuari proporciona unes credencials d'inici de sessi\u00f3 correctes (recorda que tu ja havies afegit l'usuari \"jane_admin\" amb contrasenya \"admin\"), se li redirigeix \u200b\u200bautom\u00e0ticament a la p\u00e0gina de la llista d'entrades favorites. Aquesta \u00e9s la p\u00e0gina que vas a programar a continuaci\u00f3. // PostController.php public function favourite () { global $router ; // Recuperem la informaci\u00f3 de la sessi\u00f3 session_start (); // Comprovem si l'usuari s'ha autenticat if ( ! isset ( $_SESSION [ 'loggedin' ])) { die ( \"Error - cal autenticar-se <a href= \\\" \" . $router -> generateURL ( 'User' , 'login' ) . \" \\\" \" ); } $postModel = new PostModel ( $this -> db ); $posts = []; if ( ! empty ( $_SESSION [ 'Posts' ])) { foreach ( $_SESSION [ 'Posts' ] as $postId ) { $posts [] = $postModel -> getById ( $postId ); } } $image_dir = $this -> config -> get ( 'image_path' ); $header = '\u00daltimes entrades' ; $properties = [ 'image_dir' => $image_dir , 'header' => 'Entrades favorites' , 'posts' => $posts , 'tags' => $tags ]; return $this -> render ( 'posts/favourite.twig' , $properties ); } public function addToFavourite () { global $router ; // Recuperem la informaci\u00f3 de la sessi\u00f3 session_start (); // Comprovem si l'usuari s'ha autenticat if ( ! isset ( $_SESSION [ 'loggedin' ])) { die ( \"Error - cal autenticar-se <a href= \\\" \" . $router -> generateURL ( 'User' , 'login' ) . \" \\\" \" ); } if ( $this -> request -> isPost ()) { $postId = $this -> request -> getParams () -> getInt ( 'post' ); if ( $postId > 0 ) $_SESSION [ 'Posts' ][] = $postId ; } header ( 'Location: ' . $router -> generateURL ( 'Posts' , 'index' )); } public function emptyFavourite () { global $router ; // Recuperem la informaci\u00f3 de la sessi\u00f3 session_start (); // Buidem l'array amb les entrades favorites unset ( $_SESSION [ 'Posts' ]); header ( 'Location: ' . $router -> generateURL ( 'Posts' , 'index' )); } Les plantilles de Twig {%raw%} #posts/favourite.twig { % block body %} <!-- MOSTREM LES ENTRADES --> {% for post in posts %} < div > < h2 > {{ post . title }} < /h2> <p>Escrit per:<strong>{{ post.user.fullname }} </s trong > {{ post . published_at | date ( \"d/m/Y\" ) }} { % if admin %} <a class=\"btn px-2 secondary-link\" href=\"{{ router.generateURL('Post', 'search') } } \"> <span class=\" fa fa - pencil - square - o \"></span></a> <a class=\" btn px - 2 secondary - link \" href=\" {{ router . generateURL ( 'Post' , 'search' ) }} \"> <span class=\" fa fa - trash - o \"></span></a> {% endif %} </p> <div class=\" fakeimg \"><img class=\" w - 25 img - thumbnail float - left mr - 2 \" src=\" {{ image_dir ~ post . image }} \"/></div> <p>{{ post.summary }}</p> <p><a href=\" {{ router . generateURL ( 'Post' , 'showById' , { id : post . id }) }} \">Llegir m\u00e9s</a> </p> <div class=\" mb - 4 \"> <!-- MOSTREM ELS TAGS --> {% for tag in post.tags %} <a class=\" btn btn - light \" href=\" {{ router . generateURL ( 'Post' , 'showByTag' , { id : tag . id }) }} \"> <span class=\" fa fa - tags \" aria-hidden=\" true \">{{ tag.name }} </a> {% endfor %} </div> </div> <div class=\" clearfix \"></div> {% endfor %} <form class=\" mb - 4 \" action=\" {{ router . generateUrl ( 'Post' , 'emptyFavourite' ) }} \" method=\" post \"> <input type=\" submit \" class=\" btn btn - info \" value=\" Buidar favorits \"> </form> {% endblock %} # posts/show.twig { % extends \"base.twig\" %} {% block body %} <!-- MOSTREM LES ENTRADES --> < div > < h2 > {{ post . title }} < /h2> <p>Escrit per:<strong>{{ post.user.fullname }} </s trong > {{ post . published_at | date ( \"d/m/Y\" ) }} { % if admin %} <a class=\"btn px-2 secondary-link\" href=\"{{ router.generateURL('Post', 'search') } } \"> <span class=\" fa fa - pencil - square - o \"></span></a> <a class=\" btn px - 2 secondary - link \" href=\" {{ router . generateURL ( 'Post' , 'search' ) }} \"> <span class=\" fa fa - trash - o \"></span></a> {% endif %} </p> <div class=\" fakeimg \"><img class=\" w - 25 img - thumbnail float - left mr - 2 \" src=\" {{ image_dir ~ post . image }} \"/></div> <p>{{ post.content|markdown_to_html }}</p> <form class=\" mb - 4 \" action=\" {{ router . generateUrl ( 'Post' , 'addToFavourite' ) }} \" method=\" post \"> <input type=\" hidden \" name=\" post \" value=\" {{ post . id }} \" /> <input type=\" submit \" class=\" btn btn - info \" value=\" Afegir a favorits \"> </form> <p class=\" mb - 4 \"><a href=\" {{ router . generateURL ( 'Post' , 'index' ) }} \">P\u00e0gina principal</a> </p> </div> {% endblock %} {% endraw %} En cada entrada es crea un formulario amb un bot\u00f3 \"Afegir a favorits\" que envia a la p\u00e0gina /favourite/add l'identificador de cada entrada que activa el m\u00e8tode addToFavourite() . Quan s'executa es comprova si s'ha enviat la p\u00e0gina i s'afegeix a \\$_SESSION['Posts] l'idenficador rebut. if ( $this -> request -> isPost ()) { $postId = $this -> request -> getParams () -> getInt ( 'post' ); if ( $postId > 0 ) $_SESSION [ 'Posts' ][] = $postId ; } L'array $_SESSION['Posts'] \u00e9s la variable de sessi\u00f3 en la que emmagatzemarem els identificadors de totes les entrades que l'usuari afegeix a favorits. // Si hi ha elements a favorits els mostrarem if ( ! empty ( $_SESSION [ 'Posts' ])) { foreach ( $_SESSION [ 'Posts' ] as $postId ) { $posts [] = $postModel -> getById ( $postId ); } // Si no, mostrarem un missatge else { $message = \"No hi ha elements favorits\" ; } La p\u00e0gina cont\u00e9 un formulari per a buidar els elements favorits: unset ( $_SESSION [ 'Posts' ]); A m\u00e9s a m\u00e9s, tant en aquesta p\u00e0gina como en la resta, caldr\u00e0 comprovar si la variable \\$_SESSION['loggedin'] existeix per a verificar que l'usuari s'ha autenticat correctament. Para ello, debes incluir el siguiente c\u00f3digo al inicio de la p\u00e1gina. // Recuperem la informaci\u00f3 de la sessi\u00f3 session_start (); // Comprovem si l'usuari s'ha autenticat if ( ! isset ( $_SESSION [ 'loggedin' ])) { die ( \"Error - cal autenticar-se <a href= \\\" \" . $router -> generateURL ( 'User' , 'login' ) . \" \\\" \" ); } Si l'usuari no s'ha autenticat, es mostra un missatge d'error junt amb l'enlla\u00e7 a la p\u00e0gina d'inici de sessi\u00f3. Si des de qualsevol p\u00e0gina l'usuari prem l'opci\u00f3 del men\u00fa \"Favorits\", activar\u00e0 el m\u00e8tode favourite() de PostController en la que se vor\u00e0 totes les entrades que ha marcat com a favorites. // PostController.php public function favourite () { global $router ; // Recuperem la informaci\u00f3 de la sessi\u00f3 session_start (); // Comprovem si l'usuari s'ha autenticat if ( ! isset ( $_SESSION [ 'loggedin' ])) { die ( \"Error - cal autenticar-se <a href= \\\" \" . $router -> generateURL ( 'User' , 'login' ) . \" \\\" \" ); } $postModel = new PostModel ( $this -> db ); $posts = []; if ( ! empty ( $_SESSION [ 'Posts' ])) { foreach ( $_SESSION [ 'Posts' ] as $postId ) { $posts [] = $postModel -> getById ( $postId ); } } $image_dir = $this -> config -> get ( 'image_path' ); $header = '\u00daltimes entrades' ; $properties = [ 'image_dir' => $image_dir , 'header' => 'Entrades favorites' , 'posts' => $posts , 'tags' => $tags ]; return $this -> render ( 'posts/favourite.twig' , $properties ); } Les entrades que es mostren en la p\u00e0gina s'obtenen de la informaci\u00f3 emmagatzemada en la sessi\u00f3. Usarem PostModel per a carregar les dades de cada entrada. En acabar, l'usuari podr\u00e0 tancar sessi\u00f3 activant el m\u00e8tode logout de SecurityController : // Recuperamos la informaci\u00f3n de la sesi\u00f3n session_start (); // Y la eliminamos session_unset (); header ( \"Location: login.php\" ); M\u00e9s informaci\u00f3 sobre les sessions en PHP: Maneig de sessions (PHP) Bones pr\u00e0ctiques Usa sempre HTTPS Usa sempre HTTPS si no s'enviar\u00e0 tota la informaci\u00f3 en text pla. Contrasenyes incloses. Usa sessions A difer\u00e8ncia de les galetes les dades emmagatzemades en les sessions no s'envien mitjan\u00e7ant els encap\u00e7alats HTTP, romanen al servidor. El que s\u00ed s'envia \u00e9s l'identificador de sessi\u00f3. Caldr\u00e0 prendre mesures perqu\u00e8 l'identificador no puga ser accessible per tercers i aix\u00ed poder accedir a les dades emmagatzemades. Segons l' OWASP : Session settings are some of the MOST important values to concentrate on in configuring. It is a good practice to change session.name to something new. I proposen la seg\u00fcent configuraci\u00f3 b\u00e0sica: session.save_path = /path/PHP-session/ session.name = myPHPSESSID session.auto_start = Off session.use_trans_sid = 0 session.cookie_domain = full.qualified.domain.name #session.cookie_path = /application/path/ session.use_strict_mode = 1 session.use_cookies = 1 session.use_only_cookies = 1 session.cookie_lifetime = 14400 # 4 hours session.cookie_secure = 1 session.cookie_httponly = 1 session.cookie_samesite = Strict session.cache_expire = 30 session.sid_length = 256 session.sid_bits_per_character = 6 # PHP 7.2+ session.hash_function = 1 # PHP 7.0-7.1 session.hash_bits_per_character = 6 # PHP 7.0-7.1 Les recomanacions en major detall: Control de la vida de sessi\u00f3 Fes que expire la sessi\u00f3 despr\u00e9s d\u2019un curt per\u00edode d\u2019inactivitat : ajusteu el temps d\u2019inactivitat a 5 minuts per a aplicacions altament protegides fins a no m\u00e9s de 30 minuts per a aplicacions de baix risc. Habilita l\u2019opci\u00f3 de tancament de sessi\u00f3 : caduca i destrueix expl\u00edcitament la sessi\u00f3 en tancar la sessi\u00f3. Eviteu els inicis de sessi\u00f3 persistents (opci\u00f3 \"recordeu-me\") : opcionalment podeu restringir la informaci\u00f3 conservada i revelada per l'aplicaci\u00f3, \u00e9s a dir, obligar a l'usuari a tornar a iniciar sessi\u00f3 abans de realitzar cap operaci\u00f3 cr\u00edtica. Fes que expire la sessi\u00f3 quan hi haja error de seguretat : qualsevol error de seguretat de l'aplicaci\u00f3 hauria de donar lloc a la finalitzaci\u00f3 de la sessi\u00f3. Fes caducar la sessi\u00f3 quan siga de llarga durada : obligaci\u00f3 a reautentificar la sessi\u00f3, que tot i estar actiu ha arribat al temps m\u00e0xim perm\u00e8s, p.e. unes poques hores. Elimineu la galleta de sessi\u00f3 en destruir una sessi\u00f3 . Identificador de sessi\u00f3 Utilitzeu nom\u00e9s galetes per propagar l\u2019ID de sessi\u00f3 , ja que quan es transmeten mitjan\u00e7ant un par\u00e0metre URL, les sol\u00b7licituds GET poden ser emmagatzemades a l\u2019historial del navegador, a la mem\u00f2ria cau i als marcadors. Aleshores tamb\u00e9 es pot visualitzar f\u00e0cilment. Regenereu l'identificador de sessi\u00f3 : regenereu (substitu\u00efu-ne per un de nou) l'identificador de sessi\u00f3, almenys cada cop que canvie el nivell de privilegi de l'usuari. Generalment es pot regenerar abans de qualsevol transacci\u00f3 important, despr\u00e9s d\u2019un determinat nombre de sol\u00b7licituds o despr\u00e9s d\u2019un per\u00edode de temps. Comproveu si l'identificador de sessi\u00f3 \u00e9s v\u00e0lid (de mida i tipus previst) i que ha estat generat per l'aplicaci\u00f3 i no proporcionat per l'usuari. L'identificador de sessi\u00f3 hauria de ser adequadament llarg, imprevisible, dif\u00edcil de reproduir i creat a partir de fonts aleat\u00f2ries d'alta qualitat . Cookie de sessi\u00f3 Definiu el domini de la galleta a quelcom m\u00e9s espec\u00edfic que el domini de primer nivell. No emmagatzeneu res a la galleta (almenys qualsevol informaci\u00f3 sensible com el nom d\u2019usuari o la contrasenya) sols\u2019ID de sessi\u00f3. Definiu el senyalador nom\u00e9s http per desactivar la captura de l'identificador de sessi\u00f3 mitjan\u00e7ant XSS. Quan siga possible, utilitzeu un xifrat fort (SSL) i l'atribut cookie_secure per permetre la transmissi\u00f3 de cookies nom\u00e9s a trav\u00e9s de https. Emmagatzematge de dades de sessi\u00f3 Determineu on s'emmagatzemen les dades de sessi\u00f3 i si es tracta d\u2019un sistema de fitxers o d\u2019una base de dades, determineu qui m\u00e9s podria tenir acc\u00e9s a aquestes dades. Quan s'emmagatzemen les dades de sessi\u00f3 en fitxers, assegureu-vos que l'aplicaci\u00f3 est\u00e0 configurada per utilitzar un directori privat independent (per exemple, la directiva session.save_path ). Utilitzeu els permisos del sistema de fitxers per protegir aquests fitxers d\u2019observaci\u00f3 o modificaci\u00f3 d\u2019usuaris diferents dels comptes necessaris per operar el servidor web i les aplicacions. Si aix\u00f2 no \u00e9s possible, cal xifrar les dades de la sessi\u00f3 o contenir nom\u00e9s dades no sensibles. Tingueu en compte que PHP utilitza de manera predeterminada el directori temporal del sistema p\u00fablic. Totes les variables de sessi\u00f3 s\u2019han de validar i sanejar per assegurar-se que siguem correctes i que no cont\u00e9 car\u00e0cters inesperats. No con\u00e8ixer les contrasenyes Al final, tothom crea una aplicaci\u00f3 PHP que es basa en la sessi\u00f3 d\u2019usuari. Els noms d\u2019usuari i les contrasenyes s\u2019emmagatzemen en una base de dades i s\u2019utilitzen posteriorment per autentificar els usuaris despr\u00e9s de l\u2019inici de sessi\u00f3. \u00c9s important que fer hash de les contrasenyes correctament abans d\u2019emmagatzemar-les. El hashing i el xifrat s\u00f3n dues coses molt diferents que sovint es confonen. El hashing \u00e9s una funci\u00f3 irreversible i unidireccional. \u00c9s produeix una cadena de longitud fixa que no es pot invertir. Aix\u00f2 vol dir que podeu comparar un hash amb un altre per determinar si tots dos provenien de la mateixa cadena font, per\u00f2 no podeu determinar la cadena original. Si les contrasenyes no s'emmagatzemen amb hashing i un tercer no autoritzat accedeix a la vostra base de dades, tots els comptes d'usuari estaran compromesos. A difer\u00e8ncia del hashing , el xifrat \u00e9s reversible (sempre que tingueu la clau). El xifratge \u00e9s \u00fatil en altres \u00e0rees, per\u00f2 \u00e9s una estrat\u00e8gia deficient per emmagatzemar contrasenyes de forma segura. Les contrasenyes tamb\u00e9 han de salar-se individualment afegint una cadena aleat\u00f2ria a cada contrasenya abans d'aplicar hashing . Aix\u00f2 evita els atacs de diccionari i l'\u00fas de \"taules de l'arc de Sant Mart\u00ed\" (una llista inversa de hash criptogr\u00e0fics per a contrasenyes comunes.) El hashing i el salat s\u00f3n vitals, ja que sovint els usuaris utilitzen la mateixa contrasenya per a diversos serveis i la qualitat de la contrasenya \u00e9s deficient. Addicionalment, haureu d'utilitzar un algorisme especialitzat en hashing en lloc d'una funci\u00f3 de hash criptogr\u00e0fic de prop\u00f2sit general i r\u00e0pid (per exemple, SHA256). La llista breu d'algorismes de hashing de contrasenya acceptables (a juny de 2018) a utilitzar s\u00f3n: Argon2 (disponible a PHP 7.2 i versions posteriors) Scrypt Bcrypt (PHP us proporciona aquesta; vegeu m\u00e9s avall) PBKDF2 amb HMAC-SHA256 o HMAC-SHA512 Afortunadament, avui en dia PHP ens ho facilita. Hashing de contrasenyes amb password_hash A PHP 5.5 s'ha introdu\u00eft password_hash() . En aquest moment est\u00e0 utilitzant BCrypt, l'algorisme m\u00e9s fort actualment suportat per PHP. Tot i aix\u00f2, s'actualitzar\u00e0 en el futur per donar suport a m\u00e9s algoritmes. La biblioteca de password_compat es va crear per proporcionar una compatibilitat de PHP> = 5.3.7. A continuaci\u00f3 hem aplicat hashing a una cadena i, a continuaci\u00f3, apliquem el hashing contra una nova cadena. Com que les dues cadenes d'origen s\u00f3n diferents (\"contrasenya-secreta\" i \"contrasenya-err\u00f2nia\"), aquesta sessi\u00f3 fallar\u00e0. $passwordHash = password_hash ( \"contrasenya-secreta\" , PASSWORD_DEFAULT ); if ( password_verify ( \"contrenya-err\u00f2nia\" , $passwordHash )) { // Contrasenya correcta } else { // Contrasenya incorrecta } password_hash() s'ocupa de la salificaci\u00f3 de contrasenyes. La sal s'emmagatzema, juntament amb l'algorisme i el \"cost\", com a part del hash. password_verify() extreu aix\u00f2 per determinar com comprovar la contrasenya, de manera que no necessiteu un camp de base de dades independent per emmagatzemar les vostres sals. PASSWORD_DEFAULT PASSWORD_DEFAULT . Actualment utilitza l\u2019algoritme bcrypt (predeterminat a partir de PHP 5.5.0). Observeu que aquesta constant est\u00e0 pensada per a adaptar-se sempre que hi haja un algoritme nou i m\u00e9s fort a PHP. Per aquesta ra\u00f3, la longitud del resultat d\u2019utilitzar aquest identificador pot canviar amb el temps. Per tant, es recomana emmagatzemar el resultat en una columna d\u2019una base de dades de m\u00e9s de 60 caracters (255 caracters seria una bona elecci\u00f3). Activitat Adapta el projecte de forma que: Cada 15 minuts es regenere la sessi\u00f3. Sols use http per accedir a la cookie de sessi\u00f3. Les constrasenyes s'encripten amb bcrypt . Es tanque la sessi\u00f3 tal com s'indica. Recursos The 2018 Guide to Building Secure PHP Software PHP: The Right Way. Security Session Management Basics Ultimate PHP Security Best Practices PHP Session Security Best Practices PHP Sessions in depth Session Management Cheat Sheet","title":"Autenticaci\u00f3 d'usuaris i control d'acc\u00e9s"},{"location":"05-maintain-state/05-06-http-authentication/#autenticacio-dusuaris-i-control-dacces","text":"Moltes vegades \u00e9s important verificar la identitat dels dos extrems d'una comunicaci\u00f3, hi ha m\u00e8todes per identificar tant al servidor en el qual s'allotja el lloc web, com a l'usuari del navegador que es troba en l'altre extrem. Els llocs web que necessiten emprar identificaci\u00f3 de servidor, com les botigues o els bancs, utilitzen el protocol HTTPS . Aquest protocol requereix d'un certificat digital v\u00e0lid, signat per una autoritat fiable, que \u00e9s verificat pel navegador quan s'accedeix a la p\u00e0gina web. A m\u00e9s, HTTPS utilitza m\u00e8todes de xifrat per crear un canal segur entre el navegador i el servidor, de tal manera que no es puga interceptar la informaci\u00f3 que es transmet pel mateix. Per identificar els usuaris que visiten un lloc web, es poden utilitzar diferents m\u00e8todes com el DNI digital o certificats digitals d'usuari (document digital que cont\u00e9 informaci\u00f3 sobre l'usuari com el nom o l'adre\u00e7a. Aquesta informaci\u00f3 est\u00e0 signada per una altra entitat, anomenada entitat certificadora, que ha de ser de confian\u00e7a i garanteix que la informaci\u00f3 que cont\u00e9 \u00e9s certa), per\u00f2 el m\u00e9s est\u00e8s \u00e9s sol\u00b7licitar a l'usuari certa informaci\u00f3 que nom\u00e9s ell coneix: la combinaci\u00f3 d'un nom d'usuari i una contrasenya. En les unitats anteriors vas aprendre a utilitzar aplicacions web per gestionar informaci\u00f3 emmagatzemada en bases de dades. En la majoria dels casos \u00e9s important implantar en aquest tipus de aplicacions web, les que accedeixen a bases de dades, algun mecanisme de control d'acc\u00e9s que obligui a l'usuari a identificar-se. Un cop identificat, es pot limitar l'\u00fas que pot fer de la informaci\u00f3. Aix\u00ed, pot haver llocs web en els quals els usuaris autenticats poden utilitzar nom\u00e9s una part de la informaci\u00f3 (com els bancs, que permeten als seus clients accedir \u00fanicament a la informaci\u00f3 relativa als seus comptes). Altres llocs web necessiten separar en grups als usuaris autentificats, de tal manera que la informaci\u00f3 a la qual accedeix un usuari dep\u00e8n del grup en qu\u00e8 aquest es trobe. Per exemple, una aplicaci\u00f3 de gesti\u00f3 d'una empresa pot tenir un grup d'usuaris als qui permet visualitzar la informaci\u00f3, i un altre grup d'usuaris que, a m\u00e9s de visualitzar la informaci\u00f3, tamb\u00e9 la poden modificar. Autenticaci\u00f3, control d'acc\u00e9s i seguretat en les comunicacions Has distingir l'autenticaci\u00f3 dels usuaris i el control d'acc\u00e9s, de la utilitzaci\u00f3 de mecanismes per assegurar les comunicacions entre l'usuari de el navegador i el servidor web. Encara que tots dos aspectes solen anar units, s\u00f3n independents. En els exemples d'aquesta unitat, la informaci\u00f3 d'autenticaci\u00f3 (nom i contrasenya dels usuaris) s'envia en text pla des del navegador fins al servidor web. Aquesta pr\u00e0ctica \u00e9s altament insegura i mai s'ha d'usar sense un protocol com HTTPS que permeta xifrar les comunicacions amb el lloc web. No obstant aix\u00f2, la configuraci\u00f3 de servidors web que permeten fer servir el protocol HTTPS per xifrar la informaci\u00f3 que reben i transmeten no forma part dels continguts d'aquest m\u00f2dul. Per aquest motiu, durant aquesta unitat utilitzarem \u00fanicament el protocol no segur HTTP.","title":"Autenticaci\u00f3 d'usuaris i control d'acc\u00e9s"},{"location":"05-maintain-state/05-06-http-authentication/#mecanismes-dautenticacio-via-http","text":"El protocol HTTP ofereix un m\u00e8tode senzill per autenticar els usuaris. El proc\u00e9s \u00e9s el seg\u00fcent: El servidor web ha de proveir algun m\u00e8tode per definir els usuaris que s'utilitzaran i com es poden autentificar. A m\u00e9s, s'hauran de definir els recursos als quals es restringeix l'acc\u00e9s i quina llista de control d'acc\u00e9s (ACL - llista de permisos sobre un objecte (fitxer, directori, etc.), que indica quins usuaris poden utilitzar l'objecte i les accions concretes que poden realitzar amb el mateix (lectura, escriptura, esborrat, etc.)) s'aplica a cada un. Quan un usuari no autenticat intenta accedir a un recurs restringit, el servidor web respon amb un error de \"Acc\u00e9s no autoritzat\" (codi 401). El navegador rep l'error i obre una finestra per sol\u00b7licitar a l'usuari que es autentifiqui mitjan\u00e7ant el seu nom i contrasenya. La informaci\u00f3 d'autenticaci\u00f3 de l'usuari s'envia a servidor, que la verifica i decideix si permet o no l'acc\u00e9s a el recurs sol\u00b7licitat. Aquesta informaci\u00f3 es mant\u00e9 en el navegador per utilitzar-se en posteriors peticions a aquest servidor. Al servidor web Apache, el que has estat utilitzant en anteriors unitats, hi ha una utilitat en l\u00ednia d'ordres, htpasswd , que permet emmagatzemar en un fitxer una llista d'usuaris i els seus respectives contrasenyes. La informaci\u00f3 relativa a les contrasenyes s'emmagatzema xifrada; tot i aix\u00ed, \u00e9s convenient crear aquest fitxer en un lloc no accessible pels usuaris de servidor web. http://httpd.apache.org/docs/2.0/es/howto/auth.html Per exemple, per crear el fitxer d'usuari i afegir-li el usuari \"dwes\", pots fer: sudo htpasswd -c users dwes i introduir la contrasenya corresponent a aquest usuari. L'opci\u00f3 -c indica que s'ha de crear el fitxer, per la qual cosa nom\u00e9s haur\u00e0s de fer-la servir quan introdueixis el primer usuari i contrasenya. Fixa't que en l'exemple anterior, el fitxer es crea a la ruta /etc/apache2/users, que en principi no \u00e9s accessible via web. Per indicar-li a l'servidor Apache quins recursos tenen acc\u00e9s restringit, una opci\u00f3 \u00e9s crear un fitxer .htaccess en el directori en qu\u00e8 es trobin, amb les seg\u00fcents directives: AuthName \"Contingut restringit\" AuthType Basic AuthUserFile /etc/apache2/users requereix valid-user El significat de cadascuna de les directives anteriors \u00e9s el seg\u00fcent: Directiva significat AuthName Nom de domini que es far\u00e0 servir en l'autenticaci\u00f3. Si el client s'autentica correctament, aquesta mateixa informaci\u00f3 d'autenticaci\u00f3 s'utilitzar\u00e0 autom\u00e0ticament en la resta de les p\u00e0gines de el mateix domini. AuthType M\u00e8tode d'autenticaci\u00f3 que es far\u00e0 servir. A m\u00e9s de l'm\u00e8tode Basic, Apache tamb\u00e9 permet utilitzar el m\u00e8tode Digest. AuthUserFile Cam\u00ed de l'arxiu de credencials que has creat amb htpasswd. Require Permet indicar que nom\u00e9s puguin accedir alguns usuaris o grups d'usuaris concrets. Si indiquem \"valid-user\", podran accedir tots els usuaris que es s'autentifiquin correctament. A m\u00e9s, haur\u00e0s de assegurar-te que en la configuraci\u00f3 d'Apache s'utilitza la directiva AllowOverride perqu\u00e8 s'aplique correctament la configuraci\u00f3 que figura en els fitxers .htaccess . M\u00e9s detalls en http://httpd.apache.org/docs/2.0/es/mod/core.html#allowoverride A l'incloure l'opci\u00f3 -c el que fem \u00e9s crear un nou fitxer, amb la qual cosa eliminem el contingut anterior del mateix.","title":"Mecanismes d'autenticaci\u00f3 via HTTP"},{"location":"05-maintain-state/05-06-http-authentication/#mecanismes-dautenticacio","text":"Des PHP pots accedir a la informaci\u00f3 d'autenticaci\u00f3 HTTP que ha introdu\u00eft l'usuari utilitzant l'array superglobal $_SERVER . valor contingut $_SERVER['PHP_AUTH_USER'] Nom d'usuari que s'ha introdu\u00eft. $_SERVER['PHP_AUTH_PW'] Clau introdu\u00efda. $_SERVER['AUTH_TYPE'] M\u00e8tode HTTP usat per autentificar. Pot ser Basic o Digest. \u00c9s a dir, que si crees una p\u00e0gina web que mostre els valors d'aquestes variables, i prepares el servidor web per utilitzar autenticaci\u00f3 HTTP, quan accedisques a aquesta p\u00e0gina amb l'usuari \"dwes\" obtindr\u00e0s alguna cosa com el seg\u00fcent: <!DOCTYPE html PUBLIC \"- // W3C // DTD HTML 4.01 Transitional // EN\" \"http://www.w3.org/TR/html4/loose.dtd \"> <!-- Desenvolupament Web a Entorn Servidor --> <!-- Tema 4: Desenvolupament d'aplicacions web amb PHP --> <!-- Exemple: Autenticaci\u00f3 HTTP --> < html > < head > < meta http-equiv = \"content-type\" content = \"text / html; charset = UTF-8\" /> < title > Exemple Tema 4: Autenticaci\u00f3 HTTP </ title > < link href = \"dwes.css\" rel = \"stylesheet\" type = \"text / css\" /> </ head > < body > <?php echo \"Nom d'usuari:\". $_ SERVER['PHP_AUTH_USER']. \"<br />\"; echo \"Contrasenya:\". $_ SERVER['PHP_AUTH_PW']. \"<br />\"; echo \"M\u00e8tode d'autenticaci\u00f3:\". $_SERVER['AUTH_TYPE']. \"<br />\"; ?> </ body > </ html > Si no introdueixes un usuari/contrasenya v\u00e0lids, el navegador et mostrar\u00e0 l'error 401. A m\u00e9s, en PHP pots utilitzar la funci\u00f3 header per for\u00e7ar que el servidor envie un error de \"Acc\u00e9s no autoritzat\" (codi 401). D'aquesta manera no cal utilitzar fitxers .htaccess per indicar-li a Apache quins recursos estan restringits. En el seu lloc, pots afegir les seg\u00fcents l\u00ednies en les teves p\u00e0gines PHP: <? php if ( ! isset ( $_ SERVER [ 'PHP_AUTH_USER' ])) { header ( 'WWW-Authenticate: Basic Realm = \"Contingut restringit\"' ); header ( 'HTTP/1.0 401 Unauthorized' ); echo \"Usuari no reconegut!\" ; exit ; } ?> La funci\u00f3 header envia cap\u00e7aleres HTTP (bloc de dades que forma part de l'protocol HTTP i s'envia abans de la informaci\u00f3 pr\u00f2pia que es transmet. Permet especificar codis d'estat, accions requerides a servidor, o el tipus d'informaci\u00f3 que es transmet), per\u00f2 s'ha d'utilitzar abans que es mostre res per pantalla. En cas contrari, obtindr\u00e0s un error. M\u00e9s informaci\u00f3: http://es.php.net/manual/es/function.header.php Amb el codi anterior, la p\u00e0gina envia un error 401, el que for\u00e7a al navegador a sol\u00b7licitar les credencials d'acc\u00e9s (nom d'usuari i contrasenya). Si s'introdueixen, s'executa la resta de la p\u00e0gina i es mostra el seu contingut. En aquest cas, caldria afegir algun codi per comprovar que el nom d'usuari i contrasenya s\u00f3n v\u00e0lids, tal com veurem a continuaci\u00f3. Si es prem el bot\u00f3 \"Cancel\", es mostra el missatge d'error que s'indica. Modifica la p\u00e0gina anterior utilitzant la funci\u00f3 header perqu\u00e8 sol\u00b7liciti les credencials a l'usuari. Haur\u00e0s de crear una p\u00e0gina similar a l'anterior, i afegir el codi per for\u00e7ar l'error 401 abans de qualsevol altre. <! DOCTYPE html PUBLIC \"- // W3C // DTD HTML 4.01 Transitional // EN\" \" http://www.w3.org/TR/html4/loose.dtd \" > <!-- Desenvolupament Web a Entorn Servidor --> <!-- Tema 4 : Desenvolupament d 'aplicacions web amb PHP --> <!-- Exemple: Funci\u00f3 header per autenticaci\u00f3 HTTP --> <?php if (!isset($_SERVER[' PHP_AUTH_USER '])) { header(' WWW - Authenticate : Basic Realm = \"Contingut restringit\" '); header(' HTTP / 1.0 401 Unauthorized '); echo \"Usuari no reconegut!\"; exit; } ?> <html> <head> <meta http-equiv = \"content-type\" content = \"text / html; charset = UTF-8\"> <title> Exercici: Funci\u00f3 header per autenticaci\u00f3 HTTP </ title> <link href = \"dwes.css\" rel = \"stylesheet\" type = \"text / css\"> </head> <body> <?php echo \"Nom d' usuari : \". $_ SERVER['PHP_AUTH_USER']. \" < br /> \"; echo \" Contrasenya : \". $_ SERVER['PHP_AUTH_PW']. \" < br /> \"; ?> </body> </html>","title":"Mecanismes d'autenticaci\u00f3"},{"location":"05-maintain-state/05-06-http-authentication/#incorporacio-de-metodes-dautenticacio-a-una-aplicacio-web","text":"Si utilitzes la funci\u00f3 header per for\u00e7ar el navegador a sol\u00b7licitar credencials HTTP, l'usuari introduir\u00e0 un nom i una contrasenya. Per\u00f2 el servidor no ha de verificar aquesta informaci\u00f3; haur\u00e0s de ser tu qui prove\u00efsca un m\u00e8tode per comprovar que les credencials que ha introdu\u00eft l'usuari s\u00f3n correctes. El m\u00e8tode m\u00e9s simple \u00e9s incloure en el codi PHP de la teva p\u00e0gina les sent\u00e8ncies necess\u00e0ries per comparar les dades introdu\u00efdes amb altres dades fixos. Per exemple, per a permetre l'acc\u00e9s a un usuari \"dwes\" amb contrasenya \"abc123.\", pots fer: if ( $_SERVER [ 'PHP_AUTH_USER' ] != 'dwes' || $_SERVER [ 'PHP_AUTH_PW' ] != 'abc123.' ) { header ( 'WWW-Authenticate: Basic Realm = \"Contingut restringit\"' ); header ( 'HTTP / 1.0 401 Unauthorized' ); echo \"Usuari no reconegut!\" ; exit ; } ?> Recorda que el codi PHP no s'envia al navegador, de manera que la informaci\u00f3 d'autenticaci\u00f3 que introdueixis en el codi no ser\u00e0 visible per l'usuari. No obstant aix\u00f2, aix\u00f2 far\u00e0 el teu codi menys portable. Si necessites modificar el nom d'usuari o la contrasenya, haur\u00e0s de fer modificacions en el codi. A m\u00e9s, no podr\u00e0s permetre a l'usuari introduir la seva pr\u00f2pia contrasenya. Una soluci\u00f3 millor \u00e9s utilitzar un emmagatzematge extern per als noms d'usuari i les seves contrasenyes. Per aix\u00f2 podries emprar un fitxer de text, o millor encara, una base de dades. La informaci\u00f3 d'autenticaci\u00f3 podr\u00e0 estar a\u00efllada en la seva pr\u00f2pia base de dades, o compartir espai d'emmagatzematge amb les dades que utilitze la teva aplicaci\u00f3 web. Si vols emmagatzemar la informaci\u00f3 dels usuaris a la base de dades \" dwes \", has de crear una nova taula en la seva estructura. Per a aix\u00f2, revisa i executa aquestes sent\u00e8ncies SQL. -- Seleccionem la base de dades USE dwes ; -- Creem la taula CREATE TABLE usuaris ( usuari VARCHAR ( 20 ) NOT NULL PRIMARY KEY , contrasenya VARCHAR ( 32 ) NOT NULL ) ENGINE = InnoDB ; -- Creem l'usuari dwes INSERT INTO usuaris ( usuari , contrasenya ) VALUES ( 'dwes' , 'e8dc8ccd5e5f9e3a54f07350ce8a2d3d' ); Tot i que es podrien emmagatzemar les contrasenyes en text pla, \u00e9s millor fer-ho en format encriptat. En l'exemple anterior, per a l'usuari \"dwes\" s'emmagatzema el hash MD5 (m\u00e8tode per generar un resum d'un text o un document, de tal manera que a partir de l'resum obtingut no \u00e9s possible recuperar el text original ni estar un altre text a partir de el qual s'obtingui el mateix resum. Es diu hash a el resum obtingut a l'aplicar una funci\u00f3 hash. Una de les funcions hash m\u00e9s esteses \u00e9s MD5, que genera 128 bits com a resum (normalment es representa mitjan\u00e7ant una cadena de text de 28 car\u00e0cters o mitjan\u00e7ant 32 d\u00edgits hexadecimals)) corresponent a la contrasenya \"abc123.\". En PHP pots utilitzar la funci\u00f3 md5 per calcular el hash MD5 d'una cadena de text. http://es.php.net/manual/es/function.md5.php // Si l'usuari encara no s'ha entrat, demanem les credencials if (!isset ($_SERVER [ 'PHP_AUTH_USER'])) { header ('WWW-Authenticate: Basic realm = \"Contingut restringit\"'); header (\"HTTP/1.0 401 Unauthorized\"); exit; } // Si ja ha enviat les credencials, les vam comprovar amb la base de dades else { // Connectem a la base de dades @$dwes = new mysqli(\"localhost\", \"dwes\", \"abc123.\", \"Dwes\"); $error = $dwes-> connect_errno; // Si es va establir la connexi\u00f3 if ($error == null) { // Executem la consulta per comprovar si existeix // aquesta combinaci\u00f3 d'usuari i contrasenya $sql \u200b\u200b= \"SELECT usuari FROM usuaris WHERE usuari = '$_ SERVER[PHP_AUTH_USER]' AND contrasenya = md5 ( '$_ SERVER[PHP_AUTH_PW]') \"; $resultat = $dwes-> query ($sql); // Si no existeix, es tornen a demanar les credencials if ($resultat-> num_rows == 0) { header ( 'WWW-Authenticate: Basic realm = \"Contingut restringit\"'); header ( \"HTTP / 1.0 401 Unauthorized\"); exit; } $resultat->close(); $dwes->close(); } } <!DOCTYPE html PUBLIC \"- // W3C // DTD HTML 4.01 Transitional // EN\" \"http://www.w3.org/TR/html4/loose.dtd \" > <!-- Desenvolupament Web a Entorn Servidor --> <!-- Tema 4: Desenvolupament d'aplicacions web amb PHP --> <!-- Exemple: Utilitzaci\u00f3 de MySQL per autenticaci\u00f3 HTTP --> < html > < head > < meta http-equiv = \"content-type\" content = \"text / html; charset = UTF-8\" > < title > Exemple Tema 4: Utilitzaci\u00f3 de MySQL per autenticaci\u00f3 HTTP </ title > < link href = \"dwes.css\" rel = \"stylesheet\" type = \"text / css\" > </ head > < body > <?php echo \"Nom d'usuari:\" . $_ SERVER [ 'PHP_AUTH_USER' ] . \"<br />\" ; echo \"Hash de la contrasenya:\" . md5 ( $_ SERVER [ 'PHP_AUTH_PW' ]) . \"<br />\" ; ?> </ body > </ html >","title":"Incorporaci\u00f3 de m\u00e8todes d'autenticaci\u00f3 a una aplicaci\u00f3 web"},{"location":"05-maintain-state/05-06-http-authentication/#galetes-cookies","text":"Una galleta \u00e9s un fitxer de text que un lloc web guarda a l'entorn de l'usuari de navegador. El seu \u00fas m\u00e9s t\u00edpic \u00e9s l'emmagatzematge de les prefer\u00e8ncies de l'usuari (per exemple, l'idioma en que s'han de mostrar les p\u00e0gines), perqu\u00e8 no hagi de tornar a indicar-les la propera vegada que visiteu el lloc. Si utilitzes Firefox com a navegador, pots accedir a Desenvolupador web \u2013 Inspector d'emmagatzematge des del men\u00fa principal. Entre les seves caracter\u00edstiques et permet consultar i editar les galetes emmagatzemades en el mateix. En PHP, per emmagatzemar una galleta al navegador de l'usuari, pots utilitzar la funci\u00f3 setcookie . L'\u00fanic par\u00e0metre obligatori que has de fer servir \u00e9s el nom de la galleta, per\u00f2 admet diversos par\u00e0metres m\u00e9s opcionals. setcookie Per a m\u00e9s informaci\u00f3 consulta: https://www.php.net/manual/es/function.setcookie.php . Per exemple, si vols emmagatzemar en una galleta el nom d'usuari que es va transmetre a les credencials HTTP (\u00e9s nom\u00e9s un exemple, no \u00e9s en absolut aconsellable emmagatzemar informaci\u00f3 relativa a la seguretat en les galetes), pots fer: setcookie ( \"nom_usuari\" , $_SERVER [ 'PHP_AUTH_USER' ], time () + 3600 ); Els dos primers par\u00e0metres s\u00f3n el nom de la galleta i el seu valor. El tercer \u00e9s la data de caducitat de la mateixa (una hora des del moment en qu\u00e8 s'execute). En cas de no figurar aquest par\u00e0metre, la galleta s'eliminar\u00e0 quan es tanqui el navegador. Tingues en compte que tamb\u00e9 es poden aplicar restriccions a les p\u00e0gines de el lloc que poden accedir a una galleta en funci\u00f3 de la ruta. Les galetes es transmeten entre el navegador i el servidor web de la mateixa manera que les credencials que acabes de veure; utilitzant les cap\u00e7aleres de el protocol HTTP. Per aix\u00f2, les sent\u00e8ncies setcookie s'han d'enviar abans que el navegador mostri cap informaci\u00f3 a pantalla. El proc\u00e9s de recuperaci\u00f3 de la informaci\u00f3 que emmagatzema una galleta \u00e9s molt simple. quan accedeixes a un lloc web, el navegador li envia de forma autom\u00e0tica tot el contingut de les galetes que emmagatzemi relatives a aquest lloc en concret. Des PHP pots accedir a aquesta informaci\u00f3 per mitj\u00e0 de l'array $_COOKIE . important Sempre que utilitzes galetes en una aplicaci\u00f3 web, heu de tenir en compte que en \u00faltima inst\u00e0ncia la seva disponibilitat est\u00e0 controlada pel client. Per exemple, alguns usuaris deshabiliten les galetes al navegador perqu\u00e8 pensen que la informaci\u00f3 que emmagatzemen pot suposar un potencial problema de seguretat. O la informaci\u00f3 que emmagatzemen pot arribar a perdre perqu\u00e8 el usuari decideix formatar l'equip o simplement eliminar-les de sistema. Si un cop emmagatzemada una galleta al navegador vols eliminar abans que expire, pots utilitzar la mateixa funci\u00f3 setcookie per\u00f2 indicant una data de caducitat anterior a l'actual. Sobre el mateix exercici anterior, emmagatzema en una galleta l'\u00faltim instant en qu\u00e8 el usuari va visitar la p\u00e0gina. Si \u00e9s la seva primera visita, mostra un missatge de benvinguda. En cas contrari, mostra la data i hora de la seva anterior visita. Revisa la soluci\u00f3 proposada. Haur\u00e0s utilitzar la funci\u00f3 setcookie per guardar l'instant de la seva anterior visita i mostrar el seu contingut utilitzant l'array $_COOKIE . // Si l'usuari encara no s'ha entrat, demanem les credencials if ( ! isset ( $_ SERVER [ 'PHP_AUTH_USER' ])) { header ( 'WWW-Authenticate: Basic realm = \"Contingut restringit\"' ); header ( \"HTTP / 1.0 401 Unauthorized\" ); exit ; } // Si ja ha enviat les credencials, les vam comprovar amb la base de dades else { // Connectem a la base de dades @ $dwes = new mysqli ( \"localhost\" , \"dwes\" , \"abc123.\" , \"Dwes\" ); $error = $dwes -> connect_errno ; // Si es va establir la connexi\u00f3 if ( $error == null ) { date_default_timezone_set ( 'Europe/Madrid' ); // Executem la consulta per comprovar si existeix // aquesta combinaci\u00f3 d'usuari i contrasenya $sql \u200b\u200b = \"SELECT usuari FROM usuaris WHERE usuari = '${_ SERVER [' PHP_AUTH_USER ']}' AND contrasenya = md5 ( '${_ SERVER [' PHP_AUTH_PW ']}') \" ; $resultat = $dwes -> query ( $sql ); // Si no existeix, es tornen a demanar les credencials if ( $resultat -> num_rows == 0 ) { header ( 'WWW-Authenticate: Basic realm = \"Contingut restringit\"' ); header ( \"HTTP / 1.0 401 Unauthorized\" ); exit ; } else { if ( isset ( $_ COOKIE [ 'ultimo_login' ])) { $ultimo_login = $_COOKIE [ 'ultimo_login' ]; } setcookie ( \"ultimo_login\" , time (), time () + 3600 ); } $resultat -> close (); $dwes -> close (); } } ?> <!DOCTYPE html PUBLIC \"- // W3C // DTD HTML 4.01 Transitional // EN\" \" http://www.w3.org/TR/html4/loose.dtd \"> <!-- Desenvolupament Web a Entorn Servidor --> <!-- Tema 4: Desenvolupament d'aplicacions web amb PHP --> <!-- Exemple: Galetes al autenticaci\u00f3 HTTP --> <html> <head> <meta http-equiv = \"content-type\" content = \"text / html; charset = UTF-8\"> <title> Exemple Tema 4: Galetes al autenticaci\u00f3 HTTP </ title> <link href = \"dwes.css\" rel = \"stylesheet\" type = \"text / css\"> </head> <body> <?php if ( $error == null ) { echo \"Nom d'usuari:\" . $_ SERVER [ 'PHP_AUTH_USER' ] . \"<br />\" ; echo \"Hash de la contrasenya:\" . md5 ( $_ SERVER [ 'PHP_AUTH_PW' ]) . \"<br />\" ; if ( isset ( $ultimo_login )) echo \"Darrer login:\" . date ( \"d/m/ i \\ a \\ l \\ a \\ s H: i\" , $ultimo_login ); else echo \"Benvingut. Aquesta \u00e9s la seva primera visita.\" ; } else echo \"S'ha produ\u00eft l'error $error . <br />\" ; ?> </body> </html> Reflexiona Quina \u00e9s la durada per defecte d'una galleta si no s'indica la data de caducitat, com en la seg\u00fcent crida a la funci\u00f3 setcookie? setcookie ( \"idioma\" , \"espanyol\" ); Fins que es tanque el navegador de l'usuari. 1 hora.","title":"Galetes (cookies)"},{"location":"05-maintain-state/05-06-http-authentication/#maneig-de-sessions","text":"Com acabes de veure, una forma per guardar informaci\u00f3 particular de cada usuari \u00e9s utilitzar galetes ( cookies ). No obstant aix\u00f2, hi ha diversos problemes associats a les galetes, com el nombre d'elles que admet el navegador, o la seva grand\u00e0ria m\u00e0xima. Per solucionar aquests inconvenients, existeixen les sessions. El terme sessi\u00f3 fa refer\u00e8ncia al conjunt d'informaci\u00f3 relativa a un usuari concret. Aquesta informaci\u00f3 pot ser tan simple com el nom de l'usuari mateix, o m\u00e9s complexa, com els articles que ha dipositat a la cistella de compra d'una botiga en l\u00ednia. Cada usuari diferent d'un lloc web t\u00e9 la seva pr\u00f2pia informaci\u00f3 de sessi\u00f3. Per distingir una sessi\u00f3 d'una altra s'usen els identificadors de sessi\u00f3 (SID). Un SID \u00e9s un atribut que s'assigna a cada un dels visitants d'un lloc web i l'identifica. D'aquesta manera, si el servidor web coneix el SID d'un usuari, pot relacionar-lo amb tota la informaci\u00f3 que posseeix sobre ell, que es mant\u00e9 en la sessi\u00f3 de l'usuari. Aquesta informaci\u00f3 s'emmagatzema en el servidor web, generalment en fitxers tot i que tamb\u00e9 es poden utilitzar altres mecanismes d'emmagatzematge com bases de dades. Com ja haur\u00e0s suposat, la q\u00fcesti\u00f3 ara \u00e9s: \u00bfi on s'emmagatzema aquest SID, identificador de la sessi\u00f3, que \u00e9s \u00fanic per a cada usuari? Doncs hi ha dues maneres de mantenir el SID entre les p\u00e0gines d'un lloc web que visita l'usuari: Utilitzant galetes. Propagant el SID en un par\u00e0metre de la URL. El SID s'afegeix com una part m\u00e9s de la URL, de la forma: http://www.misitioweb.com/tienda/listado.php& PHPSESSID=34534fg4ffg34ty En l'exemple anterior, el SID \u00e9s el valor del par\u00e0metre PHPSESSID. Cap de les dues maneres \u00e9s perfecta. Ja saps els problemes que t\u00e9 la utilitzaci\u00f3 de cookies. Malgrat aix\u00f2, \u00e9s el millor m\u00e8tode i el m\u00e9s utilitzat. Propagar el SID com a part de la URL comporta majors desavantatges, com la impossibilitat de mantenir el SID entre diferents sessions, o el fet que compartir la URL amb una altra persona implica compartir tamb\u00e9 l'identificador de sessi\u00f3. La bona not\u00edcia, \u00e9s que el proc\u00e9s de maneig de sessions en PHP est\u00e0 automatitzat en gran mida. Quan un usuari visita un lloc web, no cal programar un procediment per veure si hi ha un SID previ i carregar les dades associades amb el mateix. Tampoc has d'utilitzar la funci\u00f3 setcookie si vols emmagatzemar els SID en galetes, o anar passant el SID entre les p\u00e0gines web del teu lloc si et decideixes per propagar. Tot aix\u00f2 PHP ho fa autom\u00e0ticament. Server side cookies A la informaci\u00f3 que s'emmagatzema en la sessi\u00f3 d'un usuari tamb\u00e9 se li coneix com a galetes en la part de servidor ( server side cookies ). Has de tenir en compte que encara aquesta informaci\u00f3 no viatja entre el client i el servidor, s\u00ed que ho fa el SID, b\u00e9 com a part de l'URL o en una cap\u00e7alera HTTP si es guarda en una galleta. En tots dos casos, aix\u00f2 planteja un possible problema de seguretat. El SID pot ser aconseguit per una altra persona, i a partir de la mateixa obtenir la informaci\u00f3 de la sessi\u00f3 de l'usuari. La manera m\u00e9s segura d'utilitzar sessions \u00e9s emmagatzemant els SID en galetes i utilitzar HTTPS per a xifrar la informaci\u00f3 que es transmet entre el servidor web i el client.","title":"Maneig de sessions"},{"location":"05-maintain-state/05-06-http-authentication/#configuracio","text":"Per defecte, PHP inclou suport de sessions incorporat. Abans, per\u00f2, d'utilitzar sessions en el teu lloc web, has de configurar correctament PHP utilitzant els seg\u00fcents directives en el fitxer php.ini segons correspongui: Directiva significat session.use_cookies Indica si s'han d'usar cookies (1) o propagaci\u00f3 a la URL (0) per emmagatzemar el SID. session.use_only_cookies S'ha d'activar (1) quan fas servir cookies per emmagatzemar els SID, i a m\u00e9s no vols que es reconeguin els SID que es puguin passar com part de la URL (aquest m\u00e8tode es pot usar per usurpar l'identificador d'un altre usuari) session.save_handler S'utilitza per indicar a PHP com ha de emmagatzemar les dades de la sessi\u00f3 de l'usuari. Hi ha quatre opcions: en fitxers (files), en mem\u00f2ria (Mm), en una base de dades SQLite (sqlite) o utilitzant per a aix\u00f2 funcions que ha de definir el programador (user). El valor per defecte (Files) funcionar\u00e0 sense problemes en la majoria dels casos. session.name Determina el nom de la galleta que s'utilitzar\u00e0 per guardar el SID. La seva valor per defecte \u00e9s PHPSESSID. session.auto_start El seu valor per defecte \u00e9s 0, i en aquest cas haur\u00e0s de fer servir la funci\u00f3 session_start per gestionar l'inici de les sessions. Si fas servir sessions al lloc web, pot ser bona idea canviar el seu valor a 1 per que PHP activi de forma autom\u00e0tica el maneig de sessions. session.cookie_lifetime Si utilitzes l'URL per propagar el SID, aquest es perdr\u00e0 quan tanqui el navegador. No obstant aix\u00f2, si utilitzes galetes, el SID es mantindr\u00e0 mentre no es destrueixi la galleta. En el seu valor per defecte (0), les galetes es destrueixen quan es tanca el navegador. Si vols que es mantingui el SID durant m\u00e9s temps, has d'indicar en aquesta directiva aquest temps en segons. session.gc_maxlifetime Indica el temps en segons que s'ha de mantenir activa la sessi\u00f3, encara que no hi hagi cap activitat per part de l'usuari. El seu valor per defecte \u00e9s 1440. \u00c9s a dir, passats 24 minuts des de l'\u00faltima activitat per part de l'usuari, es tanca la sessi\u00f3 autom\u00e0ticament. session.cookie_path URL path prefix that must match for the cookie to be sent. session.cookie_domain Domain suffix that must match for the cookie to be sent. No value means the cookie is sent back only to the full hostname that sent it. session.cookie_secure Set to On to have the cookie only sent back with HTTPS URLs. session.cookie_httponly Set to On to tell browsers to prevent JavaScript from reading the cookie. La funci\u00f3 phpinfo , de la qual ja vam parlar amb anterioritat, t'ofereix informaci\u00f3 sobre la configuraci\u00f3 actual de les directives de sessi\u00f3. En la documentaci\u00f3 de PHP tens informaci\u00f3 sobre aquestes i altres directives que permeten configurar el maneig de sessions. https://www.php.net/manual/es/session.configuration.php Question Si la informaci\u00f3 de l'usuari que vols emmagatzemar inclou contingut privat com una contrasenya, \u00bfqu\u00e8 utilitzaries, galetes o la sessi\u00f3 de l'usuari?","title":"Configuraci\u00f3"},{"location":"05-maintain-state/05-06-http-authentication/#inici-i-fi-duna-sessio","text":"L'inici d'una sessi\u00f3 pot tenir lloc de dues maneres. Si has activat la directiva session.auto_start en la configuraci\u00f3 de PHP, la sessi\u00f3 comen\u00e7ar\u00e0 autom\u00e0ticament quan un usuari es connecte al teu lloc web. En el cas que aquest usuari ja haja obert una sessi\u00f3 amb anterioritat, i aquesta no s'haja eliminat, en lloc d'obrir una nova sessi\u00f3 es reprendr\u00e0 la anterior. Per a aix\u00f2 s'utilitzar\u00e0 el SID anterior, que estar\u00e0 emmagatzemat en una galleta (recorda que si fas servir propagaci\u00f3 de l'SID, no podr\u00e0s restaurar sessions anteriors; el SID figura a la URL i es perd quan tanques el navegador). Si per contra, decideixes no utilitzar l'inici autom\u00e0tic de sessions, haur\u00e0s executar la funci\u00f3 session_start() per indicar a PHP que inicie una nova sessi\u00f3 o reprenga l'anterior. Anteriorment aquesta funci\u00f3 tornava sempre true , a partir de la versi\u00f3 5.3.0 de PHP el seu comportament \u00e9s m\u00e9s coherent: retorna false en cas de no poder iniciar o restaurar la sessi\u00f3. Com l'inici de sessi\u00f3 requereix utilitzar cookies , i aquestes es transmeten en els encap\u00e7alats HTTP, heu de tenir en compte que per poder iniciar una sessi\u00f3 utilitzant session_start , haur\u00e0s de fer les cridades a aquesta funci\u00f3 abans que la p\u00e0gina web mostre informaci\u00f3 al navegador. A m\u00e9s, totes les p\u00e0gines que necessiten utilitzar la informaci\u00f3 emmagatzemada en la sessi\u00f3, hauran d'executar la funci\u00f3 session_start . Mentre la sessi\u00f3 estiga oberta, pots utilitzar la variable superglobal $_SESSION per afegir informaci\u00f3 a la sessi\u00f3 de l'usuari, o per accedir a la informaci\u00f3 emmagatzemada en la sessi\u00f3. Per exemple, per comptar el nombre de vegades que l'usuari visita la p\u00e0gina, pots fer: <? php // Iniciamos la sesi\u00f3n o recuperamos la anterior sesi\u00f3n existente session_start (); // Comprobamos si la variable ya existe if ( isset ( $_SESSION [ 'visitas' ])) $_SESSION [ 'visitas' ] ++ ; else $_SESSION [ 'visitas' ] = 0 ; ?> Si en lloc de el nombre de visites, voldries emmagatzemar l'instant en qu\u00e8 es produeix cadascuna, la variable de sessi\u00f3 \"visites\" ha de ser una matriu i per tant haur\u00e0s de canviar el codi anterior per: <? php // Iniciamos la sesi\u00f3n o recuperamos la anterior sesi\u00f3n existente session_start (); // En cada visita a\u00f1adimos un valor al array \"visitas\" $_SESSION [ 'visitas' ][] = mktime (); ?> Encara que com ja has vist, pots configurar PHP perqu\u00e8 elimine de forma autom\u00e0tica les dades de una sessi\u00f3 passat cert temps, en ocasions pot ser necessari tancar-la de forma manual en un moment determinat. Per exemple, si utilitzes sessions per recordar la informaci\u00f3 d'autenticaci\u00f3 haur\u00e0s donar-li a l'usuari de la p\u00e0gina web la possibilitat de tancar la sessi\u00f3 quan ho crega convenient. En PHP tens dues funcions per eliminar la informaci\u00f3 emmagatzemada en la sessi\u00f3: session_unset . Elimina les variables emmagatzemades a la sessi\u00f3 actual, per\u00f2 no elimina la informaci\u00f3 de la sessi\u00f3 del dispositiu d'emmagatzematge usat. session_destroy . Elimina completament la informaci\u00f3 de la sessi\u00f3 del dispositiu de emmagatzematge.","title":"Inici i fi d'una sessi\u00f3"},{"location":"05-maintain-state/05-06-http-authentication/#activitat","text":"Crea una p\u00e0gina similar a l'anterior, emmagatzemant en la sessi\u00f3 d'usuari els instants de totes les seves \u00faltimes visites. Si \u00e9s la seva primera visita, mostra un missatge de benvinguda. En cas contrari, mostra la data i hora de totes les seves visites anteriors. Afegeix un bot\u00f3 a la p\u00e0gina que permeti esborrar el registre de visites. Utilitza tamb\u00e9 una variable de sessi\u00f3 per a comprovar si l'usuari ja ha iniciat correctament. D'aquesta manera no caldr\u00e0 comprovar les credencials amb la base de dades constantment.","title":"Activitat"},{"location":"05-maintain-state/05-06-http-authentication/#gestio-de-la-informacio-de-la-sessio","text":"Ara veurem pas a pas un exemple d'utilitzaci\u00f3 de sessions per a emmagatzemar informaci\u00f3 de l'usuari. Utilitzar\u00e0s la base de dades \"blog\", usada anteriorment, per a crear un prototip d'elements favorits. Les p\u00e0gines de qu\u00e8 constar\u00e0 l'aplicaci\u00f3 web seran: Login ( SecurityController::login ). La seva funci\u00f3 \u00e9s autentificar a l'usuari de l'aplicaci\u00f3 web. Tots els usuaris de l'aplicaci\u00f3 s'hauran autentificar utilitzant aquesta p\u00e0gina abans de poder marcar algun post com a favorit. Afegir a preferits ( PostController::addToFavourite ). Cada entrada disposar\u00e0 d'un bot\u00f3 per a afegir a favorits sempre que el usuari s'haja validat. Llistat de posts favorits ( PostController::favourite ). Presenta un llistat de les entrades favorites. Logoff ( SecurityController::logout ). Aquesta p\u00e0gina desconnecta a l'usuari de l'aplicaci\u00f3 i redirigeix \u200b\u200ba l'usuari de forma autom\u00e0tica a la p\u00e0gina d'inici. No mostra cap informaci\u00f3 en pantalla, pel que no \u00e9s visible per a l'usuari. Abans de comen\u00e7ar tingues en compte que l'aplicaci\u00f3 que vas a desenvolupar no \u00e9s completament funcional. Per exemple: No tindr\u00e0s en compte la possibilitat que l'usuari afegisca diverses vegades la mateixa entrada. Un cop afegida una entrada no es podr\u00e0 eliminar, sols buidar. No es mostraran imatges dels productes. Es mostraran tots els posts en una \u00fanica p\u00e0gina, sense paginaci\u00f3. Encara que redu\u00efm en aquest exemple la funcionalitat, t'animem a que un cop finalitzat el mateix, afegisques pel teu compte totes aquelles opcions que vulguis. Recorda que la millor manera d'aprendre programaci\u00f3 \u00e9s ... programant!","title":"Gesti\u00f3 de la informaci\u00f3 de la sessi\u00f3"},{"location":"05-maintain-state/05-06-http-authentication/#autenticar-lusuari","text":"La primera p\u00e0gina que vas a programar \u00e9s la d'autenticaci\u00f3 de l'usuari ( SecurityController::login ). Per variar, far\u00e0s servir les capacitats de maneig de sessions de PHP per emmagatzemar la identificaci\u00f3 dels usuaris. A m\u00e9s, utilitzarem la informaci\u00f3 de la taula \"User\" a la base de dades \"bloc\", accedint mitjan\u00e7ant PDO. Vas a crear a la p\u00e0gina un formulari amb dos camps, un de tipus text per a l'usuari, i un altre de tipus password per a la contrasenya. En pr\u00e9mer el bot\u00f3 Enviar, el formulari s'enviar\u00e0 a aquesta mateixa p\u00e0gina, on es compararan les credencials proporcionades per l'usuari amb les emmagatzemades en la base de dades. Si les dades s\u00f3n correctes, s'iniciar\u00e0 una nova sessi\u00f3 i s'emmagatzemar\u00e0 en ella el nom de l'usuari que s'acaba de connectar. Anem per passos. El codi HTML per crear el formulari, que anir\u00e0 dins el cos de la p\u00e0gina (entre les etiquetes ) ser\u00e0 el seg\u00fcent: {% raw %} < form action = \"{{ router.generateURL('User', 'login') }}\" method = \"post\" > {{ message }} < div class = \"form-group\" > < input name = \"username\" type = \"text\" placeholder = \"Nom d'usuari\" class = \"form-control\" > </ div > < div class = \"form-group\" > < input name = \"password\" type = \"password\" placeholder = \"Contrasenya\" class = \"form-control\" > </ div > < p class = \"text-center\" > < button class = \"btn btn-primary\" name = \"login\" type = \"submit\" >< i class = \"fa fa-sign-in\" ></ i > Iniciar sessi\u00f3 </ button > </ p > </ form > {% endraw %} Fixa't que hi ha un espai per posar els possibles missatges d'error que es produeixin, com la falta d'alguna dada necessari, o un error de credencials err\u00f2nies. El codi PHP que ha de figurar a l'comen\u00e7ament d'aquesta mateixa p\u00e0gina (abans que es mostri qualsevol text), s'encarregar\u00e0 de: Comprovar que s'han introdu\u00eft tant el nom d'usuari com la contrasenya. # UserController.php if (( $this -> request -> getParams () -> has ( 'username' ) && $this -> request -> getParams () -> has ( 'password' )) && $this -> request -> isPost () ) { //Cogemos datos del formulario y validamos $username = $this -> request -> getParams () -> getString ( 'username' ); $password = $this -> request -> getParams () -> getString ( 'password' ); $user = new User (); $user -> setUsername ( $username ); $user -> setPassword ( $password ); // Comprovem que els valors s\u00f3n correctes. $errors = $userModel -> validateLogin ( $user ); Comprovem les credencials. // UserController.php // Si no hi ha errors comprovem les credancials if ( count ( $errors ) == 0 ) { //Cogemos los datos del formulario para comprobar que existe el usuario $loginOk = $userModel -> checkUser ( $user -> getUsername (), $user -> getPassword ()); // UserModel.php try { $loginUsuario = $this -> pdo -> prepare ( \"SELECT * FROM user WHERE username=:username AND password=:password\" ); $loginUsuario -> bindParam ( ':username' , $email , PDO :: PARAM_STR ); $loginUsuario -> bindParam ( ':password' , $password , PDO :: PARAM_STR ); $loginUsuario -> execute (); return $loginUsuario -> rowCount (); } catch ( PDOException $e ) { echo \"Error: \" . $e -> getMessage (); } Si les credencials s\u00f3n correctes carreguem en les dades d'usuari en \\$_SESSION if ( $loginOk > 0 ) { $dataUser = $userModel -> getByUsername ( $user -> getUsername ()); session_start (); $_SESSION [ 'loggedin' ] = true ; $_SESSION [ 'iduser' ] = $dataUser -> getId (); $_SESSION [ 'email' ] = $dataUser -> getEmail (); $_SESSION [ 'nombre' ] = $dataUser -> getUsername (); $_SESSION [ 'id_rol' ] = $dataUser -> getRoles (); header ( \"Location: \" . $GLOBALS [ 'router' ] -> generateUrl ( 'Post' , 'favourite' )); } else { $errors [] = \"Les credencials s\u00f3n inv\u00e0lides\" ; } I redirigir a la p\u00e0gina de les entrades favorites. header ( \"Location: \" . $GLOBALS [ 'router' ] -> generateUrl ( 'Post' , 'favourite' )); Enten b\u00e9 el codi abans de seguir endavant. {: .alert .alert-question } En el codi anterior, la sessi\u00f3 de l'usuari s'inicia s\u00f2l si es proporciona un nom d'usuari i contrasenya correctes. \u00bfPodria haver-se iniciat la sessi\u00f3 en comen\u00e7ar el codi encara que l'usuari no haja proporcionat les credencials?","title":"Autenticar l'usuari"},{"location":"05-maintain-state/05-06-http-authentication/#pagina-de-favorits","text":"Quan un usuari proporciona unes credencials d'inici de sessi\u00f3 correctes (recorda que tu ja havies afegit l'usuari \"jane_admin\" amb contrasenya \"admin\"), se li redirigeix \u200b\u200bautom\u00e0ticament a la p\u00e0gina de la llista d'entrades favorites. Aquesta \u00e9s la p\u00e0gina que vas a programar a continuaci\u00f3. // PostController.php public function favourite () { global $router ; // Recuperem la informaci\u00f3 de la sessi\u00f3 session_start (); // Comprovem si l'usuari s'ha autenticat if ( ! isset ( $_SESSION [ 'loggedin' ])) { die ( \"Error - cal autenticar-se <a href= \\\" \" . $router -> generateURL ( 'User' , 'login' ) . \" \\\" \" ); } $postModel = new PostModel ( $this -> db ); $posts = []; if ( ! empty ( $_SESSION [ 'Posts' ])) { foreach ( $_SESSION [ 'Posts' ] as $postId ) { $posts [] = $postModel -> getById ( $postId ); } } $image_dir = $this -> config -> get ( 'image_path' ); $header = '\u00daltimes entrades' ; $properties = [ 'image_dir' => $image_dir , 'header' => 'Entrades favorites' , 'posts' => $posts , 'tags' => $tags ]; return $this -> render ( 'posts/favourite.twig' , $properties ); } public function addToFavourite () { global $router ; // Recuperem la informaci\u00f3 de la sessi\u00f3 session_start (); // Comprovem si l'usuari s'ha autenticat if ( ! isset ( $_SESSION [ 'loggedin' ])) { die ( \"Error - cal autenticar-se <a href= \\\" \" . $router -> generateURL ( 'User' , 'login' ) . \" \\\" \" ); } if ( $this -> request -> isPost ()) { $postId = $this -> request -> getParams () -> getInt ( 'post' ); if ( $postId > 0 ) $_SESSION [ 'Posts' ][] = $postId ; } header ( 'Location: ' . $router -> generateURL ( 'Posts' , 'index' )); } public function emptyFavourite () { global $router ; // Recuperem la informaci\u00f3 de la sessi\u00f3 session_start (); // Buidem l'array amb les entrades favorites unset ( $_SESSION [ 'Posts' ]); header ( 'Location: ' . $router -> generateURL ( 'Posts' , 'index' )); } Les plantilles de Twig {%raw%} #posts/favourite.twig { % block body %} <!-- MOSTREM LES ENTRADES --> {% for post in posts %} < div > < h2 > {{ post . title }} < /h2> <p>Escrit per:<strong>{{ post.user.fullname }} </s trong > {{ post . published_at | date ( \"d/m/Y\" ) }} { % if admin %} <a class=\"btn px-2 secondary-link\" href=\"{{ router.generateURL('Post', 'search') } } \"> <span class=\" fa fa - pencil - square - o \"></span></a> <a class=\" btn px - 2 secondary - link \" href=\" {{ router . generateURL ( 'Post' , 'search' ) }} \"> <span class=\" fa fa - trash - o \"></span></a> {% endif %} </p> <div class=\" fakeimg \"><img class=\" w - 25 img - thumbnail float - left mr - 2 \" src=\" {{ image_dir ~ post . image }} \"/></div> <p>{{ post.summary }}</p> <p><a href=\" {{ router . generateURL ( 'Post' , 'showById' , { id : post . id }) }} \">Llegir m\u00e9s</a> </p> <div class=\" mb - 4 \"> <!-- MOSTREM ELS TAGS --> {% for tag in post.tags %} <a class=\" btn btn - light \" href=\" {{ router . generateURL ( 'Post' , 'showByTag' , { id : tag . id }) }} \"> <span class=\" fa fa - tags \" aria-hidden=\" true \">{{ tag.name }} </a> {% endfor %} </div> </div> <div class=\" clearfix \"></div> {% endfor %} <form class=\" mb - 4 \" action=\" {{ router . generateUrl ( 'Post' , 'emptyFavourite' ) }} \" method=\" post \"> <input type=\" submit \" class=\" btn btn - info \" value=\" Buidar favorits \"> </form> {% endblock %} # posts/show.twig { % extends \"base.twig\" %} {% block body %} <!-- MOSTREM LES ENTRADES --> < div > < h2 > {{ post . title }} < /h2> <p>Escrit per:<strong>{{ post.user.fullname }} </s trong > {{ post . published_at | date ( \"d/m/Y\" ) }} { % if admin %} <a class=\"btn px-2 secondary-link\" href=\"{{ router.generateURL('Post', 'search') } } \"> <span class=\" fa fa - pencil - square - o \"></span></a> <a class=\" btn px - 2 secondary - link \" href=\" {{ router . generateURL ( 'Post' , 'search' ) }} \"> <span class=\" fa fa - trash - o \"></span></a> {% endif %} </p> <div class=\" fakeimg \"><img class=\" w - 25 img - thumbnail float - left mr - 2 \" src=\" {{ image_dir ~ post . image }} \"/></div> <p>{{ post.content|markdown_to_html }}</p> <form class=\" mb - 4 \" action=\" {{ router . generateUrl ( 'Post' , 'addToFavourite' ) }} \" method=\" post \"> <input type=\" hidden \" name=\" post \" value=\" {{ post . id }} \" /> <input type=\" submit \" class=\" btn btn - info \" value=\" Afegir a favorits \"> </form> <p class=\" mb - 4 \"><a href=\" {{ router . generateURL ( 'Post' , 'index' ) }} \">P\u00e0gina principal</a> </p> </div> {% endblock %} {% endraw %} En cada entrada es crea un formulario amb un bot\u00f3 \"Afegir a favorits\" que envia a la p\u00e0gina /favourite/add l'identificador de cada entrada que activa el m\u00e8tode addToFavourite() . Quan s'executa es comprova si s'ha enviat la p\u00e0gina i s'afegeix a \\$_SESSION['Posts] l'idenficador rebut. if ( $this -> request -> isPost ()) { $postId = $this -> request -> getParams () -> getInt ( 'post' ); if ( $postId > 0 ) $_SESSION [ 'Posts' ][] = $postId ; } L'array $_SESSION['Posts'] \u00e9s la variable de sessi\u00f3 en la que emmagatzemarem els identificadors de totes les entrades que l'usuari afegeix a favorits. // Si hi ha elements a favorits els mostrarem if ( ! empty ( $_SESSION [ 'Posts' ])) { foreach ( $_SESSION [ 'Posts' ] as $postId ) { $posts [] = $postModel -> getById ( $postId ); } // Si no, mostrarem un missatge else { $message = \"No hi ha elements favorits\" ; } La p\u00e0gina cont\u00e9 un formulari per a buidar els elements favorits: unset ( $_SESSION [ 'Posts' ]); A m\u00e9s a m\u00e9s, tant en aquesta p\u00e0gina como en la resta, caldr\u00e0 comprovar si la variable \\$_SESSION['loggedin'] existeix per a verificar que l'usuari s'ha autenticat correctament. Para ello, debes incluir el siguiente c\u00f3digo al inicio de la p\u00e1gina. // Recuperem la informaci\u00f3 de la sessi\u00f3 session_start (); // Comprovem si l'usuari s'ha autenticat if ( ! isset ( $_SESSION [ 'loggedin' ])) { die ( \"Error - cal autenticar-se <a href= \\\" \" . $router -> generateURL ( 'User' , 'login' ) . \" \\\" \" ); } Si l'usuari no s'ha autenticat, es mostra un missatge d'error junt amb l'enlla\u00e7 a la p\u00e0gina d'inici de sessi\u00f3. Si des de qualsevol p\u00e0gina l'usuari prem l'opci\u00f3 del men\u00fa \"Favorits\", activar\u00e0 el m\u00e8tode favourite() de PostController en la que se vor\u00e0 totes les entrades que ha marcat com a favorites. // PostController.php public function favourite () { global $router ; // Recuperem la informaci\u00f3 de la sessi\u00f3 session_start (); // Comprovem si l'usuari s'ha autenticat if ( ! isset ( $_SESSION [ 'loggedin' ])) { die ( \"Error - cal autenticar-se <a href= \\\" \" . $router -> generateURL ( 'User' , 'login' ) . \" \\\" \" ); } $postModel = new PostModel ( $this -> db ); $posts = []; if ( ! empty ( $_SESSION [ 'Posts' ])) { foreach ( $_SESSION [ 'Posts' ] as $postId ) { $posts [] = $postModel -> getById ( $postId ); } } $image_dir = $this -> config -> get ( 'image_path' ); $header = '\u00daltimes entrades' ; $properties = [ 'image_dir' => $image_dir , 'header' => 'Entrades favorites' , 'posts' => $posts , 'tags' => $tags ]; return $this -> render ( 'posts/favourite.twig' , $properties ); } Les entrades que es mostren en la p\u00e0gina s'obtenen de la informaci\u00f3 emmagatzemada en la sessi\u00f3. Usarem PostModel per a carregar les dades de cada entrada. En acabar, l'usuari podr\u00e0 tancar sessi\u00f3 activant el m\u00e8tode logout de SecurityController : // Recuperamos la informaci\u00f3n de la sesi\u00f3n session_start (); // Y la eliminamos session_unset (); header ( \"Location: login.php\" ); M\u00e9s informaci\u00f3 sobre les sessions en PHP: Maneig de sessions (PHP)","title":"P\u00e0gina de favorits"},{"location":"05-maintain-state/05-06-http-authentication/#bones-practiques","text":"","title":"Bones pr\u00e0ctiques"},{"location":"05-maintain-state/05-06-http-authentication/#usa-sempre-https","text":"Usa sempre HTTPS si no s'enviar\u00e0 tota la informaci\u00f3 en text pla. Contrasenyes incloses.","title":"Usa sempre HTTPS"},{"location":"05-maintain-state/05-06-http-authentication/#usa-sessions","text":"A difer\u00e8ncia de les galetes les dades emmagatzemades en les sessions no s'envien mitjan\u00e7ant els encap\u00e7alats HTTP, romanen al servidor. El que s\u00ed s'envia \u00e9s l'identificador de sessi\u00f3. Caldr\u00e0 prendre mesures perqu\u00e8 l'identificador no puga ser accessible per tercers i aix\u00ed poder accedir a les dades emmagatzemades. Segons l' OWASP : Session settings are some of the MOST important values to concentrate on in configuring. It is a good practice to change session.name to something new. I proposen la seg\u00fcent configuraci\u00f3 b\u00e0sica: session.save_path = /path/PHP-session/ session.name = myPHPSESSID session.auto_start = Off session.use_trans_sid = 0 session.cookie_domain = full.qualified.domain.name #session.cookie_path = /application/path/ session.use_strict_mode = 1 session.use_cookies = 1 session.use_only_cookies = 1 session.cookie_lifetime = 14400 # 4 hours session.cookie_secure = 1 session.cookie_httponly = 1 session.cookie_samesite = Strict session.cache_expire = 30 session.sid_length = 256 session.sid_bits_per_character = 6 # PHP 7.2+ session.hash_function = 1 # PHP 7.0-7.1 session.hash_bits_per_character = 6 # PHP 7.0-7.1 Les recomanacions en major detall:","title":"Usa sessions"},{"location":"05-maintain-state/05-06-http-authentication/#control-de-la-vida-de-sessio","text":"Fes que expire la sessi\u00f3 despr\u00e9s d\u2019un curt per\u00edode d\u2019inactivitat : ajusteu el temps d\u2019inactivitat a 5 minuts per a aplicacions altament protegides fins a no m\u00e9s de 30 minuts per a aplicacions de baix risc. Habilita l\u2019opci\u00f3 de tancament de sessi\u00f3 : caduca i destrueix expl\u00edcitament la sessi\u00f3 en tancar la sessi\u00f3. Eviteu els inicis de sessi\u00f3 persistents (opci\u00f3 \"recordeu-me\") : opcionalment podeu restringir la informaci\u00f3 conservada i revelada per l'aplicaci\u00f3, \u00e9s a dir, obligar a l'usuari a tornar a iniciar sessi\u00f3 abans de realitzar cap operaci\u00f3 cr\u00edtica. Fes que expire la sessi\u00f3 quan hi haja error de seguretat : qualsevol error de seguretat de l'aplicaci\u00f3 hauria de donar lloc a la finalitzaci\u00f3 de la sessi\u00f3. Fes caducar la sessi\u00f3 quan siga de llarga durada : obligaci\u00f3 a reautentificar la sessi\u00f3, que tot i estar actiu ha arribat al temps m\u00e0xim perm\u00e8s, p.e. unes poques hores. Elimineu la galleta de sessi\u00f3 en destruir una sessi\u00f3 .","title":"Control de la vida de sessi\u00f3"},{"location":"05-maintain-state/05-06-http-authentication/#identificador-de-sessio","text":"Utilitzeu nom\u00e9s galetes per propagar l\u2019ID de sessi\u00f3 , ja que quan es transmeten mitjan\u00e7ant un par\u00e0metre URL, les sol\u00b7licituds GET poden ser emmagatzemades a l\u2019historial del navegador, a la mem\u00f2ria cau i als marcadors. Aleshores tamb\u00e9 es pot visualitzar f\u00e0cilment. Regenereu l'identificador de sessi\u00f3 : regenereu (substitu\u00efu-ne per un de nou) l'identificador de sessi\u00f3, almenys cada cop que canvie el nivell de privilegi de l'usuari. Generalment es pot regenerar abans de qualsevol transacci\u00f3 important, despr\u00e9s d\u2019un determinat nombre de sol\u00b7licituds o despr\u00e9s d\u2019un per\u00edode de temps. Comproveu si l'identificador de sessi\u00f3 \u00e9s v\u00e0lid (de mida i tipus previst) i que ha estat generat per l'aplicaci\u00f3 i no proporcionat per l'usuari. L'identificador de sessi\u00f3 hauria de ser adequadament llarg, imprevisible, dif\u00edcil de reproduir i creat a partir de fonts aleat\u00f2ries d'alta qualitat .","title":"Identificador de sessi\u00f3"},{"location":"05-maintain-state/05-06-http-authentication/#cookie-de-sessio","text":"Definiu el domini de la galleta a quelcom m\u00e9s espec\u00edfic que el domini de primer nivell. No emmagatzeneu res a la galleta (almenys qualsevol informaci\u00f3 sensible com el nom d\u2019usuari o la contrasenya) sols\u2019ID de sessi\u00f3. Definiu el senyalador nom\u00e9s http per desactivar la captura de l'identificador de sessi\u00f3 mitjan\u00e7ant XSS. Quan siga possible, utilitzeu un xifrat fort (SSL) i l'atribut cookie_secure per permetre la transmissi\u00f3 de cookies nom\u00e9s a trav\u00e9s de https.","title":"Cookie de sessi\u00f3"},{"location":"05-maintain-state/05-06-http-authentication/#emmagatzematge-de-dades-de-sessio","text":"Determineu on s'emmagatzemen les dades de sessi\u00f3 i si es tracta d\u2019un sistema de fitxers o d\u2019una base de dades, determineu qui m\u00e9s podria tenir acc\u00e9s a aquestes dades. Quan s'emmagatzemen les dades de sessi\u00f3 en fitxers, assegureu-vos que l'aplicaci\u00f3 est\u00e0 configurada per utilitzar un directori privat independent (per exemple, la directiva session.save_path ). Utilitzeu els permisos del sistema de fitxers per protegir aquests fitxers d\u2019observaci\u00f3 o modificaci\u00f3 d\u2019usuaris diferents dels comptes necessaris per operar el servidor web i les aplicacions. Si aix\u00f2 no \u00e9s possible, cal xifrar les dades de la sessi\u00f3 o contenir nom\u00e9s dades no sensibles. Tingueu en compte que PHP utilitza de manera predeterminada el directori temporal del sistema p\u00fablic. Totes les variables de sessi\u00f3 s\u2019han de validar i sanejar per assegurar-se que siguem correctes i que no cont\u00e9 car\u00e0cters inesperats.","title":"Emmagatzematge de dades de sessi\u00f3"},{"location":"05-maintain-state/05-06-http-authentication/#no-coneixer-les-contrasenyes","text":"Al final, tothom crea una aplicaci\u00f3 PHP que es basa en la sessi\u00f3 d\u2019usuari. Els noms d\u2019usuari i les contrasenyes s\u2019emmagatzemen en una base de dades i s\u2019utilitzen posteriorment per autentificar els usuaris despr\u00e9s de l\u2019inici de sessi\u00f3. \u00c9s important que fer hash de les contrasenyes correctament abans d\u2019emmagatzemar-les. El hashing i el xifrat s\u00f3n dues coses molt diferents que sovint es confonen. El hashing \u00e9s una funci\u00f3 irreversible i unidireccional. \u00c9s produeix una cadena de longitud fixa que no es pot invertir. Aix\u00f2 vol dir que podeu comparar un hash amb un altre per determinar si tots dos provenien de la mateixa cadena font, per\u00f2 no podeu determinar la cadena original. Si les contrasenyes no s'emmagatzemen amb hashing i un tercer no autoritzat accedeix a la vostra base de dades, tots els comptes d'usuari estaran compromesos. A difer\u00e8ncia del hashing , el xifrat \u00e9s reversible (sempre que tingueu la clau). El xifratge \u00e9s \u00fatil en altres \u00e0rees, per\u00f2 \u00e9s una estrat\u00e8gia deficient per emmagatzemar contrasenyes de forma segura. Les contrasenyes tamb\u00e9 han de salar-se individualment afegint una cadena aleat\u00f2ria a cada contrasenya abans d'aplicar hashing . Aix\u00f2 evita els atacs de diccionari i l'\u00fas de \"taules de l'arc de Sant Mart\u00ed\" (una llista inversa de hash criptogr\u00e0fics per a contrasenyes comunes.) El hashing i el salat s\u00f3n vitals, ja que sovint els usuaris utilitzen la mateixa contrasenya per a diversos serveis i la qualitat de la contrasenya \u00e9s deficient. Addicionalment, haureu d'utilitzar un algorisme especialitzat en hashing en lloc d'una funci\u00f3 de hash criptogr\u00e0fic de prop\u00f2sit general i r\u00e0pid (per exemple, SHA256). La llista breu d'algorismes de hashing de contrasenya acceptables (a juny de 2018) a utilitzar s\u00f3n: Argon2 (disponible a PHP 7.2 i versions posteriors) Scrypt Bcrypt (PHP us proporciona aquesta; vegeu m\u00e9s avall) PBKDF2 amb HMAC-SHA256 o HMAC-SHA512 Afortunadament, avui en dia PHP ens ho facilita.","title":"No con\u00e8ixer les contrasenyes"},{"location":"05-maintain-state/05-06-http-authentication/#hashing-de-contrasenyes-amb-password_hash","text":"A PHP 5.5 s'ha introdu\u00eft password_hash() . En aquest moment est\u00e0 utilitzant BCrypt, l'algorisme m\u00e9s fort actualment suportat per PHP. Tot i aix\u00f2, s'actualitzar\u00e0 en el futur per donar suport a m\u00e9s algoritmes. La biblioteca de password_compat es va crear per proporcionar una compatibilitat de PHP> = 5.3.7. A continuaci\u00f3 hem aplicat hashing a una cadena i, a continuaci\u00f3, apliquem el hashing contra una nova cadena. Com que les dues cadenes d'origen s\u00f3n diferents (\"contrasenya-secreta\" i \"contrasenya-err\u00f2nia\"), aquesta sessi\u00f3 fallar\u00e0. $passwordHash = password_hash ( \"contrasenya-secreta\" , PASSWORD_DEFAULT ); if ( password_verify ( \"contrenya-err\u00f2nia\" , $passwordHash )) { // Contrasenya correcta } else { // Contrasenya incorrecta } password_hash() s'ocupa de la salificaci\u00f3 de contrasenyes. La sal s'emmagatzema, juntament amb l'algorisme i el \"cost\", com a part del hash. password_verify() extreu aix\u00f2 per determinar com comprovar la contrasenya, de manera que no necessiteu un camp de base de dades independent per emmagatzemar les vostres sals. PASSWORD_DEFAULT PASSWORD_DEFAULT . Actualment utilitza l\u2019algoritme bcrypt (predeterminat a partir de PHP 5.5.0). Observeu que aquesta constant est\u00e0 pensada per a adaptar-se sempre que hi haja un algoritme nou i m\u00e9s fort a PHP. Per aquesta ra\u00f3, la longitud del resultat d\u2019utilitzar aquest identificador pot canviar amb el temps. Per tant, es recomana emmagatzemar el resultat en una columna d\u2019una base de dades de m\u00e9s de 60 caracters (255 caracters seria una bona elecci\u00f3).","title":"Hashing de contrasenyes amb password_hash"},{"location":"05-maintain-state/05-06-http-authentication/#activitat_1","text":"Adapta el projecte de forma que: Cada 15 minuts es regenere la sessi\u00f3. Sols use http per accedir a la cookie de sessi\u00f3. Les constrasenyes s'encripten amb bcrypt . Es tanque la sessi\u00f3 tal com s'indica.","title":"Activitat"},{"location":"05-maintain-state/05-06-http-authentication/#recursos","text":"The 2018 Guide to Building Secure PHP Software PHP: The Right Way. Security Session Management Basics Ultimate PHP Security Best Practices PHP Session Security Best Practices PHP Sessions in depth Session Management Cheat Sheet","title":"Recursos"},{"location":"05-maintain-state/05-99-activities/","text":"Activitats Cookies Projecte MovieFX \u00daltima visita. Modifica la p\u00e0gina index.php de forma que emmagatzeme en una galleta l'\u00faltim instant en qu\u00e8 l'usuari va visitar la p\u00e0gina. Si \u00e9s la seva primera visita, mostra un missatge de benvinguda. En cas contrari, mostra la data i hora de la seva anterior visita. La galleta tindr\u00e0 una durada d'una setmana. Comprova que la galleta s'ha creat correctament. Emmagatzematge del nom de l'usuari. L'objectiu \u00e9s que quan un usuari inicie sessi\u00f3 s'emmagatzeme el nom introdu\u00eft en un galleta, de forma que quan torne a accedir al formulari d'inici de sessi\u00f3 aparega el nom autom\u00e0ticament. El nom de la cookie ser\u00e0 last_used_name i la durada ser\u00e0 de 30 dies. Crea la p\u00e0gina logout.php que en accedir eliminar\u00e0 la cookie . Assegurant les galetes. Despr\u00e9s de llegir l'article enlla\u00e7at, aplica els canvis oportuns per a fer m\u00e9s segures les cookies . Maneig de sessions Projecte MovieFX Registre de visites Modifica la p\u00e0gina inicial del projecte de forma que s'emmagatzeme en la sessi\u00f3 d'usuari els instants de totes les seves \u00faltimes visites. Si \u00e9s la seva primera visita, mostra un missatge de benvinguda. En cas contrari, mostra la data i hora de totes les seves visites anteriors. Afegeix un bot\u00f3 a la p\u00e0gina que permeti esborrar el registre de visites. Control d'acc\u00e9s Utilitza tamb\u00e9 una variable de sessi\u00f3 per a comprovar si l'usuari ja ha iniciat sessi\u00f3 correctament. D'aquesta manera no caldr\u00e0 comprovar les credencials amb la base de dades constantment. Evitar atacts CSRF Implementa en el formulari de creaci\u00f3 de pel\u00b7l\u00edcules la soluci\u00f3 proposada en els apunts. Gesti\u00f3 de formularis en dos fitxers. Modifica el formulari de creaci\u00f3 de pel\u00b7l\u00edcules de forma que es gestione en dos fitxers tal com s'indica en els apunts. Bones pr\u00e0ctiques Adapta el projecte de forma que: Cada 15 minuts es regenere la sessi\u00f3. Sols use http per accedir a la cookie de sessi\u00f3. Les constrasenyes s'encripten amb bcrypt . Es tanque la sessi\u00f3 tal com s'indica.","title":"Activitats"},{"location":"05-maintain-state/05-99-activities/#activitats","text":"","title":"Activitats"},{"location":"05-maintain-state/05-99-activities/#cookies","text":"","title":"Cookies"},{"location":"05-maintain-state/05-99-activities/#projecte-moviefx","text":"\u00daltima visita. Modifica la p\u00e0gina index.php de forma que emmagatzeme en una galleta l'\u00faltim instant en qu\u00e8 l'usuari va visitar la p\u00e0gina. Si \u00e9s la seva primera visita, mostra un missatge de benvinguda. En cas contrari, mostra la data i hora de la seva anterior visita. La galleta tindr\u00e0 una durada d'una setmana. Comprova que la galleta s'ha creat correctament. Emmagatzematge del nom de l'usuari. L'objectiu \u00e9s que quan un usuari inicie sessi\u00f3 s'emmagatzeme el nom introdu\u00eft en un galleta, de forma que quan torne a accedir al formulari d'inici de sessi\u00f3 aparega el nom autom\u00e0ticament. El nom de la cookie ser\u00e0 last_used_name i la durada ser\u00e0 de 30 dies. Crea la p\u00e0gina logout.php que en accedir eliminar\u00e0 la cookie . Assegurant les galetes. Despr\u00e9s de llegir l'article enlla\u00e7at, aplica els canvis oportuns per a fer m\u00e9s segures les cookies .","title":"Projecte MovieFX"},{"location":"05-maintain-state/05-99-activities/#maneig-de-sessions","text":"","title":"Maneig de sessions"},{"location":"05-maintain-state/05-99-activities/#projecte-moviefx_1","text":"Registre de visites Modifica la p\u00e0gina inicial del projecte de forma que s'emmagatzeme en la sessi\u00f3 d'usuari els instants de totes les seves \u00faltimes visites. Si \u00e9s la seva primera visita, mostra un missatge de benvinguda. En cas contrari, mostra la data i hora de totes les seves visites anteriors. Afegeix un bot\u00f3 a la p\u00e0gina que permeti esborrar el registre de visites. Control d'acc\u00e9s Utilitza tamb\u00e9 una variable de sessi\u00f3 per a comprovar si l'usuari ja ha iniciat sessi\u00f3 correctament. D'aquesta manera no caldr\u00e0 comprovar les credencials amb la base de dades constantment. Evitar atacts CSRF Implementa en el formulari de creaci\u00f3 de pel\u00b7l\u00edcules la soluci\u00f3 proposada en els apunts. Gesti\u00f3 de formularis en dos fitxers. Modifica el formulari de creaci\u00f3 de pel\u00b7l\u00edcules de forma que es gestione en dos fitxers tal com s'indica en els apunts. Bones pr\u00e0ctiques Adapta el projecte de forma que: Cada 15 minuts es regenere la sessi\u00f3. Sols use http per accedir a la cookie de sessi\u00f3. Les constrasenyes s'encripten amb bcrypt . Es tanque la sessi\u00f3 tal com s'indica.","title":"Projecte MovieFX"},{"location":"06-composer/06-01-intro/","text":"Composer. Introducci\u00f3 al testing Objectius Gestionar depend\u00e8ncies amb llibreries de tercers. Utilitzar el autoloading de Composer en el nostre projecte. Utilitzar llibreries de tercers: Monolog, WebMozart. Realitzar test unitaris Continguts Instalaci\u00f3n de Composer a) Packagist b) Semantic Versioning Uso de librer\u00edas de terceros a) Monolog Namespaces Introducci\u00f3 al testing . Refactoring Criteris d'avaluaci\u00f3 RA09. A) S'han reconegut els avantatges que proporciona la reutilitzaci\u00f3 de codi i l'aprofitament d'informaci\u00f3 ja existent. RA09. B) S'han identificat llibreries de codi i tecnologies aplicables en la creaci\u00f3 d'aplicacions web h\u00edbrides. RA09. E) S'han utilitzat llibreries de codi per a incorporar funcionalitats espec\u00edfiques a una aplicaci\u00f3 web Introducci\u00f3 Fins ara hem apr\u00e9s a usar les diferents funcionalitats de PHP d'una forma molt b\u00e0sica. Ara anem a introduir una s\u00e8rie de ferraments i conceptes que ens ajudaran a realitzar les aplicacions d'una forma m\u00e9s \u00e0gil i segura. Refacci\u00f3 En enginyeria del programari, el terme refacci\u00f3, en angl\u00e8s refactoring , s'empra per a descriure el fet de modificar codi font sense canviar-ne el comportament observat des de l'exterior. La refacci\u00f3 sovint \u00e9s una part del cicle de vida del programari: els desenvolupadors alternen entre la producci\u00f3 de noves funcionalitats i la refacci\u00f3 de codi ja existent per tal de millorar-ne la consist\u00e8ncia interna i la claredat. Les proves de regressi\u00f3 asseguren que la refacci\u00f3 no ha canviat el comportament del codi observat des d'altres m\u00f2duls del programa. Patrons de disseny Segons Viquip\u00e8dia: En enginyeria de programari, un patr\u00f3 de disseny \u00e9s una soluci\u00f3 general a un problema com\u00fa i recurrent en el disseny de programari. Un patr\u00f3 de disseny no \u00e9s un disseny acabat que es pot transformar directament en codi; \u00e9s una descripci\u00f3 o plantilla per resoldre un problema que es pot utilitzar en moltes situacions diferents. \u00c9s a dir, s\u00f3n solucions als problemes habituals que podem trobar-nos en desenvolupar el nostre programari. Hi ha molts patrons de disseny com podeu trobar en les seg\u00fcents p\u00e0gines: Refactoring guru Design Patters PHP En el nostre cas en vorem alguns senzills, f\u00e0cils d'aplicar i que despr\u00e9s trobarem en els framewoks m\u00e9s habituals. Registry El prop\u00f2sit del patr\u00f3 Registry \u00e9s implementar un emmagatzematge central per als objectes que s'utilitzen sovint a tota l'aplicaci\u00f3, normalment s'implementa utilitzant una classe abstracta amb nom\u00e9s m\u00e8todes est\u00e0tics (o utilitzant el patr\u00f3 Singleton ). Estat global El patr\u00f3 Registry introdueix un estat global, \u00e9s a dir, crea un objecte d'\u00e0mbit global, la qual cosa s'hauri d'evitar tot moment! No obstant aix\u00f2, en projectes xicotets i senzills pot utilitzar-se perfectament. M\u00e9s avant del patr\u00f3 Dependency Injection que seria el recomanat en aquestos casos. En Registry teniu un exemple d'implementaci\u00f3.","title":"Introducci\u00f3"},{"location":"06-composer/06-01-intro/#composer-introduccio-al-testing","text":"Objectius Gestionar depend\u00e8ncies amb llibreries de tercers. Utilitzar el autoloading de Composer en el nostre projecte. Utilitzar llibreries de tercers: Monolog, WebMozart. Realitzar test unitaris Continguts Instalaci\u00f3n de Composer a) Packagist b) Semantic Versioning Uso de librer\u00edas de terceros a) Monolog Namespaces Introducci\u00f3 al testing . Refactoring Criteris d'avaluaci\u00f3 RA09. A) S'han reconegut els avantatges que proporciona la reutilitzaci\u00f3 de codi i l'aprofitament d'informaci\u00f3 ja existent. RA09. B) S'han identificat llibreries de codi i tecnologies aplicables en la creaci\u00f3 d'aplicacions web h\u00edbrides. RA09. E) S'han utilitzat llibreries de codi per a incorporar funcionalitats espec\u00edfiques a una aplicaci\u00f3 web","title":"Composer. Introducci\u00f3 al testing"},{"location":"06-composer/06-01-intro/#introduccio","text":"Fins ara hem apr\u00e9s a usar les diferents funcionalitats de PHP d'una forma molt b\u00e0sica. Ara anem a introduir una s\u00e8rie de ferraments i conceptes que ens ajudaran a realitzar les aplicacions d'una forma m\u00e9s \u00e0gil i segura. Refacci\u00f3 En enginyeria del programari, el terme refacci\u00f3, en angl\u00e8s refactoring , s'empra per a descriure el fet de modificar codi font sense canviar-ne el comportament observat des de l'exterior. La refacci\u00f3 sovint \u00e9s una part del cicle de vida del programari: els desenvolupadors alternen entre la producci\u00f3 de noves funcionalitats i la refacci\u00f3 de codi ja existent per tal de millorar-ne la consist\u00e8ncia interna i la claredat. Les proves de regressi\u00f3 asseguren que la refacci\u00f3 no ha canviat el comportament del codi observat des d'altres m\u00f2duls del programa.","title":"Introducci\u00f3"},{"location":"06-composer/06-01-intro/#patrons-de-disseny","text":"Segons Viquip\u00e8dia: En enginyeria de programari, un patr\u00f3 de disseny \u00e9s una soluci\u00f3 general a un problema com\u00fa i recurrent en el disseny de programari. Un patr\u00f3 de disseny no \u00e9s un disseny acabat que es pot transformar directament en codi; \u00e9s una descripci\u00f3 o plantilla per resoldre un problema que es pot utilitzar en moltes situacions diferents. \u00c9s a dir, s\u00f3n solucions als problemes habituals que podem trobar-nos en desenvolupar el nostre programari. Hi ha molts patrons de disseny com podeu trobar en les seg\u00fcents p\u00e0gines: Refactoring guru Design Patters PHP En el nostre cas en vorem alguns senzills, f\u00e0cils d'aplicar i que despr\u00e9s trobarem en els framewoks m\u00e9s habituals.","title":"Patrons de disseny"},{"location":"06-composer/06-01-intro/#registry","text":"El prop\u00f2sit del patr\u00f3 Registry \u00e9s implementar un emmagatzematge central per als objectes que s'utilitzen sovint a tota l'aplicaci\u00f3, normalment s'implementa utilitzant una classe abstracta amb nom\u00e9s m\u00e8todes est\u00e0tics (o utilitzant el patr\u00f3 Singleton ). Estat global El patr\u00f3 Registry introdueix un estat global, \u00e9s a dir, crea un objecte d'\u00e0mbit global, la qual cosa s'hauri d'evitar tot moment! No obstant aix\u00f2, en projectes xicotets i senzills pot utilitzar-se perfectament. M\u00e9s avant del patr\u00f3 Dependency Injection que seria el recomanat en aquestos casos. En Registry teniu un exemple d'implementaci\u00f3.","title":"Registry"},{"location":"06-composer/06-02-composer/","text":"Composer Introducci\u00f3 Un component PHP \u00e9s un conjunt de codi que t\u2019ajuda a solucionar un problema espec\u00edf de la teua aplicaci\u00f3. Composer \u00e9s una eina per a la gesti\u00f3 de components (depend\u00e8ncies) en PHP. Permet declarar els components dels que depen del nostre projecte i les gestionar\u00e0 (instal\u00b7lar\u00e0/actualitzar\u00e0). A difer\u00e8ncia dels gestors de paquets com Apt o Yum, Composer gestiona els paquets per projecte, instal\u00b7lant-los en el directori ( vendor ) del projecte. Per defecte, no instal\u00b7la res de forma global. Per tant, \u00e9s un gestor de depend\u00e8ncies. Aquesta idea no \u00e9s nova i Composer s\u2019inspira fortament en npm de node i el bundler de ruby. Composer ens soluciona dos problemes: Gestionar les depend\u00e8ncies amb llibreries de tercers. Nom\u00e9s cal que declarem les depend\u00e8ncies i Composer s'encarregar\u00e0 de descarregar i instal\u00b7lar tot el que siga necessari Autoloading del nostre codi. Ja no haurem de fer m\u00e9s requires, Composer ho far\u00e0 per nosaltres \u00fas b\u00e0sic Per usar composer el primer que necessitem \u00e9s disposar de l\u2019arxiu composer.json . Consisteix en un seguit d\u2019estructures d\u2019informaci\u00f3: { \"require\" : { \"monolog/monolog\" : \"2.0.*\" } } require mapeja noms de paquets (en l\u2019exemple, monolog/monolog ) amb la seua versi\u00f3 (en aquest cas: 2.0.*) \u00das b\u00e0sic Si necessit\u00e0rem usar en un projecte el component monolog executariem en la carpeta del projecte: composer require monolog/monolog:2.0.* Els noms dels paquets Est\u00e0 format per dues parts: La primera indica qui \u00e9s el seu \"vendor\" o creador. La segona indica el nom de el projecte. composer require vendor/package Sovint les dues parts s\u00f3n id\u00e8ntiques. Limitar la versi\u00f3 dels paquets Restricci\u00f3 de la versi\u00f3 exacta Exemple: 1.0.2 #MAJOR.MINOR.PATCH. Rang de versions Exemples: >=1.0 >=1.0 <2.0 >=1.0 <1.1 || >=1.2 Rang de versions comodins (.*) Es pot especificar una patr\u00f3 en un * comod\u00ed. 1.0.* \u00e9s l'equivalent de >=1.0 <1.1 . Exemple: 1.0.* Rang amb tilde (~) L'operador ~ s'explica millor en un exemple: ~1.2 \u00e9s equivalent a >=1.2 <2.0.0 , mentre que ~1.2.3 \u00e9s equivalent a >=1.2.3 <1.3.0 . Exemple: ~1.2 Rang de versi\u00f3 amb cimcurflex ( ^ ) Per exemple ^1.2.3 \u00e9s equivalent a >=1.2.3 <2.0.0 ja que ninguna de les releases fins a la 2.0 deuria trencar compatibilitat en versions anteriors. Exemple: ^1.2.3 Versionat sem\u00e0ntic (semver) Els n\u00fameros de versi\u00f3 i la forma en que canvien informen sobre el que va ser modificat d'una versi\u00f3 a una altra. Veure l'especificaci\u00f3 en el seg\u00fcent document: http://semver.org/lang/es/ Composer instal\u00b7lant depend\u00e8ncies Executem la seg\u00fcent ordre: composer install Es generar\u00e0 el directori vendor/ amb les llibreries de les quals dep\u00e8n el projecte. IMPORTANT: Hem d'afegir el directori vendor/ a l'arxiu .gitignore L\u2019ordre tamb\u00e9 crea un fitxer composer.lock El fitxer composer.lock composer.lock guarda la versi\u00f3 exacta que s'ha instal\u00b7lat de cada llibreria. El projecte es fixa a unes determinades versions. Tant el composer.lock com el composer.json han estar al repositori. L\u2019ordre install comprova primer si hi ha el fitxer composer.lock , i si existeix, desc\u00e0rrega exactament les versions que s'indiquen en aquest arxiu. Si treballem en equip, tot l'equip tindr\u00e0 les mateixes versions. Actualitzar versions Si tenim l'arxiu composer.lock sempre s'instal\u00b7laran les mateixes versions de les llibreries. Per actualitzar a noves versions, fem servir l\u2019ordre composer update . Fa que Composer busque les versions m\u00e9s recents de les llibreries sempre que segueixin complint les restriccions de les versions indicades a l'arxiu composer.json. Tamb\u00e9 actualitza l'arxiu composer.lock. Si nom\u00e9s volem instal\u00b7lar o actualitzar una depend\u00e8ncia, podem indicar el seu nom despr\u00e9s de l\u2019ordre: composer update monolog/monolog Afegint depend\u00e8ncies L\u2019ordre que afegeix noves depend\u00e8ncies en el arxiu composer.json: composer require Ens preguntar\u00e0 qu\u00e8 llibreries volem afegir. Despr\u00e9s d'afegir aquestes noves depend\u00e8ncies, s\u2019instal\u00b7len o actualitzen les depend\u00e8ncies que siguen necess\u00e0ries. Podem passar les noves depend\u00e8ncies com argument de la comanda. composer require monolog/monolog:1. * Packagist Repositori central d'Composer (lloc de qu\u00e8 s'obtenen els paquets) Lloc Web: http://packagist.org Carrega autom\u00e0tica de classes Normalment les llibreries proporcionen informaci\u00f3 sobre la c\u00e0rrega autom\u00e0tica de les seves classes. Composer genera un arxiu vendor/autoload.php. Incloent aquest fitxer en el projecte, podem utilitzar qualsevol classe instal\u00b7lada a trav\u00e9s de Composer sense haver de incloure expl\u00edcitament: require 'vendor/autoload.php' ; En el nostre cas, afegirem el require anterior en el fitxer bootsrap.php . C\u00e0rrega autom\u00e0tica de classes Classes personalitzades Podem emprar l\u2019autoloader de Composer perqu\u00e8 carregue les nostres classes. Si el nostre namespace es App i els arxius estan en src afegirem: \"autoload\": { \"psr-4\": { \"App\": \"src/\" } } Despr\u00e9s executarem composer dump-autoload perqu\u00e8 \u00e9s regenere vendor/autoload.php. \u00das de la llibreria Per utilitzar la llibreria Monolog podem usar les seves classes i Composer s'encarregar\u00e0 de carregar-les: $log = new Monolog\\Logger ( 'name' ); $log -> pushHandler ( new Monolog\\Handler\\StreamHandler ( 'app.log' , Monolog\\Logger :: INFO ) ); $log\u2192info ( 'Foo' ); M\u00e9s informaci\u00f3: https://packagist.org/packages/monolog/monolog https://github.com/Seldaek/monolog/blob/HEAD/doc/01-usage.md Pr\u00e0ctica part 1 Instal\u00b7la composer Instal\u00b7la monolog Configura bootstrap.php perqu\u00e8 use l\u2019autoloader de composer. Configura composer.json perqu\u00e8 carregue les nostres classes. Configura monolog en indexp.php de forma que registre la activitat en directori del projecte/app.log. Pr\u00e0ctica part 2 Injecta la instancia de monolog ($log) al DI ($di). Modifica AbstractController perqu\u00e8 obtinga del $di el $log. Modifica el PostController perqu\u00e8 registre un esdeveniment quan es crea un nou producte. Usa el m\u00e8tode info si tot ha anat b\u00e9 i error si hi ha hagut errors. Twig Espais de noms (namespaces) En el m\u00f3n de PHP, els espais de noms estan dissenyats per a solucionar dos problemes amb qu\u00e8 es troben els autors de biblioteques i d'aplicacions en crear elements de codi reusable, com ara classes o funcions: El conflicte de noms entre el codi que es crea i les classes / funcions / constants internes de PHP o les classes / funcions / constants de tercers. La capacitat de sobrenomenar (o abreujar) Noms_Extra_Llargs dissenyada per alleugerir el primer problema, millorant la llegibilitat del codi font. Els espais de noms de PHP proporcionen una manera per agrupar classes, interf\u00edcies, funcions i constants relacionades. Espais de noms (namespaces) En la seva definici\u00f3 m\u00e9s acceptada, els espais de noms s\u00f3n una manera d'encapsular elements. Exemple: directoris en els sistemes de fitxers. El fitxer foo.txt pot existir en els directoris /home/Greg i /home/altre, per\u00f2 no poden coexistir dues c\u00f2pies de foo.txt en el mateix directori. A m\u00e9s, per accedir a el fitxer foo.txt fora de directori /home/Greg, s'ha d'anteposar el nom de directori a el nom de el fitxer, emprant el separador de directoris per aix\u00ed obtenir /home/greg/foo.txt. Aquest mateix principi s'est\u00e9n als espais de noms en el m\u00f3n de la programaci\u00f3. Autoloading Molts desenvolupadors que escriuen aplicacions orientades a objectes creen un fitxer font de PHP per a cada definici\u00f3 de classe. Una de les majors mol\u00e8sties \u00e9s haver de fer una llarga llista d'inclusions a l'inici de cada script (un per cada classe). En PHP 5 aix\u00f2 ja no \u00e9s necessari. La funci\u00f3 spl_autoload_register() registra qualsevol nombre de autocarregadors, possibilitant que les classes i interf\u00edcies siguin carregades autom\u00e0ticament si no estan definides actualment. En registrar autocarregadors, a PHP se li d\u00f3na una \u00faltima oportunitat de carregar les classes o interf\u00edcies abans que falli per un error. Autoloading","title":"Composer"},{"location":"06-composer/06-02-composer/#composer","text":"","title":"Composer"},{"location":"06-composer/06-02-composer/#introduccio","text":"Un component PHP \u00e9s un conjunt de codi que t\u2019ajuda a solucionar un problema espec\u00edf de la teua aplicaci\u00f3. Composer \u00e9s una eina per a la gesti\u00f3 de components (depend\u00e8ncies) en PHP. Permet declarar els components dels que depen del nostre projecte i les gestionar\u00e0 (instal\u00b7lar\u00e0/actualitzar\u00e0). A difer\u00e8ncia dels gestors de paquets com Apt o Yum, Composer gestiona els paquets per projecte, instal\u00b7lant-los en el directori ( vendor ) del projecte. Per defecte, no instal\u00b7la res de forma global. Per tant, \u00e9s un gestor de depend\u00e8ncies. Aquesta idea no \u00e9s nova i Composer s\u2019inspira fortament en npm de node i el bundler de ruby. Composer ens soluciona dos problemes: Gestionar les depend\u00e8ncies amb llibreries de tercers. Nom\u00e9s cal que declarem les depend\u00e8ncies i Composer s'encarregar\u00e0 de descarregar i instal\u00b7lar tot el que siga necessari Autoloading del nostre codi. Ja no haurem de fer m\u00e9s requires, Composer ho far\u00e0 per nosaltres \u00fas b\u00e0sic Per usar composer el primer que necessitem \u00e9s disposar de l\u2019arxiu composer.json . Consisteix en un seguit d\u2019estructures d\u2019informaci\u00f3: { \"require\" : { \"monolog/monolog\" : \"2.0.*\" } } require mapeja noms de paquets (en l\u2019exemple, monolog/monolog ) amb la seua versi\u00f3 (en aquest cas: 2.0.*)","title":"Introducci\u00f3"},{"location":"06-composer/06-02-composer/#us-basic","text":"Si necessit\u00e0rem usar en un projecte el component monolog executariem en la carpeta del projecte: composer require monolog/monolog:2.0.*","title":"\u00das b\u00e0sic"},{"location":"06-composer/06-02-composer/#els-noms-dels-paquets","text":"Est\u00e0 format per dues parts: La primera indica qui \u00e9s el seu \"vendor\" o creador. La segona indica el nom de el projecte. composer require vendor/package Sovint les dues parts s\u00f3n id\u00e8ntiques.","title":"Els noms dels paquets"},{"location":"06-composer/06-02-composer/#limitar-la-versio-dels-paquets","text":"Restricci\u00f3 de la versi\u00f3 exacta Exemple: 1.0.2 #MAJOR.MINOR.PATCH. Rang de versions Exemples: >=1.0 >=1.0 <2.0 >=1.0 <1.1 || >=1.2 Rang de versions comodins (.*) Es pot especificar una patr\u00f3 en un * comod\u00ed. 1.0.* \u00e9s l'equivalent de >=1.0 <1.1 . Exemple: 1.0.* Rang amb tilde (~) L'operador ~ s'explica millor en un exemple: ~1.2 \u00e9s equivalent a >=1.2 <2.0.0 , mentre que ~1.2.3 \u00e9s equivalent a >=1.2.3 <1.3.0 . Exemple: ~1.2 Rang de versi\u00f3 amb cimcurflex ( ^ ) Per exemple ^1.2.3 \u00e9s equivalent a >=1.2.3 <2.0.0 ja que ninguna de les releases fins a la 2.0 deuria trencar compatibilitat en versions anteriors. Exemple: ^1.2.3","title":"Limitar la versi\u00f3 dels paquets"},{"location":"06-composer/06-02-composer/#versionat-semantic-semver","text":"Els n\u00fameros de versi\u00f3 i la forma en que canvien informen sobre el que va ser modificat d'una versi\u00f3 a una altra. Veure l'especificaci\u00f3 en el seg\u00fcent document: http://semver.org/lang/es/ Composer instal\u00b7lant depend\u00e8ncies Executem la seg\u00fcent ordre: composer install Es generar\u00e0 el directori vendor/ amb les llibreries de les quals dep\u00e8n el projecte. IMPORTANT: Hem d'afegir el directori vendor/ a l'arxiu .gitignore L\u2019ordre tamb\u00e9 crea un fitxer composer.lock","title":"Versionat sem\u00e0ntic (semver)"},{"location":"06-composer/06-02-composer/#el-fitxer-composerlock","text":"composer.lock guarda la versi\u00f3 exacta que s'ha instal\u00b7lat de cada llibreria. El projecte es fixa a unes determinades versions. Tant el composer.lock com el composer.json han estar al repositori. L\u2019ordre install comprova primer si hi ha el fitxer composer.lock , i si existeix, desc\u00e0rrega exactament les versions que s'indiquen en aquest arxiu. Si treballem en equip, tot l'equip tindr\u00e0 les mateixes versions.","title":"El fitxer composer.lock"},{"location":"06-composer/06-02-composer/#actualitzar-versions","text":"Si tenim l'arxiu composer.lock sempre s'instal\u00b7laran les mateixes versions de les llibreries. Per actualitzar a noves versions, fem servir l\u2019ordre composer update . Fa que Composer busque les versions m\u00e9s recents de les llibreries sempre que segueixin complint les restriccions de les versions indicades a l'arxiu composer.json. Tamb\u00e9 actualitza l'arxiu composer.lock. Si nom\u00e9s volem instal\u00b7lar o actualitzar una depend\u00e8ncia, podem indicar el seu nom despr\u00e9s de l\u2019ordre: composer update monolog/monolog","title":"Actualitzar versions"},{"location":"06-composer/06-02-composer/#afegint-dependencies","text":"L\u2019ordre que afegeix noves depend\u00e8ncies en el arxiu composer.json: composer require Ens preguntar\u00e0 qu\u00e8 llibreries volem afegir. Despr\u00e9s d'afegir aquestes noves depend\u00e8ncies, s\u2019instal\u00b7len o actualitzen les depend\u00e8ncies que siguen necess\u00e0ries. Podem passar les noves depend\u00e8ncies com argument de la comanda. composer require monolog/monolog:1. *","title":"Afegint depend\u00e8ncies"},{"location":"06-composer/06-02-composer/#packagist","text":"Repositori central d'Composer (lloc de qu\u00e8 s'obtenen els paquets) Lloc Web: http://packagist.org","title":"Packagist"},{"location":"06-composer/06-02-composer/#carrega-automatica-de-classes","text":"Normalment les llibreries proporcionen informaci\u00f3 sobre la c\u00e0rrega autom\u00e0tica de les seves classes. Composer genera un arxiu vendor/autoload.php. Incloent aquest fitxer en el projecte, podem utilitzar qualsevol classe instal\u00b7lada a trav\u00e9s de Composer sense haver de incloure expl\u00edcitament: require 'vendor/autoload.php' ; En el nostre cas, afegirem el require anterior en el fitxer bootsrap.php .","title":"Carrega autom\u00e0tica de classes"},{"location":"06-composer/06-02-composer/#carrega-automatica-de-classes_1","text":"","title":"C\u00e0rrega autom\u00e0tica de classes"},{"location":"06-composer/06-02-composer/#classes-personalitzades","text":"Podem emprar l\u2019autoloader de Composer perqu\u00e8 carregue les nostres classes. Si el nostre namespace es App i els arxius estan en src afegirem: \"autoload\": { \"psr-4\": { \"App\": \"src/\" } } Despr\u00e9s executarem composer dump-autoload perqu\u00e8 \u00e9s regenere vendor/autoload.php. \u00das de la llibreria Per utilitzar la llibreria Monolog podem usar les seves classes i Composer s'encarregar\u00e0 de carregar-les: $log = new Monolog\\Logger ( 'name' ); $log -> pushHandler ( new Monolog\\Handler\\StreamHandler ( 'app.log' , Monolog\\Logger :: INFO ) ); $log\u2192info ( 'Foo' ); M\u00e9s informaci\u00f3: https://packagist.org/packages/monolog/monolog https://github.com/Seldaek/monolog/blob/HEAD/doc/01-usage.md Pr\u00e0ctica part 1 Instal\u00b7la composer Instal\u00b7la monolog Configura bootstrap.php perqu\u00e8 use l\u2019autoloader de composer. Configura composer.json perqu\u00e8 carregue les nostres classes. Configura monolog en indexp.php de forma que registre la activitat en directori del projecte/app.log. Pr\u00e0ctica part 2 Injecta la instancia de monolog ($log) al DI ($di). Modifica AbstractController perqu\u00e8 obtinga del $di el $log. Modifica el PostController perqu\u00e8 registre un esdeveniment quan es crea un nou producte. Usa el m\u00e8tode info si tot ha anat b\u00e9 i error si hi ha hagut errors. Twig Espais de noms (namespaces) En el m\u00f3n de PHP, els espais de noms estan dissenyats per a solucionar dos problemes amb qu\u00e8 es troben els autors de biblioteques i d'aplicacions en crear elements de codi reusable, com ara classes o funcions: El conflicte de noms entre el codi que es crea i les classes / funcions / constants internes de PHP o les classes / funcions / constants de tercers. La capacitat de sobrenomenar (o abreujar) Noms_Extra_Llargs dissenyada per alleugerir el primer problema, millorant la llegibilitat del codi font. Els espais de noms de PHP proporcionen una manera per agrupar classes, interf\u00edcies, funcions i constants relacionades. Espais de noms (namespaces) En la seva definici\u00f3 m\u00e9s acceptada, els espais de noms s\u00f3n una manera d'encapsular elements. Exemple: directoris en els sistemes de fitxers. El fitxer foo.txt pot existir en els directoris /home/Greg i /home/altre, per\u00f2 no poden coexistir dues c\u00f2pies de foo.txt en el mateix directori. A m\u00e9s, per accedir a el fitxer foo.txt fora de directori /home/Greg, s'ha d'anteposar el nom de directori a el nom de el fitxer, emprant el separador de directoris per aix\u00ed obtenir /home/greg/foo.txt. Aquest mateix principi s'est\u00e9n als espais de noms en el m\u00f3n de la programaci\u00f3.","title":"Classes personalitzades"},{"location":"06-composer/06-02-composer/#autoloading","text":"Molts desenvolupadors que escriuen aplicacions orientades a objectes creen un fitxer font de PHP per a cada definici\u00f3 de classe. Una de les majors mol\u00e8sties \u00e9s haver de fer una llarga llista d'inclusions a l'inici de cada script (un per cada classe). En PHP 5 aix\u00f2 ja no \u00e9s necessari. La funci\u00f3 spl_autoload_register() registra qualsevol nombre de autocarregadors, possibilitant que les classes i interf\u00edcies siguin carregades autom\u00e0ticament si no estan definides actualment. En registrar autocarregadors, a PHP se li d\u00f3na una \u00faltima oportunitat de carregar les classes o interf\u00edcies abans que falli per un error. Autoloading","title":"Autoloading"},{"location":"06-composer/06-03-third-part/","text":"","title":"06 03 third part"},{"location":"06-composer/06-04-namespaces/","text":"","title":"06 04 namespaces"},{"location":"06-composer/06-05-tdd-intro/","text":"","title":"06 05 tdd intro"},{"location":"06-composer/06-99-activities/","text":"Activitats Introducci\u00f3 Projecte MovieFX La classe FlashMessage . Fins ara, hem gestionat la comunicaci\u00f3 entre p\u00e0gines mitjan\u00e7ant sessions. La gesti\u00f3 la f\u00e8iem escrivint i llegint en les variables de sessi\u00f3. L'objectiu de la seg\u00fcent classe \u00e9s proporcionar-nos un mecanisme que ens facilite l'enviament de missatges entre p\u00e0gines. Una vegada implementada utilitza-la en la creaci\u00f3 de pel\u00b7l\u00edcules. # src/Core/Helpers/FlashMessage.php /** * Class FlashMessage * Aquesta classe llig i escriu directament en una variable de sessi\u00f3 * que ser\u00e0 un array, la clau ser\u00e0 $sessionKey de forma que evitem * possible col\u00b7lisions. */ class FlashMessage { /** * string */ const SESSION_KEY = \"flash-message\" ; /** * obtenim el valor de l'array associat a la clau. * despr\u00e9s de llegir-lo l'esborrem * si no existeix tornem el valor indicat per defecte. * @param string $key * @param mixed $defaultValue * @return mixed|string */ public static function get ( string $key , $defaultValue = '' ); /** * @param string $key * @param $value */ public static function set ( string $key , $value ); /** * @param string $key */ private static function unset ( string $key ); } Tenint en compte tot el proc\u00e9s de gesti\u00f3 de pujada de fixers, les restriccions que es poden aplicar, i les dades que ens interessen una vegada el proc\u00e9s s'ha efectuat exitosament, crea una classe que encapsule totes les funcionalitats requerides. Implementa el patr\u00f3 Registry en una classe amb el mateix nom i afegeix una instancia de PDO associada a la clau \"PDO\". L'objecte PDO l'haur\u00e0s de crear i inserir-lo en el Registre en un nou fitxer anomenat bootstrap.php . Aquest fitxer ser\u00e0 requerit en totes els fitxers que tinguen acc\u00e9s a la base de dades. En un fitxer de configuraci\u00f3 (JSON, YAML, INI o XML, segons t'haja assignat el professor) emmagatzema el DSN ( Data Source Name ) d'acc\u00e9s a la base de dades. Despr\u00e9s, crea una classe Config que llija el fitxer i extraga el DSN. Utilitza onfig en bootstrap.php` en lloc d'usar un literal en instanciar la classe PDO. Afig tamb\u00e9 al fitxer de configuraci\u00f3 la ruta relativa on es guarden les fotos pujades.","title":"Activitats"},{"location":"06-composer/06-99-activities/#activitats","text":"","title":"Activitats"},{"location":"06-composer/06-99-activities/#introduccio","text":"","title":"Introducci\u00f3"},{"location":"06-composer/06-99-activities/#projecte-moviefx","text":"La classe FlashMessage . Fins ara, hem gestionat la comunicaci\u00f3 entre p\u00e0gines mitjan\u00e7ant sessions. La gesti\u00f3 la f\u00e8iem escrivint i llegint en les variables de sessi\u00f3. L'objectiu de la seg\u00fcent classe \u00e9s proporcionar-nos un mecanisme que ens facilite l'enviament de missatges entre p\u00e0gines. Una vegada implementada utilitza-la en la creaci\u00f3 de pel\u00b7l\u00edcules. # src/Core/Helpers/FlashMessage.php /** * Class FlashMessage * Aquesta classe llig i escriu directament en una variable de sessi\u00f3 * que ser\u00e0 un array, la clau ser\u00e0 $sessionKey de forma que evitem * possible col\u00b7lisions. */ class FlashMessage { /** * string */ const SESSION_KEY = \"flash-message\" ; /** * obtenim el valor de l'array associat a la clau. * despr\u00e9s de llegir-lo l'esborrem * si no existeix tornem el valor indicat per defecte. * @param string $key * @param mixed $defaultValue * @return mixed|string */ public static function get ( string $key , $defaultValue = '' ); /** * @param string $key * @param $value */ public static function set ( string $key , $value ); /** * @param string $key */ private static function unset ( string $key ); } Tenint en compte tot el proc\u00e9s de gesti\u00f3 de pujada de fixers, les restriccions que es poden aplicar, i les dades que ens interessen una vegada el proc\u00e9s s'ha efectuat exitosament, crea una classe que encapsule totes les funcionalitats requerides. Implementa el patr\u00f3 Registry en una classe amb el mateix nom i afegeix una instancia de PDO associada a la clau \"PDO\". L'objecte PDO l'haur\u00e0s de crear i inserir-lo en el Registre en un nou fitxer anomenat bootstrap.php . Aquest fitxer ser\u00e0 requerit en totes els fitxers que tinguen acc\u00e9s a la base de dades. En un fitxer de configuraci\u00f3 (JSON, YAML, INI o XML, segons t'haja assignat el professor) emmagatzema el DSN ( Data Source Name ) d'acc\u00e9s a la base de dades. Despr\u00e9s, crea una classe Config que llija el fitxer i extraga el DSN. Utilitza onfig en bootstrap.php` en lloc d'usar un literal en instanciar la classe PDO. Afig tamb\u00e9 al fitxer de configuraci\u00f3 la ruta relativa on es guarden les fotos pujades.","title":"Projecte MovieFX"}]}